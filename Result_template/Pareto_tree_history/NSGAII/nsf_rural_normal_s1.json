{"1": [{"determining": "( ( RRS / DDR ) * ( CRS * AMS ) )", "choosing": "( ( MUM * ( RMSe / MLU ) ) - ( Max( Max( ( ( RCSe * MUC ) / RMSe ),( RCSe + MUC ) ),MLU ) * CS ) )", "obj1": 0.8644203770557561, "obj2": 0.09733787914720728}, {"determining": "Max( ( Max( ( RRS * Min( PN ,FirstVNF_Mem_Server ) ),( ARS * ACS ) ) + BR ),Max( ( AMS - Const ),MDR ) )", "choosing": "( ( RMSe * MUC ) / Min( ( ( MUR + CS ) - Min( DS ,Min( ( MLU - ( CS / Max( RMSe,MUR ) ) ) ,RRSe ) ) ) ,Min( ( ( RRSe / RRSe ) + MUM ) ,( RMSe - ( MUC / MUR ) ) ) ) )", "obj1": 0.8632170076213398, "obj2": 0.10752369225681505}, {"determining": "Min( Min( ( RRS * MDR ) ,BR ) ,( FirstVNF_CPU - CRS ) )", "choosing": "Min( Max( MUM,( ( ( ( ( CS * RMSe ) + MUR ) / CS ) / MLU ) + MLU ) ) ,( DS / CS ) )", "obj1": 0.8908945046129162, "obj2": 0.07833995115160775}, {"determining": "( ( FirstVNF_Mem_Server * BR ) + Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( DS * MUC ) - Min( MUR ,MLU ) )", "obj1": 0.8588046530284797, "obj2": 0.11715414858631013}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / Min( RRS ,CRS ) )", "choosing": "Max( Max( RMSe,RRSe ),( MLU + RRSe ) )", "obj1": 0.8511833132771761, "obj2": 0.12167961568265523}, {"determining": "( Max( PN,( Min( PN ,ACS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) * ( Const * ACS ) )", "choosing": "( ( ( DS + RCSe ) - MUC ) + Min( MUR ,MUC ) )", "obj1": 0.8559967910148416, "obj2": 0.11945458241302218}, {"determining": "( ( RRS - DDR ) / ( ARS / FirstVNF_Mem ) )", "choosing": "Max( ( RRSe / CS ),Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Max( Min( ( ARS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,BR ),ARS ) ) - ( AMS * Const ) )", "choosing": "Min( Min( ( MUR * MUM ) ,RMSe ) ,( ( Max( RCSe,MUM ) - Max( Max( RCSe,CS ),( RRSe + Max( MUM,MUR ) ) ) ) - RCSe ) )", "obj1": 0.9370236662655436, "obj2": 0.05109662819921238}, {"determining": "Max( ( ( MRS - RRS ) / ( FirstVNF_CPU_Server - Const ) ),Min( Min( FirstVNF_CPU ,CRS ) ,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( RRSe / ( CS * RMSe ) ) / Max( RRSe,( MUC + MUC ) ) )", "obj1": 0.8724428399518652, "obj2": 0.0877402482554055}, {"determining": "( ( ( CRS - PN ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / Min( Max( FirstVNF_RAM_Server,MDR ) ,Max( RRS,CRS ) ) )", "choosing": "( ( DS * DS ) / ( RMSe / MUR ) )", "obj1": 0.99117529081428, "obj2": 0.007843097372748074}, {"determining": "( ( ( FirstVNF_Mem + RRS ) / Max( FirstVNF_Mem_Server,ACS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "Min( Min( Max( RRSe,MUR ) ,Min( MUR ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC - RMSe ) ) )", "obj1": 0.8455675892498997, "obj2": 0.12985841870594764}, {"determining": "Max( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( PN + CRS ) ),Max( Max( FirstVNF_Mem_Server,PN ),( MRS / CRS ) ) )", "choosing": "( Min( ( MLU - MUM ) ,( CS * RMSe ) ) - ( ( MUM * MUM ) - Min( CS ,RRSe ) ) )", "obj1": 0.8407541115122342, "obj2": 0.15795240340553576}, {"determining": "( ( ( FirstVNF_RAM - CRS ) + ( ACS - Const ) ) + Max( ( CRS / AMS ),( AMS - ARS ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( DS - MUR ) ) * ( ( MLU + MUM ) - ( MUR + CS ) ) )", "obj1": 0.838748495788207, "obj2": 0.16089897992063962}, {"determining": "( Max( ( Const + DDR ),Max( FirstVNF_RAM_Server,RRS ) ) / ( Max( FirstVNF_CPU_Server,ACS ) - ( ARS + ARS ) ) )", "choosing": "Min( ( CS + RCSe ) ,( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / ACS ) )", "choosing": "Min( Max( ( MUM - DS ),( CS + MUM ) ) ,( ( RRSe * CS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.8435619735258725, "obj2": 0.14450284241271935}, {"determining": "( Min( ( RRS + FirstVNF_CPU ) ,( RRS - BR ) ) / Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( RRSe - MUM ) * Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( MDR + FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server + MRS ),( DDR * MRS ) ) ) / Min( ( BR / CRS ) ,( ( DDR * ARS ) - Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU / ( ( CS - RMSe ) * MLU ) ) / ( DS / RCSe ) ) / ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,FirstVNF_Mem ) - ( MRS * PN ) )", "choosing": "Max( Min( MUM ,MUC ),Max( ( MUR + MUM ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( BR * FirstVNF_Mem_Server ) ) ,( ( DDR / MDR ) + Max( FirstVNF_CPU_Server,BR ) ) ) ,Min( ( ( DDR + FirstVNF_CPU_Server ) * ( AMS + BR ) ) ,( Min( BR ,CRS ) - ( PN + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RRSe ,DS ) * ( RRSe / MUR ) ) + ( ( MUR - MUC ) + ( RRSe * RCSe ) ) ) - ( ( Max( MUC,RRSe ) / Min( RMSe ,RRSe ) ) + ( ( RCSe - MUR ) * ( MUR * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( ( MRS / MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) + Min( Max( MRS,Min( CRS ,ARS ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,( DDR / MDR ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MUR - CS ) )", "obj1": 0.9895707982350581, "obj2": 0.010897897893662467}, {"determining": "( ( Max( Min( Const ,ARS ),( CRS + AMS ) ) + ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_Mem_Server / DDR ) ) ) + ( ( ( MRS * MRS ) + ( AMS + FirstVNF_RAM_Server ) ) * ( ( MDR * MRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) ) )", "choosing": "Max( ( Min( Max( RCSe,RMSe ) ,Max( DS,DS ) ) - ( ( RRSe * RCSe ) - Min( MUC ,CS ) ) ),Max( Min( ( RCSe / MUM ) ,( DS - MUM ) ),( Max( MUC,RCSe ) * ( RRSe - RRSe ) ) ) )", "obj1": 0.8399518652226233, "obj2": 0.16028838048649727}, {"determining": "( ( ( Min( PN ,FirstVNF_RAM_Server ) + ( ARS / BR ) ) / ( Min( MRS ,FirstVNF_Mem_Server ) * ( ARS / CRS ) ) ) + ( ( Min( FirstVNF_Mem ,MRS ) + ( DDR - FirstVNF_Mem_Server ) ) / ( ( ACS / PN ) * Min( AMS ,Const ) ) ) )", "choosing": "Min( ( ( Max( MUM,MLU ) + ( RRSe - MUC ) ) * ( Min( RCSe ,MUC ) / ( MLU + MUM ) ) ) ,Min( ( ( RMSe / RRSe ) / Max( DS,CS ) ) ,Max( ( RRSe * RCSe ),( RRSe * MLU ) ) ) )", "obj1": 0.855595667870036, "obj2": 0.11990975432715383}, {"determining": "Min( ( MDR / PN ) ,( ( FirstVNF_RAM_Server * AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU * RCSe ) / Max( DS,MLU ) ) / ( MUC - MUC ) ) / ( ( ( MLU + MUC ) + ( RRSe + RCSe ) ) * Max( Max( DS,DS ),Min( MUM ,MUM ) ) ) )", "obj1": 0.8102687525070197, "obj2": 0.1615195081254526}, {"determining": "( ( ( Min( BR ,CRS ) + ( PN + FirstVNF_CPU_Server ) ) - ( ( RRS - RRS ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( ( DDR * RRS ) * Min( FirstVNF_RAM_Server ,PN ) ) - ( ( MRS - ARS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( MUM + RRSe ) / CS ),( MUM + MUR ) )", "obj1": 0.8965102286401926, "obj2": 0.07622433889389708}, {"determining": "( ( Max( Min( CRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,BR ) ) - Min( ( FirstVNF_RAM_Server / MDR ) ,( PN / FirstVNF_CPU_Server ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - ( FirstVNF_Mem / RRS ) ) ,( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) - ( DS - RCSe ) ) - ( Max( MUR,MUM ) - Max( RRSe,CS ) ) ) - ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( ( MUR / DS ) + Min( MUM ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - DDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU / ARS ) + ( BR * FirstVNF_Mem_Server ) ) ) * ( CRS - PN ) )", "choosing": "( ( ( ( CS - MLU ) + ( MUC + MUM ) ) / ( ( RCSe - RRSe ) + ( DS - RRSe ) ) ) - ( CS - RCSe ) )", "obj1": 0.8808664259927798, "obj2": 0.08374230668857154}], "2": [{"determining": "( ( Max( Min( CRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,BR ) ) - Min( ( Max( CRS,AMS ) / MDR ) ,( PN / FirstVNF_CPU_Server ) ) ) / Min( ( Min( Const ,FirstVNF_RAM ) - ( FirstVNF_Mem / RRS ) ) ,MRS ) )", "choosing": "( ( ( Max( MUC,MUM ) - ( DS - RCSe ) ) - ( Max( MUR,MUM ) - Max( MLU,CS ) ) ) - ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - DDR ) / ( ARS / FirstVNF_Mem ) )", "choosing": "Max( ( RRSe / CS ),Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR / PN ) ,( ( FirstVNF_RAM_Server * AMS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU * RCSe ) / Max( DS,MLU ) ) / ( MUC - MUC ) ) / ( ( ( MLU + MUC ) + ( RRSe + RCSe ) ) * Max( Max( DS,DS ),Min( MUM ,MUM ) ) ) )", "obj1": 0.8102687525070197, "obj2": 0.1615195081254526}, {"determining": "( Min( ( ( ( Max( Min( ( MRS * ACS ) ,( FirstVNF_Mem - AMS ) ),( Min( ACS ,Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) - Min( ( ( FirstVNF_CPU_Server / ACS ) / ( PN - PN ) ) ,( Min( FirstVNF_RAM ,RRS ) - ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) - Max( ( ( ( FirstVNF_CPU_Server + BR ) - Max( FirstVNF_RAM,RRS ) ) + ( ( BR / AMS ) / ( FirstVNF_CPU / PN ) ) ),( ( ( FirstVNF_RAM_Server / ARS ) / Min( Const ,FirstVNF_RAM ) ) + Min( Max( FirstVNF_Mem,MDR ) ,Max( ARS,MRS ) ) ) ) ) + ( ( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const * FirstVNF_Mem ) ) * ( ( AMS / Const ) / ( BR * RRS ) ) ) / ( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),( ARS + FirstVNF_CPU_Server ) ) + ( Min( FirstVNF_RAM_Server ,BR ) / Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) + ( ( Max( ( AMS - RRS ),( MDR - MDR ) ) * Min( ( FirstVNF_RAM - AMS ) ,( FirstVNF_Mem_Server + ARS ) ) ) + Min( ( ( ACS / FirstVNF_Mem_Server ) / Max( BR,DDR ) ) ,Min( ( FirstVNF_RAM_Server - ACS ) ,( FirstVNF_Mem / BR ) ) ) ) ) ) ,( Max( ( ( Max( ( DDR - ACS ),Max( FirstVNF_Mem_Server,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,BR ) ) ) / Max( Max( Max( ACS,AMS ),( FirstVNF_RAM * AMS ) ),Max( ( AMS * BR ),Min( FirstVNF_RAM_Server ,PN ) ) ) ),( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / ( Const / Const ) ) + ( ( ARS + AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) / Min( Max( ( PN / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_RAM_Server ) ) ,( ( ACS + MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem_Server + BR ) - Min( BR ,FirstVNF_CPU ) ) / ( Min( FirstVNF_RAM_Server ,ARS ) + ( ARS * PN ) ) ) * ( Min( ( MRS + FirstVNF_CPU ) ,( Const - BR ) ) * ( Max( MDR,BR ) / ( FirstVNF_CPU_Server / Const ) ) ) ) - Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) - ( ( PN / DDR ) - ( FirstVNF_CPU_Server + RRS ) ) ),Min( Max( Min( PN ,ARS ),( FirstVNF_Mem * ACS ) ) ,( Min( MDR ,ACS ) / Min( CRS ,Const ) ) ) ) ) ) ) * Max( ( ( ( ( ( ( Const / MRS ) - Max( PN,FirstVNF_CPU_Server ) ) + Min( ( ARS / MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) - ( Min( ( ARS / ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_RAM,MRS ),( RRS + FirstVNF_CPU_Server ) ) ) ) - Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( ACS - AMS ) ) * ( Min( ACS ,FirstVNF_RAM ) * ( CRS / AMS ) ) ) ,Min( Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( RRS + FirstVNF_Mem_Server ) ) ,( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_RAM / ACS ) ) ) ) ) - ( Min( ( Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) / Max( RRS,MDR ) ) ) ,Max( ( ( FirstVNF_Mem / AMS ) / ( ACS * ACS ) ),Min( ( CRS - FirstVNF_CPU ) ,( ACS / FirstVNF_Mem_Server ) ) ) ) + Min( ( Min( ( DDR * AMS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( ( ACS - FirstVNF_RAM ) / ( CRS / FirstVNF_RAM ) ) ) ,Min( ( ( Const * DDR ) + ( BR / PN ) ) ,Min( ( FirstVNF_CPU * CRS ) ,Max( RRS,ACS ) ) ) ) ) ),( Max( Max( ( Max( Max( FirstVNF_Mem,FirstVNF_RAM ),( PN / CRS ) ) + Max( ( BR / MDR ),( FirstVNF_Mem_Server / MDR ) ) ),Min( ( Min( FirstVNF_Mem_Server ,MDR ) / ( FirstVNF_Mem * Const ) ) ,Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_Mem_Server * ARS ) ) ) ),( Max( ( ( ARS + PN ) / ( DDR - RRS ) ),( Max( ACS,DDR ) / ( DDR - MDR ) ) ) * ( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_Mem,CRS ) ) / ( ( CRS - BR ) + ( AMS * ARS ) ) ) ) ) * ( ( ( Max( Max( FirstVNF_Mem,ACS ),( MDR - MDR ) ) + Min( Max( FirstVNF_CPU_Server,ACS ) ,( CRS / FirstVNF_Mem ) ) ) / Max( ( ( CRS * Const ) - ( ACS - DDR ) ),( Min( RRS ,AMS ) / Min( Const ,MDR ) ) ) ) * ( Max( ( Min( CRS ,ARS ) * ( PN - MDR ) ),( ( FirstVNF_Mem * DDR ) * Min( FirstVNF_RAM ,PN ) ) ) / ( ( ( CRS - RRS ) * ( MRS * Const ) ) / ( ( MDR + MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - RCSe ) * MUR ) + RRSe ) + ( MUM * ( ( RRSe - MUC ) / RMSe ) ) )", "obj1": 0.9233854793421581, "obj2": 0.06426052745697439}, {"determining": "( Min( AMS ,Max( Min( ( ARS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,BR ),ARS ) ) - ( AMS * Const ) )", "choosing": "Min( Min( ( MUR * MUM ) ,RMSe ) ,( ( Max( RCSe,MUM ) - Max( Max( RCSe,CS ),( RRSe + Max( MUM,MUR ) ) ) ) - RCSe ) )", "obj1": 0.9370236662655436, "obj2": 0.05109662819921238}, {"determining": "( ( ( Min( BR ,CRS ) + ( PN + FirstVNF_CPU_Server ) ) - ( ( RRS - RRS ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( ( DDR * RRS ) * Min( FirstVNF_RAM_Server ,PN ) ) - ( ( MRS - ARS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( MUM + RRSe ) / CS ),( MUM + MUR ) )", "obj1": 0.8965102286401926, "obj2": 0.07622433889389708}, {"determining": "( ( ( CRS - PN ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) / ( FirstVNF_Mem + BR ) )", "choosing": "( Min( RRSe ,( CS / MLU ) ) / ( RMSe / MUR ) )", "obj1": 0.9847573204973927, "obj2": 0.017747746567912684}, {"determining": "( ( PN / FirstVNF_CPU ) / ( ( CRS / ( AMS - ARS ) ) / ( ( RRS / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM * ( ( CS * RMSe ) / DS ) ) / ( ( Min( DS ,RRSe ) + Max( DS,MUC ) ) + ( Max( DS,MUR ) + Max( MUC,DS ) ) ) )", "obj1": 0.8243080625752106, "obj2": 0.1498488288174598}, {"determining": "( ( Max( Min( CRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,BR ) ) - Min( ( FirstVNF_RAM_Server / MDR ) ,( PN / FirstVNF_CPU_Server ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - RRS ) ,( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( DS,RMSe ) - ( MUC - RMSe ) ) ) - ( DS - RCSe ) ) - ( Max( MUR,MUM ) - Max( RRSe,CS ) ) ) - ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( ( MUR / DS ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.9490573606097071, "obj2": 0.03505537328993362}, {"determining": "( ( ( FirstVNF_RAM - CRS ) + ( RRS - Const ) ) + Max( ( CRS / AMS ),( AMS - ARS ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( DS - MUR ) ) * ( RCSe / ( DS - MUM ) ) )", "obj1": 0.9446450060168472, "obj2": 0.03778402679865829}, {"determining": "( ( ( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) / ( ACS * AMS ) ) - ( Min( FirstVNF_Mem ,AMS ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "Min( Min( ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( Max( MUC,DS ) + Min( MUM ,MLU ) ) ) ,Min( MUR ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC / RMSe ) ) )", "obj1": 0.9622944243882872, "obj2": 0.02637658883157476}, {"determining": "( ( PN / FirstVNF_CPU ) / ( ( CRS / ( AMS - ARS ) ) / ( ( RRS / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM * ( ( CS * RMSe ) / DS ) ) / ( ( Min( DS ,RRSe ) + Max( DS,MUC ) ) + ( Max( DS,MUR ) + Max( MUC,DS ) ) ) )", "obj1": 0.8243080625752106, "obj2": 0.1498488288174598}, {"determining": "Max( ( ( ( ARS - BR ) + MRS ) / ( Const * DDR ) ),( AMS - ( ARS + RRS ) ) )", "choosing": "( ( ( ( RCSe / ( MUC - MUC ) ) / ( DS - DS ) ) + MUC ) - Min( CS ,( CS / MLU ) ) )", "obj1": 0.811472121941436, "obj2": 0.16060982879983376}, {"determining": "( RRS * ( Const * MRS ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) + Min( MUR ,MUC ) )", "obj1": 0.8576012835940634, "obj2": 0.1042863862920691}, {"determining": "Min( Min( ( RRS * MDR ) ,BR ) ,( FirstVNF_CPU - CRS ) )", "choosing": "Min( Max( MUM,( ( ( ( ( CS * RMSe ) + MUR ) / CS ) / MLU ) + MLU ) ) ,( DS / CS ) )", "obj1": 0.8908945046129162, "obj2": 0.07833995115160775}, {"determining": "( ( RRS / DDR ) * ( CRS * AMS ) )", "choosing": "( ( MUM * ( RMSe / MLU ) ) - ( Max( Max( ( ( RCSe * MUC ) / RMSe ),( RCSe + MUC ) ),MLU ) * CS ) )", "obj1": 0.8644203770557561, "obj2": 0.09733787914720728}, {"determining": "( Min( RRS ,CRS ) * Max( CRS,MRS ) )", "choosing": "( Max( Max( RMSe,RRSe ),( MLU + RRSe ) ) + Min( MLU ,MLU ) )", "obj1": 0.8547934215804252, "obj2": 0.11885277622336819}, {"determining": "( ( ( ( MDR - DDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU / ARS ) + ( BR * FirstVNF_Mem_Server ) ) ) * ( CRS - PN ) )", "choosing": "( ( ( ( CS - MLU ) + ( MUC + MUM ) ) / ( ( RCSe - RRSe ) + ( DS - RRSe ) ) ) - ( CS - RCSe ) )", "obj1": 0.8808664259927798, "obj2": 0.08374230668857154}, {"determining": "Max( ( Max( ( RRS * Min( PN ,FirstVNF_Mem_Server ) ),( ARS * ACS ) ) + BR ),Max( ( AMS - Const ),MDR ) )", "choosing": "( ( RMSe * MUC ) / Min( ( ( MUR + CS ) - Min( DS ,Min( ( MLU - ( CS / Max( RMSe,MUR ) ) ) ,RRSe ) ) ) ,Min( ( ( RRSe / RRSe ) + MUM ) ,( RMSe - ( MUC / MUR ) ) ) ) )", "obj1": 0.8415563578018451, "obj2": 0.13410797420039847}, {"determining": "( ( ( ARS - Max( ( ( MRS - RRS ) / ( FirstVNF_CPU_Server - Const ) ),Min( Min( FirstVNF_CPU ,CRS ) ,( FirstVNF_CPU * DDR ) ) ) ) + MRS ) / Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,DDR ) )", "choosing": "( ( Max( ( Min( MUM ,RCSe ) - ( CS * RMSe ) ),MUR ) * MUC ) - ( RRSe * MUC ) )", "obj1": 0.9679101484155636, "obj2": 0.025076177470524343}, {"determining": "Max( ( Max( ( RRS * Min( PN ,FirstVNF_Mem_Server ) ),( ARS * ACS ) ) + BR ),Max( ( AMS - Const ),MDR ) )", "choosing": "( ( RMSe * MUC ) / Min( ( ( MUR + CS ) - Min( DS ,Min( ( MLU - ( CS / Max( RMSe,MUR ) ) ) ,RRSe ) ) ) ,Min( ( ( RRSe / RRSe ) + MUM ) ,( RMSe - ( MUC / MUR ) ) ) ) )", "obj1": 0.8415563578018451, "obj2": 0.13410797420039847}, {"determining": "Max( ( ARS - BR ),Min( Min( FirstVNF_CPU ,CRS ) ,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( RRSe / ( CS * RMSe ) ) / MUR )", "obj1": 0.8724428399518652, "obj2": 0.0877402482554055}, {"determining": "( ( ( Min( ( Min( Max( ( FirstVNF_Mem * ARS ),( FirstVNF_RAM + BR ) ) ,( ( DDR * Const ) * ( MRS / BR ) ) ) * ( Max( ( Const - ACS ),( PN * FirstVNF_RAM_Server ) ) - ( ( DDR - RRS ) + ( DDR * FirstVNF_RAM_Server ) ) ) ) ,( Max( ( ( ACS * FirstVNF_Mem ) + ( FirstVNF_CPU_Server + ACS ) ),( Max( MRS,MDR ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( DDR * MDR ) ) / Min( ( CRS - BR ) ,Max( FirstVNF_Mem,BR ) ) ) ) ) * Min( ( Max( Max( Max( MDR,DDR ),( FirstVNF_Mem + ARS ) ),( Max( FirstVNF_CPU,Const ) / ( FirstVNF_CPU - Const ) ) ) * ( ( ( MRS - Const ) / ( PN + FirstVNF_RAM ) ) + Min( ( CRS / FirstVNF_RAM ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ,Max( ( Max( Min( RRS ,MDR ),Max( ARS,FirstVNF_Mem ) ) * ( ( MDR / AMS ) * ( FirstVNF_Mem + CRS ) ) ),( Max( ( FirstVNF_RAM_Server * DDR ),( RRS * ACS ) ) * Max( Max( CRS,AMS ),( FirstVNF_Mem_Server - RRS ) ) ) ) ) ) / Max( ( ( ( ( Max( BR,ACS ) * Max( Const,MRS ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ( RRS * FirstVNF_RAM ) ) ) * Max( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,MRS ) ),Max( Max( ARS,PN ),Max( FirstVNF_Mem,PN ) ) ) ) - ( ( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( Const - FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * ACS ) * ( MRS / FirstVNF_Mem ) ) ) * Max( ( Max( PN,FirstVNF_Mem_Server ) / ( MRS / CRS ) ),( Min( DDR ,MDR ) * ( RRS - AMS ) ) ) ) ),( ( ( Min( ( FirstVNF_CPU / MRS ) ,( FirstVNF_Mem - MDR ) ) * ( Max( ARS,ARS ) - Min( FirstVNF_CPU ,MDR ) ) ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( PN + BR ) ) / Max( ( CRS + RRS ),Min( RRS ,FirstVNF_CPU_Server ) ) ) ) / ( ( Min( ( ACS / ACS ) ,( BR * CRS ) ) * Max( Max( BR,FirstVNF_CPU_Server ),( MRS / FirstVNF_Mem ) ) ) * Max( ( ( Const + MRS ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) ) ) ) ) - ( Max( ( Min( ( Max( ( AMS - FirstVNF_CPU ),Min( FirstVNF_Mem ,MRS ) ) + Max( ( FirstVNF_Mem_Server + FirstVNF_RAM ),( ACS / Const ) ) ) ,( ( ( PN - DDR ) + ( AMS / FirstVNF_RAM ) ) * ( ( AMS + MDR ) - ( FirstVNF_CPU - DDR ) ) ) ) + ( ( ( Max( MRS,PN ) / ( ARS - FirstVNF_CPU ) ) / Min( ( BR / Const ) ,( AMS + RRS ) ) ) * ( ( Min( Const ,ACS ) - ( DDR + Const ) ) - ( Min( FirstVNF_Mem ,DDR ) + Max( FirstVNF_CPU,DDR ) ) ) ) ),Max( ( ( Min( Max( AMS,RRS ) ,( MRS / FirstVNF_Mem_Server ) ) + Max( ( MDR / ARS ),( Const - RRS ) ) ) - Min( Max( Min( MRS ,ARS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,RRS ) ) ) ),( ( ( ( ACS / PN ) + ( FirstVNF_RAM + ARS ) ) - ( ( CRS - MDR ) + ( FirstVNF_CPU + FirstVNF_CPU ) ) ) * Min( ( Min( MRS ,PN ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( ( AMS + DDR ) ,( FirstVNF_RAM_Server * MDR ) ) ) ) ) ) - ( ( Max( ( Max( ( MRS / BR ),( ACS * FirstVNF_RAM ) ) - ( ( AMS + AMS ) - ( FirstVNF_Mem + Const ) ) ),( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) / ( Const + Const ) ) ) ) / ( ( ( ( FirstVNF_CPU + MRS ) * ( DDR + RRS ) ) - Max( ( Const / ARS ),( FirstVNF_RAM * Const ) ) ) + ( Max( Max( ARS,PN ),( MDR + Const ) ) / ( ( AMS + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server * DDR ) ) ) ) ) * Min( ( ( ( Max( FirstVNF_RAM,BR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU / DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) / Min( ( Min( ACS ,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,DDR ) ) ,Min( ( RRS - FirstVNF_Mem ) ,Min( Const ,RRS ) ) ) ) ,( ( ( ( FirstVNF_RAM - AMS ) - Max( DDR,RRS ) ) + ( Min( AMS ,CRS ) * ( FirstVNF_Mem_Server / BR ) ) ) + ( ( ( MDR - BR ) + Max( RRS,CRS ) ) + ( Max( AMS,BR ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Min( ( MLU + ( ( RCSe + MLU ) / ( RMSe * Max( MUR,RRSe ) ) ) ) ,Min( RMSe ,RRSe ) ) * ( Max( RRSe,DS ) - MUR ) )", "obj1": 0.9979943842759728, "obj2": 0.0013772310791696583}, {"determining": "( ( ( ARS - BR ) + FirstVNF_RAM_Server ) / Min( ( FirstVNF_Mem - ( DDR / FirstVNF_RAM ) ) ,DDR ) )", "choosing": "( ( Max( ( Max( MUR,DS ) - MUC ),MUR ) * MUC ) - ( RRSe * MUC ) )", "obj1": 0.9679101484155636, "obj2": 0.025076177470524343}, {"determining": "( Min( Min( ( DDR - AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( FirstVNF_RAM_Server * ( Const - ACS ) ) ) + Min( ( ( ACS / PN ) - Min( DDR ,BR ) ) ,Min( ( DDR / FirstVNF_CPU ) ,( DDR / MDR ) ) ) )", "choosing": "( ( MUM * ( MUM - CS ) ) + ( ( MUC - MUC ) * ( ( MUC * CS ) - MLU ) ) )", "obj1": 0.9923786602486964, "obj2": 0.005780669350268644}, {"determining": "( Min( Min( ( DDR - AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( ( MRS / MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) + Min( ( ( ACS / PN ) - Min( DDR ,BR ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + AMS ) ) ) ) )", "choosing": "( ( MUC - MUR ) + ( ( RRSe + RMSe ) * ( ( MUC * CS ) - MLU ) ) )", "obj1": 0.9891696750902527, "obj2": 0.011234310690811756}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) * ( ( ( FirstVNF_Mem / ARS ) + ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_CPU / AMS ) ) )", "choosing": "( ( MUM * MUM ) - ( RRSe * CS ) )", "obj1": 0.8612113918973124, "obj2": 0.10138749938458344}, {"determining": "( ( ( FirstVNF_Mem + RRS ) / Max( FirstVNF_Mem_Server,ACS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "Min( Min( Max( RRSe,MUR ) ,Min( MUR ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC - RMSe ) ) )", "obj1": 0.8455675892498997, "obj2": 0.12985841870594764}, {"determining": "Max( ( ( MRS - RRS ) / ( FirstVNF_CPU_Server - Const ) ),Min( Min( FirstVNF_CPU ,CRS ) ,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( RRSe / ( CS * RMSe ) ) / Max( RRSe,( MUC + MUC ) ) )", "obj1": 0.8724428399518652, "obj2": 0.0877402482554055}, {"determining": "( ( Max( Const,FirstVNF_CPU ) * DDR ) / ( MDR / MDR ) )", "choosing": "( ( ( Max( ( ( ( Min( DS ,MLU ) * Min( MUM ,RRSe ) ) / ( Min( RMSe ,MUM ) / ( RCSe - MLU ) ) ) + ( Min( ( DS / MUM ) ,( CS / RMSe ) ) - ( ( RMSe - MUR ) - ( RCSe + CS ) ) ) ),( ( ( Max( MLU,RCSe ) - ( DS * MLU ) ) + Max( Min( RRSe ,MLU ),( RCSe / MUC ) ) ) + ( ( Max( CS,CS ) / Min( DS ,RRSe ) ) - Max( ( RRSe - MUR ),Max( MUC,MUM ) ) ) ) ) + Max( ( ( ( ( MUC + RMSe ) + ( RRSe - RMSe ) ) - ( ( DS - RCSe ) * Max( RMSe,MLU ) ) ) + ( Min( ( RRSe / RRSe ) ,( MUC * RRSe ) ) + ( Max( RMSe,DS ) * Max( MLU,RRSe ) ) ) ),( ( ( Max( RRSe,RRSe ) + Max( RMSe,RRSe ) ) / Max( ( DS + CS ),Max( RMSe,MLU ) ) ) - Min( ( ( RCSe + MUM ) / ( RRSe - RMSe ) ) ,Min( ( RMSe / CS ) ,( MUC / DS ) ) ) ) ) ) - ( Max( ( ( Max( ( DS / MUR ),( MUR * MLU ) ) * ( ( MUM - MUR ) + ( DS * CS ) ) ) / ( Min( Max( MUC,RRSe ) ,( MUR - RMSe ) ) + Max( Max( RRSe,RRSe ),( CS * MUM ) ) ) ),Max( ( Min( Min( DS ,MUR ) ,Max( MUC,MUM ) ) * ( ( MUC - RMSe ) * Max( RCSe,DS ) ) ),Max( Max( Min( MUC ,MUM ),( MUM * CS ) ),Min( ( MUR - RRSe ) ,Min( RMSe ,RMSe ) ) ) ) ) + ( Max( Min( ( Min( CS ,RCSe ) / Max( RRSe,RCSe ) ) ,Min( ( CS - MLU ) ,( MUC + CS ) ) ),( ( ( MLU + MUM ) - ( MLU + MUR ) ) - ( Max( RCSe,DS ) + ( MUM * MUR ) ) ) ) / Max( ( ( Min( RRSe ,RRSe ) / Max( RMSe,MUC ) ) * Max( ( MUR + MUC ),( RMSe + MUR ) ) ),( Min( ( RCSe + CS ) ,( DS / MUM ) ) + ( ( CS * DS ) / ( CS * MUM ) ) ) ) ) ) ) / ( ( ( ( ( Min( ( MLU - MUM ) ,( DS - MUM ) ) + Min( ( RMSe * CS ) ,( MUC + MUR ) ) ) / ( ( ( RMSe * RCSe ) - ( DS - RCSe ) ) / ( ( RRSe + RRSe ) / ( MUM + RCSe ) ) ) ) + Min( ( ( Max( MUM,MUR ) - Max( RRSe,RMSe ) ) + Max( ( MUM + RMSe ),( CS - DS ) ) ) ,( ( Min( MUR ,RCSe ) - Max( MUR,MLU ) ) * ( Min( RCSe ,MUM ) * ( MUM / MLU ) ) ) ) ) / ( ( ( ( ( MLU - MUM ) / Max( MLU,MLU ) ) + ( ( RMSe * MLU ) + ( RCSe / RCSe ) ) ) - ( ( ( RMSe - MLU ) + Max( RCSe,RRSe ) ) - Min( ( MUC * RRSe ) ,( MUM / RRSe ) ) ) ) / ( ( Max( ( MLU - CS ),Max( RMSe,MUR ) ) + ( Max( DS,MLU ) + ( RCSe - DS ) ) ) * ( Min( ( RMSe / RMSe ) ,( DS - RCSe ) ) - ( ( RCSe * CS ) - Min( RCSe ,RMSe ) ) ) ) ) ) / Min( ( ( Min( ( ( MUM * MUR ) - Min( MLU ,RMSe ) ) ,( ( MUM + DS ) / Min( RRSe ,MUC ) ) ) * Max( ( ( CS * MUR ) / ( MUM * RRSe ) ),( ( MUM + CS ) - ( RRSe - CS ) ) ) ) * ( MUR / MUM ) ) ,( ( Max( ( ( MUR / CS ) - ( DS / RMSe ) ),( ( MLU + MLU ) + ( MUM - RRSe ) ) ) / ( ( ( RCSe * MUC ) + ( RRSe + RRSe ) ) + ( ( DS / RCSe ) / ( MUM + MUR ) ) ) ) - ( Max( ( ( RRSe + MUR ) + Min( CS ,RMSe ) ),( ( MUM * MUM ) - ( MUR * MUR ) ) ) * ( Min( Min( CS ,RMSe ) ,Max( CS,MUM ) ) - ( ( CS / MUM ) + Min( RRSe ,RCSe ) ) ) ) ) ) ) )", "obj1": 0.8423586040914561, "obj2": 0.13358136748380312}, {"determining": "( Min( Min( ACS ,PN ) ,( FirstVNF_Mem - DDR ) ) / ( Max( AMS,MDR ) + Min( ACS ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( MLU ,( RCSe + RCSe ) ) + MUM ) + CS ) ,CS )", "obj1": 0.9907741676694746, "obj2": 0.006868324067791992}, {"determining": "( ( RRS / DDR ) * ( CRS * AMS ) )", "choosing": "( ( MUM * ( RMSe / MLU ) ) - ( Max( Max( ( ( RCSe * MUC ) / RMSe ),( RCSe + MUC ) ),MLU ) * CS ) )", "obj1": 0.8628158844765343, "obj2": 0.10006055007449681}, {"determining": "( ( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( ( ( ( MDR - ACS ) * Max( MRS,RRS ) ) / BR ) + FirstVNF_RAM ) ) ) * MRS ) * ( CRS + FirstVNF_RAM ) )", "choosing": "( ( Min( MLU ,MLU ) * RMSe ) - ( RCSe - RCSe ) )", "obj1": 0.8764540713999198, "obj2": 0.08673591604461761}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ARS * ( MRS - Max( ACS,BR ) ) ) ) - ( ( MDR - MRS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( RRSe + ( ( RRSe - ( MUM * DS ) ) / ( Min( MUM ,MUM ) / MUR ) ) ) ) - ( MUC - RMSe ) ) * ( RRSe * ( DS / DS ) ) )", "obj1": 0.8479743281187324, "obj2": 0.1266387846324493}, {"determining": "( Min( Min( ( DDR * AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( ( MRS / MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) + Min( Max( MRS,Min( CRS ,ARS ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,( DDR / MDR ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MUR - CS ) )", "obj1": 0.9895707982350581, "obj2": 0.010897897893662467}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / Min( RRS ,CRS ) )", "choosing": "Max( Max( RMSe,RRSe ),( MLU + RRSe ) )", "obj1": 0.8511833132771761, "obj2": 0.12167961568265523}, {"determining": "Max( Max( ( RRS / Max( ( FirstVNF_Mem_Server + BR ),Max( ( AMS - Const ),PN ) ) ),MRS ),( FirstVNF_CPU - MRS ) )", "choosing": "Max( ( MUM + RMSe ),Max( ( Min( DS ,Min( ( MUR + Min( Min( MLU ,MUC ) ,DS ) ) ,RRSe ) ) / ( ( Max( Min( ( MUM - MUC ) ,RCSe ),MUR ) - ( RMSe / Max( Max( CS,RMSe ),( MUR / MUC ) ) ) ) - ( RMSe * MLU ) ) ),MUC ) )", "obj1": 0.8507821901323707, "obj2": 0.12517726485990435}, {"determining": "( ( PN - MDR ) / Min( RRS ,CRS ) )", "choosing": "Max( Max( RMSe,RRSe ),( MLU + Min( Min( MLU ,MUM ) ,( RMSe * MLU ) ) ) )", "obj1": 0.8539911752908143, "obj2": 0.12034209494389353}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( FirstVNF_CPU / AMS ) )", "choosing": "( ( RMSe - ( ( RMSe - MLU ) + ( Min( ( MUR - MUR ) ,MUM ) * Max( CS,RMSe ) ) ) ) + ( ( CS * RRSe ) - ( CS - ( Max( Max( ( ( MUR + RCSe ) * ( MUC + MLU ) ),RRSe ),MUC ) + DS ) ) ) )", "obj1": 0.8467709586843161, "obj2": 0.12939738820544414}, {"determining": "( ( BR / FirstVNF_CPU_Server ) / Min( RRS ,CRS ) )", "choosing": "Max( Max( ( ( Min( ( RMSe * MUM ) ,DS ) / RMSe ) + ( ( RRSe + RMSe ) * ( ( MUC * CS ) - MLU ) ) ),RRSe ),( MLU + RRSe ) )", "obj1": 0.8523866827115925, "obj2": 0.12086624010982291}, {"determining": "Max( ( FirstVNF_Mem + BR ),( AMS - MDR ) )", "choosing": "( ( MUC * DS ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.8776574408343362, "obj2": 0.08580329982104729}, {"determining": "( ( ( FirstVNF_RAM - Min( FirstVNF_RAM_Server ,PN ) ) + ( ACS - Const ) ) + Max( ( CRS / AMS ),( AMS - ARS ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( MUM - MUR ) ) * ( ( MLU + MUM ) - ( MUR + CS ) ) )", "obj1": 0.8495788206979543, "obj2": 0.1255889852636703}, {"determining": "Max( ( FirstVNF_Mem + BR ),( AMS - MDR ) )", "choosing": "( ( MUC * DS ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.8776574408343362, "obj2": 0.08580329982104729}, {"determining": "( Min( Max( FirstVNF_CPU_Server,CRS ) ,ARS ) - ( FirstVNF_CPU / AMS ) )", "choosing": "( ( RMSe - ( ( RMSe - MLU ) + ( Min( ( MUR - MUR ) ,MUM ) * Max( CS,RMSe ) ) ) ) + ( ( CS * RRSe ) - ( CS - ( Max( Max( ( ( MUR + RCSe ) * ( MUC + MLU ) ),RRSe ),MUC ) + DS ) ) ) )", "obj1": 0.8467709586843161, "obj2": 0.12939738820544414}, {"determining": "( Min( ACS ,FirstVNF_Mem ) - ( MRS * PN ) )", "choosing": "Max( Min( MUM ,MUC ),Max( ( MUR + MUM ),MUM ) )", "obj1": 0.8503810669875652, "obj2": 0.12532411441930144}, {"determining": "Max( Min( ACS ,FirstVNF_Mem ),( MRS * PN ) )", "choosing": "Max( Min( MUM ,MUC ),Max( ( MUR + MUM ),MUM ) )", "obj1": 0.8503810669875652, "obj2": 0.12532411441930144}, {"determining": "( Max( ( Const + DDR ),Max( FirstVNF_RAM_Server,RRS ) ) / ( Max( FirstVNF_CPU_Server,ACS ) - ( ARS + ARS ) ) )", "choosing": "Min( ( CS + RCSe ) ,( MUR + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS + FirstVNF_CPU ) ,( RRS - BR ) ) / Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( RRSe - MUM ) * Min( RMSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( MDR + FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server + MRS ),( DDR * MRS ) ) ) / Min( ( BR / CRS ) ,( ( DDR * ARS ) - Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU / ( ( CS - RMSe ) * MLU ) ) / ( DS / RCSe ) ) / ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,FirstVNF_Mem ) - ( MRS * PN ) )", "choosing": "Max( Min( MUM ,MUC ),Max( ( MUR + MUM ),MUM ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( ACS ,( RRS / DDR ) ) - ( MRS * PN ) )", "choosing": "Max( Min( MUM ,MUC ),Max( ( MUR + ( RCSe * MUC ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( CRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,BR ) ) - Min( ( Max( CRS,AMS ) / MDR ) ,( PN / FirstVNF_CPU_Server ) ) ) / Min( ( Min( Const ,FirstVNF_RAM ) - ( FirstVNF_Mem / RRS ) ) ,MRS ) )", "choosing": "( ( ( Max( MUC,MUM ) - ( DS - RCSe ) ) - ( Max( MUR,MUM ) - Max( MLU,CS ) ) ) - ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ARS - BR ) + MRS ) / ( Const * DDR ) ),( Min( Const ,ACS ) - ( DDR + Const ) ) )", "choosing": "( ( ( ( Max( RRSe,DS ) / DS ) + RCSe ) - ( RRSe * MUC ) ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.8094665062174088, "obj2": 0.16116806706706271}, {"determining": "( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( MDR + FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server + MRS ),( DDR * FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) / Max( FirstVNF_Mem_Server,ACS ) ) )", "choosing": "( ( ( RMSe / ( DS * MUM ) ) / ( DS / Min( ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( ( MUR / DS ) + Min( MUM ,MLU ) ) ) ,Min( MUR ,MUC ) ) ) ) / ( DS * DS ) )", "obj1": 0.9105495387083835, "obj2": 0.06926156824263627}, {"determining": "Max( ( Max( ( RRS * Min( PN ,FirstVNF_Mem_Server ) ),( ARS * ACS ) ) + BR ),Max( ( AMS - ( FirstVNF_Mem_Server - MRS ) ),MDR ) )", "choosing": "( ( RMSe * MUC ) / Min( ( ( MUR + CS ) - Min( DS ,Min( ( MUM * MUM ) ,RRSe ) ) ) ,Min( ( ( RRSe / RRSe ) + MUM ) ,( RMSe - ( MUC / MUR ) ) ) ) )", "obj1": 0.8383473726434015, "obj2": 0.13525744680471932}, {"determining": "( ( ( Min( BR ,CRS ) + ( PN + FirstVNF_CPU_Server ) ) - ( ( RRS - RRS ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) / ( ( ( DDR * RRS ) * Min( FirstVNF_RAM_Server ,PN ) ) - ( ( MRS - ARS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( MUM + RRSe ) / CS ),( MUM + MUR ) )", "obj1": 0.8965102286401926, "obj2": 0.07622433889389708}, {"determining": "( ( ( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) / ( ACS * AMS ) ) - ( Min( FirstVNF_Mem ,AMS ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "Min( Min( ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( Max( MUC,DS ) + Min( MUM ,MLU ) ) ) ,Min( MUR ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC / RMSe ) ) )", "obj1": 0.9622944243882872, "obj2": 0.02637658883157476}, {"determining": "( ( DDR + ( DDR - ( Const * MRS ) ) ) - ( AMS - Const ) )", "choosing": "Min( Min( ( MUR * MUM ) ,RMSe ) ,( ( MUM + RRSe ) / CS ) )", "obj1": 0.9261933413557962, "obj2": 0.060624355961348984}, {"determining": "( Min( AMS ,Max( Min( ( ARS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,BR ),ARS ) ) - ( AMS * Const ) )", "choosing": "Min( Min( ( MUR * MUM ) ,RMSe ) ,( ( Max( RCSe,MUM ) - Max( Max( RCSe,CS ),( RRSe + Max( MUM,MUR ) ) ) ) - RCSe ) )", "obj1": 0.9370236662655436, "obj2": 0.05109662819921238}, {"determining": "( ( ( Max( ( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ( MDR + FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem_Server + MRS ),( DDR * FirstVNF_RAM_Server ) ) ) / Min( ( ( PN + MRS ) * ( FirstVNF_CPU + ARS ) ) ,( ( DDR * ARS ) - Max( ACS,FirstVNF_RAM ) ) ) ),ACS ) - ( Const / FirstVNF_RAM ) ) / Max( FirstVNF_Mem_Server,ACS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "Min( Min( ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( ( MUR / DS ) + Min( MUM ,MLU ) ) ) ,Min( ( DS * DS ) ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC - RMSe ) ) )", "obj1": 0.97352587244284, "obj2": 0.017347006522917135}, {"determining": "( Min( ( ( ( Max( Min( ( MRS * ACS ) ,( FirstVNF_Mem - AMS ) ),( Min( ACS ,Const ) + ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) - Min( ( ( FirstVNF_CPU_Server / ACS ) / ( PN - PN ) ) ,( Min( FirstVNF_RAM ,RRS ) - ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) - Max( ( ( ( FirstVNF_CPU_Server + BR ) - Max( FirstVNF_RAM,RRS ) ) + ( ( BR / AMS ) / ( FirstVNF_CPU / PN ) ) ),( ( ( FirstVNF_RAM_Server / ARS ) / Min( Const ,FirstVNF_RAM ) ) + Min( Max( FirstVNF_Mem,MDR ) ,Max( ARS,MRS ) ) ) ) ) + ( ( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const * FirstVNF_Mem ) ) * ( ( AMS / Const ) / ( BR * RRS ) ) ) / ( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),( ARS + FirstVNF_CPU_Server ) ) + ( Min( FirstVNF_RAM_Server ,BR ) / Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) + ( ( Max( ( AMS - RRS ),( MDR - MDR ) ) * Min( ( FirstVNF_RAM - AMS ) ,( FirstVNF_Mem_Server + ARS ) ) ) + Min( ( ( ACS / FirstVNF_Mem_Server ) / Max( BR,DDR ) ) ,Min( ( FirstVNF_RAM_Server - ACS ) ,( FirstVNF_Mem / BR ) ) ) ) ) ) ,( Max( ( ( Max( ( DDR - ACS ),Max( FirstVNF_Mem_Server,MRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / Min( FirstVNF_CPU ,BR ) ) ) / Max( Max( Max( ACS,AMS ),( FirstVNF_RAM * AMS ) ),Max( ( AMS * BR ),Min( FirstVNF_RAM_Server ,PN ) ) ) ),( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / ( Const / Const ) ) + ( ( ARS + AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) / Min( Max( ( PN / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_RAM_Server ) ) ,( ( ACS + MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem_Server + BR ) - Min( BR ,FirstVNF_CPU ) ) / ( Min( FirstVNF_RAM_Server ,ARS ) + ( ARS * PN ) ) ) * ( Min( ( MRS + FirstVNF_CPU ) ,( Const - BR ) ) * ( Max( MDR,BR ) / ( FirstVNF_CPU_Server / Const ) ) ) ) - Max( ( ( Min( FirstVNF_RAM_Server ,AMS ) * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) - ( ( PN / DDR ) - ( FirstVNF_CPU_Server + RRS ) ) ),Min( Max( Min( PN ,ARS ),( FirstVNF_Mem * ACS ) ) ,( Min( MDR ,ACS ) / Min( CRS ,Const ) ) ) ) ) ) ) * Max( ( ( ( ( ( ( Const / MRS ) - Max( PN,FirstVNF_CPU_Server ) ) + Min( ( ARS / MDR ) ,( BR - FirstVNF_Mem_Server ) ) ) - ( Min( ( ARS / ARS ) ,( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_RAM,MRS ),( RRS + FirstVNF_CPU_Server ) ) ) ) - Min( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( ACS - AMS ) ) * ( Min( ACS ,FirstVNF_RAM ) * ( CRS / AMS ) ) ) ,Min( Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( RRS + FirstVNF_Mem_Server ) ) ,( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_RAM / ACS ) ) ) ) ) - ( Min( ( Min( ( FirstVNF_CPU - FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) / Max( RRS,MDR ) ) ) ,Max( ( ( FirstVNF_Mem / AMS ) / ( ACS * ACS ) ),Min( ( CRS - FirstVNF_CPU ) ,( ACS / FirstVNF_Mem_Server ) ) ) ) + Min( ( Min( ( DDR * AMS ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( ( ACS - FirstVNF_RAM ) / ( CRS / FirstVNF_RAM ) ) ) ,Min( ( ( Const * DDR ) + ( BR / PN ) ) ,Min( ( FirstVNF_CPU * CRS ) ,Max( RRS,ACS ) ) ) ) ) ),( Max( Max( ( Max( Max( FirstVNF_Mem,FirstVNF_RAM ),( PN / CRS ) ) + Max( ( BR / MDR ),( FirstVNF_Mem_Server / MDR ) ) ),Min( ( Min( FirstVNF_Mem_Server ,MDR ) / ( FirstVNF_Mem * Const ) ) ,Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_Mem_Server * ARS ) ) ) ),( Max( ( ( ARS + PN ) / ( DDR - RRS ) ),( Max( ACS,DDR ) / ( DDR - MDR ) ) ) * ( Max( ( FirstVNF_CPU_Server * BR ),Max( FirstVNF_Mem,CRS ) ) / ( ( CRS - BR ) + ( AMS * ARS ) ) ) ) ) * ( ( ( Max( Max( FirstVNF_Mem,ACS ),( MDR - MDR ) ) + Min( Max( FirstVNF_CPU_Server,ACS ) ,( CRS / FirstVNF_Mem ) ) ) / Max( ( ( CRS * Const ) - ( ACS - DDR ) ),( Min( RRS ,AMS ) / Min( Const ,MDR ) ) ) ) * ( Max( ( Min( CRS ,ARS ) * ( PN - MDR ) ),( ( FirstVNF_Mem * DDR ) * Min( FirstVNF_RAM ,PN ) ) ) / ( ( ( CRS - RRS ) * ( MRS * Const ) ) / ( ( MDR + MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RMSe - RCSe ) * MUR ) + RRSe ) + ( MUM * ( ( RRSe - MUC ) / RMSe ) ) )", "obj1": 0.9233854793421581, "obj2": 0.06426052745697439}, {"determining": "( ( ( FirstVNF_RAM - CRS ) + ( RRS - Const ) ) + Max( ( CRS / AMS ),( AMS - ARS ) ) )", "choosing": "( ( ( RCSe / RCSe ) / ( DS - MUR ) ) * ( RCSe / ( DS - MUM ) ) )", "obj1": 0.9446450060168472, "obj2": 0.03778402679865829}, {"determining": "( Min( Min( ( DDR - AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( FirstVNF_RAM_Server * ( Const - ACS ) ) ) + Min( ( ( ACS / PN ) - Min( DDR ,BR ) ) ,Min( ( ( AMS - Const ) / FirstVNF_CPU ) ,( DDR / MDR ) ) ) )", "choosing": "( ( MUM * ( MUM - CS ) ) + ( Min( DS ,Min( ( MLU - ( CS / Max( RMSe,MUR ) ) ) ,RRSe ) ) * ( ( MUC * CS ) - MLU ) ) )", "obj1": 0.9775371038908945, "obj2": 0.011063608988195812}, {"determining": "( ( Max( Min( CRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,BR ) ) - Min( ( FirstVNF_RAM_Server / MDR ) ,( PN / FirstVNF_CPU_Server ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - RRS ) ,( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( DS,RMSe ) - ( MUC - RMSe ) ) ) - ( DS - RCSe ) ) - ( Max( MUR,MUM ) - Max( RRSe,CS ) ) ) - ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( ( MUR / DS ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.9490573606097071, "obj2": 0.03505537328993362}, {"determining": "( ( ( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) / Max( FirstVNF_Mem_Server,ACS ) ) - Min( Min( DDR ,BR ) ,( FirstVNF_CPU - CRS ) ) )", "choosing": "Min( Min( ( ( ( MUM + MUC ) / ( MUC * ( DS / CS ) ) ) + ( ( MUR / DS ) + Min( MUM ,MLU ) ) ) ,Min( MUR ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC - RMSe ) ) )", "obj1": 0.937424789410349, "obj2": 0.04716155958932867}, {"determining": "( ( PN / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( ( CRS / ( AMS - ARS ) ) / ( FirstVNF_Mem_Server * ( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM * ( ( MUC / MLU ) / DS ) ) / ( ( Min( DS ,RRSe ) + Max( RCSe,MUC ) ) + ( ( MUM * MUM ) - ( ( RMSe * MLU ) * CS ) ) ) )", "obj1": 0.8223024468511834, "obj2": 0.15828614738804692}, {"determining": "( RRS * ( ( ( DDR + ( DDR - BR ) ) - ( AMS - Const ) ) * MRS ) )", "choosing": "( ( Min( ( MUR * MUM ) ,RMSe ) / CS ) + Min( MUR ,MUC ) )", "obj1": 0.8551945447252306, "obj2": 0.11167426033780388}, {"determining": "( ( ( ( MDR - DDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU / ARS ) + ( BR * FirstVNF_Mem_Server ) ) ) * ( CRS - PN ) )", "choosing": "( ( ( ( CS - MLU ) + ( MUC + MUM ) ) / ( ( RCSe - RRSe ) + ( DS - RRSe ) ) ) - ( CS - RCSe ) )", "obj1": 0.8808664259927798, "obj2": 0.08374230668857154}, {"determining": "( Min( ( Min( Min( ( DDR - AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( ( MRS / MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) + Min( ( ( ACS / MDR ) - Min( DDR ,BR ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,( DDR / MDR ) ) ) ) ,CRS ) * Max( CRS,MRS ) )", "choosing": "( Max( Max( RMSe,RRSe ),( MLU + RRSe ) ) + Min( CS ,MLU ) )", "obj1": 0.9895707982350581, "obj2": 0.010412240690151009}, {"determining": "( ( PN / FirstVNF_CPU ) / ( ( CRS / ( AMS - ARS ) ) / ( ( RRS / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM * ( ( CS * RMSe ) / DS ) ) / ( ( Min( DS ,RRSe ) + Max( DS,MUC ) ) + ( Max( DS,MUR ) + Max( MUC,DS ) ) ) )", "obj1": 0.8243080625752106, "obj2": 0.1498488288174598}, {"determining": "( ( PN / FirstVNF_CPU ) / ( ( CRS / ( AMS - ARS ) ) / ( ( RRS / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( MUM * ( ( CS * RMSe ) / DS ) ) / ( ( Min( DS ,RRSe ) + Max( DS,MUC ) ) + ( Max( DS,MUR ) + Max( MUC,DS ) ) ) )", "obj1": 0.8243080625752106, "obj2": 0.1498488288174598}, {"determining": "( RRS * ( Const * MRS ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) + Min( MUR ,MUC ) )", "obj1": 0.8576012835940634, "obj2": 0.1042863862920691}, {"determining": "Min( Min( ( RRS * MDR ) ,BR ) ,( FirstVNF_CPU - CRS ) )", "choosing": "Min( Max( MUM,( ( ( ( ( CS * RMSe ) + MUR ) / CS ) / MLU ) + MLU ) ) ,( DS / CS ) )", "obj1": 0.8908945046129162, "obj2": 0.07833995115160775}, {"determining": "Min( Min( ( RRS * MDR ) ,BR ) ,( FirstVNF_CPU - CRS ) )", "choosing": "Min( Max( MUM,( ( ( ( ( CS * RMSe ) + MUR ) / CS ) / MLU ) + MLU ) ) ,( DS / CS ) )", "obj1": 0.8908945046129162, "obj2": 0.07833995115160775}, {"determining": "( ( PN / Max( CRS,MRS ) ) / ( ( CRS / ( AMS - ARS ) ) / ( FirstVNF_Mem_Server * ( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM * ( ( MUC / MLU ) / DS ) ) / ( ( Min( DS ,RRSe ) + Max( RCSe,MUC ) ) + ( ( Max( Max( RMSe,RRSe ),( MLU + RRSe ) ) + Min( MLU ,MLU ) ) + Max( MUC,DS ) ) ) )", "obj1": 0.8239069394304052, "obj2": 0.15020984631427464}, {"determining": "( ( ( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) / ( ACS * AMS ) ) - ( Min( FirstVNF_Mem ,AMS ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "Min( Min( ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( Max( MUC,DS ) + Min( MUM ,MLU ) ) ) ,Min( MUR ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC / RMSe ) ) )", "obj1": 0.9655034095467309, "obj2": 0.023430420391169177}, {"determining": "( Min( RRS ,CRS ) * Max( CRS,MRS ) )", "choosing": "( Max( Max( RMSe,RRSe ),( MLU + RRSe ) ) + Min( MLU ,MLU ) )", "obj1": 0.8547934215804252, "obj2": 0.11885277622336819}, {"determining": "( ( ( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) / ( ACS * AMS ) ) - ( Min( FirstVNF_Mem ,AMS ) / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "Min( Min( ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( Max( MUC,DS ) + Min( MUM ,MLU ) ) ) ,Min( MUR ,MUC ) ) ,( Max( DS,RMSe ) - ( MUC / RMSe ) ) )", "obj1": 0.9655034095467309, "obj2": 0.023430420391169177}, {"determining": "( Min( Min( ( DDR * AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( ( MRS / MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) + Min( Max( MRS,Min( CRS ,ARS ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,( DDR / MDR ) ) ) )", "choosing": "( ( RCSe / DS ) + ( MUR - CS ) )", "obj1": 0.8130766145206578, "obj2": 0.15988321246401963}, {"determining": "( ( FirstVNF_RAM_Server / Max( ( ( ( ARS - BR ) + MRS ) / ( Const * DDR ) ),( AMS - MDR ) ) ) - ( FirstVNF_CPU / AMS ) )", "choosing": "( ( RMSe - ( RCSe + RRSe ) ) + ( ( ( ( RCSe / DS ) + RCSe ) - ( RRSe * MUC ) ) - Min( RRSe ,( CS / MLU ) ) ) )", "obj1": 0.9931809065383073, "obj2": 0.0032413587333744555}, {"determining": "( ( DDR + ( DDR - BR ) ) * ( CRS + FirstVNF_RAM ) )", "choosing": "( Min( ( MUR * MUM ) ,RMSe ) - ( MUC * CS ) )", "obj1": 0.8684316085038106, "obj2": 0.09368143053736915}, {"determining": "Min( Min( DDR ,BR ) ,( FirstVNF_Mem_Server / DDR ) )", "choosing": "Min( Max( MUM,CS ) ,MUR )", "obj1": 0.8455675892498997, "obj2": 0.1293973028362898}, {"determining": "( ( RRS / DDR ) * ( CRS * AMS ) )", "choosing": "( ( MUM * ( RMSe / MLU ) ) - ( Max( Max( ( ( RCSe * MUC ) / RMSe ),( RCSe + MUC ) ),MLU ) * CS ) )", "obj1": 0.8644203770557561, "obj2": 0.09733787914720728}, {"determining": "Max( ( FirstVNF_Mem + BR ),( RRS * ( Const * MRS ) ) )", "choosing": "( ( ( ( MUM + RRSe ) / CS ) + Min( MUR ,MUC ) ) - Min( RRSe ,( CS / MLU ) ) )", "obj1": 0.8660248696349779, "obj2": 0.0961911561789292}, {"determining": "( ( Max( Min( CRS ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,BR ) ) - Min( ( Min( PN ,FirstVNF_Mem_Server ) / MDR ) ,( PN / FirstVNF_CPU_Server ) ) ) / Min( ( Min( CRS ,FirstVNF_RAM ) - RRS ) ,( Max( FirstVNF_RAM,ACS ) - ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MLU - ( CS / Max( RMSe,MUR ) ) ) ,RRSe ) - ( ( ( MUM + MUC ) / ( MUC * MLU ) ) + ( ( MUR / DS ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.9486562374649017, "obj2": 0.035322068632637746}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ARS * ( MRS - Max( ACS,BR ) ) ) ) - ( ( MDR - MRS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( RRSe + ( ( RRSe - ( MUM * DS ) ) / ( Min( MUM ,MUM ) / MUR ) ) ) ) - ( MUC - RMSe ) ) * ( RRSe * ( DS / DS ) ) )", "obj1": 0.8479743281187324, "obj2": 0.1266387846324493}, {"determining": "( ( ( PN / FirstVNF_CPU ) / ( ( CRS / ( AMS - ARS ) ) / ( ( RRS / MRS ) + FirstVNF_CPU ) ) ) * Max( ( ( DDR - MDR ) - ( MRS / FirstVNF_Mem ) ),( ( DDR * FirstVNF_RAM ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( CS - MLU ) - ( MUC + MUM ) ) / ( ( RCSe - RRSe ) + Max( DS,MUC ) ) ) - ( ( ( RRSe - MUC ) / ( MLU + DS ) ) / ( Max( CS,CS ) - ( RMSe / MUM ) ) ) )", "obj1": 0.8435619735258725, "obj2": 0.13066473579587087}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) / ( Const / Const ) ) + ( ( ARS + AMS ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) / Min( Max( ( PN / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_RAM_Server ) ) ,( ( ACS + MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * MUM ) - ( ( ( ( ( ( RMSe - RCSe ) * MUR ) + RRSe ) + ( MUM * ( ( RRSe - MUC ) / RMSe ) ) ) * MLU ) * CS ) )", "obj1": 0.8604091456077015, "obj2": 0.10406033735389063}, {"determining": "( ( FirstVNF_Mem_Server - MRS ) * ( CRS * ( Min( ACS ,FirstVNF_Mem ) - ( MRS * PN ) ) ) )", "choosing": "( ( MUM * MUM ) - ( ( Max( ( ( RCSe * MUC ) / Max( ( MUR + MUM ),MUM ) ),( RCSe + MUC ) ) * MLU ) * CS ) )", "obj1": 0.8700361010830325, "obj2": 0.09164984726537331}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) * ( ( ( FirstVNF_Mem / ARS ) + ( FirstVNF_CPU_Server + DDR ) ) / ( FirstVNF_CPU / AMS ) ) )", "choosing": "( ( MUM * MUM ) - ( RRSe * CS ) )", "obj1": 0.8612113918973124, "obj2": 0.10138749938458344}, {"determining": "( ( ( ( DDR + ( DDR - BR ) ) - ( AMS - Const ) ) / FirstVNF_CPU_Server ) / Min( RRS ,CRS ) )", "choosing": "Max( Max( ( ( Min( ( RMSe * MUM ) ,DS ) / RMSe ) + ( ( RRSe + RMSe ) * ( ( MUC * CS ) - MLU ) ) ),RRSe ),( ( MUC * RRSe ) - MUM ) )", "obj1": 0.8499799438427598, "obj2": 0.12377195246993535}, {"determining": "( ( ( ( MDR - DDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) * ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ARS * FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) / FirstVNF_Mem_Server ) ) ) * Max( ( ( DDR - MDR ) - ( MRS / FirstVNF_Mem ) ),( ( DDR * FirstVNF_RAM ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( CS - MLU ) - ( DS + MUM ) ) / ( ( RCSe - RRSe ) + ( DS - RRSe ) ) ) - ( ( ( RRSe - MUC ) / ( MLU + DS ) ) / ( Max( CS,CS ) - ( RMSe / MUM ) ) ) )", "obj1": 0.8800641797031689, "obj2": 0.08486956012666118}, {"determining": "( Min( Min( ( DDR - AMS ) ,( FirstVNF_Mem_Server / ARS ) ) ,( FirstVNF_RAM_Server * ( Const - ACS ) ) ) + Min( ( ( ACS / PN ) - Min( DDR ,BR ) ) ,Min( ( DDR / FirstVNF_CPU ) ,( DDR / MDR ) ) ) )", "choosing": "( ( MUM * ( MUM - CS ) ) + ( ( MUC - MUC ) * ( ( MUC * CS ) - MLU ) ) )", "obj1": 0.9923786602486964, "obj2": 0.005780669350268644}, {"determining": "Max( ( ( MRS - RRS ) / ( FirstVNF_CPU_Server - Const ) ),Min( Min( FirstVNF_CPU ,CRS ) ,( FirstVNF_CPU * DDR ) ) )", "choosing": "( ( RRSe / ( CS * RMSe ) ) / Max( RRSe,( MUC + MUC ) ) )", "obj1": 0.8724428399518652, "obj2": 0.0877402482554055}, {"determining": "( ( FirstVNF_Mem_Server - MRS ) * ( Max( ( RRS * Min( PN ,FirstVNF_Mem_Server ) ),( ARS * ACS ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * Min( ( ( RRSe / RRSe ) + MUM ) ,( RMSe - ( MUC / MUR ) ) ) ) - ( ( RMSe * MLU ) * CS ) )", "obj1": 0.8756518251103088, "obj2": 0.08722618874919279}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + ( ARS * ( MRS - Max( ACS,BR ) ) ) ) - ( ( MDR - MRS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( RRSe + ( ( RRSe - ( MUM * DS ) ) / ( Min( MUM ,MUM ) / MUR ) ) ) ) - ( MUC - RMSe ) ) * ( RRSe * ( DS / DS ) ) )", "obj1": 0.9971921379863619, "obj2": 0.0018411714494680695}, {"determining": "Max( ( ( ( ARS - BR ) + MRS ) / ( Const * DDR ) ),( AMS - ( ARS + RRS ) ) )", "choosing": "( ( ( ( RCSe / ( MUC - MUC ) ) / ( DS - DS ) ) + MUC ) - Min( CS ,( CS / MLU ) ) )", "obj1": 0.811472121941436, "obj2": 0.16060982879983376}, {"determining": "( Min( Min( ( ( DDR / ( CRS / MRS ) ) - ( FirstVNF_CPU / AMS ) ) ,PN ) ,( RRS - DDR ) ) / Min( Max( FirstVNF_CPU_Server,MDR ) ,( FirstVNF_CPU - DDR ) ) )", "choosing": "Min( ( ( MUR + DS ) + CS ) ,CS )", "obj1": 0.9907741676694746, "obj2": 0.006868324067791992}, {"determining": "Max( ( Max( ( RRS * Min( PN ,FirstVNF_Mem_Server ) ),( ARS * ACS ) ) + BR ),Max( ( AMS - Const ),MDR ) )", "choosing": "( ( RMSe * MUC ) / Min( ( ( MUR + CS ) - Min( DS ,Min( ( MLU - ( CS / Max( RMSe,MUR ) ) ) ,RRSe ) ) ) ,Min( ( ( RRSe / RRSe ) + MUM ) ,( RMSe - ( MUC / MUR ) ) ) ) )", "obj1": 0.8415563578018451, "obj2": 0.13410797420039847}, {"determining": "( ( BR / FirstVNF_CPU_Server ) / Min( RRS ,CRS ) )", "choosing": "Max( Max( ( ( RRSe / ( CS * RMSe ) ) + ( ( RRSe + RMSe ) * ( ( MUC * CS ) - MLU ) ) ),RRSe ),( MLU + RRSe ) )", "obj1": 0.8523866827115925, "obj2": 0.12048290978299354}]}