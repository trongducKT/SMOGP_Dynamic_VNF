{"1": [{"determining": "( ( CRS / DDR ) + ( RRS * CRS ) )", "choosing": "( ( RRSe + MUM ) / ( Const - Const ) )", "obj1": 0.6677227722772278, "obj2": 0.24266612281630615}, {"determining": "( ( CRS + PN ) - ( MRS - MRS ) )", "choosing": "( ( DS - RMSe ) - Max( Const,DS ) )", "obj1": 0.6297029702970297, "obj2": 0.4182961010841971}, {"determining": "( ( ( MRS / RRS ) - Min( PN ,MDR ) ) + ( ( MDR + Const ) + ( Const - Const ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM + DS ) )", "obj1": 0.7465346534653465, "obj2": 0.15518221885352115}, {"determining": "( ( ( ( DDR + CRS ) / ( MRS + PN ) ) + Max( Max( RRS,PN ),( CRS - Const ) ) ) * ( ( ( DDR + CRS ) * ( DDR * Const ) ) - ( Min( MDR ,Const ) / Max( MRS,MRS ) ) ) )", "choosing": "( ( Max( ( DS * MUC ),( MUR * MUC ) ) + ( Min( DS ,DS ) + ( MUR + MLU ) ) ) / Max( Max( Min( CS ,RRSe ),( CS + MUC ) ),( Max( Const,MUR ) * Min( MUC ,CS ) ) ) )", "obj1": 0.7203960396039604, "obj2": 0.17506465367688148}, {"determining": "( MDR - ( MRS - MRS ) )", "choosing": "( ( DS - RMSe ) - ( MUM + DS ) )", "obj1": 0.6273267326732673, "obj2": 0.42039678592435686}, {"determining": "( RRS + ( ( MDR + Const ) + ( Const - Const ) ) )", "choosing": "Min( ( Const - Const ) ,( MUM + DS ) )", "obj1": 0.6665346534653466, "obj2": 0.243202763420985}, {"determining": "( ( CRS + PN ) - ( ( ( MRS / RRS ) - Min( PN ,MDR ) ) + ( ( MDR + Const ) + ( Const - Const ) ) ) )", "choosing": "( ( DS - RMSe ) - Max( Const,DS ) )", "obj1": 0.6304950495049505, "obj2": 0.41678596414844}, {"determining": "Min( ( PN - ( DDR + ( ARS + ( ( Const / Max( ARS,( ARS * RRS ) ) ) / ( CRS / Const ) ) ) ) ) ,Max( PN,BR ) )", "choosing": "( ( ( MLU + CS ) - ( RMSe * MUC ) ) * ( MUM / ( MUM * Min( MUC ,( MUC - ( CS + Max( RMSe,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6922772277227722, "obj2": 0.21983509875165197}, {"determining": "( ( ( ( DDR + CRS ) / ( MRS + PN ) ) + Max( Max( RRS,PN ),( CRS - Const ) ) ) * ( ( ( DDR + CRS ) * Const ) - ( Min( MDR ,Const ) / Max( MRS,MRS ) ) ) )", "choosing": "( ( Max( ( DS * MUC ),( MUR * MUC ) ) + ( Min( DS ,DS ) + ( MUR + MLU ) ) ) / Max( Max( Min( CS ,RRSe ),( CS + MUC ) ),( Max( Const,MUR ) * Min( MUC ,CS ) ) ) )", "obj1": 0.7203960396039604, "obj2": 0.17506465367688148}], "2": [{"determining": "( ( CRS / DDR ) + ( RRS * CRS ) )", "choosing": "( ( RRSe + MUM ) / ( Const - Const ) )", "obj1": 0.6677227722772278, "obj2": 0.24266612281630615}, {"determining": "( ( CRS + PN ) - ( MRS - MRS ) )", "choosing": "( ( DS - RMSe ) - Max( Const,DS ) )", "obj1": 0.6297029702970297, "obj2": 0.4182961010841971}, {"determining": "( ( ( MRS / RRS ) - Min( PN ,MDR ) ) + ( ( MDR + Const ) + ( Const - Const ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM + DS ) )", "obj1": 0.7465346534653465, "obj2": 0.15518221885352115}, {"determining": "( ( ( ( DDR + CRS ) / ( MRS + PN ) ) + Max( Max( RRS,PN ),( CRS - Const ) ) ) * ( ( ( DDR + CRS ) * ( DDR * Const ) ) - ( Min( MDR ,Const ) / Max( MRS,MRS ) ) ) )", "choosing": "( ( Max( ( DS * MUC ),( MUR * MUC ) ) + ( Min( DS ,DS ) + ( MUR + MLU ) ) ) / Max( Max( Min( CS ,RRSe ),( CS + MUC ) ),( Max( Const,MUR ) * Min( MUC ,CS ) ) ) )", "obj1": 0.7203960396039604, "obj2": 0.17506465367688148}, {"determining": "( MDR - ( MRS - MRS ) )", "choosing": "( ( DS - RMSe ) - ( MUM + DS ) )", "obj1": 0.6273267326732673, "obj2": 0.42039678592435686}, {"determining": "( RRS + ( ( MDR + Const ) + ( Const - Const ) ) )", "choosing": "Min( ( Const - Const ) ,( MUM + DS ) )", "obj1": 0.6665346534653466, "obj2": 0.243202763420985}, {"determining": "( ( CRS + PN ) - ( ( ( MRS / RRS ) - Min( PN ,MDR ) ) + ( ( MDR + Const ) + ( Const - Const ) ) ) )", "choosing": "( ( DS - RMSe ) - Max( Const,DS ) )", "obj1": 0.6304950495049505, "obj2": 0.41678596414844}, {"determining": "Min( ( PN - ( DDR + ( ARS + ( ( Const / Max( ARS,( ARS * RRS ) ) ) / ( CRS / Const ) ) ) ) ) ,Max( PN,BR ) )", "choosing": "( ( ( MLU + CS ) - ( RMSe * MUC ) ) * ( MUM / ( MUM * Min( MUC ,( MUC - ( CS + Max( RMSe,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6922772277227722, "obj2": 0.21983509875165197}, {"determining": "( ( ( ( DDR + CRS ) / ( MRS + PN ) ) + Max( Max( RRS,PN ),( CRS - Const ) ) ) * ( ( ( DDR + CRS ) * Const ) - ( Min( MDR ,Const ) / Max( MRS,MRS ) ) ) )", "choosing": "( ( Max( ( DS * MUC ),( MUR * MUC ) ) + ( Min( DS ,DS ) + ( MUR + MLU ) ) ) / Max( Max( Min( CS ,RRSe ),( CS + MUC ) ),( Max( Const,MUR ) * Min( MUC ,CS ) ) ) )", "obj1": 0.7203960396039604, "obj2": 0.17506465367688148}, {"determining": "Min( ( PN - ( DDR + ( ARS + ( ( Const / Max( ARS,( ARS * MDR ) ) ) / ( CRS / Const ) ) ) ) ) ,Max( PN,BR ) )", "choosing": "( ( ( MLU + CS ) - ( RMSe * MUC ) ) * ( MUM / ( MUM * Min( MUC ,( MUC - ( CS + Max( RMSe,( DS - Const ) ) ) ) ) ) ) )", "obj1": 0.6934653465346534, "obj2": 0.21895715548190275}, {"determining": "Min( ( PN - ( DDR + Max( ARS,( ARS * RRS ) ) ) ) ,Max( PN,BR ) )", "choosing": "( ( ( MLU + CS ) - ( RMSe * MUC ) ) * ( MUM / ( MUM * Min( MUC ,( MUC - ( CS + Max( RMSe,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6922772277227722, "obj2": 0.21983509875165197}, {"determining": "Min( ( PN - ( DDR + ( ARS + ( ( Const / Max( ARS,( ARS * RRS ) ) ) / ( CRS / Const ) ) ) ) ) ,Max( PN,BR ) )", "choosing": "( ( ( MLU + CS ) - ( RMSe * MUC ) ) * ( MUM / ( MUM * Min( Max( RMSe,( DS - RRSe ) ) ,( MUC - ( CS + Max( RMSe,( DS - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6922772277227722, "obj2": 0.21983509875165197}]}