{"1": [{"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + BR ) * ( ARS / CRS ) ) * ( ( CRS + ARS ) / Min( Const ,CRS ) ) ) / ( ( ( Const - DDR ) * ( PN - MDR ) ) + ( Min( MRS ,BR ) * Max( CRS,CRS ) ) ) )", "choosing": "( Min( ( Max( MUR,MUM ) + ( DS + RRSe ) ) ,( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,MLU ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS + MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.875, "obj2": 0.0779477532013303}, {"determining": "( ( CRS + ARS ) / ( CRS / MRS ) )", "choosing": "( ( Const + DS ) * ( DS / RRSe ) )", "obj1": 0.8446969696969697, "obj2": 0.12034075358667938}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "( ( Max( ( PN / MRS ),( DDR + CRS ) ) - PN ) + Max( PN,( BR + ARS ) ) )", "choosing": "Max( ( RRSe + MUR ),Max( Min( Const ,( RMSe - MUR ) ),RRSe ) )", "obj1": 0.8598484848484849, "obj2": 0.1014498165994719}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),Min( ( BR - MRS ) ,MDR ) )", "choosing": "( ( RMSe * Max( Max( MUR,RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Min( Max( PN,MDR ) ,( CRS / BR ) )", "choosing": "Max( ( RMSe / CS ),( RRSe * MUR ) )", "obj1": 0.8636363636363636, "obj2": 0.1009291340695526}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR * Min( PN ,RRS ) ) ,Min( MDR ,Min( MDR ,MDR ) ) )", "choosing": "Max( ( RCSe - RMSe ),( MUC - Min( CS ,MUC ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Min( Min( ( RRS * DDR ) ,( RRS - DDR ) ) ,( Max( CRS,PN ) - ( PN / MRS ) ) ) + ( ( ( RRS - PN ) + Min( ARS ,CRS ) ) * ( ( MRS + PN ) - Min( MRS ,CRS ) ) ) )", "choosing": "Min( ( Max( Const,( CS + MUM ) ) / RCSe ) ,( ( RRSe * Const ) + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( BR / Const ),Min( MRS ,CRS ) )", "choosing": "Min( ( Const - CS ) ,Max( DS,MUR ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * ( RCSe * MUM ) ) ,( Max( MUC,MUC ) * ( DS + Const ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}], "2": [{"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7859848484848485, "obj2": 0.16823667820505742}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( RMSe * MUC ) ) ,( RMSe + ( MLU / ( MUM + MUR ) ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07640030813000406}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Min( DDR ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),Min( CS ,MUM ) )", "obj1": 0.8522727272727273, "obj2": 0.11147888642139799}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * ( RCSe * MUM ) ) ,( Max( MUC,MUC ) * ( DS + Const ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS + MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.875, "obj2": 0.0779477532013303}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( ( BR + ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( DDR / ARS ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / RMSe ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS - MRS ),Min( ( BR - MRS ) ,MDR ) )", "choosing": "( ( RMSe * Max( Max( MUR,RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( DDR * Min( PN ,RRS ) ) ,Min( MDR ,Min( MDR ,MDR ) ) )", "choosing": "Max( ( RCSe - RMSe ),( MUC - Min( CS ,MUC ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Min( Min( ( RRS * DDR ) ,( RRS - DDR ) ) ,( Max( CRS,PN ) - ( PN / MRS ) ) ) + ( ( ( RRS - PN ) + Min( ARS ,CRS ) ) * ( ( MRS + PN ) - Min( MRS ,CRS ) ) ) )", "choosing": "Min( ( Max( Const,( CS + MUM ) ) / RCSe ) ,( ( RRSe * Const ) + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( ( ( ( Const + BR ) * ( ARS / CRS ) ) * ( ( CRS + ARS ) / Min( Const ,CRS ) ) ) / ( ( ( Const - DDR ) * ( PN - MDR ) ) + ( Min( MRS ,BR ) * Max( CRS,CRS ) ) ) )", "choosing": "( Min( ( Max( MUR,MUM ) + ( DS + RRSe ) ) ,( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,MLU ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( BR / Const ),Min( MRS ,CRS ) )", "choosing": "Min( ( Const - CS ) ,Max( DS,MUR ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}], "3": [{"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7859848484848485, "obj2": 0.16823667820505742}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( RMSe * MUC ) ) ,( RMSe + ( MLU / ( MUM + MUR ) ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07640030813000406}, {"determining": "Min( DDR ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),Min( CS ,MUM ) )", "obj1": 0.8522727272727273, "obj2": 0.11147888642139799}, {"determining": "Max( ( BR / Const ),Min( MRS ,CRS ) )", "choosing": "Min( ( Const - CS ) ,Max( DS,MUR ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + Max( MLU,RCSe ) ) ,( RMSe + RRSe ) )", "obj1": 0.875, "obj2": 0.0779477532013303}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( ( CRS - MRS ),MDR )", "choosing": "( ( RMSe * RRSe ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS + MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.875, "obj2": 0.0779477532013303}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( DDR / ARS ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / RMSe ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * ( RCSe * MUM ) ) ,( Max( MUC,MUC ) * ( DS + Const ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),Min( ( BR - MRS ) ,MDR ) )", "choosing": "( ( RMSe * Max( Max( MUR,RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( DDR * Min( PN ,RRS ) ) ,Min( MDR ,Min( MDR ,MDR ) ) )", "choosing": "Max( ( RCSe - RMSe ),( MUC - Min( CS ,MUC ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Min( Min( ( RRS * DDR ) ,( RRS - DDR ) ) ,( Max( CRS,PN ) - ( PN / MRS ) ) ) + ( ( ( RRS - PN ) + Min( ARS ,CRS ) ) * ( ( MRS + PN ) - Min( MRS ,CRS ) ) ) )", "choosing": "Min( ( Max( Const,( CS + MUM ) ) / RCSe ) ,( ( RRSe * Const ) + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( DDR * Min( PN ,RRS ) ) ,Min( MDR ,Min( MDR ,MDR ) ) )", "choosing": "Max( RRSe,( MUC - Min( CS ,MUC ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Min( ( MDR - DDR ) ,Min( BR ,ARS ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) )", "choosing": "( Min( ( MUR - ( ( RMSe * DS ) / ( RCSe - MUM ) ) ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( ( ( ( Const + BR ) * ( ARS / CRS ) ) * ( ( CRS + ARS ) / Min( Const ,CRS ) ) ) / ( ( ( Const - DDR ) * ( PN - MDR ) ) + ( Min( MRS ,BR ) * Max( CRS,CRS ) ) ) )", "choosing": "( Min( ( Max( MUR,MUM ) + ( DS + RRSe ) ) ,( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,MLU ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}], "4": [{"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR * DDR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7840909090909091, "obj2": 0.16968882179047626}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Min( ( ( MDR + MDR ) + ( MRS - BR ) ) ,Max( ( BR - DDR ),CRS ) )", "choosing": "Min( ( Max( MUR,RRSe ) + Max( MLU,RCSe ) ) ,( RMSe + RRSe ) )", "obj1": 0.884469696969697, "obj2": 0.07344125859294723}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "( ( ( ( Const + BR ) * ( ARS / CRS ) ) * ( ( CRS + ARS ) / Min( Const ,CRS ) ) ) / ( ( ( Const - DDR ) * ( PN - MDR ) ) + ( Min( MRS ,BR ) * Max( CRS,CRS ) ) ) )", "choosing": "( Min( ( Max( MUR,MUM ) + ( DS + RRSe ) ) ,( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,MLU ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7859848484848485, "obj2": 0.16823667820505742}, {"determining": "Min( DDR ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),Min( CS ,MUM ) )", "obj1": 0.8522727272727273, "obj2": 0.11147888642139799}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "( ( CRS + ARS ) / DDR )", "choosing": "( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) )", "obj1": 0.8409090909090909, "obj2": 0.11388491025176632}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( RMSe * MUC ) ) ,( RMSe + ( MLU / ( MUM + MUR ) ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07640030813000406}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "( Max( MRS,CRS ) / RRS )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),CRS )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / RMSe ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( ( BR / Const ),Min( MRS ,CRS ) )", "choosing": "Min( ( Const - CS ) ,Max( DS,MUR ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,Max( ( RRS + MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RCSe + ( ( MUC + CS ) * ( MUR * MUM ) ) ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS - MRS ),MDR )", "choosing": "( ( RMSe * RRSe ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( ( BR + ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),Min( ( BR - MRS ) ,MDR ) )", "choosing": "( ( RMSe * Max( Max( MUR,RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( DDR * Min( PN ,RRS ) ) ,Min( MDR ,Min( MDR ,MDR ) ) )", "choosing": "Max( ( RCSe - RMSe ),( MUC - Min( CS ,MUC ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Min( Min( ( RRS * DDR ) ,( RRS - DDR ) ) ,( Max( CRS,PN ) - ( PN / MRS ) ) ) + ( ( ( RRS - PN ) + Min( ARS ,CRS ) ) * ( ( MRS + PN ) - Min( MRS ,CRS ) ) ) )", "choosing": "Min( ( Max( Const,( CS + MUM ) ) / RCSe ) ,( ( RRSe * Const ) + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( DDR * Min( PN ,RRS ) ) ,Min( MDR ,Min( MDR ,MDR ) ) )", "choosing": "Max( RRSe,( MUC - Min( CS ,MUC ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Min( ( MDR - DDR ) ,Min( BR ,ARS ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) )", "choosing": "( Min( ( MUR - ( ( RMSe * DS ) / ( RCSe - MUM ) ) ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( Max( PN,MDR ) ,( RRS + MRS ) )", "choosing": "Max( ( RMSe + RRSe ),( RRSe * MUR ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( CRS * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( DDR / ARS ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / RMSe ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * ( RCSe * MUM ) ) ,( Max( MUC,MUC ) * ( DS + Const ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}], "5": [{"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR * DDR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7840909090909091, "obj2": 0.16968882179047626}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Min( ( ( MDR + MDR ) + ( MRS - BR ) ) ,Max( ( BR - DDR ),CRS ) )", "choosing": "Min( ( Max( MUR,RRSe ) + Max( MLU,RCSe ) ) ,( RMSe + RRSe ) )", "obj1": 0.884469696969697, "obj2": 0.07344125859294723}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7859848484848485, "obj2": 0.16823667820505742}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Min( DDR ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),Min( CS ,MUM ) )", "obj1": 0.8522727272727273, "obj2": 0.11147888642139799}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.803030303030303, "obj2": 0.125685473831467}, {"determining": "( ( CRS + ARS ) / DDR )", "choosing": "( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) )", "obj1": 0.8409090909090909, "obj2": 0.11388491025176632}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( RMSe * MUC ) ) ,( RMSe + ( MLU / ( MUM + MUR ) ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07640030813000406}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( RCSe + MLU ) ),RRSe ),MUC ) ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * Max( RCSe,MUM ) ) ,( ( Const * MUM ) / ( CS - RCSe ) ) )", "obj1": 0.7916666666666666, "obj2": 0.13026048790057806}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "( ( ( ( Const + BR ) * ( ARS / CRS ) ) * ( ( CRS + ARS ) / Min( Const ,CRS ) ) ) / ( ( ( Const - DDR ) * ( PN - MDR ) ) + ( Min( MRS ,BR ) * Max( CRS,CRS ) ) ) )", "choosing": "( Min( ( Max( MUR,MUM ) + ( DS + RRSe ) ) ,( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,MLU ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,Max( ( RRS + MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RCSe + ( ( MUC + CS ) * ( MUR * MUM ) ) ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( Min( BR ,ARS ),Min( MRS ,CRS ) ) ) / ( BR - DDR ) )", "choosing": "( ( RCSe + MUM ) / Max( ( ( MUR + RMSe ) + ( RMSe / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( ( Min( MRS ,CRS ) / ( DDR - DDR ) ) + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * RRS ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( DS + CS ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( MRS - DDR ) / PN ) )", "choosing": "Max( MUM,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR - DDR ) )", "choosing": "( ( Const + Const ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,MDR ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) )", "choosing": "Max( ( RMSe / ( MUR - ( DS * RCSe ) ) ),( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / RRS )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),MDR )", "choosing": "( ( RMSe * RRSe ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( ( BR + ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),Min( ( BR - MRS ) ,MDR ) )", "choosing": "( ( RMSe * Max( Max( MUR,RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}], "6": [{"determining": "( Max( MRS,CRS ) / ( MDR / ( BR - DDR ) ) )", "choosing": "( MUR / ( DS + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR * DDR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7840909090909091, "obj2": 0.16968882179047626}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,BR )", "choosing": "Min( ( Max( Const,( Max( Const,( DS + RMSe ) ) * Max( DS,Max( MUC,RCSe ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( BR - MRS ) ,( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.884469696969697, "obj2": 0.07325867125059182}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7859848484848485, "obj2": 0.16823667820505742}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * ( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) ) ) ,Max( MUC,CS ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Min( DDR ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),Min( CS ,MUM ) )", "obj1": 0.8522727272727273, "obj2": 0.11147888642139799}, {"determining": "( ( CRS + ARS ) / DDR )", "choosing": "( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) )", "obj1": 0.8409090909090909, "obj2": 0.11388491025176632}, {"determining": "Min( ( ( MDR + MDR ) + ( MRS - BR ) ) ,Max( ( BR - DDR ),CRS ) )", "choosing": "Min( ( Max( MUR,RRSe ) + Max( MLU,RCSe ) ) ,( RMSe + RRSe ) )", "obj1": 0.8087121212121212, "obj2": 0.12414170484107465}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07589206105251545}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.803030303030303, "obj2": 0.125685473831467}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "( Max( Min( BR ,ARS ),CRS ) / RRS )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * Max( RCSe,MUM ) ) ,( ( Const * MUM ) / ( CS - RCSe ) ) )", "obj1": 0.7916666666666666, "obj2": 0.13026048790057806}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,Max( ( RRS + MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RCSe + ( ( MUC + CS ) * ( MUR * MUM ) ) ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( Min( BR ,ARS ),Min( MRS ,CRS ) ) ) / ( BR - DDR ) )", "choosing": "( ( RCSe + MUM ) / Max( ( ( MUR + RMSe ) + ( RMSe / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( ( Min( MRS ,CRS ) / ( DDR - DDR ) ) + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * RRS ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( DS + CS ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( MRS - DDR ) / PN ) )", "choosing": "Max( MUM,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR - DDR ) )", "choosing": "( ( Const + Const ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,MDR ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) )", "choosing": "Max( ( RMSe / ( MUR - ( DS * RCSe ) ) ),( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + DDR ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( MDR / ( BR - DDR ) ) )", "choosing": "( MUR / ( DS + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR * DDR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7840909090909091, "obj2": 0.16968882179047626}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,BR )", "choosing": "Min( ( Max( Const,( Max( Const,( DS + RMSe ) ) * Max( DS,Max( MUC,RCSe ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7859848484848485, "obj2": 0.16823667820505742}, {"determining": "Min( ( ( MDR + ( RRS + MRS ) ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( DS * RCSe ),( MUR - CS ) ) )", "obj1": 0.9034090909090909, "obj2": 0.06889743605767067}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( BR - MRS ) ,( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.884469696969697, "obj2": 0.07325867125059182}, {"determining": "( ( CRS + ARS ) / DDR )", "choosing": "( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) )", "obj1": 0.8409090909090909, "obj2": 0.11388491025176632}, {"determining": "Min( DDR ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),Min( CS ,MUM ) )", "obj1": 0.8522727272727273, "obj2": 0.11147888642139799}, {"determining": "Min( ( ( MDR + MDR ) + ( MRS - BR ) ) ,Max( ( BR - DDR ),CRS ) )", "choosing": "Min( ( Max( MUR,RRSe ) + Max( MLU,RCSe ) ) ,( RMSe + RRSe ) )", "obj1": 0.8087121212121212, "obj2": 0.12414170484107465}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "( Max( ( ( RRS / MDR ) * ( CRS * MRS ) ),CRS ) / RRS )", "choosing": "( ( RRSe + MUM ) / ( DS + ( MUM * ( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.8579545454545454, "obj2": 0.10130200649132445}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07589206105251545}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.803030303030303, "obj2": 0.125685473831467}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "( Min( MRS ,CRS ) / Max( Max( ( Min( MRS ,DDR ) - ( DDR - MDR ) ),Max( ( RRS - MRS ),Min( MRS ,CRS ) ) ),( Max( Min( RRS ,ARS ),( DDR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * Max( RCSe,MUM ) ) ,( ( Const * MUM ) / ( CS - RCSe ) ) )", "obj1": 0.7916666666666666, "obj2": 0.13026048790057806}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * ( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) ) ) ,Max( MUC,CS ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,Max( ( RRS + MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RCSe + ( ( MUC + CS ) * ( MUR * MUM ) ) ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( Min( BR ,ARS ),Min( MRS ,CRS ) ) ) / ( BR - DDR ) )", "choosing": "( ( RCSe + MUM ) / Max( ( ( MUR + RMSe ) + ( RMSe / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( ( Min( MRS ,CRS ) / ( DDR - DDR ) ) + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * RRS ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( DS + CS ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( MRS - DDR ) / PN ) )", "choosing": "Max( MUM,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR - DDR ) )", "choosing": "( ( Const + Const ) / CS )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( BR - ARS ) - Max( Const,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( BR * DDR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7840909090909091, "obj2": 0.16968882179047626}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,BR )", "choosing": "Min( ( Max( Const,( Max( Const,( DS + RMSe ) ) * Max( DS,Max( MUC,RCSe ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.057693251849740446}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 0.8352272727272727, "obj2": 0.10415347532645522}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 0.7859848484848485, "obj2": 0.16823667820505742}, {"determining": "( ( MRS - DDR ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * ( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) ) ) ,Max( MUC,CS ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( DS * RCSe ),( MUR - CS ) ) )", "obj1": 0.9034090909090909, "obj2": 0.06889743605767067}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( BR - MRS ) ,( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.884469696969697, "obj2": 0.07325867125059182}, {"determining": "Min( ( ( MDR + MDR ) + ( MRS - BR ) ) ,Max( ( BR - DDR ),CRS ) )", "choosing": "Min( ( Max( MUR,RRSe ) + Max( MLU,RCSe ) ) ,( RMSe + RRSe ) )", "obj1": 0.8087121212121212, "obj2": 0.12414170484107465}, {"determining": "Min( ( ( MDR + ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),CRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.8579545454545454, "obj2": 0.09972257811607793}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Max( ( CRS - MRS ),( BR - ARS ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07589206105251545}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.803030303030303, "obj2": 0.125685473831467}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "( MRS / ( ( MDR + MDR ) * DDR ) )", "choosing": "( ( RRSe + Const ) / ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * Max( RCSe,MUM ) ) ,( ( Const * MUM ) / ( CS - RCSe ) ) )", "obj1": 0.7916666666666666, "obj2": 0.13026048790057806}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Min( ( ( MDR + ( RRS + MRS ) ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "( Max( MRS,CRS ) / ( MDR / ( BR - DDR ) ) )", "choosing": "( MUR / ( DS + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,Max( ( RRS + MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RCSe + ( ( MUC + CS ) * ( MUR * MUM ) ) ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( Min( BR ,ARS ),Min( MRS ,CRS ) ) ) / ( BR - DDR ) )", "choosing": "( ( RCSe + MUM ) / Max( ( ( MUR + RMSe ) + ( RMSe / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( ( Min( MRS ,CRS ) / ( DDR - DDR ) ) + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * RRS ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( DS + CS ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ARS ,( ( MRS - DDR ) / PN ) )", "choosing": "Max( MUM,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( Min( ( MDR - DDR ) ,Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( Const,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / CRS )", "choosing": "( MUR / ( DS + ( Const + ( Const - RRSe ) ) ) )", "obj1": 0.7840909090909091, "obj2": 0.1670025182956987}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + ( MDR / ( BR - DDR ) ) ) ),RRS ) ) )", "choosing": "( Min( ( DS + ( Const - MUC ) ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 0.9943181818181818, "obj2": 0.0038797871972467003}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( MRS,RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.05732656657096342}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),( Min( CRS ,DDR ) - ( CRS + BR ) ) ) )", "choosing": "Min( ( Max( MUR,( Max( Min( Min( MUR ,( DS - MUR ) ) ,RRSe ),( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.05732656657096342}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 0.8352272727272727, "obj2": 0.10415347532645522}, {"determining": "( MRS / ( BR / BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( DS * RCSe ),( MUR - CS ) ) )", "obj1": 0.9034090909090909, "obj2": 0.06889743605767067}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( BR - MRS ) ,( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.884469696969697, "obj2": 0.07325867125059182}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,Max( ( Min( RRS ,ARS ) + ( BR + DDR ) ),( ( CRS + MDR ) / ( BR - ARS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8068181818181818, "obj2": 0.12367108434938312}, {"determining": "Min( ( ( MDR + ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),CRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.8579545454545454, "obj2": 0.09972257811607793}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),( BR - ARS ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07589206105251545}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.803030303030303, "obj2": 0.125685473831467}, {"determining": "( Min( ( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ) + CRS ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * Max( RCSe,MUM ) ) ,( ( Const * MUM ) / ( CS - RCSe ) ) )", "obj1": 0.7916666666666666, "obj2": 0.13026048790057806}, {"determining": "( ( MRS - DDR ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * ( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) ) ) ,Max( MUC,CS ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( ( MDR - MRS ) ,CRS ),Min( CRS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( MDR / ( BR - DDR ) ) )", "choosing": "( MUR / ( DS + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,Max( ( RRS + MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RCSe + ( ( MUC + CS ) * ( MUR * MUM ) ) ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( Min( BR ,ARS ),Min( MRS ,CRS ) ) ) / ( BR - DDR ) )", "choosing": "( ( RCSe + MUM ) / Max( ( ( MUR + RMSe ) + ( RMSe / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( ( Min( MRS ,CRS ) / ( DDR - DDR ) ) + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * RRS ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( DS + CS ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,CRS ) / ( DDR - BR ) ),CRS ) / CRS )", "choosing": "( MUR / ( DS + ( Const + ( Const - RRSe ) ) ) )", "obj1": 0.7840909090909091, "obj2": 0.1668107938680837}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + ( MDR / ( BR - DDR ) ) ) ),RRS ) ) )", "choosing": "( Min( ( DS + ( Const - MUC ) ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 0.9943181818181818, "obj2": 0.0038797871972467003}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( MRS,RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.05732656657096342}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ( BR - DDR ) ,BR ) ) ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.05732656657096342}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 0.8352272727272727, "obj2": 0.10415347532645522}, {"determining": "( ( MRS - DDR ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * ( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) ) ) ,Max( MUC,CS ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( DS * RCSe ),( MUR - CS ) ) )", "obj1": 0.9034090909090909, "obj2": 0.06889743605767067}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( BR - MRS ) ,( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.884469696969697, "obj2": 0.07325867125059182}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,Max( ( Min( RRS ,ARS ) + ( BR + DDR ) ),( ( CRS + MDR ) / ( BR - ARS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8068181818181818, "obj2": 0.12367108434938312}, {"determining": "Min( ( ( MDR + ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),CRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.8579545454545454, "obj2": 0.09972257811607793}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),( BR - ARS ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07589206105251545}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.803030303030303, "obj2": 0.125685473831467}, {"determining": "( Min( RRS ,MRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * Max( RCSe,MUM ) ) ,( ( Const * MUM ) / ( CS - RCSe ) ) )", "obj1": 0.7916666666666666, "obj2": 0.13026048790057806}, {"determining": "( MRS / ( BR / BR ) )", "choosing": "( ( RRSe + Const ) / ( Const + Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( MRS - PN ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( RRSe - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "( ( BR - ARS ) - Max( Const,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( MDR / ( BR - DDR ) ) )", "choosing": "( MUR / ( DS + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - DDR ) ,Max( ( RRS + MRS ),CRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( RCSe + ( ( MUC + CS ) * ( MUR * MUM ) ) ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( Min( RRSe ,MUM ) / ( DS + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( Min( BR ,ARS ),Min( MRS ,CRS ) ) ) / ( BR - DDR ) )", "choosing": "( ( RCSe + MUM ) / Max( ( ( MUR + RMSe ) + ( RMSe / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( ( Min( MRS ,CRS ) / ( DDR - DDR ) ) + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * RRS ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( DS + CS ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "Min( ( ( MDR + MDR ) + ( RRS - Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) ) ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,CRS ) / ( DDR - BR ) ),CRS ) / CRS )", "choosing": "( MUR / ( DS + ( Const + ( Const - RRSe ) ) ) )", "obj1": 0.7840909090909091, "obj2": 0.1668107938680837}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + ( MDR / ( BR - DDR ) ) ) ),RRS ) ) )", "choosing": "( Min( ( DS + ( Const - MUC ) ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 0.9943181818181818, "obj2": 0.0038797871972467003}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( MRS,RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.05732656657096342}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ( BR - DDR ) ,BR ) ) ),RRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.9185606060606061, "obj2": 0.05732656657096342}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + ( MDR / ( BR - DDR ) ) ) ),RRS ) ) )", "choosing": "( Min( ( DS + ( Const - MUC ) ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + ( RMSe + ( MLU - MUC ) ) ) ) )", "obj1": 0.9943181818181818, "obj2": 0.0038797871972467003}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 0.8352272727272727, "obj2": 0.10415347532645522}, {"determining": "Max( Min( ( ( MDR / ( BR - DDR ) ) - MRS ) ,CRS ),Min( MRS ,CRS ) )", "choosing": "Max( ( Min( MLU ,( RMSe - DS ) ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( DS * RCSe ),( MUR - CS ) ) )", "obj1": 0.9034090909090909, "obj2": 0.06889743605767067}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( BR - MRS ) ,( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.884469696969697, "obj2": 0.07325867125059182}, {"determining": "Min( ( ( MDR + ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) ) + ( RRS - BR ) ) ,Max( ( RRS + Max( ( BR / BR ),Min( ARS ,BR ) ) ),CRS ) )", "choosing": "Min( ( Max( MUR,( Max( RCSe,( DS + RMSe ) ) + Max( DS,Max( MUC,MUM ) ) ) ) + ( RMSe * MUC ) ) ,( RMSe + RRSe ) )", "obj1": 0.8579545454545454, "obj2": 0.09972257811607793}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( MUM + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8125, "obj2": 0.11822230439721994}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( ( CRS - MRS ),Max( ( BR - MRS ),( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( Max( CRS,MRS ) * Max( RRS,RRS ) ) ) ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / Max( ( RRS + MRS ),CRS ) ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,Max( ( Min( RRS ,ARS ) + ( BR + DDR ) ),( ( CRS + MDR ) / ( BR - ARS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8068181818181818, "obj2": 0.12367108434938312}, {"determining": "Max( ( CRS - MRS ),( BR - ARS ) )", "choosing": "( ( RMSe * Max( Max( ( ( MUC - RRSe ) * ( MUC + MLU ) ),RRSe ),RCSe ) ) + Max( MLU,RCSe ) )", "obj1": 0.821969696969697, "obj2": 0.11478354718264173}, {"determining": "Max( ( ( MDR + MDR ) + ( RRS - BR ) ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8768939393939394, "obj2": 0.07589206105251545}, {"determining": "( ( ( RRS / MDR ) * ( MRS * MRS ) ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * MUM ) ,Max( MUC,CS ) ) )", "obj1": 0.7973484848484849, "obj2": 0.12769167782988117}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,Max( Min( RRS ,MRS ),RRS ) )", "choosing": "Min( ( Max( MUR,RCSe ) + ( DS / MUC ) ) ,( ( Min( Max( MUR,MUM ) ,( DS + RRSe ) ) - ( ( RCSe / RMSe ) + Min( CS ,MLU ) ) ) - ( ( Max( CS,DS ) / ( Const + Const ) ) + ( ( MUR * MUM ) / ( CS - RCSe ) ) ) ) )", "obj1": 0.8731060606060606, "obj2": 0.07787407250179981}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( ( RMSe + DS ) / ( MLU / MUC ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.803030303030303, "obj2": 0.125685473831467}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * MUM ) )", "obj1": 0.865530303030303, "obj2": 0.09606592686572693}, {"determining": "Max( Min( ( ARS + MRS ) ,( BR - MDR ) ),( Min( ARS ,RRS ) + ( RRS / RRS ) ) )", "choosing": "Min( ( ( MLU / CS ) * Max( RCSe,MUM ) ) ,( ( Const * MUM ) / ( CS - RCSe ) ) )", "obj1": 0.7916666666666666, "obj2": 0.13026048790057806}, {"determining": "Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) )", "choosing": "Max( ( RMSe / CS ),( DS * ( ( RRSe + Const ) / ( DS + CS ) ) ) )", "obj1": 0.9109848484848485, "obj2": 0.0577556556426114}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( Max( Min( Const ,( RMSe - DS ) ),RRSe ) + ( RMSe / ( MLU / DS ) ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.8636363636363636, "obj2": 0.0968902102229163}, {"determining": "( Min( BR ,ARS ) * ( BR + CRS ) )", "choosing": "( ( RMSe + DS ) / ( RCSe * DS ) )", "obj1": 0.8617424242424242, "obj2": 0.09893200328044499}, {"determining": "( ( MRS - DDR ) + ( Max( MDR,CRS ) + Max( MRS,CRS ) ) )", "choosing": "( ( Max( RMSe,MLU ) - ( RRSe + MLU ) ) - Min( ( MUM * ( ( Const + DS ) * ( ( Min( Const ,MUC ) - ( DS * RCSe ) ) / RRSe ) ) ) ,Max( MUC,CS ) ) )", "obj1": 0.7878787878787878, "obj2": 0.13142911426910964}, {"determining": "Max( Min( ( CRS - MRS ) ,CRS ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( MUR - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "( Min( CRS ,BR ) + Max( MRS,Const ) )", "choosing": "Max( ( CS * Const ),Max( Max( Min( Const ,( RMSe - MUR ) ),RRSe ),( MLU * ( MUM + DS ) ) ) )", "obj1": 0.8598484848484849, "obj2": 0.09896457409939763}, {"determining": "Max( Min( Max( ( Min( MRS ,DDR ) - ( DDR - ARS ) ),Max( ( BR - MRS ),Min( MRS ,CRS ) ) ) ,( ( Min( RRS ,ARS ) + ( BR + DDR ) ) / ( ( CRS + MDR ) / ( Const + CRS ) ) ) ),Min( MDR ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "Max( ( MRS - PN ),Min( ( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( ARS,MRS ) ,( RRS - DDR ) ) ) ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe / RRSe ) ),Max( ( Const / MLU ),( RRSe - CS ) ) )", "obj1": 0.7935606060606061, "obj2": 0.12924029868146797}, {"determining": "Max( Min( BR ,CRS ),Min( ARS ,CRS ) )", "choosing": "Max( ( ( MUR + RMSe ) + ( RMSe + ( MLU - MUC ) ) ),Min( ( Const / MUM ) ,( MUR - CS ) ) )", "obj1": 0.8011363636363636, "obj2": 0.12647359065060407}, {"determining": "( Min( ( MDR - DDR ) ,Min( ( ( MDR + MDR ) + ( RRS - BR ) ) ,( CRS / PN ) ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( Const,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( Max( Min( MLU ,( RMSe - DS ) ),RRSe ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( MDR / ( BR - DDR ) ) )", "choosing": "( MUR / ( DS + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) / ( Max( PN,CRS ) / ( BR - DDR ) ) )", "choosing": "( ( RRSe + Const ) / ( Const + ( Const - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,CRS ) / ( DDR - BR ) )", "choosing": "( ( MUM + MLU ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,MRS ) * Max( RRS,RRS ) ),( Min( DDR ,PN ) - ( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( ARS,MRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - RRSe ) ,( MUM / Const ) ) * ( ( MUC - RMSe ) * ( RCSe + MLU ) ) ) + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( CRS + CRS ) * ( PN + CRS ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( DS * DS ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) - Max( ARS,Const ) )", "choosing": "( Min( Const ,RRSe ) * ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( BR / BR ),Min( ARS ,BR ) ) + Min( Max( PN,MRS ) ,( RRS - DDR ) ) )", "choosing": "Min( ( ( MLU * DS ) * ( MLU + MUC ) ) ,( ( DS - RMSe ) - ( RMSe * Const ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,DDR ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const / Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) )", "choosing": "( ( MUC + MUR ) / Min( Min( MUR ,( MUC - MUR ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS - PN ) ,( ARS / BR ) ),Max( Min( DDR ,PN ),( BR * BR ) ) ) + ( ( Min( ARS ,MRS ) / Max( Const,ARS ) ) - ( Max( ARS,MRS ) + Max( PN,MRS ) ) ) )", "choosing": "( ( Const + MUM ) * Max( RCSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( Const + MRS ) ) - ( BR / CRS ) )", "choosing": "Max( Max( RCSe,MUR ),( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / CRS ) - Min( ARS ,CRS ) ) ,( ( ( ( MRS * CRS ) * ( MDR + MRS ) ) / ( Min( CRS ,CRS ) - ( CRS + BR ) ) ) - Max( ( ( ARS * DDR ) - ( Const + Const ) ),Max( ( MRS - MDR ),( BR / RRS ) ) ) ) ) * ( ( ( ARS + RRS ) / Max( ARS,CRS ) ) + ( ( CRS + DDR ) - ( PN * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / CS ) / Max( RMSe,MUC ) ),( ( Const + RRSe ) * ( ( MUC + MUR ) / Min( ( MUR - ( DS * RCSe ) ) ,RRSe ) ) ) ) * ( Max( ( CS * CS ),( CS + RCSe ) ) * ( Min( RCSe ,MUM ) + ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - DDR ) ,( MRS - PN ) ) / ( ( CRS / MRS ) * Max( ( Const + ( Const + CRS ) ),RRS ) ) )", "choosing": "( Min( ( MUR - RRSe ) ,( MUM / RCSe ) ) * ( ( MUC - RMSe ) * ( RMSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}]}