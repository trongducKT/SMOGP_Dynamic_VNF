{"1": [{"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),Min( RRSe ,DS ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "( Max( DDR,MRS ) / ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( MUR,CS ) - ( MLU + CS ) )", "obj1": 0.17, "obj2": 0.6330992095238708}, {"determining": "( ( Const / BR ) * ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUC / RMSe ) - ( MUR + DS ) )", "obj1": 0.138, "obj2": 0.693632577908714}, {"determining": "( Min( PN ,MRS ) * ( BR - CRS ) )", "choosing": "( ( RRSe * RCSe ) - ( CS - RCSe ) )", "obj1": 0.646, "obj2": 0.24743872458386362}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( RMSe + DS ) / ( DS - MLU ) )", "obj1": 0.15, "obj2": 0.6684053084859471}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,RRS ) * ( FirstVNF_CPU * FirstVNF_CPU ) )", "choosing": "( Max( MUC,RRSe ) * ( RRSe - RRSe ) )", "obj1": 0.236, "obj2": 0.5946516941186584}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "Min( ( FirstVNF_RAM - RRS ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) )", "choosing": "( ( MUM * Max( MUM,RMSe ) ) / Min( MUR ,MUC ) )", "obj1": 0.906, "obj2": 0.08954298001688388}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * DDR ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( CS * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) + ( RRS - FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( CRS + Max( CRS,CRS ) ) / ARS ) ) )", "choosing": "( ( ( RRSe / DS ) / MUR ) / Max( RMSe,Max( ( Max( ( RCSe / DS ),( ( ( MUC + RRSe ) - MUM ) * RMSe ) ) - DS ),RCSe ) ) )", "obj1": 0.064, "obj2": 0.7434245489355443}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Min( FirstVNF_Mem ,DDR ),( PN - CRS ) ),( Min( MDR ,MRS ) * ( FirstVNF_RAM + BR ) ) )", "choosing": "( Min( Max( MUM,( ( ( CS / ( MUM * ( MUC + RMSe ) ) ) + MUC ) / MUR ) ) ,( DS * MUM ) ) - ( RRSe / RRSe ) )", "obj1": 0.582, "obj2": 0.31513122789150044}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const + DDR ) ,( FirstVNF_RAM / BR ) ) ,( ( AMS - MDR ) / ( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( ( CS * MLU ),( RCSe / MUC ) )", "obj1": 0.232, "obj2": 0.6086533522116054}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( RRS + Max( FirstVNF_RAM_Server,( ACS + Min( ( BR * DDR ) ,Max( RRS,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / ( ( ( Min( MUR ,( RRSe / RCSe ) ) / ( ( RCSe / RRSe ) / RCSe ) ) - MUM ) / ( ( CS / CS ) - MUR ) ) ) ) )", "obj1": 0.238, "obj2": 0.5471126199145273}, {"determining": "( ( ( Min( MRS ,BR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( FirstVNF_CPU + CRS ) ) ) * Max( Max( ( FirstVNF_RAM_Server * ARS ),( ARS + FirstVNF_Mem ) ),( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ACS ) ) ) )", "choosing": "Max( ( Min( RRSe ,Max( RRSe,MUR ) ) - RRSe ),( MUR * ( CS - RRSe ) ) )", "obj1": 0.312, "obj2": 0.5185321606553557}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / DDR ) ) ) / Min( Max( Min( AMS ,FirstVNF_Mem ),( AMS + Const ) ) ,( ( CRS / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( RRSe * RCSe ) ) - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + MUC ) ) ) )", "obj1": 0.972, "obj2": 0.023740494738729453}, {"determining": "Min( Max( FirstVNF_Mem_Server,AMS ) ,Max( ( Max( PN,CRS ) + ( AMS / PN ) ),( Max( CRS,RRS ) + ( FirstVNF_CPU_Server + ARS ) ) ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) - MUC ) - ( CS + ( ( MUR / MUR ) - RRSe ) ) ) ,( MUR + MUM ) )", "obj1": 0.602, "obj2": 0.29739891876412783}, {"determining": "( ( Max( Min( Const ,MDR ),( FirstVNF_CPU_Server - RRS ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( DDR - CRS ) ) ) + ( ( ( PN / FirstVNF_Mem ) + ( FirstVNF_Mem - Const ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( RMSe + MUM ) / Min( MUC ,RRSe ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ),Max( ( ( MLU + RCSe ) * Max( MUR,MUR ) ),( ( MLU * MUM ) * ( RCSe + RRSe ) ) ) )", "obj1": 0.814, "obj2": 0.16247340031155985}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / Max( CRS,FirstVNF_Mem_Server ) ),( ( BR * Const ) + ( RRS * MRS ) ) ) / ( ( ( AMS / FirstVNF_CPU ) - ( BR + PN ) ) * ( ( FirstVNF_RAM_Server / ACS ) * ( MDR - CRS ) ) ) )", "choosing": "( ( ( RMSe / ( DS + RRSe ) ) + MLU ) + ( RMSe - ( Min( RCSe ,DS ) * RRSe ) ) )", "obj1": 0.13, "obj2": 0.7096264520789051}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( RRSe + MUC ) ,MLU ) )", "obj1": 0.198, "obj2": 0.6157523266071744}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - AMS ) + ( ACS + Const ) )", "choosing": "Min( ( Min( ( DS - RRSe ) ,Max( MUC,MUM ) ) - Min( ( CS + DS ) ,( RMSe * MUR ) ) ) ,Min( ( ( RRSe / MUC ) - ( DS / MLU ) ) ,( Max( RRSe,MUM ) + Max( MUM,CS ) ) ) )", "obj1": 0.248, "obj2": 0.5380386128419559}, {"determining": "( ( ( ( Const + CRS ) / ( FirstVNF_Mem / Const ) ) - Min( ( FirstVNF_CPU_Server / RRS ) ,( CRS / MRS ) ) ) + ( ( ( FirstVNF_CPU / CRS ) / ( RRS * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server / MDR ) - ( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC / RMSe ) + ( MUM / MLU ) ) - ( Max( RRSe,MUM ) + ( CS + RMSe ) ) ) / Min( Max( Max( MLU,DS ),Min( RMSe ,RRSe ) ) ,Min( ( MUR + MUC ) ,( CS * RMSe ) ) ) )", "obj1": 0.14, "obj2": 0.6859249682704731}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) - ( RRS - PN ) ),( ( ARS / RRS ) * ( FirstVNF_Mem + RRS ) ) ) - ( Min( ( ARS * RRS ) ,( BR - FirstVNF_Mem_Server ) ) / ( Min( ACS ,BR ) - ( Const + AMS ) ) ) )", "choosing": "( ( MUC * Min( RRSe ,Min( RMSe ,MUC ) ) ) * ( RRSe - RMSe ) )", "obj1": 0.712, "obj2": 0.2419753579262493}], "2": [{"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),Min( RRSe ,DS ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "( Max( DDR,MRS ) / ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( MUR,CS ) - ( MLU + CS ) )", "obj1": 0.17, "obj2": 0.6330992095238708}, {"determining": "( Min( PN ,MRS ) * ( BR - CRS ) )", "choosing": "( ( RRSe * RCSe ) - ( CS - RCSe ) )", "obj1": 0.646, "obj2": 0.24743872458386362}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( RMSe + DS ) / ( DS - MLU ) )", "obj1": 0.15, "obj2": 0.6684053084859471}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "Min( ( FirstVNF_RAM - RRS ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) )", "choosing": "( ( MUM * Max( MUM,RMSe ) ) / Min( MUR ,MUC ) )", "obj1": 0.906, "obj2": 0.08954298001688388}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * DDR ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( CS * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) + ( RRS - FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( CRS + Max( CRS,CRS ) ) / ARS ) ) )", "choosing": "( ( ( RRSe / DS ) / MUR ) / Max( RMSe,Max( ( Max( ( RCSe / DS ),( ( ( MUC + RRSe ) - MUM ) * RMSe ) ) - DS ),RCSe ) ) )", "obj1": 0.064, "obj2": 0.7434245489355443}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,AMS ) ,Max( ( Max( PN,CRS ) + ( AMS / PN ) ),( Max( CRS,RRS ) + ( FirstVNF_CPU_Server + ARS ) ) ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) - MUC ) - ( CS + ( ( MUR / MUR ) - RRSe ) ) ) ,( MUR + MUM ) )", "obj1": 0.602, "obj2": 0.29739891876412783}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( RRSe + MUC ) ,MLU ) )", "obj1": 0.198, "obj2": 0.6157523266071744}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) - ( RRS - PN ) ),( ( ARS / RRS ) * ( FirstVNF_Mem + RRS ) ) ) - ( Min( ( ARS * RRS ) ,( BR - FirstVNF_Mem_Server ) ) / ( Min( ACS ,BR ) - ( Const + AMS ) ) ) )", "choosing": "( ( MUC * Min( RRSe ,Min( RMSe ,MUC ) ) ) * ( RRSe - RMSe ) )", "obj1": 0.712, "obj2": 0.2419753579262493}, {"determining": "( ( RRS * Const ) - ( ( FirstVNF_RAM_Server - ( Max( ACS,( ARS - CRS ) ) - Const ) ) * CRS ) )", "choosing": "( Min( DS ,Min( Min( RRSe ,( RCSe - RCSe ) ) ,( CS + Max( MLU,MUM ) ) ) ) - ( ( RRSe * ( ( RRSe / Min( ( DS * ( MLU + MLU ) ) ,Min( RCSe ,( RMSe - RRSe ) ) ) ) / MUC ) ) / Min( ( CS - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * ( MRS + ( FirstVNF_CPU_Server * MRS ) ) ) - ( Min( RRS ,( ACS + FirstVNF_CPU_Server ) ) * CRS ) ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - ( MLU / DS ) ) - ( MUC / Max( Min( MUM ,( RMSe / MUM ) ),( ( ( DS - ( Min( MLU ,RMSe ) - ( RRSe * DS ) ) ) + ( Max( Max( MUC,MLU ),RRSe ) * MUC ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( ( ( BR + Max( Max( DDR,CRS ),( FirstVNF_RAM_Server / DDR ) ) ) / Min( Const ,( RRS - MRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( RRSe + Max( ( ( MUR + CS ) - CS ),RCSe ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - ( ( Max( FirstVNF_Mem,ACS ) / FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),( ( ( MUR + RCSe ) * DS ) - ( ( MUR * MUR ) * Min( ( MUM / MUM ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - MRS ) ,( DDR * RRS ) )", "choosing": "( ( RRSe + RCSe ) / ( MUC * ( MLU - ( Max( ( ( ( MUR + CS ) - DS ) - Min( MUR ,( RMSe * MLU ) ) ),( RMSe - ( MUC + MUC ) ) ) * Min( ( RRSe * ( DS / ( RRSe + MUC ) ) ) ,MUR ) ) ) ) )", "obj1": 0.94, "obj2": 0.04879128640368356}, {"determining": "Max( ( AMS * RRS ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( ( MUC - RCSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.39, "obj2": 0.4419324818973376}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( MRS ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( RCSe * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( ( Min( DDR ,MDR ) - ARS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( Min( RRSe ,Min( CS ,( CS - MUC ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - ( ( ( ( AMS + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * CRS ) * ( ( FirstVNF_RAM / BR ) / FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe + ( ( ( MUR + RMSe ) / ( MLU / CS ) ) / Max( RCSe,MUC ) ) ) * ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( ACS - ACS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,MRS ) * ( BR - CRS ) ) )", "choosing": "( ( MLU - ( ( ( DS / ( MLU - ( RMSe + MUC ) ) ) * RMSe ) / RRSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( MUC,( Min( MUC ,Min( MUM ,MUM ) ) * ( MUC - RCSe ) ) ) ) ) )", "obj1": 0.622, "obj2": 0.28069212376781366}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( RRS + Max( FirstVNF_RAM_Server,RRS ) ) ) ,MRS ) * ( BR - CRS ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Min( MUR ,( RRSe / MUC ) ) / ( ( RCSe / RRSe ) / RCSe ) ) - RCSe ) )", "obj1": 0.644, "obj2": 0.26410301389954566}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( PN / ( ( ACS / FirstVNF_RAM_Server ) / ( ACS + MDR ) ) ) - ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "( ( RMSe + Max( ( Max( RRSe,( MUC / ( CS * RRSe ) ) ) - MUM ),( MUM - DS ) ) ) / ( DS - ( DS / DS ) ) )", "obj1": 0.128, "obj2": 0.678839020655709}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( ( Min( RRS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,( RRS / ( FirstVNF_RAM_Server * ( RRS / Max( Max( ACS,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) ) ) ) * ( RRS - DDR ) )", "choosing": "( Max( MUR,( Max( Max( RMSe,DS ),MLU ) + CS ) ) * ( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "Max( ( ( FirstVNF_CPU + BR ) * AMS ),( Max( RRS,( ( ( AMS * FirstVNF_RAM ) + ( BR * ACS ) ) / ( ( FirstVNF_RAM - ARS ) - ( PN + DDR ) ) ) ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + MLU ) - ( ( MUR + DS ) - Max( RRSe,MUM ) ) )", "obj1": 0.218, "obj2": 0.5916108600665023}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( ( MDR * ( PN + CRS ) ) + ( MDR * Const ) )", "choosing": "( ( ( MLU - Max( ( RCSe * MUM ),( ( MUM * RCSe ) * RCSe ) ) ) * CS ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( MRS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( Max( FirstVNF_Mem,RRS ) ,( Const / PN ) ) ) ,Min( ( Max( RRS,DDR ) - ( MDR - FirstVNF_Mem_Server ) ) ,( Max( RRS,RRS ) + Min( MRS ,Const ) ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( RMSe + DS ) ) * Min( ( MLU + MUC ) ,Min( MUM ,RRSe ) ) ) / ( Min( Max( RRSe,MUR ) ,( DS * MUR ) ) + ( Max( MLU,CS ) / ( MLU * MUR ) ) ) )", "obj1": 0.884, "obj2": 0.11468931430177683}, {"determining": "( ( ( ( ACS * CRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / PN ) - ( ( FirstVNF_Mem + PN ) / BR ) )", "choosing": "Max( Max( CS,CS ),( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( ( MUM - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / DDR ) ) ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + MUC ) ) ) )", "obj1": 0.242, "obj2": 0.5364638435150293}, {"determining": "( Min( ( Max( RRS,RRS ) + Min( MRS ,Const ) ) ,ARS ) / Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( RMSe + ( ( Max( MUC,MUR ) + Min( RMSe ,MLU ) ) * Min( ( MLU + MUC ) ,Min( MUM ,RRSe ) ) ) ) / ( DS - MLU ) )", "obj1": 0.168, "obj2": 0.6533211486164932}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( RRS - DDR ) )", "choosing": "( ( RMSe + MUM ) * ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) )", "choosing": "( ( MUC / MUM ) - ( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( ( ( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( MRS ,( MDR + MRS ) ) ) + PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / DS ) / MLU )", "obj1": 0.122, "obj2": 0.6802831009266123}, {"determining": "( CRS - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - Min( MUC ,CS ) )", "obj1": 0.282, "obj2": 0.5253469817324358}, {"determining": "( Min( Min( Max( Const,( ACS - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( MUM + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}], "3": [{"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) + ( RRS - FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( CRS + Max( CRS,CRS ) ) / ARS ) ) )", "choosing": "( ( ( RRSe / DS ) / MUR ) / Max( RMSe,Max( ( Max( ( RCSe / DS ),( ( ( MUC + RRSe ) - MUM ) * RMSe ) ) - DS ),RCSe ) ) )", "obj1": 0.064, "obj2": 0.7434245489355443}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Min( ( ACS + FirstVNF_Mem ) ,Const ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.64, "obj2": 0.23305664292826295}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( ( FirstVNF_Mem_Server * MDR ) ,MRS ) * ( FirstVNF_RAM + BR ) ) ) ) ) )", "choosing": "( ( CS - Max( DS,MUC ) ) / ( DS - ( DS / DS ) ) )", "obj1": 0.102, "obj2": 0.69139229805659}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),Min( RRSe ,DS ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Min( DDR ,( ACS - ACS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,MRS ) * ( BR - CRS ) ) )", "choosing": "( ( MLU - ( ( ( DS / ( MLU - ( RMSe + MUC ) ) ) * RMSe ) / RRSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( MUC,( Min( MUC ,Min( MUM ,MUM ) ) * ( MUC - RCSe ) ) ) ) ) )", "obj1": 0.622, "obj2": 0.28069212376781366}, {"determining": "( Max( DDR,MRS ) / ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( MUR,CS ) - ( MLU + CS ) )", "obj1": 0.17, "obj2": 0.6330992095238708}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "Max( ( ( FirstVNF_CPU + BR ) * AMS ),( Max( RRS,( ( ( AMS * FirstVNF_RAM ) + ( BR * ACS ) ) / ( ( FirstVNF_RAM - ARS ) - ( PN + DDR ) ) ) ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + MLU ) - ( ( MUR + DS ) - Max( RRSe,MUM ) ) )", "obj1": 0.218, "obj2": 0.5916108600665023}, {"determining": "Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + ( RMSe / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.902, "obj2": 0.07841198514652367}, {"determining": "Min( Min( ( ( MRS + FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,Min( Max( FirstVNF_Mem,RRS ) ,( Const / PN ) ) ) ,Min( ( Max( RRS,DDR ) - ( MDR - FirstVNF_Mem_Server ) ) ,( Max( RRS,RRS ) + Min( MRS ,Const ) ) ) )", "choosing": "( ( ( Max( MUC,MUR ) + ( RMSe + DS ) ) * Min( ( MLU + MUC ) ,Min( MUM ,RRSe ) ) ) / ( Min( Max( RRSe,MUR ) ,( DS * MUR ) ) + ( Max( MLU,CS ) / ( MLU * MUR ) ) ) )", "obj1": 0.884, "obj2": 0.11468931430177683}, {"determining": "Min( ( FirstVNF_Mem_Server - MRS ) ,( DDR * RRS ) )", "choosing": "( ( RRSe + RCSe ) / ( MUC * ( MLU - ( Max( ( ( ( MUR + CS ) - DS ) - Min( MUR ,( RMSe * MLU ) ) ),( RMSe - ( MUC + MUC ) ) ) * Min( ( RRSe * ( DS / ( RRSe + MUC ) ) ) ,MUR ) ) ) ) )", "obj1": 0.94, "obj2": 0.04879128640368356}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( ( RRSe + ( Max( DS,RCSe ) * MLU ) ) + RCSe ) / ( MUC * ( MLU - MUR ) ) )", "obj1": 0.922, "obj2": 0.06594906775767988}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5569713204590203}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( RRSe + MUC ) ,MLU ) )", "obj1": 0.198, "obj2": 0.6157523266071744}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( CRS - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - Min( MUC ,CS ) )", "obj1": 0.282, "obj2": 0.5253469817324358}, {"determining": "( ( CRS - Min( FirstVNF_Mem ,Const ) ) + ( ( PN - FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( MUM - MUR ) - ( MLU - CS ) ) - Min( MUC ,( ( Min( DS ,MUC ) - ( ( Max( MUR,DS ) + RCSe ) / ( DS * MUC ) ) ) + ( ( MUC * ( RMSe / ( MLU * MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.96, "obj2": 0.027568393377981736}, {"determining": "Min( Max( FirstVNF_Mem_Server,AMS ) ,Max( ( Max( PN,CRS ) + ( AMS / PN ) ),( Max( CRS,RRS ) + ( FirstVNF_CPU_Server + ARS ) ) ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) - MUC ) - ( CS + ( ( MUR / MUR ) - RRSe ) ) ) ,( MUR + MUM ) )", "obj1": 0.602, "obj2": 0.29739891876412783}, {"determining": "Max( ( ( CRS / MDR ) * ( BR - ( MRS + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * ( MUM + MUM ) ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.58, "obj2": 0.2987935014687522}, {"determining": "( ( DDR / ACS ) + Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.34, "obj2": 0.4742380502567559}, {"determining": "Max( ( AMS * RRS ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( ( MUC - RCSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.39, "obj2": 0.4419324818973376}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( MRS ,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( CS * ( ( DS / Max( MLU,RRSe ) ) / Max( RCSe,MUC ) ) ) ) )", "obj1": 0.368, "obj2": 0.4719817213395868}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / DDR ) ) ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + MUC ) ) ) )", "obj1": 0.242, "obj2": 0.5364638435150293}, {"determining": "( Min( MDR ,( FirstVNF_Mem / MDR ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),( RMSe - Min( MUC ,CS ) ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,MRS ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) - Min( MRS ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( ( RRSe * RMSe ) * MUM ) ) )", "obj1": 0.372, "obj2": 0.4592800520906676}, {"determining": "( RRS + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / RMSe ) - ( MUR + DS ) ) - ( CS - DS ) )", "obj1": 0.262, "obj2": 0.5318616596180896}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( RCSe / MUC ),Max( CS,MLU ) ) ) ) )", "obj1": 0.266, "obj2": 0.5310270542442548}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * DDR ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( CS * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU * FirstVNF_Mem ) - BR ) / FirstVNF_RAM ) ) - Min( MRS ,( MDR + ( MDR - CRS ) ) ) )", "choosing": "( ( MUR - RCSe ) - Min( ( CS - MLU ) ,( RCSe * ( RMSe - ( Min( RCSe ,DS ) * RRSe ) ) ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( ( FirstVNF_RAM_Server - ( Max( ACS,( ARS - CRS ) ) - Const ) ) * CRS ) )", "choosing": "( Min( DS ,Min( Min( RRSe ,( RCSe - RCSe ) ) ,( CS + Max( MLU,MUM ) ) ) ) - ( ( RRSe * ( ( RRSe / Min( ( DS * ( MLU + MLU ) ) ,Min( RCSe ,( RMSe - RRSe ) ) ) ) / MUC ) ) / Min( ( CS - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * ( MRS + ( FirstVNF_CPU_Server * MRS ) ) ) - ( Min( RRS ,( ACS + FirstVNF_CPU_Server ) ) * CRS ) ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - ( MLU / DS ) ) - ( MUC / Max( Min( MUM ,( RMSe / MUM ) ),( ( ( DS - ( Min( MLU ,RMSe ) - ( RRSe * DS ) ) ) + ( Max( Max( MUC,MLU ),RRSe ) * MUC ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( ( ( BR + Max( Max( DDR,CRS ),( FirstVNF_RAM_Server / DDR ) ) ) / Min( Const ,( RRS - MRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( RRSe + Max( ( ( MUR + CS ) - CS ),RCSe ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - ( ( Max( FirstVNF_Mem,ACS ) / FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),( ( ( MUR + RCSe ) * DS ) - ( ( MUR * MUR ) * Min( ( MUM / MUM ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ARS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( Min( RRSe ,Min( CS ,( CS - MUC ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - ( ( ( ( AMS + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * CRS ) * ( ( FirstVNF_RAM / BR ) / FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe + ( ( ( MUR + RMSe ) / ( MLU / CS ) ) / Max( RCSe,MUC ) ) ) * ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,( RRS / ( FirstVNF_RAM_Server * ( RRS / Max( Max( ACS,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) ) ) ) * ( RRS - DDR ) )", "choosing": "( Max( MUR,( Max( Max( RMSe,DS ),MLU ) + CS ) ) * ( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( PN + CRS ) ) + ( MDR * Const ) )", "choosing": "( ( ( MLU - Max( ( RCSe * MUM ),( ( MUM * RCSe ) * RCSe ) ) ) * CS ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * CRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / PN ) - ( ( FirstVNF_Mem + PN ) / BR ) )", "choosing": "Max( Max( CS,CS ),( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( ( MUM - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( RRS - DDR ) )", "choosing": "( ( RMSe + MUM ) * ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) )", "choosing": "( ( MUC / MUM ) - ( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ACS - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( MUM + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( ( RRS * FirstVNF_CPU_Server ),DDR ) ,MRS ),MRS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( ( MUR - Max( Min( MUC ,RRSe ),Min( RMSe ,DS ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / ( ( RRS * Const ) - ( AMS * CRS ) ) ) ) ) / Min( Max( Min( AMS ,FirstVNF_Mem ),( AMS + Const ) ) ,( ( CRS / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( RRSe * RCSe ) ) - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) + MRS ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( Min( MLU ,Max( DS,DS ) ) - Min( RRSe ,( ( MLU + Max( MLU,Max( RMSe,MLU ) ) ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( ( DDR - ARS ) ,CRS ) + ( ( MRS / MRS ) * FirstVNF_Mem_Server ) ) ,ACS ) - DDR ) - MRS ) / ( MDR + FirstVNF_RAM_Server ) ) / ( ( Min( MDR ,FirstVNF_RAM_Server ) - AMS ) + Max( AMS,AMS ) ) )", "choosing": "( ( Max( Max( MUR,( ( ( DS / MUR ) - MUR ) * ( ( RRSe / RRSe ) / MUR ) ) ),MUR ) * ( DS / MUC ) ) / ( DS / Min( ( ( MUR + RCSe ) * RCSe ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( ( MRS - ARS ) ,CRS ) + MDR ) ,ACS ) - DDR ) - MRS ) / ( MDR + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem - AMS ) + Max( AMS,AMS ) ) )", "choosing": "( ( Max( ( ( Max( MUC,RMSe ) + RCSe ) + ( RRSe / ( ( CS + RMSe ) * RCSe ) ) ),MUR ) * ( DS / MUC ) ) / ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * Const ) - CRS ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - MLU ) - ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( FirstVNF_CPU_Server / MDR ) + MRS ) )", "choosing": "Max( Max( ( RCSe * Min( ( Max( MUC,RMSe ) * ( ( Max( MUM,RMSe ) * DS ) * ( ( MLU * RRSe ) + MLU ) ) ) ,MUR ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) - ARS ) - ( FirstVNF_CPU * BR ) )", "choosing": "( ( ( Min( RRSe ,Max( ( ( MLU * RCSe ) - RCSe ),Max( DS,RRSe ) ) ) - DS ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - RRS ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( ( RRSe + RCSe ) / ( MUC * ( MLU - MUR ) ) ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( Max( MUC,MUR ) + Min( RMSe ,MLU ) ) * Min( ( MLU + MUC ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * BR ) + Min( FirstVNF_Mem_Server ,ACS ) ) * ( RRS - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( Max( MUR,MLU ) + CS ) ) * ( RRSe + ( Max( MUC,MLU ) - ( RMSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,Min( PN ,FirstVNF_RAM ) ) + Min( MRS ,Const ) ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( Min( RCSe ,RMSe ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) * CRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / PN ) - ( ( FirstVNF_Mem + PN ) / BR ) )", "choosing": "Max( Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) ),( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server / Const ) ) + ( ( ( ( CRS / Min( Min( ( AMS / DDR ) ,FirstVNF_RAM_Server ) ,MRS ) ) / FirstVNF_Mem ) + ( FirstVNF_Mem - Const ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( ( CS * MUR ) + MUM ) / Min( MUC ,RRSe ) ) - Max( MUR,( MUM * MUC ) ) ),Max( ( ( MLU + RCSe ) * Max( MUR,MUR ) ),( ( MLU * MUM ) * ( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( ( FirstVNF_Mem * MRS ) / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU / Const ) ,( ( MDR - Min( ACS ,CRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU - DS ) * CS ) / ( Max( Min( MLU ,MUR ),MLU ) - ( ( RRSe / MUM ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( RRS * Const ) ) - ( AMS * CRS ) )", "choosing": "( ( ( CS * MUM ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR + FirstVNF_CPU_Server ) / ( MRS - ( FirstVNF_Mem_Server - ( MDR + ( PN / PN ) ) ) ) ) ,Const ) * ( RRS - ( ( MRS + ( MDR * Max( AMS,ARS ) ) ) + ( CRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe + ( CS - Max( CS,Max( MUM,RRSe ) ) ) ) * ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - Max( ( FirstVNF_Mem_Server - BR ),( FirstVNF_Mem_Server * ( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS ) ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + ( BR * FirstVNF_CPU_Server ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUC / DS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( RCSe,( ( CS + MLU ) - Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ARS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU - MRS ) - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( DS / DS ),( MUM + MLU ) ),( MLU + ( ( ( Max( MUM,MUR ) * ( DS / MUC ) ) / ( DS / DS ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( RRS,RRS ) + Min( MRS ,Const ) ) ,ARS ) / ( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( MUC,MUR ) + Min( RMSe ,MLU ) ) * Min( ( MLU + MUC ) ,Min( MUM ,Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) ) ) ) ) ) / ( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - ( AMS * DDR ) )", "choosing": "( Max( ( DS + MUM ),( DS * RMSe ) ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem * ( ( Const / Const ) - DDR ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - ( DS - Min( DS ,Max( DS,Min( Max( MLU,RCSe ) ,RMSe ) ) ) ) ) + MUM ) * ( RRSe + Min( RRSe ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - MDR ) - ( ARS * FirstVNF_Mem_Server ) ) / Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC * ( RMSe * RRSe ) ) - ( RMSe - Min( MUC ,CS ) ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Min( ( ACS + FirstVNF_Mem ) ,Const ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.64, "obj2": 0.23305664292826295}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( ( FirstVNF_Mem_Server * MDR ) ,MRS ) * ( FirstVNF_RAM + BR ) ) ) ) ) )", "choosing": "( ( CS - Max( DS,MUC ) ) / ( DS - ( DS / DS ) ) )", "obj1": 0.102, "obj2": 0.69139229805659}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),Min( RRSe ,DS ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) + ( RRS - FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( CRS + Max( CRS,CRS ) ) / ARS ) ) )", "choosing": "( ( ( RRSe / DS ) / MUR ) / Max( RMSe,Max( ( Max( ( RCSe / DS ),( ( ( MUC + RRSe ) - MUM ) * RMSe ) ) - DS ),RCSe ) ) )", "obj1": 0.064, "obj2": 0.7434245489355443}, {"determining": "( Min( DDR ,( ACS - ACS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,MRS ) * ( BR - CRS ) ) )", "choosing": "( ( MLU - ( ( ( DS / ( MLU - ( RMSe + MUC ) ) ) * RMSe ) / RRSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( MUC,( Min( MUC ,Min( MUM ,MUM ) ) * ( MUC - RCSe ) ) ) ) ) )", "obj1": 0.622, "obj2": 0.28069212376781366}, {"determining": "( Max( DDR,MRS ) / ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( MUR,CS ) - ( MLU + CS ) )", "obj1": 0.17, "obj2": 0.6330992095238708}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "Max( ( ( FirstVNF_CPU + BR ) * AMS ),( Max( RRS,( ( ( AMS * FirstVNF_RAM ) + ( BR * ACS ) ) / ( ( FirstVNF_RAM - ARS ) - ( PN + DDR ) ) ) ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + MLU ) - ( ( MUR + DS ) - Max( RRSe,MUM ) ) )", "obj1": 0.218, "obj2": 0.5916108600665023}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}, {"determining": "Min( ( FirstVNF_Mem_Server - MRS ) ,( DDR * RRS ) )", "choosing": "( ( RRSe + RCSe ) / ( MUC * ( MLU - ( Max( ( ( ( MUR + CS ) - DS ) - Min( MUR ,( RMSe * MLU ) ) ),( RMSe - ( MUC + MUC ) ) ) * Min( ( RRSe * ( DS / ( RRSe + MUC ) ) ) ,MUR ) ) ) ) )", "obj1": 0.94, "obj2": 0.04879128640368356}, {"determining": "( Min( ( FirstVNF_CPU - Max( ARS,FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( RCSe / MUC ),Max( CS,MLU ) ) ) ) )", "obj1": 0.884, "obj2": 0.1141328231758388}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5569713204590203}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( RRSe + MUC ) ,MLU ) )", "obj1": 0.198, "obj2": 0.6157523266071744}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( ( CRS - Min( FirstVNF_Mem ,Const ) ) + ( ( PN - FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( MUM - MUR ) - ( MLU - CS ) ) - Min( MUC ,( ( Min( DS ,MUC ) - ( ( Max( MUR,DS ) + RCSe ) / ( DS * MUC ) ) ) + ( ( MUC * ( RMSe / ( MLU * MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.96, "obj2": 0.027568393377981736}, {"determining": "Min( Max( FirstVNF_Mem_Server,AMS ) ,Max( ( Max( PN,CRS ) + ( AMS / PN ) ),( Max( CRS,RRS ) + ( FirstVNF_CPU_Server + ARS ) ) ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) - MUC ) - ( CS + ( ( MUR / MUR ) - RRSe ) ) ) ,( MUR + MUM ) )", "obj1": 0.602, "obj2": 0.29739891876412783}, {"determining": "( ( DDR / ACS ) + Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.34, "obj2": 0.4742380502567559}, {"determining": "Max( ( ( CRS / MDR ) * ( BR - ( MRS + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * ( MUM + MUM ) ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.58, "obj2": 0.2987935014687522}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / DDR ) ) ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + MUC ) ) ) )", "obj1": 0.242, "obj2": 0.5364638435150293}, {"determining": "Max( ( AMS * RRS ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( ( MUC - RCSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.39, "obj2": 0.4419324818973376}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( RRS + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + DS ) ) - ( CS - DS ) )", "obj1": 0.892, "obj2": 0.08829581144370142}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( CS - DS ) ) - Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( MUC / DS ) )", "obj1": 0.358, "obj2": 0.46180842500661445}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( ( RRSe + ( Max( DS,RCSe ) * MLU ) ) + RCSe ) / ( MUC * ( MLU - MUR ) ) )", "obj1": 0.922, "obj2": 0.06594906775767988}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( Min( MDR ,( FirstVNF_Mem / MDR ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),( RMSe - Min( MUC ,CS ) ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,MRS ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) - Min( MRS ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( ( RRSe * RMSe ) * MUM ) ) )", "obj1": 0.372, "obj2": 0.4592800520906676}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - ( MLU * RMSe ) )", "obj1": 0.91, "obj2": 0.07317386542418973}, {"determining": "Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + ( RMSe / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.902, "obj2": 0.07841198514652367}, {"determining": "( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( MUC * ( RMSe * RRSe ) ) - ( RMSe - Min( MUC ,CS ) ) ) ) )", "obj1": 0.898, "obj2": 0.08172396977351745}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * DDR ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( CS * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "Min( ( DDR - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * Min( PN ,BR ) ) )", "choosing": "( ( Max( ( DS + MUM ),( DS * RMSe ) ) + RCSe ) / ( MUC * ( Max( RMSe,RMSe ) - MUR ) ) )", "obj1": 0.92, "obj2": 0.0705572919305713}, {"determining": "( Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,MRS ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( ( Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) * RMSe ) * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( ( FirstVNF_RAM_Server - ( Max( ACS,( ARS - CRS ) ) - Const ) ) * CRS ) )", "choosing": "( Min( DS ,Min( Min( RRSe ,( RCSe - RCSe ) ) ,( CS + Max( MLU,MUM ) ) ) ) - ( ( RRSe * ( ( RRSe / Min( ( DS * ( MLU + MLU ) ) ,Min( RCSe ,( RMSe - RRSe ) ) ) ) / MUC ) ) / Min( ( CS - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * ( MRS + ( FirstVNF_CPU_Server * MRS ) ) ) - ( Min( RRS ,( ACS + FirstVNF_CPU_Server ) ) * CRS ) ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - ( MLU / DS ) ) - ( MUC / Max( Min( MUM ,( RMSe / MUM ) ),( ( ( DS - ( Min( MLU ,RMSe ) - ( RRSe * DS ) ) ) + ( Max( Max( MUC,MLU ),RRSe ) * MUC ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( ( ( BR + Max( Max( DDR,CRS ),( FirstVNF_RAM_Server / DDR ) ) ) / Min( Const ,( RRS - MRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( RRSe + Max( ( ( MUR + CS ) - CS ),RCSe ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - ( ( Max( FirstVNF_Mem,ACS ) / FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),( ( ( MUR + RCSe ) * DS ) - ( ( MUR * MUR ) * Min( ( MUM / MUM ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ARS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( Min( RRSe ,Min( CS ,( CS - MUC ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - ( ( ( ( AMS + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * CRS ) * ( ( FirstVNF_RAM / BR ) / FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe + ( ( ( MUR + RMSe ) / ( MLU / CS ) ) / Max( RCSe,MUC ) ) ) * ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,( RRS / ( FirstVNF_RAM_Server * ( RRS / Max( Max( ACS,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) ) ) ) * ( RRS - DDR ) )", "choosing": "( Max( MUR,( Max( Max( RMSe,DS ),MLU ) + CS ) ) * ( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( PN + CRS ) ) + ( MDR * Const ) )", "choosing": "( ( ( MLU - Max( ( RCSe * MUM ),( ( MUM * RCSe ) * RCSe ) ) ) * CS ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * CRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / PN ) - ( ( FirstVNF_Mem + PN ) / BR ) )", "choosing": "Max( Max( CS,CS ),( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( ( MUM - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( RRS - DDR ) )", "choosing": "( ( RMSe + MUM ) * ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) )", "choosing": "( ( MUC / MUM ) - ( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ACS - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( MUM + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( ( RRS * FirstVNF_CPU_Server ),DDR ) ,MRS ),MRS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( ( MUR - Max( Min( MUC ,RRSe ),Min( RMSe ,DS ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / ( ( RRS * Const ) - ( AMS * CRS ) ) ) ) ) / Min( Max( Min( AMS ,FirstVNF_Mem ),( AMS + Const ) ) ,( ( CRS / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( RRSe * RCSe ) ) - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) + MRS ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( Min( MLU ,Max( DS,DS ) ) - Min( RRSe ,( ( MLU + Max( MLU,Max( RMSe,MLU ) ) ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( ( DDR - ARS ) ,CRS ) + ( ( MRS / MRS ) * FirstVNF_Mem_Server ) ) ,ACS ) - DDR ) - MRS ) / ( MDR + FirstVNF_RAM_Server ) ) / ( ( Min( MDR ,FirstVNF_RAM_Server ) - AMS ) + Max( AMS,AMS ) ) )", "choosing": "( ( Max( Max( MUR,( ( ( DS / MUR ) - MUR ) * ( ( RRSe / RRSe ) / MUR ) ) ),MUR ) * ( DS / MUC ) ) / ( DS / Min( ( ( MUR + RCSe ) * RCSe ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( ( MRS - ARS ) ,CRS ) + MDR ) ,ACS ) - DDR ) - MRS ) / ( MDR + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem - AMS ) + Max( AMS,AMS ) ) )", "choosing": "( ( Max( ( ( Max( MUC,RMSe ) + RCSe ) + ( RRSe / ( ( CS + RMSe ) * RCSe ) ) ),MUR ) * ( DS / MUC ) ) / ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * Const ) - CRS ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - MLU ) - ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( FirstVNF_CPU_Server / MDR ) + MRS ) )", "choosing": "Max( Max( ( RCSe * Min( ( Max( MUC,RMSe ) * ( ( Max( MUM,RMSe ) * DS ) * ( ( MLU * RRSe ) + MLU ) ) ) ,MUR ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) - ARS ) - ( FirstVNF_CPU * BR ) )", "choosing": "( ( ( Min( RRSe ,Max( ( ( MLU * RCSe ) - RCSe ),Max( DS,RRSe ) ) ) - DS ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - RRS ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( ( RRSe + RCSe ) / ( MUC * ( MLU - MUR ) ) ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( Max( MUC,MUR ) + Min( RMSe ,MLU ) ) * Min( ( MLU + MUC ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * BR ) + Min( FirstVNF_Mem_Server ,ACS ) ) * ( RRS - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( Max( MUR,MLU ) + CS ) ) * ( RRSe + ( Max( MUC,MLU ) - ( RMSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,Min( PN ,FirstVNF_RAM ) ) + Min( MRS ,Const ) ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( Min( RCSe ,RMSe ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) * CRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / PN ) - ( ( FirstVNF_Mem + PN ) / BR ) )", "choosing": "Max( Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) ),( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server / Const ) ) + ( ( ( ( CRS / Min( Min( ( AMS / DDR ) ,FirstVNF_RAM_Server ) ,MRS ) ) / FirstVNF_Mem ) + ( FirstVNF_Mem - Const ) ) + ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( ( ( CS * MUR ) + MUM ) / Min( MUC ,RRSe ) ) - Max( MUR,( MUM * MUC ) ) ),Max( ( ( MLU + RCSe ) * Max( MUR,MUR ) ),( ( MLU * MUM ) * ( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( ( FirstVNF_Mem * MRS ) / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU / Const ) ,( ( MDR - Min( ACS ,CRS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU - DS ) * CS ) / ( Max( Min( MLU ,MUR ),MLU ) - ( ( RRSe / MUM ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( RRS * Const ) ) - ( AMS * CRS ) )", "choosing": "( ( ( CS * MUM ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( MUR / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR + FirstVNF_CPU_Server ) / ( MRS - ( FirstVNF_Mem_Server - ( MDR + ( PN / PN ) ) ) ) ) ,Const ) * ( RRS - ( ( MRS + ( MDR * Max( AMS,ARS ) ) ) + ( CRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe + ( CS - Max( CS,Max( MUM,RRSe ) ) ) ) * ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - Max( ( FirstVNF_Mem_Server - BR ),( FirstVNF_Mem_Server * ( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS ) ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + ( BR * FirstVNF_CPU_Server ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUC / DS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / BR ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( RCSe,( ( CS + MLU ) - Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ARS ,FirstVNF_Mem ) ,( ( FirstVNF_CPU - MRS ) - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( DS / DS ),( MUM + MLU ) ),( MLU + ( ( ( Max( MUM,MUR ) * ( DS / MUC ) ) / ( DS / DS ) ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( Min( ( ACS + FirstVNF_Mem ) ,Const ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.64, "obj2": 0.23305664292826295}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Min( DDR ,( ACS - ACS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,MRS ) * ( BR - CRS ) ) )", "choosing": "( ( MLU - ( ( ( DS / ( MLU - ( RMSe + MUC ) ) ) * RMSe ) / RRSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( MUC,( Min( MUC ,Min( MUM ,MUM ) ) * ( MUC - RCSe ) ) ) ) ) )", "obj1": 0.622, "obj2": 0.28069212376781366}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( ( FirstVNF_Mem_Server * MDR ) ,MRS ) * ( FirstVNF_RAM + BR ) ) ) ) ) )", "choosing": "( ( CS - Max( DS,MUC ) ) / ( DS - ( DS / DS ) ) )", "obj1": 0.102, "obj2": 0.69139229805659}, {"determining": "( Max( DDR,MRS ) / ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( MUR,CS ) - ( MLU + CS ) )", "obj1": 0.17, "obj2": 0.6330992095238708}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "( Min( Max( MRS,FirstVNF_Mem ) ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( Max( CS,( ( RMSe + CS ) * ( RMSe * MUR ) ) ) / ( MUM * ( ( CS + ( ( MUR / MUR ) - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.072, "obj2": 0.7123689436492102}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( Min( MDR ,FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),Min( RRSe ,DS ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "Max( ( ( FirstVNF_CPU + BR ) * AMS ),( Max( RRS,( ( ( AMS * FirstVNF_RAM ) + ( BR * ACS ) ) / ( ( FirstVNF_RAM - ARS ) - ( PN + DDR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM / CS ) + MLU ) - ( ( Min( MUR ,MUR ) + DS ) - Max( RRSe,MUM ) ) )", "obj1": 0.224, "obj2": 0.5809753002256594}, {"determining": "Max( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) + ( RRS - FirstVNF_CPU_Server ) ),( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( CRS + Max( CRS,CRS ) ) / ARS ) ) )", "choosing": "( ( ( RRSe / DS ) / MUR ) / Max( RMSe,Max( ( Max( ( RCSe / DS ),( ( ( MUC + RRSe ) - MUM ) * RMSe ) ) - DS ),RCSe ) ) )", "obj1": 0.064, "obj2": 0.7434245489355443}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ( DDR + Min( PN ,Max( MRS,DDR ) ) ) ) / RRS ) * ( ACS * FirstVNF_Mem_Server ) ) + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( MUR,RRSe ) - ( CS - ( Min( RMSe ,DS ) - MUM ) ) )", "obj1": 0.442, "obj2": 0.39778597223260814}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( ( MUM - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.422, "obj2": 0.4162012772744075}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "Min( ( FirstVNF_Mem_Server - MRS ) ,( DDR * RRS ) )", "choosing": "( ( RRSe + RCSe ) / ( MUC * ( MLU - ( Max( ( ( ( MUR + CS ) - DS ) - Min( MUR ,( RMSe * MLU ) ) ),( RMSe - ( MUC + MUC ) ) ) * Min( ( RRSe * ( DS / ( RRSe + MUC ) ) ) ,MUR ) ) ) ) )", "obj1": 0.94, "obj2": 0.04879128640368356}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "( ( CRS - Min( FirstVNF_Mem ,Const ) ) + ( ( PN - FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( MUM - MUR ) - ( MLU - CS ) ) - Min( MUC ,( ( Min( DS ,MUC ) - ( ( Max( MUR,DS ) + RCSe ) / ( DS * MUC ) ) ) + ( ( MUC * ( RMSe / ( MLU * MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.96, "obj2": 0.027568393377981736}, {"determining": "Min( Max( FirstVNF_Mem_Server,AMS ) ,Max( ( Max( PN,CRS ) + ( AMS / PN ) ),( Max( CRS,RRS ) + ( FirstVNF_CPU_Server + ARS ) ) ) )", "choosing": "Min( ( ( Min( MUM ,RMSe ) - MUC ) - ( CS + ( ( MUR / MUR ) - RRSe ) ) ) ,( MUR + MUM ) )", "obj1": 0.602, "obj2": 0.29739891876412783}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "Max( ( ( CRS / MDR ) * ( BR - ( MRS + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * ( MUM + MUM ) ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.58, "obj2": 0.2987935014687522}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}, {"determining": "Max( ( AMS * RRS ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( ( MUC - RCSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.39, "obj2": 0.4419324818973376}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5569713204590203}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( FirstVNF_CPU + ( ( ( RRS * Const ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( ( ( MUR - ( CS - Min( MUM ,MUM ) ) ) - MUR ) * ( MUC / Max( RMSe,( CS / ( MUM / Min( Max( Min( CS ,DS ),( MLU / MUM ) ) ,( ( MUM + DS ) + MUC ) ) ) ) ) ) )", "obj1": 0.344, "obj2": 0.46870031610482}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( Min( MDR ,( FirstVNF_Mem / MDR ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( MUR / RCSe ),( RMSe - Min( MUC ,CS ) ) )", "obj1": 0.866, "obj2": 0.1274277289042769}, {"determining": "( Min( ( FirstVNF_CPU - Max( ARS,FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( RCSe / MUC ),Max( CS,MLU ) ) ) ) )", "obj1": 0.884, "obj2": 0.1141328231758388}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),( ( ACS - FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.286, "obj2": 0.5134152168771517}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * DDR ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( CS * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) * ( Min( ( ( ( ( ( FirstVNF_CPU / Const ) * AMS ) + CRS ) + FirstVNF_Mem ) / ARS ) ,DDR ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( MLU - Min( RMSe ,RRSe ) ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,( MUM * MUC ) ),DS ) ) * Max( Max( RCSe,( ( MLU / DS ) + MUC ) ),RRSe ) ) + RRSe ) )", "obj1": 0.324, "obj2": 0.4732866237254989}, {"determining": "( ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,Max( Const,FirstVNF_RAM_Server ) ) ,( Const - ARS ) ) ) - ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( ( Max( RCSe,RRSe ) - ( CS / MUC ) ) * ( ( RCSe * DS ) + ( MUM * CS ) ) ) + ( ( ( MLU / CS ) + ( CS / MLU ) ) / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 0.93, "obj2": 0.06085591949208209}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) / ( FirstVNF_CPU_Server / DDR ) ) ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + MUC ) ) ) )", "obj1": 0.28, "obj2": 0.5201464887244047}, {"determining": "( ( Max( DDR,( FirstVNF_RAM_Server / PN ) ) + FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUR ,Min( ( ( ( RCSe + MUM ) * Max( ( CS / MUR ),( CS + MLU ) ) ) - ( MLU + MLU ) ) ,( Min( Max( ( MUC / RRSe ),MLU ) ,( MUC / RMSe ) ) * Max( CS,MLU ) ) ) ) / RCSe ),MUM )", "obj1": 0.888, "obj2": 0.09882930754779815}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( RRS + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + DS ) ) - ( CS - DS ) )", "obj1": 0.892, "obj2": 0.08829581144370142}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - ( MLU * RMSe ) )", "obj1": 0.91, "obj2": 0.07317386542418973}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.886, "obj2": 0.1097733149897476}, {"determining": "Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + ( RMSe / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.902, "obj2": 0.07841198514652367}, {"determining": "( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( MUC * ( RMSe * RRSe ) ) - ( RMSe - Min( MUC ,CS ) ) ) ) )", "obj1": 0.898, "obj2": 0.08172396977351745}, {"determining": "Min( ( DDR - ( FirstVNF_RAM - Min( Min( Min( FirstVNF_RAM_Server ,ARS ) ,FirstVNF_CPU ) ,( Const - ( FirstVNF_Mem - Max( ( AMS / FirstVNF_CPU_Server ),RRS ) ) ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( Max( ( DS + MUM ),( DS * RMSe ) ) + RCSe ) / ( MUC * ( ( ( ( CS / Min( MUC ,( MUR / RCSe ) ) ) / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - Min( DS ,RCSe ) ) ) ) ) - MUR ) ) )", "obj1": 0.918, "obj2": 0.06804542836091815}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( ( RRSe + ( Max( DS,RCSe ) * MLU ) ) + RCSe ) / ( MUC * ( MLU - MUR ) ) )", "obj1": 0.922, "obj2": 0.06594906775767988}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,MRS ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( ( Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) * RMSe ) * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( ( FirstVNF_RAM_Server - ( Max( ACS,( ARS - CRS ) ) - Const ) ) * CRS ) )", "choosing": "( Min( DS ,Min( Min( RRSe ,( RCSe - RCSe ) ) ,( CS + Max( MLU,MUM ) ) ) ) - ( ( RRSe * ( ( RRSe / Min( ( DS * ( MLU + MLU ) ) ,Min( RCSe ,( RMSe - RRSe ) ) ) ) / MUC ) ) / Min( ( CS - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * ( MRS + ( FirstVNF_CPU_Server * MRS ) ) ) - ( Min( RRS ,( ACS + FirstVNF_CPU_Server ) ) * CRS ) ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - ( MLU / DS ) ) - ( MUC / Max( Min( MUM ,( RMSe / MUM ) ),( ( ( DS - ( Min( MLU ,RMSe ) - ( RRSe * DS ) ) ) + ( Max( Max( MUC,MLU ),RRSe ) * MUC ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( ( ( BR + Max( Max( DDR,CRS ),( FirstVNF_RAM_Server / DDR ) ) ) / Min( Const ,( RRS - MRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( RRSe + Max( ( ( MUR + CS ) - CS ),RCSe ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - ( ( Max( FirstVNF_Mem,ACS ) / FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),( ( ( MUR + RCSe ) * DS ) - ( ( MUR * MUR ) * Min( ( MUM / MUM ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ARS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( Min( RRSe ,Min( CS ,( CS - MUC ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - ( ( ( ( AMS + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * CRS ) * ( ( FirstVNF_RAM / BR ) / FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe + ( ( ( MUR + RMSe ) / ( MLU / CS ) ) / Max( RCSe,MUC ) ) ) * ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,( RRS / ( FirstVNF_RAM_Server * ( RRS / Max( Max( ACS,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) ) ) ) * ( RRS - DDR ) )", "choosing": "( Max( MUR,( Max( Max( RMSe,DS ),MLU ) + CS ) ) * ( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( PN + CRS ) ) + ( MDR * Const ) )", "choosing": "( ( ( MLU - Max( ( RCSe * MUM ),( ( MUM * RCSe ) * RCSe ) ) ) * CS ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * CRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / PN ) - ( ( FirstVNF_Mem + PN ) / BR ) )", "choosing": "Max( Max( CS,CS ),( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( ( MUM - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * ( RRS - DDR ) )", "choosing": "( ( RMSe + MUM ) * ( MUC / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) )", "choosing": "( ( MUC / MUM ) - ( CS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ACS - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( MUM + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( ( RRS * FirstVNF_CPU_Server ),DDR ) ,MRS ),MRS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( ( MUR - Max( Min( MUC ,RRSe ),Min( RMSe ,DS ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU_Server / ( ( RRS * Const ) - ( AMS * CRS ) ) ) ) ) / Min( Max( Min( AMS ,FirstVNF_Mem ),( AMS + Const ) ) ,( ( CRS / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( RRSe * RCSe ) ) - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) + MRS ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( Min( MLU ,Max( DS,DS ) ) - Min( RRSe ,( ( MLU + Max( MLU,Max( RMSe,MLU ) ) ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( ( DDR - ARS ) ,CRS ) + ( ( MRS / MRS ) * FirstVNF_Mem_Server ) ) ,ACS ) - DDR ) - MRS ) / ( MDR + FirstVNF_RAM_Server ) ) / ( ( Min( MDR ,FirstVNF_RAM_Server ) - AMS ) + Max( AMS,AMS ) ) )", "choosing": "( ( Max( Max( MUR,( ( ( DS / MUR ) - MUR ) * ( ( RRSe / RRSe ) / MUR ) ) ),MUR ) * ( DS / MUC ) ) / ( DS / Min( ( ( MUR + RCSe ) * RCSe ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( Min( ( MRS - ARS ) ,CRS ) + MDR ) ,ACS ) - DDR ) - MRS ) / ( MDR + FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem - AMS ) + Max( AMS,AMS ) ) )", "choosing": "( ( Max( ( ( Max( MUC,RMSe ) + RCSe ) + ( RRSe / ( ( CS + RMSe ) * RCSe ) ) ),MUR ) * ( DS / MUC ) ) / ( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * Const ) - CRS ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - MLU ) - ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( ( FirstVNF_CPU_Server / MDR ) + MRS ) )", "choosing": "Max( Max( ( RCSe * Min( ( Max( MUC,RMSe ) * ( ( Max( MUM,RMSe ) * DS ) * ( ( MLU * RRSe ) + MLU ) ) ) ,MUR ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) - ARS ) - ( FirstVNF_CPU * BR ) )", "choosing": "( ( ( Min( RRSe ,Max( ( ( MLU * RCSe ) - RCSe ),Max( DS,RRSe ) ) ) - DS ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - RRS ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( ( RRSe + RCSe ) / ( MUC * ( MLU - MUR ) ) ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( Max( MUC,MUR ) + Min( RMSe ,MLU ) ) * Min( ( MLU + MUC ) ,Min( MUM ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * BR ) + Min( FirstVNF_Mem_Server ,ACS ) ) * ( RRS - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( Max( MUR,MLU ) + CS ) ) * ( RRSe + ( Max( MUC,MLU ) - ( RMSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( ( ( MRS + ( FirstVNF_CPU_Server * MRS ) ) - CRS ) ,Const ) * ( MDR + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Max( Max( MUC,MLU ),RRSe ) ) * RRSe ) ) ) )", "obj1": 0.716, "obj2": 0.18779197386349847}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "Max( ( ( ACS + FirstVNF_Mem ) * ( BR - ( ( ACS * FirstVNF_Mem ) + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * Max( Max( Max( DS,MUC ),MLU ),DS ) ) / CS ) + ( MUC / Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) ) ) - ( MUM * RRSe ) )", "obj1": 0.602, "obj2": 0.2835124857339188}, {"determining": "( DDR + ( MRS + AMS ) )", "choosing": "( ( ( ( ( Max( MUM,( RMSe * RCSe ) ) + MUM ) / ( CS - Min( RCSe ,Min( MUC ,MUC ) ) ) ) - MUR ) - ( MLU - CS ) ) - Min( ( ( ( Min( ( MUR - DS ) ,DS ) * ( Min( MUR ,( MUR + MUR ) ) - ( MUC + MLU ) ) ) * DS ) + Max( CS,CS ) ) ,CS ) )", "obj1": 0.826, "obj2": 0.13777579334798726}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "Min( ( BR - ( ( ( MDR / AMS ) + ( MDR - Const ) ) * AMS ) ) ,MDR )", "choosing": "( Max( Max( DS,MUM ),Max( ( Max( MUC,RRSe ) - Min( ( MUR + MUC ) ,RCSe ) ),MUR ) ) / ( ( RRSe * RMSe ) * CS ) )", "obj1": 0.622, "obj2": 0.24568626491837856}, {"determining": "( Min( ( ACS + FirstVNF_Mem ) ,Const ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.64, "obj2": 0.23305664292826295}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( ( FirstVNF_Mem_Server * MDR ) ,MRS ) * ( FirstVNF_RAM + BR ) ) ) ) ) )", "choosing": "( ( CS - Max( DS,MUC ) ) / ( DS - ( DS / DS ) ) )", "obj1": 0.102, "obj2": 0.69139229805659}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) + MRS ) - ( FirstVNF_RAM_Server + ( ( RRS + FirstVNF_Mem ) * BR ) ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( Min( MLU ,Min( RRSe ,Min( CS ,( CS - MUC ) ) ) ) - Min( RRSe ,( ( MLU + Max( MLU,Max( RMSe,MLU ) ) ) / RMSe ) ) ) )", "obj1": 0.866, "obj2": 0.12300999976821617}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( CRS * Min( Const ,MRS ) )", "choosing": "( ( MUR - MLU ) - ( ( ( MUM * RCSe ) * RCSe ) + MUM ) )", "obj1": 0.162, "obj2": 0.6465254663347569}, {"determining": "Max( ( ( FirstVNF_CPU + BR ) * AMS ),( Max( RRS,( ( ( AMS * FirstVNF_RAM ) + ( BR * ACS ) ) / ( ( FirstVNF_RAM - ARS ) - ( PN + DDR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM / CS ) + MLU ) - ( ( Min( MUR ,MUR ) + DS ) - Max( RRSe,MUM ) ) )", "obj1": 0.224, "obj2": 0.5809753002256594}, {"determining": "Max( ( ( CRS / MDR ) * ( BR - ( MRS + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * ( MUM + MUM ) ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.58, "obj2": 0.2987935014687522}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ( DDR + Min( PN ,Max( MRS,DDR ) ) ) ) / RRS ) * ( ACS * FirstVNF_Mem_Server ) ) + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( MUR,RRSe ) - ( CS - ( Min( RMSe ,DS ) - MUM ) ) )", "obj1": 0.442, "obj2": 0.39778597223260814}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "( Min( Max( MRS,FirstVNF_Mem ) ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( Max( CS,( ( RMSe + CS ) * ( RMSe * MUR ) ) ) / ( MUM * ( ( CS + ( ( MUR / MUR ) - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.072, "obj2": 0.7123689436492102}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.092, "obj2": 0.7106562276759059}, {"determining": "( ( CRS - Min( FirstVNF_Mem ,Const ) ) + ( ( PN - FirstVNF_RAM ) / MDR ) )", "choosing": "( ( ( MUM - MUR ) - ( MLU - CS ) ) - Min( MUC ,( ( Min( DS ,MUC ) - ( ( Max( MUR,DS ) + RCSe ) / ( DS * MUC ) ) ) + ( ( MUC * ( RMSe / ( MLU * MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.96, "obj2": 0.027568393377981736}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5569713204590203}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( ( MUM - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.422, "obj2": 0.4162012772744075}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( FirstVNF_CPU + ( ( ( RRS * Const ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( ( ( MUR - ( CS - Min( MUM ,MUM ) ) ) - MUR ) * ( MUC / Max( RMSe,( CS / ( MUM / Min( Max( Min( CS ,DS ),( MLU / MUM ) ) ,( ( MUM + DS ) + MUC ) ) ) ) ) ) )", "obj1": 0.344, "obj2": 0.46870031610482}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( Max( DDR,MRS ) / ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( MUR,CS ) - ( MLU + CS ) )", "obj1": 0.17, "obj2": 0.6330992095238708}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 0.988, "obj2": 0.009129363167374463}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "Min( ( DDR - ( ACS - PN ) ) ,( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) )", "choosing": "( MUR / ( MUC * ( ( RCSe / MUM ) - MUR ) ) )", "obj1": 0.944, "obj2": 0.0439141775678258}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),( ( ACS - FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.286, "obj2": 0.5134152168771517}, {"determining": "( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) * ( Min( ( ( ( ( ( FirstVNF_CPU / Const ) * AMS ) + CRS ) + FirstVNF_Mem ) / ARS ) ,DDR ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( MLU - Min( RMSe ,RRSe ) ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,( MUM * MUC ) ),DS ) ) * Max( Max( RCSe,( ( MLU / DS ) + MUC ) ),RRSe ) ) + RRSe ) )", "obj1": 0.324, "obj2": 0.4732866237254989}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * DDR ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( CS * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Min( ( FirstVNF_CPU - Max( ARS,FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( RCSe / MUC ),Max( CS,MLU ) ) ) ) )", "obj1": 0.884, "obj2": 0.1141328231758388}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( Min( MRS ,( DDR + ( Const / CRS ) ) ) ,( RRS - AMS ) ) )", "choosing": "( ( ( Max( CS,Max( MUR,RMSe ) ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.398, "obj2": 0.43746735502241996}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) / ( FirstVNF_CPU_Server / DDR ) ) ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + MUC ) ) ) )", "obj1": 0.28, "obj2": 0.5201464887244047}, {"determining": "( ( Max( DDR,( FirstVNF_RAM_Server / PN ) ) + FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUR ,Min( ( ( ( RCSe + MUM ) * Max( ( CS / MUR ),( CS + MLU ) ) ) - ( MLU + MLU ) ) ,( Min( Max( ( MUC / RRSe ),MLU ) ,( MUC / RMSe ) ) * Max( CS,MLU ) ) ) ) / RCSe ),MUM )", "obj1": 0.888, "obj2": 0.09882930754779815}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( RRS + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + DS ) ) - ( CS - DS ) )", "obj1": 0.892, "obj2": 0.08829581144370142}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) - AMS ) ) )", "choosing": "( ( ( ( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ) - RMSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.416, "obj2": 0.4207124223862402}, {"determining": "( ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,Max( Const,FirstVNF_RAM_Server ) ) ,( Const - ARS ) ) ) - ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( ( Max( RCSe,RRSe ) - ( CS / MUC ) ) * ( ( RCSe * DS ) + ( MUM * CS ) ) ) + ( ( ( MLU / CS ) + ( CS / MLU ) ) / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 0.93, "obj2": 0.06085591949208209}, {"determining": "( ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) - ( AMS + MRS ) )", "choosing": "Max( Max( ( RCSe * ( DS * RMSe ) ),( MUM * ( MLU - ( Max( CS,DS ) + CS ) ) ) ),( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 0.938, "obj2": 0.0566384533199538}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.886, "obj2": 0.1097733149897476}, {"determining": "Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + ( RMSe / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.902, "obj2": 0.07841198514652367}, {"determining": "( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( MUC * ( RMSe * RRSe ) ) - ( RMSe - Min( MUC ,CS ) ) ) ) )", "obj1": 0.898, "obj2": 0.08172396977351745}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( ( RRSe + ( Max( DS,RCSe ) * MLU ) ) + RCSe ) / ( MUC * ( MLU - MUR ) ) )", "obj1": 0.922, "obj2": 0.06594906775767988}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( ( ( FirstVNF_CPU_Server - ( CRS / FirstVNF_Mem ) ) - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) * BR ) ) * ( RRS - AMS ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( ( MUR * ( Max( RMSe,DS ) / ( RCSe + RRSe ) ) ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 0.996, "obj2": 0.002396034518865476}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - ( MLU * RMSe ) )", "obj1": 0.91, "obj2": 0.07317386542418973}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),( ( MRS + PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.386, "obj2": 0.442598777834677}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "Max( ( AMS * RRS ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( ( MUC - RCSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.39, "obj2": 0.4419324818973376}, {"determining": "Min( ( FirstVNF_Mem_Server - MRS ) ,( DDR * RRS ) )", "choosing": "( ( RRSe + RCSe ) / ( MUC * ( MLU - ( Max( ( ( ( MUR + CS ) - DS ) - Min( MUR ,( RMSe * MLU ) ) ),( RMSe - ( MUC + MUC ) ) ) * Min( ( RRSe * ( DS / ( RRSe + MUC ) ) ) ,MUR ) ) ) ) )", "obj1": 0.94, "obj2": 0.04879128640368356}, {"determining": "Min( ( DDR - ( FirstVNF_RAM - Min( Min( Min( FirstVNF_RAM_Server ,ARS ) ,FirstVNF_CPU ) ,( Const - ( FirstVNF_Mem - Max( ( AMS / FirstVNF_CPU_Server ),RRS ) ) ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( Max( ( DS + MUM ),( DS * RMSe ) ) + RCSe ) / ( MUC * ( ( ( ( CS / Min( MUC ,( MUR / RCSe ) ) ) / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - Min( DS ,RCSe ) ) ) ) ) - MUR ) ) )", "obj1": 0.918, "obj2": 0.06804542836091815}, {"determining": "( DDR + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - Min( Max( RRSe,MUM ) ,CS ) )", "obj1": 0.914, "obj2": 0.07163248631945275}, {"determining": "Min( ( DDR - ( ACS - PN ) ) ,( ( Min( ( Min( ( DDR - ARS ) ,CRS ) + ( ( MRS / MRS ) * FirstVNF_Mem_Server ) ) ,ACS ) - DDR ) * RRS ) )", "choosing": "( ( RRSe + RCSe ) / ( MUC * ( ( RCSe / MUM ) - Min( ( ( MUR + RCSe ) * RCSe ) ,RMSe ) ) ) )", "obj1": 0.942, "obj2": 0.04664449144907129}, {"determining": "( Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,MRS ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( ( Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) * RMSe ) * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( ( FirstVNF_RAM_Server - ( Max( ACS,( ARS - CRS ) ) - Const ) ) * CRS ) )", "choosing": "( Min( DS ,Min( Min( RRSe ,( RCSe - RCSe ) ) ,( CS + Max( MLU,MUM ) ) ) ) - ( ( RRSe * ( ( RRSe / Min( ( DS * ( MLU + MLU ) ) ,Min( RCSe ,( RMSe - RRSe ) ) ) ) / MUC ) ) / Min( ( CS - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * ( MRS + ( FirstVNF_CPU_Server * MRS ) ) ) - ( Min( RRS ,( ACS + FirstVNF_CPU_Server ) ) * CRS ) ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - ( MLU / DS ) ) - ( MUC / Max( Min( MUM ,( RMSe / MUM ) ),( ( ( DS - ( Min( MLU ,RMSe ) - ( RRSe * DS ) ) ) + ( Max( Max( MUC,MLU ),RRSe ) * MUC ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( ( ( BR + Max( Max( DDR,CRS ),( FirstVNF_RAM_Server / DDR ) ) ) / Min( Const ,( RRS - MRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( RRSe + Max( ( ( MUR + CS ) - CS ),RCSe ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - ( ( Max( FirstVNF_Mem,ACS ) / FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),( ( ( MUR + RCSe ) * DS ) - ( ( MUR * MUR ) * Min( ( MUM / MUM ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ARS ) - ( ( RRS + FirstVNF_Mem ) * BR ) )", "choosing": "( ( ( Min( RRSe ,Min( CS ,( CS - MUC ) ) ) - DS ) + RMSe ) + Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - ( ( ( ( AMS + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * CRS ) * ( ( FirstVNF_RAM / BR ) / FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe + ( ( ( MUR + RMSe ) / ( MLU / CS ) ) / Max( RCSe,MUC ) ) ) * ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,FirstVNF_Mem ) + Min( FirstVNF_Mem_Server ,( RRS / ( FirstVNF_RAM_Server * ( RRS / Max( Max( ACS,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ) ) ) ) * ( RRS - DDR ) )", "choosing": "( Max( MUR,( Max( Max( RMSe,DS ),MLU ) + CS ) ) * ( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( PN + CRS ) ) + ( MDR * Const ) )", "choosing": "( ( ( MLU - Max( ( RCSe * MUM ),( ( MUM * RCSe ) * RCSe ) ) ) * CS ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * CRS ) - Min( FirstVNF_CPU_Server ,DDR ) ) / PN ) - ( ( FirstVNF_Mem + PN ) / BR ) )", "choosing": "Max( Max( CS,CS ),( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( ( MUM - MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( ( ( MRS + ( FirstVNF_CPU_Server * MRS ) ) - CRS ) ,Const ) * ( MDR + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Max( Max( MUC,MLU ),RRSe ) ) * RRSe ) ) ) )", "obj1": 0.716, "obj2": 0.18779197386349847}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "Max( ( ( ACS + FirstVNF_Mem ) * ( BR - ( ( ACS * FirstVNF_Mem ) + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * Max( Max( Max( DS,MUC ),MLU ),DS ) ) / CS ) + ( MUC / Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) ) ) - ( MUM * RRSe ) )", "obj1": 0.602, "obj2": 0.2835124857339188}, {"determining": "( DDR + ( MRS + AMS ) )", "choosing": "( ( ( ( ( Max( MUM,( RMSe * RCSe ) ) + MUM ) / ( CS - Min( RCSe ,Min( MUC ,MUC ) ) ) ) - MUR ) - ( MLU - CS ) ) - Min( ( ( ( Min( ( MUR - DS ) ,DS ) * ( Min( MUR ,( MUR + MUR ) ) - ( MUC + MLU ) ) ) * DS ) + Max( CS,CS ) ) ,CS ) )", "obj1": 0.826, "obj2": 0.13777579334798726}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "Min( ( BR - ( ( ( MDR / AMS ) + ( MDR - Const ) ) * AMS ) ) ,MDR )", "choosing": "( Max( Max( DS,MUM ),Max( ( Max( MUC,RRSe ) - Min( ( MUR + MUC ) ,RCSe ) ),MUR ) ) / ( ( RRSe * RMSe ) * CS ) )", "obj1": 0.622, "obj2": 0.24568626491837856}, {"determining": "( Min( ( ACS + FirstVNF_Mem ) ,Const ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.64, "obj2": 0.23305664292826295}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( CRS * Min( Const ,MRS ) )", "choosing": "( ( MUR - MLU ) - ( ( ( MUM * RCSe ) * RCSe ) + MUM ) )", "obj1": 0.162, "obj2": 0.6465254663347569}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) + MRS ) - ( FirstVNF_RAM_Server + ( ( RRS + FirstVNF_Mem ) * BR ) ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( Min( MLU ,Min( RRSe ,Min( CS ,( CS - MUC ) ) ) ) - Min( RRSe ,( ( MLU + Max( MLU,Max( RMSe,MLU ) ) ) / RMSe ) ) ) )", "obj1": 0.866, "obj2": 0.12300999976821617}, {"determining": "Max( ( ( CRS / MDR ) * ( BR - ( MRS + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * ( MUM + MUM ) ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.58, "obj2": 0.2987935014687522}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.94, "obj2": 0.022632220163222132}, {"determining": "( ( ( ( FirstVNF_RAM_Server / ( DDR + Min( PN ,Max( MRS,DDR ) ) ) ) / RRS ) * ( ACS * FirstVNF_Mem_Server ) ) + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( MUR,RRSe ) - ( CS - ( Min( RMSe ,DS ) - MUM ) ) )", "obj1": 0.442, "obj2": 0.39778597223260814}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "( Min( Max( MRS,FirstVNF_Mem ) ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( Max( CS,( ( RMSe + CS ) * ( RMSe * MUR ) ) ) / ( MUM * ( ( CS + ( ( MUR / MUR ) - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.072, "obj2": 0.7123689436492102}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.678, "obj2": 0.20838759890232952}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( ( FirstVNF_Mem_Server * MDR ) ,MRS ) * ( FirstVNF_RAM + BR ) ) ) ) ) )", "choosing": "( ( CS - Max( DS,MUC ) ) / ( DS - ( DS / DS ) ) )", "obj1": 0.102, "obj2": 0.69139229805659}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.938, "obj2": 0.052552152829266806}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( PN + CRS ) ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( ( RMSe / CS ) + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.104, "obj2": 0.6736713823037547}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,( FirstVNF_RAM - ( RRS - Min( MRS ,BR ) ) ) ) * ( BR - CRS ) ) ),( DDR / ( BR + ( RRS + ( ( MDR + CRS ) - ( FirstVNF_RAM_Server * BR ) ) ) ) ) ) )", "choosing": "( ( ( MUC / ( Min( RRSe ,RCSe ) - MLU ) ) - ( MUR + DS ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.206, "obj2": 0.5827200697112028}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.092, "obj2": 0.7106562276759059}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + FirstVNF_Mem )", "choosing": "( ( RRSe * RCSe ) - ( ( CS + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.42, "obj2": 0.41467948256209447}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( ( MDR - Const ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - ( MUC / RMSe ) )", "obj1": 0.214, "obj2": 0.5668252553726358}, {"determining": "( Max( DDR,MRS ) / ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( Max( MUR,CS ) - ( MLU + CS ) )", "obj1": 0.17, "obj2": 0.6330992095238708}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 0.988, "obj2": 0.009129363167374463}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5569713204590203}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( FirstVNF_CPU + ( ( ( RRS * Const ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( ( ( MUR - ( CS - Min( MUM ,MUM ) ) ) - MUR ) * ( MUC / Max( RMSe,( CS / ( MUM / Min( Max( Min( CS ,DS ),( MLU / MUM ) ) ,( ( MUM + DS ) + MUC ) ) ) ) ) ) )", "obj1": 0.344, "obj2": 0.46870031610482}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),( ( ACS - FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.286, "obj2": 0.5134152168771517}, {"determining": "( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) * ( Min( ( ( ( ( ( FirstVNF_CPU / Const ) * AMS ) + CRS ) + FirstVNF_Mem ) / ARS ) ,DDR ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( MLU - Min( RMSe ,RRSe ) ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,( MUM * MUC ) ),DS ) ) * Max( Max( RCSe,( ( MLU / DS ) + MUC ) ),RRSe ) ) + RRSe ) )", "obj1": 0.324, "obj2": 0.4732866237254989}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * DDR ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( CS * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( MDR - FirstVNF_RAM ) ) ,( Max( DDR,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) / ( FirstVNF_CPU_Server / DDR ) ) ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + MUC ) ) ) )", "obj1": 0.28, "obj2": 0.5201464887244047}, {"determining": "( ( Max( DDR,( FirstVNF_RAM_Server / PN ) ) + FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUR ,Min( ( ( ( RCSe + MUM ) * Max( ( CS / MUR ),( CS + MLU ) ) ) - ( MLU + MLU ) ) ,( Min( Max( ( MUC / RRSe ),MLU ) ,( MUC / RMSe ) ) * Max( CS,MLU ) ) ) ) / RCSe ),MUM )", "obj1": 0.888, "obj2": 0.09882930754779815}, {"determining": "( ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,Max( Const,FirstVNF_RAM_Server ) ) ,( Const - ARS ) ) ) - ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( ( Max( RCSe,RRSe ) - ( CS / MUC ) ) * ( ( RCSe * DS ) + ( MUM * CS ) ) ) + ( ( ( MLU / CS ) + ( CS / MLU ) ) / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 0.93, "obj2": 0.06085591949208209}, {"determining": "( RRS + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + DS ) ) - ( CS - DS ) )", "obj1": 0.892, "obj2": 0.08829581144370142}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.886, "obj2": 0.1097733149897476}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) - AMS ) ) )", "choosing": "( ( ( ( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ) - RMSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.416, "obj2": 0.4207124223862402}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * FirstVNF_Mem ) * ( FirstVNF_RAM + BR ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( MUC + RMSe ) ) ) + DS ) / ( ( ( CS / Min( RRSe ,DS ) ) + RRSe ) - ( DS / DS ) ) )", "obj1": 0.402, "obj2": 0.43523930425739504}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( ( RRSe + ( Max( DS,RCSe ) * MLU ) ) + RCSe ) / ( MUC * ( MLU - MUR ) ) )", "obj1": 0.922, "obj2": 0.06594906775767988}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( ( ( FirstVNF_CPU_Server - ( CRS / FirstVNF_Mem ) ) - FirstVNF_RAM ) ,FirstVNF_RAM_Server ) * BR ) ) * ( RRS - AMS ) )", "choosing": "Max( ( ( ( ( ( RRSe / MUM ) * MUR ) / Min( ( MUR * ( Max( RMSe,DS ) / ( RCSe + RRSe ) ) ) ,RMSe ) ) * ( RRSe - MUM ) ) + RMSe ),( ( CS - MUR ) + Max( MUR,RRSe ) ) )", "obj1": 0.996, "obj2": 0.002396034518865476}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - ( MLU * RMSe ) )", "obj1": 0.91, "obj2": 0.07317386542418973}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),( ( MRS + PN ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.386, "obj2": 0.442598777834677}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + ( RMSe / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.902, "obj2": 0.07841198514652367}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.898, "obj2": 0.08109850789922408}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "Min( ( DDR - ( FirstVNF_RAM - Min( Min( Min( FirstVNF_RAM_Server ,ARS ) ,FirstVNF_CPU ) ,( Const - ( FirstVNF_Mem - Max( ( AMS / FirstVNF_CPU_Server ),RRS ) ) ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( Max( ( DS + MUM ),( DS * RMSe ) ) + RCSe ) / ( MUC * ( ( ( ( CS / Min( MUC ,( MUR / RCSe ) ) ) / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - Min( DS ,RCSe ) ) ) ) ) - MUR ) ) )", "obj1": 0.918, "obj2": 0.06804542836091815}, {"determining": "( DDR + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - Min( Max( RRSe,MUM ) ,CS ) )", "obj1": 0.914, "obj2": 0.07163248631945275}, {"determining": "Max( ( ( FirstVNF_CPU + BR ) * AMS ),( Max( RRS,( ( ( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) ) + ( BR * ACS ) ) / ( ( FirstVNF_RAM - ARS ) - ( PN + DDR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) ) / CS ) + MLU ) - ( ( Min( MUR ,MUR ) + DS ) - Max( RRSe,MUM ) ) )", "obj1": 0.394, "obj2": 0.4390006092952621}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( Min( MRS ,( DDR + ( Const / CRS ) ) ) ,( RRS - AMS ) ) )", "choosing": "( ( ( Max( CS,Max( MUR,RMSe ) ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.398, "obj2": 0.43746735502241996}, {"determining": "Max( ( AMS * RRS ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( ( MUC - RCSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.39, "obj2": 0.4419324818973376}, {"determining": "( Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,MRS ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,FirstVNF_CPU_Server ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * BR ) ) * Min( ARS ,FirstVNF_Mem ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MUC * CS ) ) - Min( ( CS - MLU ) ,( ( Min( Min( ( ( MUM * MUM ) / Min( MUR ,MUR ) ) ,MUC ) ,RMSe ) * RMSe ) * MUM ) ) )", "obj1": 0.382, "obj2": 0.4516691163185002}, {"determining": "Max( ( ( ACS + FirstVNF_Mem ) * ( BR - MDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * ( ( MUM * RCSe ) * RCSe ) ) / CS ) + ( MUC / Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) ) ) - ( MUM * RRSe ) )", "obj1": 0.9, "obj2": 0.08044633913413712}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( ( FirstVNF_RAM_Server - ( Max( ACS,( ARS - CRS ) ) - Const ) ) * CRS ) )", "choosing": "( Min( DS ,Min( Min( RRSe ,( RCSe - RCSe ) ) ,( CS + Max( MLU,MUM ) ) ) ) - ( ( RRSe * ( ( RRSe / Min( ( DS * ( MLU + MLU ) ) ,Min( RCSe ,( RMSe - RRSe ) ) ) ) / MUC ) ) / Min( ( CS - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * ( MRS + ( FirstVNF_CPU_Server * MRS ) ) ) - ( Min( RRS ,( ACS + FirstVNF_CPU_Server ) ) * CRS ) ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - ( MLU / DS ) ) - ( MUC / Max( Min( MUM ,( RMSe / MUM ) ),( ( ( DS - ( Min( MLU ,RMSe ) - ( RRSe * DS ) ) ) + ( Max( Max( MUC,MLU ),RRSe ) * MUC ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( ( ( BR + Max( Max( DDR,CRS ),( FirstVNF_RAM_Server / DDR ) ) ) / Min( Const ,( RRS - MRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,( RRSe + Max( ( ( MUR + CS ) - CS ),RCSe ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( FirstVNF_RAM_Server / PN ) ) - ( ( Max( FirstVNF_Mem,ACS ) / FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( ( Min( ( ( RMSe + MLU ) / Max( MUR,MUC ) ) ,( Min( MUC ,CS ) + ( RMSe + RCSe ) ) ) + ( Max( Min( MLU ,MLU ),( DS / CS ) ) - ( Min( RRSe ,RMSe ) * ( MUC - MUC ) ) ) ) - RRSe ) ) ),( ( ( MUR + RCSe ) * DS ) - ( ( MUR * MUR ) * Min( ( MUM / MUM ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( ( FirstVNF_RAM + AMS ) - ( BR / AMS ) ) / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Max( Min( MLU ,CS ),Min( MUR ,MUR ) ) ,( Min( MUC ,RRSe ) * ( DS - RRSe ) ) ),Min( ( ( RMSe * CS ) / ( ( RRSe * ( MLU / MLU ) ) - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( ( ARS + BR ) / Min( ( FirstVNF_CPU * ( ARS + MRS ) ) ,CRS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,( ( Max( MUR,MUC ) * RCSe ) * DS ) ) ) ) - MLU )", "obj1": 0.16, "obj2": 0.6217710470596215}, {"determining": "Max( ( ( ACS + FirstVNF_Mem ) * ( BR - ( ( ACS * FirstVNF_Mem ) + MRS ) ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( ( Min( MUC ,MUR ) * Max( Max( Max( DS,MUC ),MLU ),DS ) ) / CS ) + ( MUC / Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,MUC ) ) ) - ( MUM * RRSe ) )", "obj1": 0.602, "obj2": 0.2835124857339188}, {"determining": "( DDR + ( MRS + AMS ) )", "choosing": "( ( ( ( ( Max( MUM,( RMSe * RCSe ) ) + MUM ) / ( CS - Min( RCSe ,Min( MUC ,MUC ) ) ) ) - MUR ) - ( MLU - CS ) ) - Min( ( ( ( Min( ( MUR - DS ) ,DS ) * ( Min( MUR ,( MUR + MUR ) ) - ( MUC + MLU ) ) ) * DS ) + Max( CS,CS ) ) ,CS ) )", "obj1": 0.826, "obj2": 0.13777579334798726}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "Min( ( BR - ( ( ( MDR / AMS ) + ( MDR - Const ) ) * AMS ) ) ,MDR )", "choosing": "( Max( Max( DS,MUM ),Max( ( Max( MUC,RRSe ) - Min( ( MUR + MUC ) ,RCSe ) ),MUR ) ) / ( ( RRSe * RMSe ) * CS ) )", "obj1": 0.622, "obj2": 0.24568626491837856}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.64, "obj2": 0.23208558088523673}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "( ( ( ARS * FirstVNF_CPU_Server ) + MRS ) - ( FirstVNF_RAM_Server + ( ( RRS + FirstVNF_Mem ) * BR ) ) )", "choosing": "Max( Max( ( RCSe * MUM ),( Max( MUR,RRSe ) * ( CS / MLU ) ) ),( Min( MLU ,Min( RRSe ,Min( CS ,( CS - MUC ) ) ) ) - Min( RRSe ,( ( MLU + Max( MLU,Max( RMSe,MLU ) ) ) / RMSe ) ) ) )", "obj1": 0.866, "obj2": 0.12300999976821617}, {"determining": "Min( ( BR - CRS ) ,MDR )", "choosing": "( ( ( MUM + CS ) / ( DS * Max( Min( CS ,MUC ),CS ) ) ) / ( ( RRSe * RMSe ) * CS ) )", "obj1": 0.566, "obj2": 0.2872221944799941}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.94, "obj2": 0.022632220163222132}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.678, "obj2": 0.20838759890232952}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.438, "obj2": 0.3887896040419869}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + FirstVNF_Mem )", "choosing": "( ( RRSe * RCSe ) - ( ( CS + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.42, "obj2": 0.41467948256209447}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( ( FirstVNF_Mem_Server * MDR ) ,MRS ) * ( FirstVNF_RAM + BR ) ) ) ) ) )", "choosing": "( ( CS - Max( DS,MUC ) ) / ( DS - ( DS / DS ) ) )", "obj1": 0.102, "obj2": 0.69139229805659}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( PN + CRS ) ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( ( RMSe / CS ) + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.104, "obj2": 0.6736713823037547}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,( FirstVNF_RAM - ( RRS - Min( MRS ,BR ) ) ) ) * ( BR - CRS ) ) ),( DDR / ( BR + ( RRS + ( ( MDR + CRS ) - ( FirstVNF_RAM_Server * BR ) ) ) ) ) ) )", "choosing": "( ( ( MUC / ( Min( RRSe ,RCSe ) - MLU ) ) - ( MUR + DS ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.206, "obj2": 0.5827200697112028}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.938, "obj2": 0.052552152829266806}, {"determining": "Max( ( ( FirstVNF_CPU + BR ) * AMS ),( Max( RRS,( ( ( Min( MRS ,Const ) * ( RRS - FirstVNF_Mem ) ) + ( BR * ACS ) ) / ( ( FirstVNF_RAM - ARS ) - ( PN + DDR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RMSe + MUM ) * ( RRSe + ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) ) / CS ) + MLU ) - ( ( Min( MUR ,MUR ) + DS ) - Max( RRSe,MUM ) ) )", "obj1": 0.394, "obj2": 0.4390006092952621}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.092, "obj2": 0.7106562276759059}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( ( MDR - Const ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - ( MUC / RMSe ) )", "obj1": 0.214, "obj2": 0.5668252553726358}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + MUR ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.072, "obj2": 0.7122977220901073}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5569713204590203}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 0.988, "obj2": 0.009129363167374463}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) * ( Min( ( ( ( ( ( FirstVNF_CPU / Const ) * AMS ) + CRS ) + FirstVNF_Mem ) / ARS ) ,DDR ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( MLU - Min( RMSe ,RRSe ) ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,( MUM * MUC ) ),DS ) ) * Max( Max( RCSe,( ( MLU / DS ) + MUC ) ),RRSe ) ) + RRSe ) )", "obj1": 0.324, "obj2": 0.4732866237254989}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( FirstVNF_CPU + ( ( ( RRS * Const ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( ( ( MUR - ( CS - Min( MUM ,MUM ) ) ) - MUR ) * ( MUC / Max( RMSe,( CS / ( MUM / Min( Max( Min( CS ,DS ),( MLU / MUM ) ) ,( ( MUM + DS ) + MUC ) ) ) ) ) ) )", "obj1": 0.344, "obj2": 0.46870031610482}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( ( Max( DDR,( FirstVNF_RAM_Server / PN ) ) + FirstVNF_Mem ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( MUR ,Min( ( ( ( RCSe + MUM ) * Max( ( CS / MUR ),( CS + MLU ) ) ) - ( MLU + MLU ) ) ,( Min( Max( ( MUC / RRSe ),MLU ) ,( MUC / RMSe ) ) * Max( CS,MLU ) ) ) ) / RCSe ),MUM )", "obj1": 0.888, "obj2": 0.09882930754779815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( DDR - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / RCSe ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.272, "obj2": 0.5174675278062487}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Min( ( FirstVNF_CPU - Min( CRS ,FirstVNF_Mem ) ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( MLU - DS ) * MUM ) ) / ( RRSe + RRSe ) ) - ( RCSe * MUR ) ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.892, "obj2": 0.08663113722358057}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( MUR / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.886, "obj2": 0.1097733149897476}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) - AMS ) ) )", "choosing": "( ( ( ( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ) - RMSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.416, "obj2": 0.4207124223862402}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) )", "choosing": "( Max( MUC,MUR ) * ( MUC / DS ) )", "obj1": 0.398, "obj2": 0.4328605292877994}, {"determining": "( ( ( Min( DDR ,MDR ) - ( Min( ACS ,( Const / ( ARS - ( AMS - FirstVNF_RAM ) ) ) ) - DDR ) ) / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( Min( Min( ( DS - MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) - Min( Min( MUC ,RCSe ) ,RCSe ) )", "obj1": 0.29, "obj2": 0.5107247946186779}, {"determining": "Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),( ( ACS - FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.286, "obj2": 0.5134152168771517}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.074, "obj2": 0.7109989293227621}, {"determining": "( ( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.444, "obj2": 0.38138735009899716}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( ( RRSe + ( Max( DS,RCSe ) * MLU ) ) + RCSe ) / ( MUC * ( MLU - MUR ) ) )", "obj1": 0.922, "obj2": 0.06594906775767988}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - ( MLU * RMSe ) )", "obj1": 0.91, "obj2": 0.07317386542418973}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ( ( ( ( AMS - DDR ) + CRS ) * DDR ) - Min( MRS ,( ( BR + FirstVNF_CPU_Server ) + ( Const / CRS ) ) ) ) ) - FirstVNF_RAM_Server ) + RRS ) * ( ( Max( FirstVNF_RAM,BR ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( RRSe - ( Min( ( ( MUC * MUC ) - Max( MUC,RRSe ) ) ,Max( CS,MUC ) ) - MUC ) ) * ( Max( CS,Max( Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) ),RMSe ) ) / CS ) )", "obj1": 0.348, "obj2": 0.4613768656921263}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "( ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,Max( Const,FirstVNF_RAM_Server ) ) ,( Const - ARS ) ) ) - ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( ( Max( RCSe,RRSe ) - ( CS / MUC ) ) * ( ( RCSe * DS ) + ( MUM * CS ) ) ) + ( ( ( MLU / CS ) + ( CS / MLU ) ) / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 0.93, "obj2": 0.06085591949208209}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR * ( Min( ( FirstVNF_RAM_Server + DDR ) ,MRS ) * AMS ) ) ) ) ,Const ) * ( BR + MDR ) )", "choosing": "( ( ( RMSe * MUR ) - ( DS * RCSe ) ) * ( ( ( CS / MUC ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - MLU ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.934, "obj2": 0.05993458075602374}, {"determining": "Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + ( RMSe / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.902, "obj2": 0.07841198514652367}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.898, "obj2": 0.08109850789922408}, {"determining": "Min( ( DDR - ( FirstVNF_RAM - Min( Min( Min( FirstVNF_RAM_Server ,ARS ) ,FirstVNF_CPU ) ,( Const - ( FirstVNF_Mem - Max( ( AMS / FirstVNF_CPU_Server ),RRS ) ) ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( Max( ( DS + MUM ),( DS * RMSe ) ) + RCSe ) / ( MUC * ( ( ( ( CS / Min( MUC ,( MUR / RCSe ) ) ) / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - Min( DS ,RCSe ) ) ) ) ) - MUR ) ) )", "obj1": 0.918, "obj2": 0.06804542836091815}, {"determining": "( DDR + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - Min( Max( RRSe,MUM ) ,CS ) )", "obj1": 0.914, "obj2": 0.07163248631945275}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Min( ( FirstVNF_CPU / Min( FirstVNF_Mem ,RRS ) ) ,Const ) * ( ( DDR + ( FirstVNF_Mem / MDR ) ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( Min( ( DS + MUR ) ,RCSe ) * DS ) + ( RMSe - ( Min( RCSe ,DS ) * CS ) ) ) )", "obj1": 0.26, "obj2": 0.5235467738749404}, {"determining": "( RRS + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( ( Min( MRS ,Const ) * ( Max( MRS,BR ) - DDR ) ),FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( ( MUC / MUC ) - ( MUR + DS ) ) - ( CS - DS ) )", "obj1": 0.9, "obj2": 0.07954554976171173}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) - Max( ( Max( PN,DDR ) * ( MRS / FirstVNF_CPU ) ),Max( ( FirstVNF_Mem * DDR ),Min( RRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( Min( ( RMSe + DS ) ,Min( MUM ,RCSe ) ) * ( ( RCSe / MUR ) + ( MUM - MUC ) ) ),Min( ( Min( DS ,DS ) / ( RRSe + DS ) ) ,( Max( DS,RCSe ) - ( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_CPU ) - ( ( ( BR + ( DDR / Const ) ) / CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( RRSe,Max( Max( CS,RCSe ),( MUC * MLU ) ) ) * Max( CS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) * Max( ( FirstVNF_CPU_Server - Const ),Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( MRS + Const ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) / Max( ( ( PN + PN ) * Const ),( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( Max( RMSe,RRSe ) - RMSe ) / RCSe ) ,( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,AMS ) - Min( Const ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Min( ( ( RMSe * Max( ( CS * ( MUR / RRSe ) ),CS ) ) / ( MLU - CS ) ) ,( ( MUR + DS ) / ( CS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * Const ) - ( ( FirstVNF_RAM_Server - ( Max( ACS,( ARS - CRS ) ) - Const ) ) * CRS ) )", "choosing": "( Min( DS ,Min( Min( RRSe ,( RCSe - RCSe ) ) ,( CS + Max( MLU,MUM ) ) ) ) - ( ( RRSe * ( ( RRSe / Min( ( DS * ( MLU + MLU ) ) ,Min( RCSe ,( RMSe - RRSe ) ) ) ) / MUC ) ) / Min( ( CS - MUM ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( ( RRS * ( MRS + ( FirstVNF_CPU_Server * MRS ) ) ) - ( Min( RRS ,( ACS + FirstVNF_CPU_Server ) ) * CRS ) ) ) * Min( Const ,MRS ) )", "choosing": "( ( MUR - ( MLU / DS ) ) - ( MUC / Max( Min( MUM ,( RMSe / MUM ) ),( ( ( DS - ( Min( MLU ,RMSe ) - ( RRSe * DS ) ) ) + ( Max( Max( MUC,MLU ),RRSe ) * MUC ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.614, "obj2": 0.24132999143268277}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.584, "obj2": 0.27283454634152593}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.64, "obj2": 0.23208558088523673}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "( DDR + ( MRS + AMS ) )", "choosing": "( ( ( ( ( Max( MUM,( RMSe * RCSe ) ) + MUM ) / ( CS - Min( RCSe ,Min( MUC ,MUC ) ) ) ) - MUR ) - ( MLU - CS ) ) - Min( ( ( ( Min( ( MUR - DS ) ,DS ) * ( Min( MUR ,( MUR + MUR ) ) - ( MUC + MLU ) ) ) * DS ) + Max( CS,CS ) ) ,CS ) )", "obj1": 0.826, "obj2": 0.13777579334798726}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.94, "obj2": 0.022632220163222132}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * MUC )", "obj1": 0.688, "obj2": 0.18135049647123946}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "Max( ( ( CRS / MDR ) * AMS ),( Max( RRS,FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUC / ( RCSe - ( MUR - ( MLU - ( Max( CS,DS ) + CS ) ) ) ) ) ) - ( MUM * RRSe ) )", "obj1": 0.176, "obj2": 0.6172725488320728}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( ( ARS + BR ) / Min( ( FirstVNF_CPU * ( ARS + MRS ) ) ,CRS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,( ( Max( MUR,MUC ) * RCSe ) * DS ) ) ) ) - MLU )", "obj1": 0.16, "obj2": 0.6217710470596215}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,( FirstVNF_RAM - ( RRS - Min( MRS ,BR ) ) ) ) * ( BR - CRS ) ) ),( DDR / ( BR + ( RRS + ( ( MDR + CRS ) - ( FirstVNF_RAM_Server * BR ) ) ) ) ) ) )", "choosing": "( ( ( MUC / ( Min( RRSe ,RCSe ) - MLU ) ) - ( MUR + DS ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.206, "obj2": 0.5827200697112028}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( PN + CRS ) ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( ( RMSe / CS ) + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.104, "obj2": 0.6736713823037547}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.938, "obj2": 0.052552152829266806}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( FirstVNF_Mem / MDR ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + MUR ) / ( DS * Max( Min( CS ,MUC ),( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.7087780484881967}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( BR - CRS ) ,MDR )", "choosing": "( ( ( MUM + CS ) / ( DS * Max( Min( CS ,MUC ),CS ) ) ) / ( ( RRSe * RMSe ) * CS ) )", "obj1": 0.566, "obj2": 0.2872221944799941}, {"determining": "( ( ( ( BR - CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( Min( MUR ,RRSe ) + RMSe ) ) ) )", "obj1": 0.422, "obj2": 0.3962885947275446}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( ( Max( FirstVNF_RAM,BR ) * ( RRS + FirstVNF_Mem ) ) + ( FirstVNF_CPU + AMS ) ) ),RRS ) ) * ARS )", "choosing": "( Max( Max( DS,MUM ),Max( DS,MUR ) ) / ( DS * Max( Min( CS ,( ( MLU - CS ) * ( Max( CS,Max( MUR,RMSe ) ) / CS ) ) ),CS ) ) )", "obj1": 0.07, "obj2": 0.7152664960074123}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( ( DS + MUM ),( DS * RMSe ) ) )", "obj1": 0.884, "obj2": 0.09624642968080949}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.678, "obj2": 0.20838759890232952}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) )", "choosing": "( Max( MUC,MUR ) * ( MUC / DS ) )", "obj1": 0.398, "obj2": 0.4328605292877994}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( FirstVNF_RAM + MDR ) + ( FirstVNF_Mem / ( ARS + DDR ) ) )", "choosing": "( RMSe - ( CS * ( ( CS / ( ( ( DS - RRSe ) - CS ) / RRSe ) ) - CS ) ) )", "obj1": 0.304, "obj2": 0.5066273781122952}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 0.988, "obj2": 0.009129363167374463}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.438, "obj2": 0.3887896040419869}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( RCSe ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( RMSe - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5569713204590203}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( ( MDR - Const ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - ( MUC / RMSe ) )", "obj1": 0.214, "obj2": 0.5668252553726358}, {"determining": "( Max( FirstVNF_RAM_Server,ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( ( ( CS + CS ) / ( DS - RCSe ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.56, "obj2": 0.29401055669829196}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + FirstVNF_Mem )", "choosing": "( ( RRSe * RCSe ) - ( ( CS + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.42, "obj2": 0.41467948256209447}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( DDR - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / RCSe ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.272, "obj2": 0.5174675278062487}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Min( ( FirstVNF_CPU - Min( CRS ,FirstVNF_Mem ) ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( MLU - DS ) * MUM ) ) / ( RRSe + RRSe ) ) - ( RCSe * MUR ) ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.892, "obj2": 0.08663113722358057}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) - AMS ) ) )", "choosing": "( ( ( ( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ) - RMSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.416, "obj2": 0.4207124223862402}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "( ( Min( PN ,BR ) + RRS ) * ( ( Max( FirstVNF_RAM,BR ) * ( RRS + FirstVNF_Mem ) ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( MLU - CS ) * MUM )", "obj1": 0.336, "obj2": 0.4719621686954122}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( FirstVNF_CPU + ( ( ( RRS * Const ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( ( ( MUR - ( CS - Min( MUM ,MUM ) ) ) - MUR ) * ( MUC / Max( RMSe,( CS / ( MUM / Min( Max( Min( CS ,DS ),( MLU / MUM ) ) ,( ( MUM + DS ) + MUC ) ) ) ) ) ) )", "obj1": 0.344, "obj2": 0.46870031610482}, {"determining": "Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),( ( ACS - FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.286, "obj2": 0.5134152168771517}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),( ( MRS + PN ) + ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe - RCSe ) - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - MLU )", "obj1": 0.222, "obj2": 0.5658274996318031}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.444, "obj2": 0.38138735009899716}, {"determining": "Min( ( Max( CRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( ( RRSe + ( Max( DS,RCSe ) * MLU ) ) + RCSe ) / ( MUC * ( MLU - MUR ) ) )", "obj1": 0.922, "obj2": 0.06594906775767988}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / MRS ) ) + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU - MRS ) / CRS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( RMSe - CS ) ,DS ) - Min( Min( MUC ,Max( ( CS * RMSe ),( Min( ( CS + CS ) ,Min( RRSe ,CS ) ) / MUM ) ) ) ,CS ) )", "obj1": 0.29, "obj2": 0.5076375954848933}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - ( MLU * RMSe ) )", "obj1": 0.91, "obj2": 0.07317386542418973}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ( ( ( ( AMS - DDR ) + CRS ) * DDR ) - Min( MRS ,( ( BR + FirstVNF_CPU_Server ) + ( Const / CRS ) ) ) ) ) - FirstVNF_RAM_Server ) + RRS ) * ( ( Max( FirstVNF_RAM,BR ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( RRSe - ( Min( ( ( MUC * MUC ) - Max( MUC,RRSe ) ) ,Max( CS,MUC ) ) - MUC ) ) * ( Max( CS,Max( Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) ),RMSe ) ) / CS ) )", "obj1": 0.348, "obj2": 0.4613768656921263}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "( ( FirstVNF_RAM - Min( Min( FirstVNF_CPU ,Max( Const,FirstVNF_RAM_Server ) ) ,( Const - ARS ) ) ) - ( AMS + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ),( Min( MUC ,MUR ) * ( ( ( ( ( Max( RCSe,RRSe ) - ( CS / MUC ) ) * ( ( RCSe * DS ) + ( MUM * CS ) ) ) + ( ( ( MLU / CS ) + ( CS / MLU ) ) / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) )", "obj1": 0.93, "obj2": 0.06085591949208209}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR * ( Min( ( FirstVNF_RAM_Server + DDR ) ,MRS ) * AMS ) ) ) ) ,Const ) * ( BR + MDR ) )", "choosing": "( ( ( RMSe * MUR ) - ( DS * RCSe ) ) * ( ( ( CS / MUC ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - MLU ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.934, "obj2": 0.05993458075602374}, {"determining": "Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( RRS,FirstVNF_CPU ) - ACS ) )", "choosing": "( ( ( MUM / CS ) + ( RMSe / MUM ) ) - ( MUM * RRSe ) )", "obj1": 0.902, "obj2": 0.07841198514652367}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.898, "obj2": 0.08109850789922408}, {"determining": "Min( ( DDR - ( FirstVNF_RAM - Min( Min( Min( FirstVNF_RAM_Server ,ARS ) ,FirstVNF_CPU ) ,( Const - ( FirstVNF_Mem - Max( ( AMS / FirstVNF_CPU_Server ),RRS ) ) ) ) ) ) ,( DDR * RRS ) )", "choosing": "( ( Max( ( DS + MUM ),( DS * RMSe ) ) + RCSe ) / ( MUC * ( ( ( ( CS / Min( MUC ,( MUR / RCSe ) ) ) / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - Min( DS ,RCSe ) ) ) ) ) - MUR ) ) )", "obj1": 0.918, "obj2": 0.06804542836091815}, {"determining": "( DDR + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,FirstVNF_CPU ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( RRSe - Min( Max( RRSe,MUM ) ,CS ) )", "obj1": 0.914, "obj2": 0.07163248631945275}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( MDR - CRS ) ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) + RRSe ) )", "obj1": 0.288, "obj2": 0.5105397840997342}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Min( ( FirstVNF_CPU / Min( FirstVNF_Mem ,RRS ) ) ,Const ) * ( ( DDR + ( FirstVNF_Mem / MDR ) ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( Min( ( DS + MUR ) ,RCSe ) * DS ) + ( RMSe - ( Min( RCSe ,DS ) * CS ) ) ) )", "obj1": 0.26, "obj2": 0.5235467738749404}, {"determining": "( RRS + Max( ( Min( MRS ,Const ) * ( RRS - DDR ) ),( Max( ( Min( MRS ,Const ) * ( Max( MRS,BR ) - DDR ) ),FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( ( MUC / MUC ) - ( MUR + DS ) ) - ( CS - DS ) )", "obj1": 0.9, "obj2": 0.07954554976171173}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_RAM ,PN ) + MDR ) - FirstVNF_RAM ) ) ) / ( ACS * RRS ) )", "choosing": "Max( ( ( RRSe * DS ) / Max( MLU,Max( DS,MUM ) ) ),( Max( CS,DS ) * ( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.614, "obj2": 0.24132999143268277}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.584, "obj2": 0.27283454634152593}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.938, "obj2": 0.052552152829266806}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.82, "obj2": 0.12856269908511547}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( ( ARS + BR ) / Min( ( FirstVNF_CPU * ( ARS + MRS ) ) ,CRS ) ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,( ( Max( MUR,MUC ) * RCSe ) * DS ) ) ) ) - MLU )", "obj1": 0.16, "obj2": 0.6217710470596215}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * MUC )", "obj1": 0.688, "obj2": 0.18135049647123946}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.166, "obj2": 0.6031027510582487}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.64, "obj2": 0.23208558088523673}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( FirstVNF_Mem / MDR ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + MUR ) / ( DS * Max( Min( CS ,MUC ),( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.7087780484881967}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( BR - CRS ) ,MDR )", "choosing": "( ( ( MUM + CS ) / ( DS * Max( Min( CS ,MUC ),CS ) ) ) / ( ( RRSe * RMSe ) * CS ) )", "obj1": 0.566, "obj2": 0.2872221944799941}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( ( Max( FirstVNF_RAM,BR ) * ( RRS + FirstVNF_Mem ) ) + ( FirstVNF_CPU + AMS ) ) ),RRS ) ) * ARS )", "choosing": "( Max( Max( DS,MUM ),Max( DS,MUR ) ) / ( DS * Max( Min( CS ,( ( MLU - CS ) * ( Max( CS,Max( MUR,RMSe ) ) / CS ) ) ),CS ) ) )", "obj1": 0.07, "obj2": 0.7152664960074123}, {"determining": "( ( MRS * MRS ) + Min( ( AMS - ( ( ( ( AMS + FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) * RRS ) - FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( MUM - ( ( ( DS * RCSe ) - RMSe ) + DS ) ) - Min( CS ,MUC ) )", "obj1": 0.22, "obj2": 0.5539991913903899}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.64, "obj2": 0.23208558088523673}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.678, "obj2": 0.20838759890232952}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) )", "choosing": "( Max( MUC,MUR ) * ( MUC / DS ) )", "obj1": 0.398, "obj2": 0.4328605292877994}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.94, "obj2": 0.022632220163222132}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( PN + CRS ) ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( ( RMSe / CS ) + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.104, "obj2": 0.6736713823037547}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 0.988, "obj2": 0.009129363167374463}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( ( MDR - Const ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - ( MUC / RMSe ) )", "obj1": 0.214, "obj2": 0.5668252553726358}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( ( BR - CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( Min( MUR ,RRSe ) + RMSe ) ) ) )", "obj1": 0.422, "obj2": 0.3962885947275446}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,( FirstVNF_RAM - ( RRS - Min( MRS ,BR ) ) ) ) * ( BR - CRS ) ) ),( DDR / ( BR + ( RRS + ( ( MDR + CRS ) - ( FirstVNF_RAM_Server * BR ) ) ) ) ) ) )", "choosing": "( ( ( MUC / ( Min( RRSe ,RCSe ) - MLU ) ) - ( MUR + DS ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.206, "obj2": 0.5827200697112028}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + FirstVNF_Mem )", "choosing": "( ( RRSe * RCSe ) - ( ( CS + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.42, "obj2": 0.41467948256209447}, {"determining": "( ( PN - Max( DDR,Min( PN ,MRS ) ) ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + CS ) / ( DS * Max( MUR,CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.944, "obj2": 0.020343787578879325}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( ( RRS - FirstVNF_Mem ) / ( ( ( MRS + AMS ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( Min( MUR ,( MUR + MUR ) ) ,CS ) ) - Min( ( MUR / MUR ) ,Min( CS ,RMSe ) ) )", "obj1": 0.458, "obj2": 0.3756062576556213}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.438, "obj2": 0.3887896040419869}, {"determining": "Min( ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.21, "obj2": 0.57919637429188}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ACS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( MUC * CS ) )", "obj1": 0.266, "obj2": 0.516131816836158}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( CRS + MRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( RCSe - RRSe ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( Max( MDR,MDR ) + MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( Min( MUM ,( CS * Max( MUC,MLU ) ) ) - ( DS + Max( RMSe,RRSe ) ) ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.428, "obj2": 0.3914477208471992}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( PN - Max( DDR,RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( DS * Max( Min( RMSe ,MUC ),CS ) ) )", "obj1": 0.962, "obj2": 0.01373963373635171}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RMSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.092, "obj2": 0.6741215770483651}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.556, "obj2": 0.29688696312401575}, {"determining": "( Max( FirstVNF_RAM_Server,ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( ( ( CS + CS ) / ( DS - RCSe ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.56, "obj2": 0.29401055669829196}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - Min( RMSe ,( CS / Max( MUR,CS ) ) ) ) - ( MUC * CS ) )", "obj1": 0.28, "obj2": 0.5136252571322343}, {"determining": "( ( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.444, "obj2": 0.38138735009899716}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.412, "obj2": 0.4210571256375105}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,( Const - ARS ) ) - AMS ) ) )", "choosing": "( ( ( ( Max( ( RCSe * ( DS * RMSe ) ),( MUM * RCSe ) ) - RMSe ) - ( CS - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.416, "obj2": 0.4207124223862402}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / MRS ) ) + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU - MRS ) / CRS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( RMSe - CS ) ,DS ) - Min( Min( MUC ,Max( ( CS * RMSe ),( Min( ( CS + CS ) ,Min( RRSe ,CS ) ) / MUM ) ) ) ,CS ) )", "obj1": 0.29, "obj2": 0.5076375954848933}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ( ( ( ( AMS - DDR ) + CRS ) * DDR ) - Min( MRS ,( DDR + ( Const / CRS ) ) ) ) ) - FirstVNF_RAM_Server ) + CRS ) * FirstVNF_Mem_Server )", "choosing": "( ( MLU - CS ) * ( Max( CS,Max( ( MLU - ( CS / RCSe ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.282, "obj2": 0.5114429834885191}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Min( ( FirstVNF_CPU / Min( FirstVNF_Mem ,RRS ) ) ,Const ) * ( ( DDR + ( FirstVNF_Mem / MDR ) ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( Min( ( DS + MUR ) ,RCSe ) * DS ) + ( RMSe - ( Min( RCSe ,DS ) * CS ) ) ) )", "obj1": 0.26, "obj2": 0.5235467738749404}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( MDR - CRS ) ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) + RRSe ) )", "obj1": 0.288, "obj2": 0.5105397840997342}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server / ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ,Const ) ,( MDR - CRS ) ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * ( MLU - CS ) ) ) ,( Max( ( RCSe * Max( RMSe,DS ) ),( ( ( RMSe * RMSe ) * RRSe ) - MUR ) ) - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) + RRSe ) )", "obj1": 0.288, "obj2": 0.5105397840997342}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( CS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) - ( Min( ACS ,ARS ) - DDR ) ) - ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) - ( RCSe - RCSe ) ) + RMSe ) + Max( MUR,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + AMS ) ) / ( ( ACS * Const ) + RRS ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( RCSe / RCSe ) ),( ( RMSe * MUR ) * Min( RRSe ,( RMSe - ( CS + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_CPU_Server ) ,( ( ACS - FirstVNF_RAM ) / ( BR + ARS ) ) )", "choosing": "( Max( Max( DS,( ( ( ( Max( RCSe,MUM ) + DS ) / MUM ) / MUR ) - ( ( ( ( RMSe + MUC ) / CS ) / MUC ) - Max( MUR,Max( MUC,CS ) ) ) ) ),Max( DS,MUR ) ) / Max( ( RCSe / MUC ),Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ARS ) + Min( FirstVNF_Mem_Server ,BR ) ) - ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MUC,MLU ) - ( MUR / CS ) ),( ( CS + MLU ) - ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( ( Max( ACS,FirstVNF_RAM ) / CRS ) - Min( Max( CRS,FirstVNF_Mem_Server ) ,RRS ) ) )", "choosing": "Max( Max( ( DS / DS ),( ( ( ( RRSe - ( ( MUM * MLU ) - Max( MUR,RCSe ) ) ) + RMSe ) / MUM ) + MLU ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM ) - ( ARS * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server + MRS ) ) )", "choosing": "Min( ( ( MUM - MUR ) - ( MLU - CS ) ) ,( ( RMSe * RMSe ) * Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ACS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( CRS * ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) )", "choosing": "( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.584, "obj2": 0.27283454634152593}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU - ( DS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 0.938, "obj2": 0.052552152829266806}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.82, "obj2": 0.12856269908511547}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.614, "obj2": 0.24132999143268277}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / CRS ) ) * ( MDR + Min( MRS ,MRS ) ) ) * ( AMS + ( ( ( AMS - DDR ) + CRS ) * DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( CS + ( RRSe - MUR ) ) )", "obj1": 0.54, "obj2": 0.3225556735335714}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * MUC )", "obj1": 0.688, "obj2": 0.18135049647123946}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "Min( ( ( Const / CRS ) - CRS ) ,( ( ARS / Max( BR,FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( MLU - ( CS / RCSe ) ),( Max( MUM,Min( CS ,( MUC + RCSe ) ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.154, "obj2": 0.6142806266936474}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) )", "choosing": "( ( ( Max( ( Max( MUC,MLU ) - ( RMSe / CS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.56, "obj2": 0.2838138938555086}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( FirstVNF_Mem / MDR ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + MUR ) / ( DS * Max( Min( CS ,MUC ),( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.7087780484881967}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.512, "obj2": 0.33476419781679295}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.678, "obj2": 0.20838759890232952}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) )", "choosing": "( Max( MUC,MUR ) * ( MUC / DS ) )", "obj1": 0.398, "obj2": 0.4328605292877994}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.94, "obj2": 0.022632220163222132}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( PN + CRS ) ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( ( RMSe / CS ) + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.104, "obj2": 0.6736713823037547}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 0.988, "obj2": 0.009129363167374463}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( ( MDR - Const ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - ( MUC / RMSe ) )", "obj1": 0.214, "obj2": 0.5668252553726358}, {"determining": "( ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( CS - CS ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.416, "obj2": 0.40230810466922506}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( MRS / MDR ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( MLU - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.64, "obj2": 0.23208558088523673}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.412, "obj2": 0.4210571256375105}, {"determining": "( ( PN - Max( MRS,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + CS ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( RCSe + CS ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.066, "obj2": 0.727723558382045}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Min( ( BR - CRS ) ,( FirstVNF_Mem_Server - ( BR + ( BR + ( MRS / MDR ) ) ) ) )", "choosing": "( Max( Max( Min( ( ( ( ( CS / DS ) - ( CS / DS ) ) / ( MUC / Max( MUR,RRSe ) ) ) + MLU ) ,MUR ),MUM ),Max( DS,MUR ) ) / ( RRSe * CS ) )", "obj1": 0.64, "obj2": 0.23208558088523673}, {"determining": "( ( MRS * MRS ) + Min( ( AMS - ( ( ( ( AMS + FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) * RRS ) - FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( MUM - ( ( ( DS * RCSe ) - RMSe ) + DS ) ) - Min( CS ,MUC ) )", "obj1": 0.22, "obj2": 0.5539991913903899}, {"determining": "( Max( ( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * MUC ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.628, "obj2": 0.23515269996336807}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.176, "obj2": 0.6001291770398031}, {"determining": "Min( ( ( DDR * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( CS ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.2, "obj2": 0.5814897046213806}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.556, "obj2": 0.29688696312401575}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "Min( ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.21, "obj2": 0.57919637429188}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( ( RRS - FirstVNF_Mem ) / ( ( ( MRS + AMS ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( Min( MUR ,( MUR + MUR ) ) ,CS ) ) - Min( ( MUR / MUR ) ,Min( CS ,RMSe ) ) )", "obj1": 0.458, "obj2": 0.3756062576556213}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( ( Max( FirstVNF_RAM,BR ) * ( RRS + FirstVNF_Mem ) ) + ( FirstVNF_CPU + AMS ) ) ),RRS ) ) * ARS )", "choosing": "( Max( Max( DS,MUM ),Max( DS,MUR ) ) / ( DS * Max( Min( CS ,( ( MLU - CS ) * ( Max( CS,Max( MUR,RMSe ) ) / CS ) ) ),CS ) ) )", "obj1": 0.07, "obj2": 0.7152664960074123}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.438, "obj2": 0.3887896040419869}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ACS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( MUC * CS ) )", "obj1": 0.266, "obj2": 0.516131816836158}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.166, "obj2": 0.6031027510582487}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.956, "obj2": 0.015639849511795985}, {"determining": "( ( DDR - DDR ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ACS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( Max( MUC,MLU ) - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( Min( RMSe ,MUR ) / DS ) ) )", "obj1": 0.164, "obj2": 0.6123830354201809}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( ( ( ( BR - CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( Min( MUR ,RRSe ) + RMSe ) ) ) )", "obj1": 0.422, "obj2": 0.3962885947275446}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( Max( MDR,MDR ) + MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( Min( MUM ,( CS * Max( MUC,MLU ) ) ) - ( DS + Max( RMSe,RRSe ) ) ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.428, "obj2": 0.3914477208471992}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( Const * ( AMS + BR ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Max( RRSe,MUM ) ,( CS * MUM ) ) )", "obj1": 0.232, "obj2": 0.5510030620809766}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.944, "obj2": 0.020343787578879325}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RMSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.092, "obj2": 0.6741215770483651}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - Min( RMSe ,( CS / Max( MUR,CS ) ) ) ) - ( MUC * CS ) )", "obj1": 0.28, "obj2": 0.5136252571322343}, {"determining": "( ( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.444, "obj2": 0.38138735009899716}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( ( MRS * MRS ) + ( Max( FirstVNF_CPU_Server,( RRS + FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM * BR ) ) ) )", "choosing": "( ( MUM - RMSe ) - Max( Max( DS,DS ),RRSe ) )", "obj1": 0.446, "obj2": 0.3778116119380395}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( CRS + MRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( RCSe - RRSe ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / ARS ) / ( ( ( ( AMS - CRS ) + CRS ) * DDR ) - Min( MRS ,( DDR + Max( FirstVNF_CPU,ARS ) ) ) ) ) - FirstVNF_RAM_Server ) + RRS ) * ( Max( FirstVNF_Mem,ARS ) + Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "( ( MLU - CS ) * Min( MUM ,( Min( ( ( ( MUC - ( CS - DS ) ) - MLU ) - ( RMSe + ( RRSe + ( MUR + CS ) ) ) ) ,Max( MUC,( Min( Min( MUM ,RCSe ) ,MUC ) + RMSe ) ) ) / ( RRSe * RMSe ) ) ) )", "obj1": 0.35, "obj2": 0.45926009527449524}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) / MRS ) ) + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU - MRS ) / CRS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( RMSe - CS ) ,DS ) - Min( Min( MUC ,Max( ( CS * RMSe ),( Min( ( CS + CS ) ,Min( RRSe ,CS ) ) / MUM ) ) ) ,CS ) )", "obj1": 0.29, "obj2": 0.5076375954848933}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( BR,( Min( FirstVNF_Mem_Server ,AMS ) / ACS ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + ( RMSe - ( Min( RCSe ,Min( ( ( CS * RMSe ) + ( CS + MUR ) ) ,MLU ) ) * RRSe ) ) ) )", "obj1": 0.262, "obj2": 0.5212515595240788}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,Min( RRSe ,Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ) ) ) )", "obj1": 0.284, "obj2": 0.5080897801689727}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ( ( ( ( AMS - DDR ) + CRS ) * DDR ) - Min( MRS ,( DDR + ( Const / CRS ) ) ) ) ) - FirstVNF_RAM_Server ) + CRS ) * FirstVNF_Mem_Server )", "choosing": "( ( MLU - CS ) * ( Max( CS,Max( ( MLU - ( CS / RCSe ) ),( ( RMSe - MUC ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.282, "obj2": 0.5114429834885191}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Min( ( FirstVNF_CPU / Min( FirstVNF_Mem ,RRS ) ) ,Const ) * ( ( DDR + ( FirstVNF_Mem / MDR ) ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * ( ( Min( ( DS + MUR ) ,RCSe ) * DS ) + ( RMSe - ( Min( RCSe ,DS ) * CS ) ) ) )", "obj1": 0.26, "obj2": 0.5235467738749404}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( FirstVNF_RAM + Max( Max( FirstVNF_Mem,ARS ),( ( Const * ( FirstVNF_CPU + Const ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( ( CS + MLU ) * ( ( MUC / Min( MUR ,RMSe ) ) / Min( RRSe ,( MUM + MLU ) ) ) ) ,Min( CS ,( ( CS + ( RRSe - DS ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.614, "obj2": 0.218512354586375}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + ( ( ( AMS - DDR ) + CRS ) * RRS ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / MUC )", "obj1": 0.612, "obj2": 0.2723410176079333}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.82, "obj2": 0.12856269908511547}, {"determining": "Min( ( ( Const / CRS ) - CRS ) ,( ( ARS / Max( BR,FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( MLU - ( CS / RCSe ) ),( Max( MUM,Min( CS ,( MUC + RCSe ) ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.154, "obj2": 0.6142806266936474}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / CRS ) ) * ( MDR + Min( MRS ,MRS ) ) ) * ( AMS + ( ( ( AMS - DDR ) + CRS ) * DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( CS + ( RRSe - MUR ) ) )", "obj1": 0.54, "obj2": 0.3225556735335714}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * MUC )", "obj1": 0.688, "obj2": 0.18135049647123946}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( BR + ( MDR + ( FirstVNF_CPU_Server - Const ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( MLU + Max( RRSe,( CS * DS ) ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.792, "obj2": 0.14719866048905986}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.584, "obj2": 0.27283454634152593}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,( FirstVNF_Mem_Server - DDR ) ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) / ( DS - ( Max( DS,MLU ) / DS ) ) )", "obj1": 0.16, "obj2": 0.5929710969742836}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ),RRS ) ) * ARS )", "choosing": "( Max( MUM,( ( DS * ( ( MUR - RCSe ) - RRSe ) ) - ( ( ( RRSe + Max( Max( MUR,CS ),MUC ) ) - MUC ) - ( ( MUR * ( MUM - ( MLU / RRSe ) ) ) / Max( CS,Min( DS ,Min( MUR ,RMSe ) ) ) ) ) ) ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.196, "obj2": 0.5782607574095213}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) )", "choosing": "( ( ( Max( ( Max( MUC,MLU ) - ( RMSe / CS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.56, "obj2": 0.2838138938555086}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( Min( Max( Const,MRS ) ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( ( MDR - MRS ) + ( ( Const - ARS ) / MDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * ( ( CS - DS ) * ( ( RMSe * MUC ) * DS ) ) ) ) - ( ( RMSe / ( CS / RCSe ) ) * ( Min( ( RRSe - MUR ) ,Max( ( RMSe / Max( ( MUC / MUC ),Max( MUM,RMSe ) ) ),( MUC * Min( CS ,DS ) ) ) ) / MUC ) ) )", "obj1": 0.21, "obj2": 0.5605877333925015}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) / Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / MDR ) ),PN ) )", "choosing": "( ( ( CS / ( MUM * ( ( MLU * ( MUM / Min( RRSe ,MUM ) ) ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.8, "obj2": 0.14489104863397279}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.512, "obj2": 0.33476419781679295}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.94, "obj2": 0.022632220163222132}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.678, "obj2": 0.20838759890232952}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Max( ( ( ( ARS + DDR ) / Max( Const,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) )", "choosing": "( Max( MUC,MUR ) * ( MUC / DS ) )", "obj1": 0.398, "obj2": 0.4328605292877994}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( PN + CRS ) ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( ( RMSe / CS ) + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.104, "obj2": 0.6736713823037547}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * ( ( AMS + PN ) / CRS ) ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * ( CS / MUC ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.988, "obj2": 0.0038037607740344886}, {"determining": "Min( ( ( DDR * ACS ) - CRS ) ,( ( BR + ( MRS / MDR ) ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( ( CS / DS ) - ( CS / DS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.076, "obj2": 0.696243730684375}, {"determining": "( ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( CS - CS ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.416, "obj2": 0.40230810466922506}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.412, "obj2": 0.4210571256375105}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.446, "obj2": 0.3716021186225002}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.556, "obj2": 0.29688696312401575}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "( ( MRS * MRS ) + Min( ( AMS - ( ( ( ( AMS + FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) * RRS ) - FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( MUM - ( ( ( DS * RCSe ) - RMSe ) + DS ) ) - Min( CS ,MUC ) )", "obj1": 0.22, "obj2": 0.5539991913903899}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( FirstVNF_Mem / MDR ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + MUR ) / ( DS * Max( Min( CS ,MUC ),( Min( DS ,RMSe ) - Min( MUC ,CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.7087780484881967}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( ( Max( FirstVNF_RAM,BR ) * ( RRS + FirstVNF_Mem ) ) + ( FirstVNF_CPU + AMS ) ) ),RRS ) ) * ARS )", "choosing": "( Max( Max( DS,MUM ),Max( DS,MUR ) ) / ( DS * Max( Min( CS ,( ( MLU - CS ) * ( Max( CS,Max( MUR,RMSe ) ) / CS ) ) ),CS ) ) )", "obj1": 0.07, "obj2": 0.7152664960074123}, {"determining": "( ( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( MLU - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.444, "obj2": 0.38138735009899716}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "Max( ( ( FirstVNF_RAM - ( ( ACS - ARS ) * Max( Max( ARS,FirstVNF_Mem ),ACS ) ) ) * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) )", "choosing": "( ( ( MUR - ( ( MUR * Min( RCSe ,( RCSe - RCSe ) ) ) - DS ) ) - MUR ) * ( MUC / DS ) )", "obj1": 0.404, "obj2": 0.4248724370901469}, {"determining": "( Max( ( ACS * ( Min( MDR ,DDR ) - PN ) ),MRS ) + ( Min( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_CPU ) ) ,Const ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) ) )", "choosing": "( ( RRSe * RCSe ) - ( ( Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) + ( ( ( MLU + MUM ) / Min( MLU ,( DS / RCSe ) ) ) * DS ) ) * ( Max( ( MLU * MUM ),( ( MUR / DS ) / ( MUR + Max( MUR,MUR ) ) ) ) + CS ) ) )", "obj1": 0.438, "obj2": 0.3887896040419869}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.506, "obj2": 0.33870175159328}, {"determining": "( ( PN - Max( MRS,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + CS ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( RCSe + CS ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.066, "obj2": 0.727723558382045}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( ( ( ( BR - CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( Min( MUR ,RRSe ) + RMSe ) ) ) )", "obj1": 0.422, "obj2": 0.3962885947275446}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( Max( MDR,MDR ) + MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( Min( MUM ,( CS * Max( MUC,MLU ) ) ) - ( DS + Max( RMSe,RRSe ) ) ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.428, "obj2": 0.3914477208471992}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( Const * ( AMS + BR ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Max( RRSe,MUM ) ,( CS * MUM ) ) )", "obj1": 0.232, "obj2": 0.5510030620809766}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.944, "obj2": 0.020343787578879325}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RMSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.092, "obj2": 0.6741215770483651}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server / ( DDR + FirstVNF_CPU_Server ) ) / RRS ) * ( ( PN + ( FirstVNF_RAM_Server / MRS ) ) * Max( ( MRS * ( DDR + CRS ) ),Min( MDR ,FirstVNF_RAM ) ) ) ) * Const ) - Min( ACS ,CRS ) ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * Max( Min( Min( Min( Min( ( CS / MUC ) ,Max( MUM,MUM ) ) ,( ( MUM / MLU ) / Max( RRSe,MLU ) ) ) ,( CS * RRSe ) ) ,( CS / Max( MUR,CS ) ) ),CS ) ) )", "obj1": 0.06, "obj2": 0.7281536452911846}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( CRS + MRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( RCSe - RRSe ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.956, "obj2": 0.015639849511795985}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / ARS ) / ( ( ( ( AMS - CRS ) + CRS ) * DDR ) - Min( MRS ,( DDR + Max( FirstVNF_CPU,ARS ) ) ) ) ) - FirstVNF_RAM_Server ) + RRS ) * ( Max( FirstVNF_Mem,ARS ) + Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "( ( MLU - CS ) * Min( MUM ,( Min( ( ( ( MUC - ( CS - DS ) ) - MLU ) - ( RMSe + ( RRSe + ( MUR + CS ) ) ) ) ,Max( MUC,( Min( Min( MUM ,RCSe ) ,MUC ) + RMSe ) ) ) / ( RRSe * RMSe ) ) ) )", "obj1": 0.35, "obj2": 0.45926009527449524}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( PN - Max( DDR,( Min( RRS ,Max( FirstVNF_RAM,( Const * ( AMS + BR ) ) ) ) * FirstVNF_CPU ) ) ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + CS ) / ( DS * Max( Min( RMSe ,( CS / ( MUM * ( ( DS - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.956, "obj2": 0.015639849511795985}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( FirstVNF_RAM + Max( Max( FirstVNF_Mem,ARS ),( ( Const * ( FirstVNF_CPU + Const ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( ( CS + MLU ) * ( ( MUC / Min( MUR ,RMSe ) ) / Min( RRSe ,( MUM + MLU ) ) ) ) ,Min( CS ,( ( CS + ( RRSe - DS ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( RRSe * MLU ) * MUM ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( BR / BR ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MUC / MUM ) - ( MUM * ( ( RMSe + DS ) / ( DS - ( ( MUC + RCSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( DDR - AMS ) )", "choosing": "( ( RMSe + MUM ) * ( ( MLU * ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / DS ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - Max( AMS,Min( FirstVNF_CPU ,( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / DDR ) ) + ( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) ) * ( Min( PN ,MRS ) * ( BR + ARS ) ) )", "choosing": "( ( MLU + CS ) * ( ( ( RRSe * RMSe ) * DS ) + ( DS / Max( ( ( DS / ( RRSe - CS ) ) * RCSe ),Max( CS,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - Max( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),Min( ( ( Const / CRS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) ) ) ) - MDR ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( RCSe,( ( CS + MLU ) - Min( ( ( CS * ( DS * ( MUC - ( RRSe * RRSe ) ) ) ) + ( Max( DS,Min( RRSe ,Min( RCSe ,RRSe ) ) ) + ( RMSe + Min( MUR ,MLU ) ) ) ) ,( MLU - ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * DDR ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) * MLU ) / CS ) / RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) ,( MDR - AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( ( ( MUC * MLU ) - MUR ) ,DS ) / Min( RRSe ,DS ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.614, "obj2": 0.218512354586375}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( BR - CRS ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / Min( MUR ,RRSe ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.61, "obj2": 0.2657547000358322}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.82, "obj2": 0.12856269908511547}, {"determining": "Min( ( ( Const / CRS ) - CRS ) ,( ( ARS / Max( BR,FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( MLU - ( CS / RCSe ) ),( Max( MUM,Min( CS ,( MUC + RCSe ) ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.154, "obj2": 0.6142806266936474}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.676, "obj2": 0.20903101892862055}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.584, "obj2": 0.27283454634152593}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Max( ( Min( PN ,BR ) * AMS ),ARS ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( MLU - Min( Max( DS,MLU ) ,Min( CS ,RMSe ) ) )", "obj1": 0.788, "obj2": 0.14543250948666395}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Min( DDR ,( ( MRS * FirstVNF_Mem_Server ) * Min( CRS ,MDR ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( Min( MUR ,( MUM / ( RCSe - RRSe ) ) ) - ( RCSe / Min( ( MUM * ( MUM * MLU ) ) ,DS ) ) ) ) * MUC )", "obj1": 0.704, "obj2": 0.1590155874244993}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MLU - CS ) * ( MUM / MUM ) )", "obj1": 0.908, "obj2": 0.04410657872842512}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.394, "obj2": 0.4236109323476326}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) )", "choosing": "( ( ( Max( ( Max( MUC,MLU ) - ( RMSe / CS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.56, "obj2": 0.2838138938555086}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) / Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / MDR ) ),PN ) )", "choosing": "( ( ( CS / ( MUM * ( ( MLU * ( MUM / Min( RRSe ,MUM ) ) ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.8, "obj2": 0.14489104863397279}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,( FirstVNF_Mem_Server - DDR ) ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) / ( DS - ( Max( DS,MLU ) / DS ) ) )", "obj1": 0.16, "obj2": 0.5929710969742836}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * MUC )", "obj1": 0.688, "obj2": 0.18135049647123946}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.512, "obj2": 0.33476419781679295}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( MDR / ( ( MDR * ( Min( MDR ,MRS ) * AMS ) ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( ( CS + ( MLU - RRSe ) ) / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( ( CS / Min( RRSe ,DS ) ) + RRSe ) )", "obj1": 0.41, "obj2": 0.41966154232473396}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / CRS ) ) * ( MDR + Min( MRS ,MRS ) ) ) * ( AMS + ( ( ( AMS - DDR ) + CRS ) * DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( CS + ( RRSe - MUR ) ) )", "obj1": 0.54, "obj2": 0.3225556735335714}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.94, "obj2": 0.02162363415123886}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( PN + CRS ) ) ) ) ) ) )", "choosing": "( ( ( CS / ( MUM * ( ( ( RMSe / CS ) + ( MLU - RRSe ) ) + RMSe ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.104, "obj2": 0.6736713823037547}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ),RRS ) ) * ARS )", "choosing": "( Max( MUM,( ( DS * ( ( MUR - RCSe ) - RRSe ) ) - ( ( ( RRSe + Max( Max( MUR,CS ),MUC ) ) - MUC ) - ( ( MUR * ( MUM - ( MLU / RRSe ) ) ) / Max( CS,Min( DS ,Min( MUR ,RMSe ) ) ) ) ) ) ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.196, "obj2": 0.5782607574095213}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "( ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( CS - CS ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.416, "obj2": 0.40230810466922506}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / CRS ) ) * ( MDR + Min( MRS ,MRS ) ) ) * ( AMS + ( ( ( AMS - DDR ) + CRS ) * DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( CS + ( RRSe - MUR ) ) )", "obj1": 0.682, "obj2": 0.19757716631023517}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * ( ( AMS + PN ) / CRS ) ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * ( CS / MUC ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.988, "obj2": 0.0038037607740344886}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.446, "obj2": 0.3716021186225002}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.556, "obj2": 0.29688696312401575}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "Min( ( ( DDR * ACS ) - CRS ) ,( ( BR + ( MRS / MDR ) ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( ( CS / DS ) - ( CS / DS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.076, "obj2": 0.696243730684375}, {"determining": "( RRS + Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / Max( RMSe,MUC ) ) - ( MUR + DS ) ) - ( MUC * CS ) )", "obj1": 0.186, "obj2": 0.5894135635196103}, {"determining": "( Min( Max( Const,MRS ) ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( ( MDR - MRS ) + ( ( Const - ARS ) / MDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * ( ( CS - DS ) * ( ( RMSe * MUC ) * DS ) ) ) ) - ( ( RMSe / ( CS / RCSe ) ) * ( Min( ( RRSe - MUR ) ,Max( ( RMSe / Max( ( MUC / MUC ),Max( MUM,RMSe ) ) ),( MUC * Min( CS ,DS ) ) ) ) / MUC ) ) )", "obj1": 0.21, "obj2": 0.5605877333925015}, {"determining": "( ( MRS * MRS ) + Min( ( AMS - ( ( ( ( AMS + FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) * RRS ) - FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( MUM - ( ( ( DS * RCSe ) - RMSe ) + DS ) ) - Min( CS ,MUC ) )", "obj1": 0.22, "obj2": 0.5539991913903899}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( ( DDR * ACS ) - CRS ) ,( ( ( MRS * MRS ) + ( MRS / MDR ) ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( ( CS / DS ) - ( CS / DS ) ),( Max( MUM,( CS * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.066, "obj2": 0.6981154945311988}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( Max( MDR,MDR ) + MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( Min( MUM ,( CS * Max( MUC,MLU ) ) ) - ( DS + Max( RMSe,RRSe ) ) ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.428, "obj2": 0.3914477208471992}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( Min( RMSe ,DS ) / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.438, "obj2": 0.38281821284959533}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( Min( FirstVNF_CPU ,( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / DDR ) ) + ( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( DS / ( RRSe - CS ) ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5896880405210063}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - Const ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) )", "obj1": 0.956, "obj2": 0.013959762474156001}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.506, "obj2": 0.33870175159328}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * DDR ) ),RRS ) ) * ARS )", "choosing": "( Max( ( Min( Min( MLU ,RRSe ) ,( MUC / MUM ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( Max( Max( Max( ( Min( CS ,MLU ) * MUC ),RMSe ),MUM ),( RRSe + CS ) ),RRSe ) ) )", "obj1": 0.422, "obj2": 0.39571467104092195}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.944, "obj2": 0.020343787578879325}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( Const * ( AMS + BR ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR + MRS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Max( RRSe,MUM ) ,( CS * MUM ) ) )", "obj1": 0.232, "obj2": 0.5510030620809766}, {"determining": "( ( DDR / ACS ) + ( FirstVNF_Mem / MDR ) )", "choosing": "( Min( DS ,RMSe ) - Min( MUC ,CS ) )", "obj1": 0.32, "obj2": 0.48151823650993164}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RMSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.092, "obj2": 0.6741215770483651}, {"determining": "( ( DDR + ACS ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - ( MUM + RCSe ) ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.442, "obj2": 0.37824529407478596}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ) )", "choosing": "( Max( RRSe,( RRSe * RMSe ) ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.55, "obj2": 0.3144802025145808}, {"determining": "( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) )", "choosing": "Min( ( ( MLU / Max( MUM,CS ) ) - DS ) ,( DS / CS ) )", "obj1": 0.554, "obj2": 0.30719187164850625}, {"determining": "Min( ( BR - CRS ) ,( ( ( FirstVNF_Mem - ARS ) / ( FirstVNF_RAM_Server / CRS ) ) * ( MDR + Min( MRS ,MRS ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( Max( ( MLU - MLU ),CS ) * DS ) )", "obj1": 0.542, "obj2": 0.3203345726196063}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( CRS + MRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( RCSe - RRSe ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.68, "obj2": 0.20775243742447744}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / ARS ) / ( ( ( ( AMS - CRS ) + CRS ) * DDR ) - Min( MRS ,( DDR + Max( FirstVNF_CPU,ARS ) ) ) ) ) - FirstVNF_RAM_Server ) + RRS ) * ( Max( FirstVNF_Mem,ARS ) + Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "( ( MLU - CS ) * Min( MUM ,( Min( ( ( ( MUC - ( CS - DS ) ) - MLU ) - ( RMSe + ( RRSe + ( MUR + CS ) ) ) ) ,Max( MUC,( Min( Min( MUM ,RCSe ) ,MUC ) + RMSe ) ) ) / ( RRSe * RMSe ) ) ) )", "obj1": 0.35, "obj2": 0.45926009527449524}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.552, "obj2": 0.3107649881271583}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( FirstVNF_RAM + Max( Max( FirstVNF_Mem,ARS ),( ( Const * ( FirstVNF_CPU + Const ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( ( CS + MLU ) * ( ( MUC / Min( MUR ,RMSe ) ) / Min( RRSe ,( MUM + MLU ) ) ) ) ,Min( CS ,( ( CS + ( RRSe - DS ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( Max( ( Min( ( ACS / Min( PN ,FirstVNF_CPU_Server ) ) ,( MDR - CRS ) ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.678, "obj2": 0.20838759890232952}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.614, "obj2": 0.218512354586375}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( Max( ( ( RRS * Min( RRS ,FirstVNF_RAM_Server ) ) - RRS ),RRS ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( MUC / MLU ) - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.392, "obj2": 0.4192096715776225}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.82, "obj2": 0.12856269908511547}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( CS * RCSe ) ) * MUC )", "obj1": 0.688, "obj2": 0.18135049647123946}, {"determining": "Min( ( ( Const / CRS ) - CRS ) ,( ( ARS / Max( BR,FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( MLU - ( CS / RCSe ) ),( Max( MUM,Min( CS ,( MUC + RCSe ) ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.154, "obj2": 0.6142806266936474}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( PN - Max( ( ( RRS * Min( FirstVNF_CPU_Server ,AMS ) ) - ( AMS * Min( MRS ,( MDR + MRS ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.052, "obj2": 0.7330730499688005}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Max( ( Min( PN ,BR ) * AMS ),ARS ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( MLU - Min( Max( DS,MLU ) ,Min( CS ,RMSe ) ) )", "obj1": 0.788, "obj2": 0.14543250948666395}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( Max( DS,RMSe ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.584, "obj2": 0.27283454634152593}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Min( DDR ,( ( MRS * FirstVNF_Mem_Server ) * Min( CRS ,MDR ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( Min( MUR ,( MUM / ( RCSe - RRSe ) ) ) - ( RCSe / Min( ( MUM * ( MUM * MLU ) ) ,DS ) ) ) ) * MUC )", "obj1": 0.704, "obj2": 0.1590155874244993}, {"determining": "( Max( ( Min( ( BR / Max( ( FirstVNF_RAM_Server + RRS ),( DDR / FirstVNF_RAM ) ) ) ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * MUR ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.606, "obj2": 0.2511782144875696}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MLU - CS ) * ( MUM / MUM ) )", "obj1": 0.908, "obj2": 0.04410657872842512}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "( ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( CS - CS ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.416, "obj2": 0.40230810466922506}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) / Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / MDR ) ),PN ) )", "choosing": "( ( ( CS / ( MUM * ( ( MLU * ( MUM / Min( RRSe ,MUM ) ) ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.8, "obj2": 0.14489104863397279}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,( FirstVNF_Mem_Server - DDR ) ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) / ( DS - ( Max( DS,MLU ) / DS ) ) )", "obj1": 0.16, "obj2": 0.5929710969742836}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "Min( ( ( DDR * ACS ) - CRS ) ,( ( BR + ( MRS / MDR ) ) / ( Max( ( Min( ( BR / ( CRS * PN ) ) ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) ) ) )", "choosing": "( ( Min( MLU ,MUR ) / RCSe ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.546, "obj2": 0.30677735861843813}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.512, "obj2": 0.33476419781679295}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / Min( ( FirstVNF_Mem_Server + DDR ) ,( ( ( FirstVNF_Mem / ( FirstVNF_RAM_Server / CRS ) ) * ( MDR + Min( MRS ,MRS ) ) ) * ( AMS + ( ( ( AMS - DDR ) + CRS ) * DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( CS + ( RRSe - MUR ) ) )", "obj1": 0.54, "obj2": 0.3225556735335714}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.94, "obj2": 0.02162363415123886}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Const ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( Min( MUR ,( ( MUM - Min( RRSe ,MLU ) ) - RMSe ) ) - RCSe ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5264631247504948}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( MUM / MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.094, "obj2": 0.6712373761286319}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "Min( ( BR - CRS ) ,( Max( BR,CRS ) * ( MDR + MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * ( ( MUC - MUR ) * RRSe ) ) + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.556, "obj2": 0.2911412152962466}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * ( ( AMS + PN ) / CRS ) ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * ( CS / MUC ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.988, "obj2": 0.0038037607740344886}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( Min( FirstVNF_CPU ,( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / DDR ) ) + ( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( DS / ( RRSe - CS ) ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5896880405210063}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.568, "obj2": 0.27425276377732144}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.446, "obj2": 0.3716021186225002}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "( Min( DDR ,MRS ) * ( Min( PN ,BR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * ( Min( RRSe ,RRSe ) * MUC ) ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.606, "obj2": 0.2511782144875696}, {"determining": "Min( ( ( DDR * ACS ) - CRS ) ,( ( BR + ( MRS / MDR ) ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( ( CS / DS ) - ( CS / DS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.076, "obj2": 0.696243730684375}, {"determining": "( Min( Max( Const,MRS ) ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( ( MDR - MRS ) + ( ( Const - ARS ) / MDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * ( ( CS - DS ) * ( ( RMSe * MUC ) * DS ) ) ) ) - ( ( RMSe / ( CS / RCSe ) ) * ( Min( ( RRSe - MUR ) ,Max( ( RMSe / Max( ( MUC / MUC ),Max( MUM,RMSe ) ) ),( MUC * Min( CS ,DS ) ) ) ) / MUC ) ) )", "obj1": 0.21, "obj2": 0.5605877333925015}, {"determining": "( ( MRS * MRS ) + Min( ( AMS - ( ( ( ( AMS + FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) * RRS ) - FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( MUM - ( ( ( DS * RCSe ) - RMSe ) + DS ) ) - Min( CS ,MUC ) )", "obj1": 0.22, "obj2": 0.5539991913903899}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) )", "choosing": "( ( ( Max( ( Max( MUC,MLU ) - ( RMSe / CS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.56, "obj2": 0.2838138938555086}, {"determining": "Min( ( ( DDR * ACS ) - CRS ) ,( ( ( MRS * MRS ) + ( MRS / MDR ) ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( ( CS / DS ) - ( CS / DS ) ),( Max( MUM,( CS * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.066, "obj2": 0.6981154945311988}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( Max( MDR,MDR ) + MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( Min( MUM ,( CS * Max( MUC,MLU ) ) ) - ( DS + Max( RMSe,RRSe ) ) ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.428, "obj2": 0.3914477208471992}, {"determining": "( Min( ( FirstVNF_CPU - Max( Const,( PN - FirstVNF_RAM_Server ) ) ) ,( Min( FirstVNF_RAM_Server ,Min( MRS ,FirstVNF_RAM_Server ) ) * ACS ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( MUR ,( ( ( ( RMSe + RRSe ) * RCSe ) * ( DS - ( RRSe / MUM ) ) ) * MUM ) ) / ( RRSe + RRSe ) ) - CS ) * Max( MUR,( Max( MUR,MLU ) + CS ) ) )", "obj1": 0.242, "obj2": 0.5358029753121105}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( Min( RMSe ,DS ) / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.438, "obj2": 0.38281821284959533}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - Const ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) )", "obj1": 0.956, "obj2": 0.013959762474156001}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.506, "obj2": 0.33870175159328}, {"determining": "( ( DDR / Max( ( Min( PN ,BR ) * AMS ),ARS ) ) + RRS )", "choosing": "( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5449290325816143}, {"determining": "Min( ( BR - CRS ) ,( ( ( FirstVNF_Mem - ARS ) / ( FirstVNF_RAM_Server / CRS ) ) * ( MDR + Min( MRS ,MRS ) ) ) )", "choosing": "( Max( RRSe,MUM ) / ( Max( ( MLU - MLU ),CS ) * DS ) )", "obj1": 0.542, "obj2": 0.3203345726196063}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * DDR ) ),RRS ) ) * ARS )", "choosing": "( Max( ( Min( Min( MLU ,RRSe ) ,( MUC / MUM ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( Max( Max( Max( ( Min( CS ,MLU ) * MUC ),RMSe ),MUM ),( RRSe + CS ) ),RRSe ) ) )", "obj1": 0.422, "obj2": 0.39571467104092195}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.944, "obj2": 0.020343787578879325}, {"determining": "( Max( ( Min( ( BR / ARS ) ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( DS * ( MUM / DS ) ) ),( RRSe * DS ) ) ,( MLU - Min( Max( CS,( RRSe + MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.228, "obj2": 0.5478292282569315}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( BR + ARS ) + ( Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( RRSe * CS ) ,( RCSe + CS ) ) - CS ) ,DS ) - Min( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) ,CS ) )", "obj1": 0.32, "obj2": 0.4813549610059036}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ),RRS ) ) * ARS )", "choosing": "( Max( MUM,( ( DS * ( ( MUR - RCSe ) - RRSe ) ) - ( ( ( RRSe + Max( Max( MUR,CS ),MUC ) ) - MUC ) - ( ( MUR * ( MUM - ( MLU / RRSe ) ) ) / Max( CS,Min( DS ,Min( MUR ,RMSe ) ) ) ) ) ) ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.196, "obj2": 0.5782607574095213}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( DDR + ACS ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - ( MUM + RCSe ) ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.442, "obj2": 0.37824529407478596}, {"determining": "( Min( ( ( ( ACS / ( MDR * DDR ) ) - Max( CRS,CRS ) ) + FirstVNF_Mem ) ,Const ) * ( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU ,MRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( ( MUR * RMSe ) - MUR ) ,MUC ) / CS ) - Min( ( RMSe * DS ) ,( MUR * DS ) ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.24, "obj2": 0.5367173512267911}, {"determining": "( FirstVNF_RAM + Max( ( Min( ( CRS + MRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( RCSe - RRSe ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RMSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.092, "obj2": 0.6741215770483651}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / ARS ) / ( ( ( ( AMS - CRS ) + CRS ) * DDR ) - Min( MRS ,( DDR + Max( FirstVNF_CPU,ARS ) ) ) ) ) - FirstVNF_RAM_Server ) + RRS ) * ( Max( FirstVNF_Mem,ARS ) + Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "( ( MLU - CS ) * Min( MUM ,( Min( ( ( ( MUC - ( CS - DS ) ) - MLU ) - ( RMSe + ( RRSe + ( MUR + CS ) ) ) ) ,Max( MUC,( Min( Min( MUM ,RCSe ) ,MUC ) + RMSe ) ) ) / ( RRSe * RMSe ) ) ) )", "obj1": 0.35, "obj2": 0.45926009527449524}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "Min( Max( ( PN + Max( MRS,Min( MDR ,FirstVNF_CPU ) ) ),FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( Max( DS,MUR ) / CS ) / ( Min( MUC ,( CS / ( MLU + RRSe ) ) ) * DS ) )", "obj1": 0.194, "obj2": 0.578334236375401}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( FirstVNF_RAM + Max( Max( FirstVNF_Mem,ARS ),( ( Const * ( FirstVNF_CPU + Const ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC / MUM ) - ( MUR + Min( ( ( CS + MLU ) * ( ( MUC / Min( MUR ,RMSe ) ) / Min( RRSe ,( MUM + MLU ) ) ) ) ,Min( CS ,( ( CS + ( RRSe - DS ) ) + RMSe ) ) ) ) ) - ( ( MUC - DS ) * ( MUM / RRSe ) ) )", "obj1": 0.298, "obj2": 0.5011036326271525}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,( ( ACS / ( MDR * DDR ) ) - RRS ) ) ,FirstVNF_Mem ) ,( Const - FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server )", "choosing": "Max( Max( ( RRSe * ( MUM / ( MLU + MUR ) ) ),( ( RMSe * DS ) + MLU ) ),( MLU + ( ( MUC / CS ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( RCSe / RRSe ) ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.614, "obj2": 0.218512354586375}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * AMS ),FirstVNF_CPU ) ) - ( Min( CRS ,ACS ) / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR - MLU ) - Min( MUC ,MUC ) ) - Min( ( MUR / RCSe ) ,Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ) )", "obj1": 0.58, "obj2": 0.2452175416096253}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( Max( ( ( RRS * Min( RRS ,FirstVNF_RAM_Server ) ) - RRS ),RRS ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( MUC / MLU ) - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.392, "obj2": 0.4192096715776225}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.82, "obj2": 0.12856269908511547}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( FirstVNF_Mem,AMS ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( Max( DS,Max( MUM,MLU ) ) * ( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) ) )", "obj1": 0.668, "obj2": 0.17926992488420135}, {"determining": "Min( ( ( Const / CRS ) - CRS ) ,( ( ARS / Max( BR,FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( ( MLU - ( CS / RCSe ) ),( Max( MUM,Min( CS ,( MUC + RCSe ) ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.154, "obj2": 0.6142806266936474}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.568, "obj2": 0.27425276377732144}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - Const ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) ) / CS ) - ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) )", "obj1": 0.538, "obj2": 0.31673359409177876}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Max( ( Min( PN ,BR ) * AMS ),ARS ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( MLU - Min( Max( DS,MLU ) ,Min( CS ,RMSe ) ) )", "obj1": 0.788, "obj2": 0.14543250948666395}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Min( DDR ,( ( MRS * FirstVNF_Mem_Server ) * Min( CRS ,MDR ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( Min( MUR ,( MUM / ( RCSe - RRSe ) ) ) - ( RCSe / Min( ( MUM * ( MUM * MLU ) ) ,DS ) ) ) ) * MUC )", "obj1": 0.704, "obj2": 0.1590155874244993}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "( ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( CS - CS ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.416, "obj2": 0.40230810466922506}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.512, "obj2": 0.33476419781679295}, {"determining": "( ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) / Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / MDR ) ),PN ) )", "choosing": "( ( ( CS / ( MUM * ( ( MLU * ( MUM / Min( RRSe ,MUM ) ) ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.8, "obj2": 0.14489104863397279}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,( FirstVNF_Mem_Server - DDR ) ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) / ( DS - ( Max( DS,MLU ) / DS ) ) )", "obj1": 0.16, "obj2": 0.5929710969742836}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MLU - CS ) * ( MUM / MUM ) )", "obj1": 0.908, "obj2": 0.04410657872842512}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.94, "obj2": 0.02162363415123886}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( MUM / MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.094, "obj2": 0.6712373761286319}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "Min( ( BR - CRS ) ,( Max( BR,CRS ) * ( MDR + MDR ) ) )", "choosing": "( ( ( Max( ( ( RRSe * ( ( MUC - MUR ) * RRSe ) ) + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.556, "obj2": 0.2911412152962466}, {"determining": "( Min( ( Min( ( ( ( ( ACS - Const ) * FirstVNF_Mem_Server ) - Max( ( MDR + CRS ),MDR ) ) + FirstVNF_Mem ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MUM * MLU ) * ( MUM / MUM ) )", "obj1": 0.894, "obj2": 0.05637976003424431}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( Min( FirstVNF_CPU ,( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / DDR ) ) + ( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( DS / ( RRSe - CS ) ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5896880405210063}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.446, "obj2": 0.3716021186225002}, {"determining": "( ( MRS * MRS ) + Min( ( AMS - ( ( ( ( AMS + FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) * RRS ) - FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( MUM - ( ( ( DS * RCSe ) - RMSe ) + DS ) ) - Min( CS ,MUC ) )", "obj1": 0.22, "obj2": 0.5539991913903899}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( Min( Max( Const,MRS ) ,RRS ) / ( ( DDR * ACS ) - ( FirstVNF_CPU_Server + ( ( MDR - MRS ) + ( ( Const - ARS ) / MDR ) ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * ( ( CS - DS ) * ( ( RMSe * MUC ) * DS ) ) ) ) - ( ( RMSe / ( CS / RCSe ) ) * ( Min( ( RRSe - MUR ) ,Max( ( RMSe / Max( ( MUC / MUC ),Max( MUM,RMSe ) ) ),( MUC * Min( CS ,DS ) ) ) ) / MUC ) ) )", "obj1": 0.21, "obj2": 0.5605877333925015}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) )", "choosing": "( ( ( Max( ( Max( MUC,MLU ) - ( RMSe / CS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.56, "obj2": 0.2838138938555086}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( Max( MDR,MDR ) + MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( Min( MUM ,( CS * Max( MUC,MLU ) ) ) - ( DS + Max( RMSe,RRSe ) ) ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.428, "obj2": 0.3914477208471992}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + ( MUC - DS ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.542, "obj2": 0.30335190724761835}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( Min( RMSe ,DS ) / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.438, "obj2": 0.38281821284959533}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( ( ( ( Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) * ( PN * BR ) ) / Max( Const,FirstVNF_RAM ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.974, "obj2": 0.010475135835788966}, {"determining": "( ( ( ( Max( BR,CRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( ( RRS / Min( ACS ,AMS ) ) / ( ( RRS / ARS ) - RRS ) ) ,CRS ) ) ) * Const ) - ( AMS * ( ( FirstVNF_RAM_Server - Const ) + BR ) ) )", "choosing": "( Max( MUR,Max( RRSe,Max( ( Max( Min( CS ,( MUR / RMSe ) ),MUC ) + MUC ),Min( ( ( RCSe / CS ) / ( RMSe - Max( MLU,MLU ) ) ) ,Min( CS ,MUR ) ) ) ) ) - Min( DS ,MLU ) )", "obj1": 0.944, "obj2": 0.020343787578879325}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) ) ) )", "obj1": 0.294, "obj2": 0.4944262277480012}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.506, "obj2": 0.33870175159328}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.354, "obj2": 0.45486752324984053}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * DDR ) ),RRS ) ) * ARS )", "choosing": "( Max( ( Min( Min( MLU ,RRSe ) ,( MUC / MUM ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( Max( Max( Max( ( Min( CS ,MLU ) * MUC ),RMSe ),MUM ),( RRSe + CS ) ),RRSe ) ) )", "obj1": 0.422, "obj2": 0.39571467104092195}, {"determining": "Min( Max( ( PN + Max( MRS,Min( MDR ,FirstVNF_CPU ) ) ),FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( Max( DS,MUR ) / CS ) / ( Min( MUC ,( CS / ( MLU + RRSe ) ) ) * DS ) )", "obj1": 0.194, "obj2": 0.578334236375401}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "( ( BR + ARS ) + ( Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( RRSe * CS ) ,( RCSe + CS ) ) - CS ) ,DS ) - Min( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) ,CS ) )", "obj1": 0.32, "obj2": 0.4813549610059036}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( ( Const * ( FirstVNF_CPU + Const ) ) * AMS ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( CS + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5701867295147958}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 0.984, "obj2": 0.007741537305805574}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( DDR + ACS ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - ( MUM + RCSe ) ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.442, "obj2": 0.37824529407478596}, {"determining": "Min( ( BR - CRS ) ,Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( Max( ( Max( MUC,MLU ) - ( RMSe / CS ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( MLU - DS ) ) + RMSe ) ) ) ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.54, "obj2": 0.3035964837341723}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( PN - Max( ( ( RRS * MRS ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( Max( RRSe,MUM ) / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.088, "obj2": 0.6714129064254382}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / ARS ) / ( ( ( ( AMS - CRS ) + CRS ) * DDR ) - Min( MRS ,( DDR + Max( FirstVNF_CPU,ARS ) ) ) ) ) - FirstVNF_RAM_Server ) + RRS ) * ( Max( FirstVNF_Mem,ARS ) + Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "( ( MLU - CS ) * Min( MUM ,( Min( ( ( ( MUC - ( CS - DS ) ) - MLU ) - ( RMSe + ( RRSe + ( MUR + CS ) ) ) ) ,Max( MUC,( Min( Min( MUM ,RCSe ) ,MUC ) + RMSe ) ) ) / ( RRSe * RMSe ) ) ) )", "obj1": 0.35, "obj2": 0.45926009527449524}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * ( ( AMS + PN ) / CRS ) ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * ( CS / MUC ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.988, "obj2": 0.0038037607740344886}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( ACS + MRS ) ) ) ) )", "choosing": "( ( RCSe + ( ( DS - MUR ) - RCSe ) ) - Min( ( Min( RMSe ,RRSe ) / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.352, "obj2": 0.45894262785772477}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( MRS - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.994, "obj2": 0.0019100401933127517}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( ( BR - Max( ( FirstVNF_CPU - DDR ),MRS ) ) - MDR ) - ( Min( Const ,ACS ) / ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "Max( RCSe,( ( ( RCSe * ( DS / MUC ) ) + MLU ) - Min( ( MUR + ( RMSe / MUR ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( RCSe / RRSe ) ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.614, "obj2": 0.218512354586375}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.57, "obj2": 0.24369199762709984}, {"determining": "( ( CRS + AMS ) + ( ( Const - ARS ) / MDR ) )", "choosing": "( RMSe - Min( ( Min( ( Min( ( CS - ( RMSe / MUR ) ) ,DS ) - CS ) ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) )", "obj1": 0.876, "obj2": 0.11317749850611904}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / Max( ( DDR + ( Min( FirstVNF_CPU_Server ,BR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) )", "obj1": 0.736, "obj2": 0.1476207862137602}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Max( ( Min( PN ,BR ) * AMS ),ARS ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( MLU - Min( Max( DS,MLU ) ,Min( CS ,RMSe ) ) )", "obj1": 0.516, "obj2": 0.2978643547425736}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.82, "obj2": 0.12856269908511547}, {"determining": "Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + Max( ( ( RRS * Const ) - ( MRS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.568, "obj2": 0.27425276377732144}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.538, "obj2": 0.2837618603986298}, {"determining": "( Max( ( ( RRS * Min( RRS ,FirstVNF_RAM_Server ) ) - RRS ),RRS ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( MUC / MLU ) - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.392, "obj2": 0.4192096715776225}, {"determining": "( DDR + ( Max( ( ACS * DDR ),( ( AMS * DDR ) - RRS ) ) / MDR ) )", "choosing": "( RMSe - Min( MUM ,DS ) )", "obj1": 0.856, "obj2": 0.12021053121888876}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Max( ( Min( PN ,BR ) * AMS ),ARS ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( MLU - Min( Max( DS,MLU ) ,Min( CS ,RMSe ) ) )", "obj1": 0.788, "obj2": 0.14543250948666395}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Min( DDR ,( ( MRS * FirstVNF_Mem_Server ) * Min( CRS ,MDR ) ) ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( ( MLU - ( Min( MUR ,( MUM / ( RCSe - RRSe ) ) ) - ( RCSe / Min( ( MUM * ( MUM * MLU ) ) ,DS ) ) ) ) * MUC )", "obj1": 0.704, "obj2": 0.1590155874244993}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.402, "obj2": 0.4004756319210176}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.512, "obj2": 0.33476419781679295}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( Const * ( PN + BR ) ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( MLU - ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.8, "obj2": 0.1441928844995484}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( Min( ( FirstVNF_CPU - CRS ) ,Max( FirstVNF_Mem,AMS ) ) * ( Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) + ( MDR - CRS ) ) )", "choosing": "( Max( DS,Max( MUM,MLU ) ) * ( Min( ( MUC - CS ) ,DS ) - Min( ( MUR + CS ) ,Min( CS ,( ( ( Min( DS ,MUC ) * RCSe ) * RMSe ) - ( MUM + RCSe ) ) ) ) ) )", "obj1": 0.668, "obj2": 0.17926992488420135}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MLU - CS ) * ( MUM / MUM ) )", "obj1": 0.908, "obj2": 0.04410657872842512}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( FirstVNF_CPU_Server + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,RMSe ) ) )", "obj1": 0.694, "obj2": 0.1660976098727195}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( MUM / MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.094, "obj2": 0.6712373761286319}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( ( ( ( RRS + BR ) + FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) + RRS ) * Max( ( FirstVNF_CPU_Server * Const ),RRS ) )", "choosing": "( Min( MUR ,Max( DS,Min( MLU ,RRSe ) ) ) * ( Max( CS,Max( MUR,( Min( CS ,( MUM - ( MLU - MUR ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.322, "obj2": 0.4722201838955545}, {"determining": "( Min( ( Min( ( ( ( ( ACS - Const ) * FirstVNF_Mem_Server ) - Max( ( MDR + CRS ),MDR ) ) + FirstVNF_Mem ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MUM * MLU ) * ( MUM / MUM ) )", "obj1": 0.894, "obj2": 0.05637976003424431}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( MDR * ( Min( MDR ,MRS ) * AMS ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,( ( MUM / CS ) + ( RMSe / MUM ) ) ) - Min( MUC ,CS ) ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.68, "obj2": 0.17684529981520486}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( Min( FirstVNF_CPU ,( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / DDR ) ) + ( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( DS / ( RRSe - CS ) ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5896880405210063}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( MRS * DDR ) ),RRS ) ) * ARS )", "choosing": "( Max( ( Min( Min( MLU ,RRSe ) ,( MUC / MUM ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( Max( Max( Max( ( Min( CS ,MLU ) * MUC ),RMSe ),MUM ),( RRSe + CS ) ),RRSe ) ) )", "obj1": 0.422, "obj2": 0.39571467104092195}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.446, "obj2": 0.3716021186225002}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( ( Const * ( FirstVNF_CPU + Const ) ) * AMS ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( CS + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5701867295147958}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ( ( RRS / PN ) / ARS ) * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / RCSe ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( CS + ( ( RMSe / ( Max( RRSe,CS ) / RRSe ) ) - MLU ) ) - MUC ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 0.984, "obj2": 0.007741537305805574}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - BR ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( RRSe * MUR ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.0089866404626927}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,( FirstVNF_Mem_Server - DDR ) ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) / ( DS - ( Max( DS,MLU ) / DS ) ) )", "obj1": 0.16, "obj2": 0.5929710969742836}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) ) ) )", "obj1": 0.294, "obj2": 0.4944262277480012}, {"determining": "( Min( ( ( MDR + MDR ) / MRS ) ,( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( FirstVNF_CPU_Server + ACS ) ) ) ) ) * FirstVNF_Mem )", "choosing": "( ( ( Min( RMSe ,( Max( ( CS + Min( MUC ,MUR ) ),RMSe ) + ( RRSe - DS ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) ) - CS ) * ( DS - RCSe ) )", "obj1": 0.506, "obj2": 0.33870175159328}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5783310452473983}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "( ( BR + ARS ) + ( Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( RRSe * CS ) ,( RCSe + CS ) ) - CS ) ,DS ) - Min( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) ,CS ) )", "obj1": 0.32, "obj2": 0.4813549610059036}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( DDR + ACS ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - ( MUM + RCSe ) ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( ( RCSe + Min( Max( MUR,RMSe ) ,CS ) ) / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.442, "obj2": 0.37824529407478596}, {"determining": "( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( Min( RMSe ,DS ) / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.438, "obj2": 0.38281821284959533}, {"determining": "( ( ( PN - Max( DDR,( Const * Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( Min( RMSe ,DS ) / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.432, "obj2": 0.387643038156769}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( Max( MDR,MDR ) + MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( ( Min( MUM ,( CS * Max( MUC,MLU ) ) ) - ( DS + Max( RMSe,RRSe ) ) ) + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( MUC / Max( MUR,RRSe ) ) )", "obj1": 0.428, "obj2": 0.3914477208471992}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( ( MRS * Max( CRS,FirstVNF_RAM ) ) - AMS ) * ( ( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,Min( FirstVNF_Mem ,ACS ) ) + AMS ) ,RRS ) ) * FirstVNF_RAM_Server ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( ( MLU - RRSe ) + RMSe ) * ( ( ( ( MUR / RMSe ) - Max( Max( MUR,RCSe ),DS ) ) * MUC ) + RRSe ) )", "obj1": 0.314, "obj2": 0.4848072693753981}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( PN - Max( ( ( RRS * MRS ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( Max( RRSe,MUM ) / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.088, "obj2": 0.6714129064254382}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Min( MRS ,AMS ) / CRS ) - ( MDR * ( Min( MDR ,MRS ) * Min( MRS ,Const ) ) ) ) ) )", "choosing": "( ( ( CS / ( Min( DS ,RMSe ) * ( MUC + RMSe ) ) ) + DS ) / ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.51, "obj2": 0.33799441787973256}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( MRS - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( DS - ( DS / ( RCSe - MUM ) ) ) )", "obj1": 0.994, "obj2": 0.0019100401933127517}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( DDR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - RRSe ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) * FirstVNF_CPU ) - AMS ) + ( Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) / ( ( Min( Min( BR ,AMS ) ,Max( Const,PN ) ) / ( FirstVNF_RAM_Server / Max( MRS,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( RRSe * CS ) ,( RCSe + CS ) ) - CS ) ,Max( RMSe,( CS / Max( ( Max( RCSe,MLU ) / ( Min( RCSe ,MUC ) * DS ) ),CS ) ) ) ) - Min( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / RMSe ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - Max( ( FirstVNF_CPU - DDR ),MRS ) ) - MDR ) - ( Min( Const ,ACS ) / ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "Max( RCSe,( ( ( RCSe * ( DS / MUC ) ) + MLU ) - Min( ( MUR + ( RMSe / MUR ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) * Const ) - Min( ACS ,CRS ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) ) ) )", "obj1": 0.814, "obj2": 0.06240396529456803}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( Const * ( AMS + BR ) ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MUM - Min( MUC ,CS ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.702, "obj2": 0.1451221972502321}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( ( Min( ( ( ( ( ACS - Const ) * FirstVNF_Mem_Server ) - Max( ( MDR + CRS ),MDR ) ) + FirstVNF_Mem ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) )", "choosing": "( ( DS + RMSe ) * ( MUM / MUM ) )", "obj1": 0.812, "obj2": 0.14062556683024538}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( Const * ( PN + BR ) ) / ( FirstVNF_RAM - DDR ) ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( ( MLU - ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) ) * ( Max( CS,Max( MUR,( ( MUM * RRSe ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 0.8, "obj2": 0.1441928844995484}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.614, "obj2": 0.218512354586375}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.402, "obj2": 0.4004756319210176}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.58, "obj2": 0.22916501866952166}, {"determining": "( Max( ( ( RRS * Min( RRS ,FirstVNF_RAM_Server ) ) - RRS ),RRS ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( MUC / MLU ) - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.392, "obj2": 0.4192096715776225}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( MUM / MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.094, "obj2": 0.6712373761286319}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.57, "obj2": 0.24369199762709984}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( Min( MRS ,Const ) / RRS ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( ( MUC / MUC ) / ( RRSe + RCSe ) ) * Min( MUM ,( ( ( Min( MUC ,( Min( RMSe ,MLU ) - MLU ) ) - Min( ( ( MUC * MLU ) - MUR ) ,DS ) ) + CS ) / ( ( ( DS * MLU ) - MUR ) - RCSe ) ) ) )", "obj1": 0.308, "obj2": 0.48607819138618946}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( ( BR + BR ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * ( ( MRS - FirstVNF_CPU_Server ) - Const ) ) ) )", "choosing": "( Min( Min( ( ( RCSe + MUM ) + DS ) ,( RCSe - ( ( MLU / ( RMSe - ( CS - MLU ) ) ) / RRSe ) ) ) ,DS ) - Min( Min( ( RRSe * CS ) ,( RCSe + CS ) ) ,CS ) )", "obj1": 0.292, "obj2": 0.5017048892426842}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) )", "obj1": 0.916, "obj2": 0.027679255575348245}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( Min( FirstVNF_CPU ,( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / DDR ) ) + ( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( DS / ( RRSe - CS ) ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5896880405210063}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - ( Max( ( Min( PN ,BR ) * AMS ),ARS ) - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / FirstVNF_Mem ) ) ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( CS ,RMSe ) )", "obj1": 0.15, "obj2": 0.6048689644727051}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Min( ( Min( ( ( ( ( ACS - Const ) * FirstVNF_Mem_Server ) - Max( ( MDR + CRS ),MDR ) ) + FirstVNF_Mem ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MUM * MLU ) * ( MUM / MUM ) )", "obj1": 0.894, "obj2": 0.05637976003424431}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ARS * Max( ( FirstVNF_RAM - FirstVNF_RAM ),FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / Min( RCSe ,CS ) ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( Min( ( Min( ( ( ( ( ACS - Const ) * FirstVNF_Mem_Server ) - Max( ( BR + ARS ),MDR ) ) + FirstVNF_Mem ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * Max( MDR,MRS ) )", "choosing": "( ( MUM * ( ( Max( ( DS / MLU ),RRSe ) - MLU ) + MUM ) ) * ( MUM / MUM ) )", "obj1": 0.906, "obj2": 0.04785804691017577}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 0.984, "obj2": 0.007741537305805574}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - BR ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( RRSe * MUR ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.0089866404626927}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,( FirstVNF_Mem_Server - DDR ) ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) / ( DS - ( Max( DS,MLU ) / DS ) ) )", "obj1": 0.16, "obj2": 0.5929710969742836}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) + ( BR * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) ) ) )", "obj1": 0.294, "obj2": 0.4944262277480012}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5783310452473983}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MLU - CS ) * ( MUM / MUM ) )", "obj1": 0.908, "obj2": 0.04410657872842512}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( MDR * ( ( FirstVNF_RAM - DDR ) - PN ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - Min( ( MUR / Max( Min( MUC ,( ( ( DS * MLU ) / MUC ) + RMSe ) ),RMSe ) ) ,Min( RCSe ,RMSe ) ) )", "obj1": 0.306, "obj2": 0.491396650204143}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ( ( RRS / PN ) / ARS ) * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / RCSe ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( CS + ( ( RMSe / ( Max( RRSe,CS ) / RRSe ) ) - MLU ) ) - MUC ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( PN - Max( ( ( RRS * MRS ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( Max( RRSe,MUM ) / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.088, "obj2": 0.6714129064254382}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( ( Const * ( FirstVNF_CPU + Const ) ) * AMS ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( CS + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5701867295147958}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( ( Const * ( ( RRS + BR ) + Const ) ) * AMS ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( CS + ( MUC - RMSe ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5701867295147958}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.084, "obj2": 0.6765021348514954}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,FirstVNF_CPU ) ) * ( MDR + ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ) ) ) )", "choosing": "( ( ( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.994, "obj2": 0.0016910962475989036}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( FirstVNF_CPU_Server,ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,FirstVNF_CPU ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * ( MLU + DS ) ) ) ,( MLU - Min( ( Max( MUC,MLU ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( ( PN - Max( ( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) - RRS ),RRS ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,( ( MUM / MUM ) - MUR ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( RCSe / RRSe ) ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) * FirstVNF_CPU ) - AMS ) + ( Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) / ( ( Min( Min( BR ,AMS ) ,Max( Const,PN ) ) / ( FirstVNF_RAM_Server / Max( MRS,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( RRSe * CS ) ,( RCSe + CS ) ) - CS ) ,Max( RMSe,( CS / Max( ( Max( RCSe,MLU ) / ( Min( RCSe ,MUC ) * DS ) ),CS ) ) ) ) - Min( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( Max( Const,FirstVNF_CPU_Server ) * ( DDR - ( ACS * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( MUR / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( MUM ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Max( Min( ( ( ( ( CRS + PN ) * FirstVNF_RAM ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RMSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * ( RRSe + ( RCSe * RCSe ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( MRS - ( PN / FirstVNF_RAM_Server ) ) * ACS ) - ARS ) * Const ) - Min( ACS ,CRS ) ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / Min( MUC ,Min( CS ,RMSe ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( DDR,( Const * Min( ( BR - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( CRS + PN ) ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) ) )", "choosing": "( Min( RMSe ,DS ) - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( Min( RRSe ,DS ) / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( PN - Max( ( ACS - ( AMS * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( DDR,RRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / RMSe ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( ACS / FirstVNF_Mem ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.044, "obj2": 0.759609854736104}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( Max( DDR,( Const * FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * DS ) ) )", "obj1": 0.782, "obj2": 0.11195501427903129}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) * Const ) - Min( ACS ,CRS ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ,CS ) ) - Min( ( MUR / Min( MLU ,Max( ( MUM - RRSe ),MUC ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) ) ) )", "obj1": 0.814, "obj2": 0.06240396529456803}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.604, "obj2": 0.2063095289708495}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.402, "obj2": 0.4004756319210176}, {"determining": "( ( ( PN / RRS ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUR - MLU ) - ( MUM * ( ( MUR - MLU ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.882, "obj2": 0.05731749738936051}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Max( ( ( RRS * Min( RRS ,FirstVNF_RAM_Server ) ) - RRS ),RRS ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( MUC / MLU ) - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.392, "obj2": 0.4192096715776225}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.306, "obj2": 0.4842280825503094}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.088, "obj2": 0.6671599693743379}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ),FirstVNF_CPU ) ) - ( ( Max( FirstVNF_Mem,Max( RRS,PN ) ) / PN ) / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( ( MUR + RCSe ) ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.586, "obj2": 0.22408235785368247}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.58, "obj2": 0.22916501866952166}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) )", "obj1": 0.916, "obj2": 0.027679255575348245}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( Min( FirstVNF_CPU ,RRS ) / ( Min( FirstVNF_CPU ,( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM / DDR ) ) + ( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * DDR ) ) ) )", "choosing": "( ( RRSe - ( ( CS * RMSe ) * Min( CS ,RRSe ) ) ) - Min( ( ( MUR * DS ) * ( DS / ( RRSe - CS ) ) ) ,( ( RMSe + MUM ) * ( DS + RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5896880405210063}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( RRS * Min( CRS ,FirstVNF_Mem ) ) ) ) + ( ( DDR / Max( ( FirstVNF_CPU_Server * AMS ),ARS ) ) * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( ( DS - RMSe ) * RRSe ) ) ) ) )", "obj1": 0.282, "obj2": 0.5066736426655196}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Min( ( Min( ( ( ( ( ACS - Const ) * FirstVNF_Mem_Server ) - Max( ( MDR + CRS ),MDR ) ) + FirstVNF_Mem ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MUM * MLU ) * ( MUM / MUM ) )", "obj1": 0.894, "obj2": 0.05637976003424431}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / Min( FirstVNF_RAM ,RRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( ( MUR * MUR ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.946, "obj2": 0.016799598874354008}, {"determining": "( Min( ( Min( ( ( ( ( ACS - Const ) * FirstVNF_Mem_Server ) - Max( ( BR + ARS ),MDR ) ) + FirstVNF_Mem ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * Max( MDR,MRS ) )", "choosing": "( ( MUM * ( ( Max( ( DS / MLU ),RRSe ) - MLU ) + MUM ) ) * ( MUM / MUM ) )", "obj1": 0.906, "obj2": 0.04785804691017577}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,( FirstVNF_Mem_Server - DDR ) ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( ( ( ( MUM / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) ) ,CS ) / ( DS - ( Max( DS,MLU ) / DS ) ) )", "obj1": 0.16, "obj2": 0.5929710969742836}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - ACS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUR ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.082, "obj2": 0.6751126767921403}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) ,( MDR - CRS ) ) * FirstVNF_Mem ) ,Const ) * ( PN - Max( ( ( AMS / BR ) - ( AMS * ( ( ( BR - CRS ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) )", "choosing": "( ( MLU - CS ) * ( MUM / MUM ) )", "obj1": 0.908, "obj2": 0.04410657872842512}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - BR ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( RRSe * MUR ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.0089866404626927}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( Min( MDR ,( ( PN / FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,CS ) ) - ( DS + CS ) )", "obj1": 0.19, "obj2": 0.5782753787444026}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ( ( RRS / PN ) / ARS ) * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / RCSe ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( CS + ( ( RMSe / ( Max( RRSe,CS ) / RRSe ) ) - MLU ) ) - MUC ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( ( Const * ( ( RRS + BR ) + Const ) ) * AMS ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( CS + ( MUC - RMSe ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5701867295147958}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( ( Const * ( FirstVNF_CPU + Const ) ) * AMS ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( CS + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5701867295147958}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ARS * Max( ( FirstVNF_RAM - FirstVNF_RAM ),FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / Min( RCSe ,CS ) ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5783310452473983}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( Max( ( Min( Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( MDR - Min( ARS ,RRS ) ) ) ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( Min( CRS ,PN ) - Max( DDR,FirstVNF_CPU ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( DS + RCSe ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.994, "obj2": 0.0016910962475989034}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( FirstVNF_CPU_Server,ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,FirstVNF_CPU ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * ( MLU + DS ) ) ) ,( MLU - Min( ( Max( MUC,MLU ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( ( PN - Max( ( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * MDR ) ) ) * ( MDR + MDR ) ) - RRS ),RRS ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,( ( MUM / MUM ) - MUR ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,( DS + ( MUC - ( MLU + DS ) ) ) ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( ( BR - Max( ( FirstVNF_CPU - DDR ),MRS ) ) - MDR ) - ( Min( Const ,ACS ) / ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "Max( RCSe,( ( ( RCSe * ( DS / MUC ) ) + MLU ) - Min( ( MUR + ( RMSe / MUR ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( RCSe / RRSe ) ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) * FirstVNF_CPU ) - AMS ) + ( Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) / ( ( Min( Min( BR ,AMS ) ,Max( Const,PN ) ) / ( FirstVNF_RAM_Server / Max( MRS,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( RRSe * CS ) ,( RCSe + CS ) ) - CS ) ,Max( RMSe,( CS / Max( ( Max( RCSe,MLU ) / ( Min( RCSe ,MUC ) * DS ) ),CS ) ) ) ) - Min( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( Max( Const,FirstVNF_CPU_Server ) * ( DDR - ( ACS * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( MUR / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( MUM ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Max( Min( ( ( ( ( CRS + PN ) * FirstVNF_RAM ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RMSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( Max( CS,Max( MUR,( ( MUM * ( RRSe + ( RCSe * RCSe ) ) ) + ( MUC - RMSe ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * PN ) - FirstVNF_RAM_Server ) + RRS ) * Max( Min( ( ( ( MDR - FirstVNF_RAM ) / ( Min( ( FirstVNF_CPU_Server / Const ) ,Const ) - DDR ) ) * AMS ) ,MDR ),Min( ARS ,Const ) ) )", "choosing": "( ( MLU - ( MLU * ( ( ( MLU * ( ( MUR - RCSe ) - ( MUM - RMSe ) ) ) / RCSe ) + RCSe ) ) ) * ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( ( ACS - ( AMS * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( DDR,RRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( ACS / FirstVNF_Mem ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.044, "obj2": 0.759609854736104}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( Max( DDR,( Const * FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * DS ) ) )", "obj1": 0.782, "obj2": 0.11195501427903129}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.604, "obj2": 0.2063095289708495}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.402, "obj2": 0.4004756319210176}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( Max( ( ( RRS * Min( RRS ,FirstVNF_RAM_Server ) ) - RRS ),RRS ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( MUC / MLU ) - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.392, "obj2": 0.4192096715776225}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.306, "obj2": 0.4842280825503094}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.088, "obj2": 0.6671599693743379}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ),FirstVNF_CPU ) ) - ( ( Max( FirstVNF_Mem,Max( RRS,PN ) ) / PN ) / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( ( MUR + RCSe ) ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.586, "obj2": 0.22408235785368247}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.58, "obj2": 0.22916501866952166}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) )", "obj1": 0.916, "obj2": 0.027679255575348245}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( RRS * Min( CRS ,FirstVNF_Mem ) ) ) ) + ( ( DDR / Max( ( FirstVNF_CPU_Server * AMS ),ARS ) ) * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( ( DS - RMSe ) * RRSe ) ) ) ) )", "obj1": 0.282, "obj2": 0.5066736426655196}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Max( ( ( RRS * Const ) - RRS ),( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( PN - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.38, "obj2": 0.4303412579959756}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / Min( FirstVNF_RAM ,RRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( ( MUR * MUR ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.946, "obj2": 0.016799598874354008}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5685617038298709}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - BR ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( RRSe * MUR ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.0089866404626927}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - ACS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUR ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.082, "obj2": 0.6751126767921403}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( Min( MDR ,( ( PN / FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,CS ) ) - ( DS + CS ) )", "obj1": 0.19, "obj2": 0.5782753787444026}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ARS * Max( ( FirstVNF_RAM - FirstVNF_RAM ),FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / Min( RCSe ,CS ) ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.03116386436661647}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ( ( RRS / PN ) / ARS ) * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / RCSe ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( CS + ( ( RMSe / ( Max( RRSe,CS ) / RRSe ) ) - MLU ) ) - MUC ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( BR - Max( ( ( ( PN - Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) - RRS ),RRS ) ) * ARS )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.08, "obj2": 0.6789096136364915}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5783310452473983}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,MUC ) + ( RMSe - Max( RRSe,( RMSe / ( ( ( RRSe - MUM ) + CS ) / ( MUM + DS ) ) ) ) ) ) / ( DS * Max( Min( RMSe ,( CS / ( RRSe * ( ( MUC - MUR ) * RRSe ) ) ) ),CS ) ) )", "obj1": 0.992, "obj2": 0.002255311736901587}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( FirstVNF_CPU_Server,ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,FirstVNF_CPU ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * ( MLU + DS ) ) ) ,( MLU - Min( ( Max( MUC,MLU ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( ( Min( Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( MDR - Min( ARS ,RRS ) ) ) ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( Min( CRS ,PN ) - Max( DDR,FirstVNF_CPU ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( DS + RCSe ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.994, "obj2": 0.0016910962475989034}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.994, "obj2": 0.0016910962475989034}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,BR ) * AMS ),( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - FirstVNF_CPU ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( CS,MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / RMSe ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - Max( ( FirstVNF_CPU - DDR ),MRS ) ) - MDR ) - ( Min( Const ,ACS ) / ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "Max( RCSe,( ( ( RCSe * ( DS / MUC ) ) + MLU ) - Min( ( MUR + ( RMSe / MUR ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( RCSe / RRSe ) ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Max( ACS,( MRS * FirstVNF_CPU_Server ) ) * BR ) ) / ( DDR + ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) * Const ) - ( AMS * CRS ) )", "choosing": "( ( MUC / MUM ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( MDR * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * ( RRSe - MUM ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MUC ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * FirstVNF_CPU ) - ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,CRS ) - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( DS - MUR ),MUC ) * Max( CS,( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) * FirstVNF_CPU ) - AMS ) + ( Max( Min( ( ( ( ARS * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) / ( ( Min( Min( BR ,AMS ) ,Max( Const,PN ) ) / ( FirstVNF_RAM_Server / Max( MRS,( FirstVNF_RAM - FirstVNF_RAM ) ) ) ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( Min( ( RRSe * CS ) ,( RCSe + CS ) ) - CS ) ,Max( RMSe,( CS / Max( ( Max( RCSe,MLU ) / ( Min( RCSe ,MUC ) * DS ) ),CS ) ) ) ) - Min( ( Max( Min( MUC ,RRSe ),RMSe ) / CS ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "Min( ( ( ( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) * Const ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( ACS / FirstVNF_Mem ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.044, "obj2": 0.759609854736104}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.604, "obj2": 0.2063095289708495}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( Max( ( ( RRS * Const ) - RRS ),( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( PN - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.38, "obj2": 0.4303412579959756}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.306, "obj2": 0.4842280825503094}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ),FirstVNF_CPU ) ) - ( ( Max( FirstVNF_Mem,Max( RRS,PN ) ) / PN ) / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( ( MUR + RCSe ) ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.586, "obj2": 0.22408235785368247}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.58, "obj2": 0.22916501866952166}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.09, "obj2": 0.6651482566272213}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) )", "obj1": 0.916, "obj2": 0.027679255575348245}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( RRS * Min( CRS ,FirstVNF_Mem ) ) ) ) + ( ( DDR / Max( ( FirstVNF_CPU_Server * AMS ),ARS ) ) * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( ( DS - RMSe ) * RRSe ) ) ) ) )", "obj1": 0.282, "obj2": 0.5066736426655196}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / Min( FirstVNF_RAM ,RRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( ( MUR * MUR ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.946, "obj2": 0.016799598874354008}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / FirstVNF_Mem_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( CS - ( CS + MUR ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5685617038298709}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ( ( RRS / PN ) / ARS ) * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / RCSe ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( CS + ( ( RMSe / ( Max( RRSe,CS ) / RRSe ) ) - MLU ) ) - MUC ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - ACS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUR ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.082, "obj2": 0.6751126767921403}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6701087654782647}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( AMS + ( AMS * Min( ( ( RRS / DDR ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * Min( MDR ,( MDR + PN ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( RRSe + MUC ) )", "obj1": 0.97, "obj2": 0.00856393491448744}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( MUR * ( RMSe * MUM ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.005208421144118217}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.030602107807063964}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - BR ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( RRSe * MUR ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.0089866404626927}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ARS * Max( ( FirstVNF_RAM - FirstVNF_RAM ),FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / Min( RCSe ,CS ) ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.088, "obj2": 0.6671599693743379}, {"determining": "( ( ( Max( MDR,BR ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.08, "obj2": 0.6788978482920701}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.992, "obj2": 0.002177276522231001}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( FirstVNF_CPU_Server,ARS ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,FirstVNF_CPU ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * ( MLU + DS ) ) ) ,( MLU - Min( ( Max( MUC,MLU ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.996, "obj2": 0.0011115281810553672}, {"determining": "( Max( ( Min( Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( MDR - Min( ARS ,RRS ) ) ) ,BR ) * AMS ),ARS ) * ( Min( PN ,BR ) * ( ( Min( CRS ,PN ) - Max( DDR,FirstVNF_CPU ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( DS + RCSe ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.994, "obj2": 0.0016910962475989034}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),ARS ) * ( FirstVNF_RAM_Server / ( BR - ( FirstVNF_Mem - PN ) ) ) )", "choosing": "( ( ( Min( Max( ( RRSe + ( ( RCSe / RRSe ) - DS ) ),( RRSe * MUR ) ) ,( MLU - Min( ( ( DS * DS ) - Max( RMSe,RMSe ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.994, "obj2": 0.0016910962475989034}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,BR ) * AMS ),( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - FirstVNF_CPU ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( CS,MUM ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( PN - Max( ( ACS - ( AMS * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( DDR,RRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( ( FirstVNF_CPU_Server * Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / RMSe ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - Max( ( FirstVNF_CPU - DDR ),MRS ) ) - MDR ) - ( Min( Const ,ACS ) / ( FirstVNF_RAM_Server / ACS ) ) )", "choosing": "Max( RCSe,( ( ( RCSe * ( DS / MUC ) ) + MLU ) - Min( ( MUR + ( RMSe / MUR ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ACS / Const ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + DDR ) ,( Const * ( AMS + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( RCSe / RRSe ) ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / CS ) ) ) ) ) + DS ) / ( DS - ( DS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,Min( BR ,FirstVNF_Mem ) ) / ( ( ( ARS + FirstVNF_Mem_Server ) - DDR ) + ( FirstVNF_Mem / ( FirstVNF_CPU - ARS ) ) ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + ( MUM + ( Min( DS ,RMSe ) + Min( MLU ,( Min( MLU ,( RCSe + RCSe ) ) + ( Min( RMSe ,RMSe ) - MLU ) ) ) ) ) ) / ( ( DS * MUC ) * ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * DS ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + Min( AMS ,( FirstVNF_CPU_Server + MDR ) ) ) / ( RRS + Min( BR ,FirstVNF_RAM ) ) ) * Min( ( AMS - FirstVNF_Mem_Server ) ,( ( ( ( AMS / FirstVNF_RAM ) * ( DDR - ( Const * RRS ) ) ) + PN ) - ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ACS - Min( CRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( RCSe ,( ( MUC * Max( CS,( CS / DS ) ) ) / Max( Min( Max( Max( DS,RCSe ),CS ) ,DS ),Max( ( RCSe + Max( DS,RCSe ) ),( Min( CS ,MLU ) + MUR ) ) ) ) ) + DS ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) - ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - PN ) / Max( FirstVNF_RAM,MRS ) ) + Min( PN ,FirstVNF_RAM_Server ) ) ) + FirstVNF_Mem ) ) + ( FirstVNF_Mem / ( ( Min( Min( ( FirstVNF_Mem_Server + ( ACS + RRS ) ) ,( Max( PN,Const ) * ( PN + BR ) ) ) ,MDR ) / ( FirstVNF_RAM_Server / PN ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC - CS ) ,DS ) - ( ( ( CS / ( MUM * ( ( MLU * MUM ) / ( CS - ( RMSe / RMSe ) ) ) ) ) + DS ) / ( MUM + ( ( ( ( ( RRSe - RRSe ) - RCSe ) * Max( MUM,RMSe ) ) - MLU ) + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,DDR ) * ( MDR + MDR ) )", "choosing": "( ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) / ( DS * ( MLU - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,ARS ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Const + FirstVNF_CPU ) / DDR ) ) - ( MDR * ( Min( BR ,MRS ) * Min( MRS ,Const ) ) ) ) ) ) + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + DDR ) )", "choosing": "Max( Max( ( ( CS / ( ( Max( ( MLU * RRSe ),RMSe ) + RRSe ) * ( MUM / RRSe ) ) ) + DS ),( RCSe / DS ) ),MLU )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( ACS / FirstVNF_Mem ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.044, "obj2": 0.759609854736104}, {"determining": "( Min( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) * Const ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( ( DS / DS ) * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) * Const ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * ( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) / CS ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( ACS / FirstVNF_Mem ) + ( Const - ARS ) ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) / ( ( DS - ( DS / DS ) ) - ( DS / DS ) ) )", "obj1": 0.044, "obj2": 0.759609854736104}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "Max( Min( Max( Max( BR,PN ),( ( FirstVNF_CPU_Server * ( ( CRS - RRS ) + FirstVNF_Mem ) ) * DDR ) ) ,( Const - ARS ) ),( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) )", "choosing": "Max( ( Max( ( DS + MUM ),( DS * RMSe ) ) * ( ( Min( DS ,MUR ) / ( ( ( DS - ( MUM + DS ) ) + DS ) * MUR ) ) * ( MUC / CS ) ) ),Min( ( Max( CS,RRSe ) - ( RMSe / MUR ) ) ,( Max( RCSe,RCSe ) + ( MUM / MLU ) ) ) )", "obj1": 0.496, "obj2": 0.34808143817795584}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.604, "obj2": 0.2063095289708495}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( Max( ( ( RRS * Const ) - RRS ),( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( PN - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.38, "obj2": 0.4303412579959756}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ),FirstVNF_CPU ) ) - ( ( Max( FirstVNF_Mem,Max( RRS,PN ) ) / PN ) / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( ( MUR + RCSe ) ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.586, "obj2": 0.22408235785368247}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.58, "obj2": 0.22916501866952166}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) )", "obj1": 0.916, "obj2": 0.027679255575348245}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.09, "obj2": 0.6651482566272213}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( RRS * Min( CRS ,FirstVNF_Mem ) ) ) ) + ( ( DDR / Max( ( FirstVNF_CPU_Server * AMS ),ARS ) ) * ARS ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( MUC ,CS ) ) - Min( ( MUR / Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) ) ,Min( CS ,Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( ( DS - RMSe ) * RRSe ) ) ) ) )", "obj1": 0.282, "obj2": 0.5066736426655196}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / Min( FirstVNF_RAM ,RRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( ( MUR * MUR ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.946, "obj2": 0.016799598874354008}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) )", "choosing": "( ( DS * Max( Min( Max( MUM,( ( RCSe + RRSe ) / ( MUC * CS ) ) ) ,( CS / ( ( MUR + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.192, "obj2": 0.5721031455775267}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6701087654782647}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - ACS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUR ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.082, "obj2": 0.6751126767921403}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( Min( ( FirstVNF_Mem / MDR ) ,CRS ) * Max( ( FirstVNF_RAM - FirstVNF_RAM ),FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / Min( RCSe ,CS ) ) * MLU ) / ( RCSe / Min( ( RCSe / MUM ) ,CS ) ) ) ) ,( ( Max( MUC,MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + RMSe ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.196, "obj2": 0.5685617038298709}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / ( PN * BR ) ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem * MDR ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( MLU * DS ) ) )", "obj1": 0.952, "obj2": 0.01489358667141024}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( AMS + ( AMS * Min( ( ( RRS / DDR ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * Min( MDR ,( MDR + PN ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( RRSe + MUC ) )", "obj1": 0.97, "obj2": 0.00856393491448744}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.030602107807063964}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - Min( CS ,RMSe ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.008969629761981788}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - AMS ) + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( DS - Min( MUR ,DS ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( MUR * ( RMSe * MUM ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.005208421144118217}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.088, "obj2": 0.6661603178515915}, {"determining": "( ( ( Max( MDR,BR ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.08, "obj2": 0.6788978482920701}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - FirstVNF_CPU_Server ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / FirstVNF_Mem_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( CS - ( CS + MUR ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( MUR * ( RMSe * MUM ) ) + ( MLU - ( ( RCSe / RRSe ) - ( MUC * CS ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.986, "obj2": 0.004282323952711974}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.992, "obj2": 0.002177276522231001}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( ( ( RRS + FirstVNF_Mem_Server ) * Const ) / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) ) ) )", "choosing": "( ( MUM - ( ( CS / CS ) / RMSe ) ) - Min( ( ( MUC / MUR ) / RCSe ) ,( MUM / CS ) ) )", "obj1": 0.996, "obj2": 0.0010933296328976979}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( Max( ( Min( PN ,BR ) * AMS ),( ( RRS * Min( MDR ,MRS ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / FirstVNF_CPU ) ) ) ) ) * ( Min( PN ,BR ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,MUC ) ) ,CS ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.994, "obj2": 0.0015868606240158126}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( ( ( RRS + FirstVNF_Mem_Server ) * Const ) / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) - ( ACS / FirstVNF_Mem ) ) + Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) ) ) )", "choosing": "( ( MUM - ( ( CS / CS ) / RMSe ) ) - Min( ( ( MUC / Min( RMSe ,Max( CS,RCSe ) ) ) / RCSe ) ,CS ) )", "obj1": 0.994, "obj2": 0.0015868606240158126}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Max( Min( ( ( ( ( ( RRS / PN ) / ARS ) * Max( ARS,FirstVNF_CPU ) ) / MDR ) * AMS ) ,MDR ),( Max( RRS,FirstVNF_CPU ) - ACS ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( Min( MUR ,( ( ( CS / RCSe ) * MLU ) / ( RCSe / Min( RMSe ,CS ) ) ) ) ,( ( CS + ( ( RMSe / ( Max( RRSe,CS ) / RRSe ) ) - MLU ) ) - MUC ) ) )", "obj1": 0.27, "obj2": 0.5069899926234607}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,BR ) * AMS ),( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - FirstVNF_CPU ) / FirstVNF_CPU ) ) ) ) ) * ( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) * ( ( PN - Max( DDR,( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( Max( Max( MUM,RMSe ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( CS,MUM ) ) ,CS ) ) ) / CS ) - Min( ( RCSe + ( RCSe + DS ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.99, "obj2": 0.0032241927074909524}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( ( ACS - ( AMS * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( DDR,RRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RCSe ) ) ,Min( DS ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( Min( ( ( ( Min( MDR ,MRS ) * ( RRS / ARS ) ) - ARS ) * Const ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) * Const ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( ( DS / DS ) * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.492, "obj2": 0.32074790838810974}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.708, "obj2": 0.11965924444412826}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.604, "obj2": 0.2063095289708495}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ),FirstVNF_CPU ) ) - ( ( Max( FirstVNF_Mem,Max( RRS,PN ) ) / PN ) / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( ( MUR + RCSe ) ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.586, "obj2": 0.22408235785368247}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( Max( ( ( RRS * Const ) - RRS ),( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( PN - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( CS,CS ) ) )", "obj1": 0.38, "obj2": 0.4303412579959756}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( FirstVNF_RAM / PN ) ),AMS ) ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.842, "obj2": 0.04985652527166251}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.58, "obj2": 0.22916501866952166}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + ( ( ( PN - Max( DDR,( Const * FirstVNF_CPU ) ) ) * ( ( FirstVNF_RAM * DDR ) + MDR ) ) - RRS ) ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,CS ),CS ) ) )", "obj1": 0.104, "obj2": 0.6593716196226783}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) )", "obj1": 0.916, "obj2": 0.027679255575348245}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.09, "obj2": 0.6651482566272213}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( CRS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( MUC * ( RRSe / RCSe ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.2, "obj2": 0.5652579971602034}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.37, "obj2": 0.4350767797564114}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / Min( FirstVNF_RAM ,RRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( ( MUR * MUR ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.946, "obj2": 0.016799598874354008}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( ( ACS + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - BR ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( Max( MUR,RCSe ),MUR ) / Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),( RRSe / Max( MLU,( Max( Min( DS ,RMSe ),MLU ) * ( RMSe * RRSe ) ) ) ) ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( AMS + ( AMS * Min( ( ( RRS / DDR ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * Min( MDR ,( MDR + PN ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( RRSe + MUC ) )", "obj1": 0.97, "obj2": 0.00856393491448744}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.030602107807063964}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - Min( CS ,RMSe ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.008969629761981788}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Max( ( ( RRS * Const ) - RRS ),( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( Const * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( PN - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ) * ( Min( PN ,DDR ) * ( BR - CRS ) ) )", "choosing": "( ( ( Min( Max( Max( MLU,( RRSe * RMSe ) ),( RRSe * MUR ) ) ,( MLU - Min( ( DS - Max( RMSe,RMSe ) ) ,Min( DS ,RCSe ) ) ) ) / CS ) - Min( ( RMSe * DS ) ,RMSe ) ) * ( ( MLU * DS ) + Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.38, "obj2": 0.4303412579959756}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - AMS ) + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( DS - Min( MUR ,DS ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - ACS ) / FirstVNF_CPU ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUR ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.082, "obj2": 0.6751126767921403}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / FirstVNF_Mem_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( CS - ( CS + MUR ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6701087654782647}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( RMSe * MUM ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.084, "obj2": 0.6722334663257048}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.088, "obj2": 0.6661603178515915}, {"determining": "( ( ( Max( MDR,BR ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.08, "obj2": 0.6788978482920701}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,BR ) * AMS ),( ( RRS * Const ) - ( AMS * ( FirstVNF_CPU + DDR ) ) ) ) * ( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) * ( ( PN - Max( DDR,( RRS * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) - Min( ( RCSe + ( RCSe + DS ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.982, "obj2": 0.006324206659827348}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - RRS ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - Max( Const,MRS ) ),RRS ) ) * ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( FirstVNF_Mem + PN ) ) - ( PN + FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( DS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( Max( RRSe,MUM ) ,MUC ),CS ) ) )", "obj1": 0.078, "obj2": 0.6796989939179381}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( Max( ACS,ACS ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( Min( CRS ,FirstVNF_Mem_Server ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( ( RMSe * MUM ) + RCSe ) * ( ( ( CS + ( MLU - ( CS - Max( DS,DS ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.95, "obj2": 0.016167418134153257}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( ( ( RRSe * CS ) * MLU ) + RRSe ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.004958217230995378}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.992, "obj2": 0.002177276522231001}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( FirstVNF_CPU * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( MUR * ( RMSe * MUM ) ) + ( MLU - ( ( RCSe / RRSe ) - ( MUC * CS ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.986, "obj2": 0.004282323952711974}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( ( ( RRS + FirstVNF_Mem_Server ) * Const ) / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + Min( FirstVNF_Mem_Server ,Min( CRS ,ACS ) ) ) ) )", "choosing": "( ( MUM - ( ( CS / CS ) / RMSe ) ) - Min( ( ( MUC / MUR ) / RCSe ) ,( MUM / CS ) ) )", "obj1": 0.996, "obj2": 0.0010933296328976979}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / ( PN * BR ) ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem * MDR ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( MLU * DS ) ) )", "obj1": 0.948, "obj2": 0.016415095147478492}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - FirstVNF_CPU_Server ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}], "23": [{"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_RAM * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( ( RRSe / CS ) / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Min( MDR ,MRS ) * ( RRS / ARS ) ) - ARS ) * Const ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.492, "obj2": 0.32074790838810974}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.708, "obj2": 0.11965924444412826}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( ( PN / BR ) - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + Min( Min( DS ,RCSe ) ,CS ) ) + RMSe ) ) ) )", "obj1": 0.408, "obj2": 0.39307287292982895}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ),FirstVNF_CPU ) ) - ( ( Max( FirstVNF_Mem,Max( RRS,PN ) ) / PN ) / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( ( MUR + RCSe ) ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.586, "obj2": 0.22408235785368247}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( Min( PN ,RRS ) / Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_CPU_Server,Const ) - ACS ) - ( ( RRS - DDR ) / RRS ) ) ) )", "choosing": "( Max( ( MLU + ( MUM * MUC ) ),( MUM * ( MUR + MUC ) ) ) / ( DS - ( ( ( RRSe - ( MUC * Max( ( MUC + MUR ),( RRSe + MUC ) ) ) ) - ( MUM + MLU ) ) * MUM ) ) )", "obj1": 0.134, "obj2": 0.6350182761177395}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.604, "obj2": 0.2063095289708495}, {"determining": "( Min( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) ,Const ) * FirstVNF_Mem )", "choosing": "( ( MLU - CS ) * ( ( Min( RMSe ,DS ) / Min( RRSe ,( ( MLU * ( MUM - DS ) ) * MUR ) ) ) + ( RCSe + ( RCSe + DS ) ) ) )", "obj1": 0.132, "obj2": 0.6460458112642549}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.58, "obj2": 0.22916501866952166}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.076, "obj2": 0.6714542598561306}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( FirstVNF_RAM / PN ) ),AMS ) ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.842, "obj2": 0.04985652527166251}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.104, "obj2": 0.6584470940896682}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,CRS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) )", "obj1": 0.916, "obj2": 0.027679255575348245}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( CRS / AMS ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUM - Min( RMSe ,DS ) ) - Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.398, "obj2": 0.39643268996398207}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( Max( Min( FirstVNF_CPU ,( ( ( ( PN * ( MDR * FirstVNF_CPU ) ) / ( ( FirstVNF_CPU + RRS ) / ACS ) ) - CRS ) + ACS ) ),CRS ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + MUC ) * ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - Max( MUR,Max( RRSe,MLU ) ) ) * ( Max( RMSe,MUC ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ) ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,Min( RRSe ,Max( MUR,MUR ) ) ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.702, "obj2": 0.12373389690799196}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( ( Max( ( Min( ( AMS - Max( FirstVNF_RAM_Server,AMS ) ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * FirstVNF_Mem ) - ( AMS * ( ( ( BR / ACS ) / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( Const * DDR ) )", "choosing": "( Max( Max( ( MUR * DS ),( RCSe / DS ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6681168509278687}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( Min( MDR ,( CRS + ( CRS / AMS ) ) ) * FirstVNF_CPU_Server ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) - Min( ( RCSe + ( RCSe + DS ) ) ,RMSe ) ) - ( DS + CS ) )", "obj1": 0.232, "obj2": 0.5430901820997537}, {"determining": "( Max( ( ( RRS * ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ) - RRS ),( ( FirstVNF_RAM - AMS ) - CRS ) ) * ( ( MRS + Const ) * ( BR - CRS ) ) )", "choosing": "( ( RMSe + ( Max( ( ( Min( Min( RRSe ,DS ) ,MLU ) - MUC ) * RRSe ),RMSe ) / RCSe ) ) * ( ( MLU * DS ) + Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.37, "obj2": 0.4328633752922393}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / Min( FirstVNF_RAM ,RRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( ( MUR * MUR ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.946, "obj2": 0.016799598874354008}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.09, "obj2": 0.6651482566272213}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( AMS + ( AMS * Min( ( ( RRS / DDR ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * Min( MDR ,( MDR + PN ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( RRSe + MUC ) )", "obj1": 0.97, "obj2": 0.00856393491448744}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.030602107807063964}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - AMS ) + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( DS - Min( MUR ,DS ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / FirstVNF_Mem_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( CS - ( CS + MUR ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( ( ( ( AMS + ( PN / ( CRS - ( Const - PN ) ) ) ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( Max( Max( MUM,MUR ),RRSe ) * ( DS / RMSe ) ) ,MLU ) + ( ( MUR + Min( RCSe ,RRSe ) ) + MUC ) ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.008962662470310348}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.09, "obj2": 0.6651482566272213}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Const ) * CRS ) )", "choosing": "( RMSe - ( ( MUR * ( RMSe * MUM ) ) + ( MLU - ( ( RCSe / RRSe ) - ( MUC * CS ) ) ) ) )", "obj1": 0.962, "obj2": 0.010672455500509418}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,BR ) * AMS ),( ( RRS * Const ) - ( AMS * ( FirstVNF_CPU + DDR ) ) ) ) * ( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) * ( ( PN - Max( DDR,( RRS * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) - Min( ( RCSe + ( RCSe + DS ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.982, "obj2": 0.006324206659827348}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.992, "obj2": 0.002177276522231001}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - FirstVNF_CPU_Server ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.088, "obj2": 0.6661603178515915}, {"determining": "( ( Max( ACS,ACS ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( Min( CRS ,FirstVNF_Mem_Server ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( ( RMSe * MUM ) + RCSe ) * ( ( ( CS + ( MLU - ( CS - Max( DS,DS ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.95, "obj2": 0.016167418134153257}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( ( ( RRSe * CS ) * MLU ) + RRSe ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.004958217230995378}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}], "24": [{"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) - ( RCSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_RAM * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( ( RRSe / CS ) / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.492, "obj2": 0.32074790838810974}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.708, "obj2": 0.11965924444412826}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( BR + ARS ) + ( FirstVNF_Mem / ( FirstVNF_CPU_Server * Min( CRS ,PN ) ) ) )", "choosing": "( Min( ( ( RMSe - Max( MUC,MLU ) ) - CS ) ,DS ) - Min( Min( MUC ,Max( RRSe,MUR ) ) ,CS ) )", "obj1": 0.468, "obj2": 0.3581842132929593}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.408, "obj2": 0.3876842524326748}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ACS ,CRS ) ) ) * Const ) - ( Min( MRS ,Const ) * CRS ) )", "choosing": "( ( ( ( MUM / CS ) + ( RMSe / MUM ) ) / MUM ) - ( MUM * ( ( MUR - MLU ) - ( RCSe / MUM ) ) ) )", "obj1": 0.46, "obj2": 0.3634217434046392}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( MDR * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( ( MUM / Min( MUR ,MUR ) ) - MUR ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( MLU ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.122, "obj2": 0.6478059188660249}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( FirstVNF_RAM / PN ) ),AMS ) ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.842, "obj2": 0.04985652527166251}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( CRS / AMS ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUM - Min( RMSe ,DS ) ) - Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.398, "obj2": 0.39643268996398207}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.226, "obj2": 0.5444120708724662}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + RRS )", "choosing": "( MLU - Min( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( ( CS + CS ) - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) ,CS ) )", "obj1": 0.234, "obj2": 0.5364111637011658}, {"determining": "( Max( Min( FirstVNF_CPU ,( ( ( ( PN * ( MDR * FirstVNF_CPU ) ) / ( ( FirstVNF_CPU + RRS ) / ACS ) ) - CRS ) + ACS ) ),CRS ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + MUC ) * ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - Max( MUR,Max( RRSe,MLU ) ) ) * ( Max( RMSe,MUC ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ) ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,Min( RRSe ,Max( MUR,MUR ) ) ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.702, "obj2": 0.12373389690799196}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.076, "obj2": 0.6714542598561306}, {"determining": "Min( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / Min( FirstVNF_RAM ,RRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( ( MUR * MUR ) * RRSe ) ) * RRSe ) ) * MLU ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.946, "obj2": 0.016799598874354008}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( ( Max( ( Min( ( AMS - Max( FirstVNF_RAM_Server,AMS ) ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * FirstVNF_Mem ) - ( AMS * ( ( ( BR / ACS ) / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( Const * DDR ) )", "choosing": "( Max( Max( ( MUR * DS ),( RCSe / DS ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6681168509278687}, {"determining": "( ( ( ( CRS / CRS ) - ( MDR * ( Min( MDR ,( CRS + ( CRS / AMS ) ) ) * FirstVNF_CPU_Server ) ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( ( ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) - Min( ( RCSe + ( RCSe + DS ) ) ,RMSe ) ) - ( DS + CS ) )", "obj1": 0.232, "obj2": 0.5430901820997537}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.91, "obj2": 0.030602107807063964}, {"determining": "( Max( ( ( RRS * ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ) - RRS ),( ( FirstVNF_RAM - AMS ) - CRS ) ) * ( ( MRS + Const ) * ( BR - CRS ) ) )", "choosing": "( ( RMSe + ( Max( ( ( Min( Min( RRSe ,DS ) ,MLU ) - MUC ) * RRSe ),RMSe ) / RCSe ) ) * ( ( MLU * DS ) + Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.37, "obj2": 0.4328633752922393}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( AMS + ( AMS * Min( ( ( RRS / DDR ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * Min( MDR ,( MDR + PN ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( RRSe + MUC ) )", "obj1": 0.97, "obj2": 0.00856393491448744}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( ( ( MLU + ( MUM - ( ( ( RRSe * CS ) * MLU ) + RRSe ) ) ) - MLU ) - MLU ) - Min( ( ( MUC / MUR ) / RCSe ) ,CS ) )", "obj1": 0.992, "obj2": 0.002177276522231001}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - AMS ) + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( DS - Min( MUR ,DS ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - FirstVNF_CPU_Server ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.056, "obj2": 0.7063667877014563}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( ( BR - BR ) / CRS ) - ( Min( Const ,MDR ) / Max( Const,FirstVNF_CPU ) ) )", "choosing": "Max( ( RRSe * RRSe ),( ( CS + MLU ) - ( DS - RMSe ) ) )", "obj1": 0.998, "obj2": 0.0005137615663541615}, {"determining": "( ( Max( ACS,ACS ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( Min( CRS ,FirstVNF_Mem_Server ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( ( RMSe * MUM ) + RCSe ) * ( ( ( CS + ( MLU - ( CS - Max( DS,DS ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.95, "obj2": 0.016167418134153257}, {"determining": "( ( ( ( ( AMS + ( PN / ( CRS - ( Const - PN ) ) ) ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( Max( Max( MUM,MUR ),RRSe ) * ( DS / RMSe ) ) ,MLU ) + ( ( MUR + Min( RCSe ,RRSe ) ) + MUC ) ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.008962662470310348}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( ( ( RRSe * CS ) * MLU ) + RRSe ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.004958217230995378}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Max( ( ( ( ( MDR - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( CRS + AMS ) - CRS ) ) ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + RMSe ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.962, "obj2": 0.009996868179421725}, {"determining": "( ( PN - Max( ( ( RRS * Const ) - ( RRS * Const ) ),RRS ) ) * ( Const - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - Min( RRSe ,MUM ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( MUR ,MLU ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7052769311749609}, {"determining": "( Max( ( Min( ( FirstVNF_Mem_Server / FirstVNF_RAM ) ,BR ) * AMS ),( ( RRS * Const ) - ( AMS * ( FirstVNF_CPU + DDR ) ) ) ) * ( ( Min( Min( ( FirstVNF_CPU_Server / ( ACS + FirstVNF_CPU_Server ) ) ,Const ) ,( CRS / AMS ) ) * FirstVNF_Mem ) * ( ( PN - Max( DDR,( RRS * FirstVNF_CPU ) ) ) * ( MDR + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( MUR,MLU ) - Min( ( RCSe + ( RCSe + DS ) ) ,RMSe ) ) * ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) )", "obj1": 0.982, "obj2": 0.006324206659827348}], "25": [{"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( ( ( CS + ( CS - RRSe ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) - ( RCSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.492, "obj2": 0.32074790838810974}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.708, "obj2": 0.11965924444412826}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.456, "obj2": 0.3396556343046677}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( ( MUC / ( ( MUM * Min( Min( DS ,RCSe ) ,CS ) ) / RMSe ) ) * DS ) / CS ) / ( ( RRSe * RMSe ) * ( Max( MUM,( RRSe * RRSe ) ) * CS ) ) )", "obj1": 0.452, "obj2": 0.36469229632540695}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.408, "obj2": 0.3876842524326748}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - ( ( RRS * Const ) - RRS ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( MUC - CS ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.65, "obj2": 0.17689601625306475}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( MDR * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( ( MUM / Min( MUR ,MUR ) ) - MUR ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( MLU ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.122, "obj2": 0.6478059188660249}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUC,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( Max( MUM,MUC ),RCSe ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.246, "obj2": 0.5260168929388667}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.226, "obj2": 0.5401058937771925}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.282, "obj2": 0.5016057984326517}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( Max( ( BR / FirstVNF_CPU ),Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( RRS / ARS ) + ( RRS / PN ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR + MUR ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.588, "obj2": 0.21142079765303187}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( ( Max( ( Min( ( AMS - Max( FirstVNF_RAM_Server,AMS ) ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * FirstVNF_Mem ) - ( AMS * ( ( ( BR / ACS ) / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( Const * DDR ) )", "choosing": "( Max( Max( ( MUR * DS ),( RCSe / DS ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6681168509278687}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( CRS / AMS ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUM - Min( RMSe ,DS ) ) - Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.398, "obj2": 0.39643268996398207}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( FirstVNF_RAM / PN ) ),AMS ) ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.842, "obj2": 0.04985652527166251}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem_Server ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RCSe + ( RRSe * MUR ) ) / RMSe ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.88, "obj2": 0.037392882589290286}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( BR + AMS ) ) * AMS ) ) ) )", "choosing": "( Min( Max( RRSe,MUC ) ,RRSe ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.23, "obj2": 0.5352155514203241}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( ( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),CS ) ) - ( DS + CS ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( Max( Min( FirstVNF_CPU ,( ( ( ( PN * ( MDR * FirstVNF_CPU ) ) / ( ( FirstVNF_CPU + RRS ) / ACS ) ) - CRS ) + ACS ) ),CRS ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + MUC ) * ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - Max( MUR,Max( RRSe,MLU ) ) ) * ( Max( RMSe,MUC ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ) ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,Min( RRSe ,Max( MUR,MUR ) ) ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.702, "obj2": 0.12373389690799196}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.076, "obj2": 0.6714542598561306}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,DDR ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( RRSe / CS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.946, "obj2": 0.016722783442769912}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_Mem_Server / ARS ) * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - Min( ( ( MLU - ( RCSe * ( CS + MLU ) ) ) * Min( MUM ,Min( Min( MUR ,CS ) ,RMSe ) ) ) ,( MLU * ( RRSe - RCSe ) ) ) ) - ( ( MUC * RMSe ) - Max( ( RCSe - ( RMSe * MUC ) ),MUM ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.91, "obj2": 0.02717549229184826}, {"determining": "( Max( ( ( RRS * ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ) - RRS ),( ( FirstVNF_RAM - AMS ) - CRS ) ) * ( ( MRS + Const ) * ( BR - CRS ) ) )", "choosing": "( ( RMSe + ( Max( ( ( Min( Min( RRSe ,DS ) ,MLU ) - MUC ) * RRSe ),RMSe ) / RCSe ) ) * ( ( MLU * DS ) + Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.37, "obj2": 0.4328633752922393}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.054, "obj2": 0.711283980802096}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( AMS + ( AMS * Min( ( ( RRS / DDR ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * Min( MDR ,( MDR + PN ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( RRSe + MUC ) )", "obj1": 0.97, "obj2": 0.00856393491448744}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( ( FirstVNF_RAM * BR ) + MDR ) ) ) ) ) * ( MDR + MDR ) ) + ( ACS * AMS ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,RCSe ),( MUR - MUC ) ) + MUM ) ),CS ) / RCSe ) ,Min( MUC ,CS ) ) )", "obj1": 0.244, "obj2": 0.5305522814897348}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - AMS ) + ACS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( DS - Min( MUR ,DS ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( MLU,( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.186, "obj2": 0.5747605566428251}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) + ( MDR / ( ( FirstVNF_RAM_Server - AMS ) + ( FirstVNF_Mem / ( ( ( PN / BR ) * ( DDR + MRS ) ) * ACS ) ) ) ) )", "choosing": "( ( ( MLU / MLU ) * DS ) - ( Min( ( RMSe * ( MUC * RCSe ) ) ,MUR ) + ( ( CS * MUR ) / MUC ) ) )", "obj1": 0.182, "obj2": 0.5792936939605795}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - DDR ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - ( RRSe * RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.77, "obj2": 0.07219161167340996}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( RRS / PN ) ),AMS ) ) ) + ( MDR * ( ( Const + MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( ( RMSe - DS ) * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( ( RRSe / ( MLU + DS ) ),CS ) ) * RMSe ) ) )", "obj1": 0.842, "obj2": 0.04985652527166251}, {"determining": "( ( Max( ACS,ACS ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( Min( CRS ,FirstVNF_Mem_Server ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( ( RMSe * MUM ) + RCSe ) * ( ( ( CS + ( MLU - ( CS - Max( DS,DS ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.95, "obj2": 0.016167418134153257}, {"determining": "( ( ( ( ( AMS + ( PN / ( CRS - ( Const - PN ) ) ) ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( Max( Max( MUM,MUR ),RRSe ) * ( DS / RMSe ) ) ,MLU ) + ( ( MUR + Min( RCSe ,RRSe ) ) + MUC ) ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.008962662470310348}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( ( ( RRSe * CS ) * MLU ) + RRSe ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.004958217230995378}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}], "26": [{"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( Min( MDR ,FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( RRS * Const ) / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Max( DS,RRSe ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( ( ( CS + ( CS - RRSe ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.492, "obj2": 0.32074790838810974}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.708, "obj2": 0.11965924444412826}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.456, "obj2": 0.3396556343046677}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.444, "obj2": 0.34958459485244925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.408, "obj2": 0.3876842524326748}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - ( ( RRS * Const ) - RRS ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( MUC - CS ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.65, "obj2": 0.17689601625306475}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( MDR * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( ( MUM / Min( MUR ,MUR ) ) - MUR ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( MLU ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.122, "obj2": 0.6478059188660249}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.226, "obj2": 0.5401058937771925}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "( ( DDR + Max( ACS,Const ) ) - ( ( DDR / FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( Min( CS ,( ( ( MUM / RRSe ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) + Max( CS,CS ) ) ,( ( ( MUM * MUR ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.28, "obj2": 0.4916197118253064}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( ( BR / FirstVNF_CPU ),Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( RRS / ARS ) + ( RRS / PN ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR + MUR ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.588, "obj2": 0.21142079765303187}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * RRSe ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.248, "obj2": 0.5233596316123421}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( CRS / AMS ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUM - Min( RMSe ,DS ) ) - Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.398, "obj2": 0.39643268996398207}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( FirstVNF_RAM / PN ) ),AMS ) ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.842, "obj2": 0.04985652527166251}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem_Server ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RCSe + ( RRSe * MUR ) ) / RMSe ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.88, "obj2": 0.037392882589290286}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.054, "obj2": 0.7054738016815116}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * MDR ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( Max( Max( MUC,CS ),( DS / RCSe ) ),( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.18, "obj2": 0.5780102931350802}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( BR + AMS ) ) * AMS ) ) ) )", "choosing": "( Min( Max( RRSe,MUC ) ,RRSe ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.23, "obj2": 0.5352155514203241}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( Max( Min( FirstVNF_CPU ,( ( ( ( PN * ( MDR * FirstVNF_CPU ) ) / ( ( FirstVNF_CPU + RRS ) / ACS ) ) - CRS ) + ACS ) ),CRS ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + MUC ) * ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - Max( MUR,Max( RRSe,MLU ) ) ) * ( Max( RMSe,MUC ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ) ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,Min( RRSe ,Max( MUR,MUR ) ) ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.702, "obj2": 0.12373389690799196}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( Const - FirstVNF_CPU_Server ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( RCSe - ( MUC / Min( MUM ,MUC ) ) ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.242, "obj2": 0.5247819135538015}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.076, "obj2": 0.6714542598561306}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,DDR ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( RRSe / CS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.946, "obj2": 0.016722783442769912}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * ( ACS + CRS ) ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( ( ( MUR - MUM ) * ( ( Min( RMSe ,RRSe ) / RRSe ) + MUM ) ),( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.088, "obj2": 0.6671599693743379}, {"determining": "( ( ( Max( ( Min( ( AMS - Max( FirstVNF_RAM_Server,AMS ) ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * FirstVNF_Mem ) - ( AMS * ( ( ( BR / ACS ) / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( Const * DDR ) )", "choosing": "( Max( Max( ( MUR * DS ),( RCSe / DS ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6681168509278687}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_Mem_Server / ARS ) * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - Min( ( ( MLU - ( RCSe * ( CS + MLU ) ) ) * Min( MUM ,Min( Min( MUR ,CS ) ,RMSe ) ) ) ,( MLU * ( RRSe - RCSe ) ) ) ) - ( ( MUC * RMSe ) - Max( ( RCSe - ( RMSe * MUC ) ),MUM ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.91, "obj2": 0.02717549229184826}, {"determining": "( Max( ( ( RRS * ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ) - RRS ),( ( FirstVNF_RAM - AMS ) - CRS ) ) * ( ( MRS + Const ) * ( BR - CRS ) ) )", "choosing": "( ( RMSe + ( Max( ( ( Min( Min( RRSe ,DS ) ,MLU ) - MUC ) * RRSe ),RMSe ) / RCSe ) ) * ( ( MLU * DS ) + Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.37, "obj2": 0.4328633752922393}, {"determining": "( ( PN - Max( ( ( ( PN - Max( Max( FirstVNF_Mem,DDR ),( Const * FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) - ( MDR + ( Const * Max( BR,MDR ) ) ) ),FirstVNF_Mem ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,RMSe ),RCSe ) + MUM ) ) ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( ( ( MUM + CS ) / ( RRSe * MUR ) ) ,( Min( MUC ,RRSe ) + ( Max( MUM,RCSe ) + ( MUC - ( MLU * MUC ) ) ) ) ),CS ) ) )", "obj1": 0.994, "obj2": 0.0017331585972011905}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + PN ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( ( ( DS + MUC ) / RCSe ) - ( ( RCSe / RRSe ) - Min( DS ,RMSe ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.906, "obj2": 0.035470432439286}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( RRS + FirstVNF_Mem ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( MDR - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) + Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) ) - Max( ( RMSe - ( DS / ( MUM + MLU ) ) ),( MUR - ( Max( ( MUR / MLU ),( RCSe - RCSe ) ) + ( MUC * ( MUM - MLU ) ) ) ) ) ) ) )", "obj1": 0.97, "obj2": 0.00856060554066941}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,Min( BR ,( MRS - DDR ) ) ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,Max( RMSe,( MUM * MUR ) ) ) ) ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.19, "obj2": 0.574108912078951}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( ( ( RRSe * CS ) * MLU ) + RRSe ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.004958217230995378}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + MRS ) * ACS ) ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( ( RMSe + ( MUR / DS ) ),CS ) ) - Min( MUC ,MUC ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( ( ( ( AMS + ( PN / ( CRS - ( Const - PN ) ) ) ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( Max( Max( MUM,MUR ),RRSe ) * ( DS / RMSe ) ) ,MLU ) + ( ( MUR + Min( RCSe ,RRSe ) ) + MUC ) ) - ( RCSe / MUM ) ) ) )", "obj1": 0.966, "obj2": 0.008962662470310348}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.77, "obj2": 0.0719037102221582}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( RRS / PN ) ),AMS ) ) ) + ( MDR * ( ( Const + MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( ( RMSe - DS ) * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( ( RRSe / ( MLU + DS ) ),CS ) ) * RMSe ) ) )", "obj1": 0.842, "obj2": 0.04985652527166251}], "27": [{"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( Min( MDR ,FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( RRS * Const ) / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Max( DS,RRSe ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.468, "obj2": 0.2891247533254916}, {"determining": "( ( ( AMS + Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( ( RCSe - MUC ) ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) )", "obj1": 0.74, "obj2": 0.09421681200495129}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.456, "obj2": 0.3396556343046677}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - ( MLU / MLU ) )", "obj1": 0.684, "obj2": 0.13980803026505725}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.708, "obj2": 0.11965924444412826}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.444, "obj2": 0.34958459485244925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.408, "obj2": 0.3876842524326748}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / Max( ( DDR + ( Max( CRS,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) ),DDR ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( PN * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( RCSe - ( Max( ( ( RRSe + CS ) + RRSe ),( MUR / MUC ) ) * ( RMSe - ( DS * Min( MUM ,RRSe ) ) ) ) ) ,MUC ) )", "obj1": 0.562, "obj2": 0.2399432683596258}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - ( ( RRS * Const ) - RRS ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( MUC - CS ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.65, "obj2": 0.17689601625306475}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.12, "obj2": 0.646772892615733}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - Min( Min( BR ,CRS ) ,FirstVNF_Mem ) ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,Max( MUR,MUC ) ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( CS + RCSe ) ) ) ) ) / ( ( ( MUM * MUR ) + RMSe ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.56, "obj2": 0.24804610705229066}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "( ( DDR + Max( ACS,Const ) ) - ( ( DDR / FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( Min( CS ,( ( ( MUM / RRSe ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) + Max( CS,CS ) ) ,( ( ( MUM * MUR ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.28, "obj2": 0.4916197118253064}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( ( BR / FirstVNF_CPU ),Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( RRS / ARS ) + ( RRS / PN ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR + MUR ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.588, "obj2": 0.21142079765303187}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * RRSe ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.248, "obj2": 0.5233596316123421}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( RRS / PN ) ),AMS ) ) ) + ( MDR * ( ( Const + MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( ( RMSe - DS ) * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( ( RRSe / ( MLU + DS ) ),CS ) ) * RMSe ) ) )", "obj1": 0.84, "obj2": 0.05086817771570696}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( CRS / AMS ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUM - Min( RMSe ,DS ) ) - Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.398, "obj2": 0.39643268996398207}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.226, "obj2": 0.5401058937771925}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * MDR ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( Max( Max( MUC,CS ),( DS / RCSe ) ),( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.18, "obj2": 0.5780102931350802}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RRSe + MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.216, "obj2": 0.5490324017639323}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem_Server ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RCSe + ( RRSe * MUR ) ) / RMSe ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.88, "obj2": 0.037392882589290286}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.054, "obj2": 0.7054738016815116}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,Min( BR ,( MRS - DDR ) ) ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,Max( RMSe,( MUM * MUR ) ) ) ) ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.19, "obj2": 0.574108912078951}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,DDR ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( RRSe / CS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.946, "obj2": 0.016722783442769912}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( BR + AMS ) ) * AMS ) ) ) )", "choosing": "( Min( Max( RRSe,MUC ) ,RRSe ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.23, "obj2": 0.5352155514203241}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + MRS ) * ACS ) ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( ( RMSe + ( MUR / DS ) ),CS ) ) - Min( MUC ,MUC ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( Max( Min( FirstVNF_CPU ,( ( ( ( PN * ( MDR * FirstVNF_CPU ) ) / ( ( FirstVNF_CPU + RRS ) / ACS ) ) - CRS ) + ACS ) ),CRS ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + MUC ) * ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - Max( MUR,Max( RRSe,MLU ) ) ) * ( Max( RMSe,MUC ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ) ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,Min( RRSe ,Max( MUR,MUR ) ) ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.702, "obj2": 0.12373389690799196}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( Const - FirstVNF_CPU_Server ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( RCSe - ( MUC / Min( MUM ,MUC ) ) ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.242, "obj2": 0.5247819135538015}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.076, "obj2": 0.6714542598561306}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * ( ACS + CRS ) ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( ( ( MUR - MUM ) * ( ( Min( RMSe ,RRSe ) / RRSe ) + MUM ) ),( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.088, "obj2": 0.6671599693743379}, {"determining": "( ( ( Max( ( Min( ( AMS - Max( FirstVNF_RAM_Server,AMS ) ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * FirstVNF_Mem ) - ( AMS * ( ( ( BR / ACS ) / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( Const * DDR ) )", "choosing": "( Max( Max( ( MUR * DS ),( RCSe / DS ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6681168509278687}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_Mem_Server / ARS ) * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - Min( ( ( MLU - ( RCSe * ( CS + MLU ) ) ) * Min( MUM ,Min( Min( MUR ,CS ) ,RMSe ) ) ) ,( MLU * ( RRSe - RCSe ) ) ) ) - ( ( MUC * RMSe ) - Max( ( RCSe - ( RMSe * MUC ) ),MUM ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.91, "obj2": 0.02717549229184826}, {"determining": "( Max( ( ( RRS * ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ) - RRS ),( ( FirstVNF_RAM - AMS ) - CRS ) ) * ( ( MRS + Const ) * ( BR - CRS ) ) )", "choosing": "( ( RMSe + ( Max( ( ( Min( Min( RRSe ,DS ) ,MLU ) - MUC ) * RRSe ),RMSe ) / RCSe ) ) * ( ( MLU * DS ) + Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.37, "obj2": 0.4328633752922393}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + PN ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( ( ( DS + MUC ) / RCSe ) - ( ( RCSe / RRSe ) - Min( DS ,RMSe ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.906, "obj2": 0.035470432439286}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( ( ( ( ( FirstVNF_Mem - MRS ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( ( ( ( RRSe * CS ) * MLU ) + RRSe ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.984, "obj2": 0.004958217230995378}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( RRS + FirstVNF_Mem ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( MDR - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) + Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) ) - Max( ( RMSe - ( DS / ( MUM + MLU ) ) ),( MUR - ( Max( ( MUR / MLU ),( RCSe - RCSe ) ) + ( MUC * ( MUM - MLU ) ) ) ) ) ) ) )", "obj1": 0.97, "obj2": 0.00856060554066941}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( ( MUC - ( MUM / MUM ) ) * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.956, "obj2": 0.012381601532028837}, {"determining": "( ( AMS / ACS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ( CRS / AMS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( CRS ,Min( DDR ,ARS ) ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( RMSe - ( RRSe * MLU ) ) ) - Min( ( Min( RMSe ,( CS / RMSe ) ) / RCSe ) ,CS ) )", "obj1": 0.848, "obj2": 0.044846735142398744}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.976, "obj2": 0.008089720959504484}], "28": [{"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_Mem * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( RRS * Const ) / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ) ,Min( ( Max( RCSe,MLU ) - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.468, "obj2": 0.2891247533254916}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.456, "obj2": 0.3396556343046677}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),( Max( PN,Max( RRS,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) - Min( Min( Min( ( Min( Min( RRSe ,( RRSe - RMSe ) ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.54, "obj2": 0.23808291643231533}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - ( MLU / MLU ) )", "obj1": 0.684, "obj2": 0.13980803026505725}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.708, "obj2": 0.11965924444412826}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ) - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - ( RMSe / Max( DS,( ( ( MUR / RCSe ) / MLU ) + MLU ) ) ) )", "obj1": 0.394, "obj2": 0.3715272831604908}, {"determining": "( ( ( AMS + Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( ( RCSe - MUC ) ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) )", "obj1": 0.74, "obj2": 0.09421681200495129}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( FirstVNF_RAM + ACS ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( ( RRSe + MUC ) - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.508, "obj2": 0.26737328553908585}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.444, "obj2": 0.34958459485244925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * CRS ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( MLU ,Min( CS ,RMSe ) ) )", "obj1": 0.614, "obj2": 0.20311744269679907}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.744, "obj2": 0.09241370238268665}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - ( ( RRS * Const ) - RRS ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( MUC - CS ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.65, "obj2": 0.17689601625306475}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.12, "obj2": 0.646772892615733}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.7, "obj2": 0.12979648835655613}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "( ( DDR + Max( ACS,Const ) ) - ( ( DDR / FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( Min( CS ,( ( ( MUM / RRSe ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) + Max( CS,CS ) ) ,( ( ( MUM * MUR ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.28, "obj2": 0.4916197118253064}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( ( BR / FirstVNF_CPU ),Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( RRS / ARS ) + ( RRS / PN ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR + MUR ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.588, "obj2": 0.21142079765303187}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * RRSe ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.248, "obj2": 0.5233596316123421}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.226, "obj2": 0.5401058937771925}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * MDR ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( Max( Max( MUC,CS ),( DS / RCSe ) ),( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.18, "obj2": 0.5780102931350802}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( MUM ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.828, "obj2": 0.05230029283901745}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RRSe + MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.216, "obj2": 0.5490324017639323}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem_Server ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RCSe + ( RRSe * MUR ) ) / RMSe ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.88, "obj2": 0.037392882589290286}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.054, "obj2": 0.7054738016815116}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( RRS / PN ) ),AMS ) ) ) + ( MDR * ( ( Const + MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( ( RMSe - DS ) * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( ( RRSe / ( MLU + DS ) ),CS ) ) * RMSe ) ) )", "obj1": 0.84, "obj2": 0.05086817771570696}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,Min( BR ,( MRS - DDR ) ) ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,Max( RMSe,( MUM * MUR ) ) ) ) ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.19, "obj2": 0.574108912078951}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.45, "obj2": 0.34351342265380547}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,DDR ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( RRSe / CS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.946, "obj2": 0.016722783442769912}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( BR + AMS ) ) * AMS ) ) ) )", "choosing": "( Min( Max( RRSe,MUC ) ,RRSe ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.23, "obj2": 0.5352155514203241}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + MRS ) * ACS ) ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( ( RMSe + ( MUR / DS ) ),CS ) ) - Min( MUC ,MUC ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( Max( Min( FirstVNF_CPU ,( ( ( ( PN * ( MDR * FirstVNF_CPU ) ) / ( ( FirstVNF_CPU + RRS ) / ACS ) ) - CRS ) + ACS ) ),CRS ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR + MUC ) * ( ( MUR + ( ( ( MUM / Min( MUR ,MUR ) ) - Max( MUR,Max( RRSe,MLU ) ) ) * ( Max( RMSe,MUC ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ) ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,Min( RRSe ,Max( MUR,MUR ) ) ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.702, "obj2": 0.12373389690799196}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( Const - FirstVNF_CPU_Server ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( RCSe - ( MUC / Min( MUM ,MUC ) ) ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.242, "obj2": 0.5247819135538015}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * ( ACS + CRS ) ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( ( ( MUR - MUM ) * ( ( Min( RMSe ,RRSe ) / RRSe ) + MUM ) ),( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.088, "obj2": 0.6671599693743379}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_Mem_Server / ARS ) * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - Min( ( ( MLU - ( RCSe * ( CS + MLU ) ) ) * Min( MUM ,Min( Min( MUR ,CS ) ,RMSe ) ) ) ,( MLU * ( RRSe - RCSe ) ) ) ) - ( ( MUC * RMSe ) - Max( ( RCSe - ( RMSe * MUC ) ),MUM ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.91, "obj2": 0.02717549229184826}, {"determining": "( Max( ( ( RRS * ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ) - RRS ),( ( FirstVNF_RAM - AMS ) - CRS ) ) * ( ( MRS + Const ) * ( BR - CRS ) ) )", "choosing": "( ( RMSe + ( Max( ( ( Min( Min( RRSe ,DS ) ,MLU ) - MUC ) * RRSe ),RMSe ) / RCSe ) ) * ( ( MLU * DS ) + Max( Min( CS ,MUC ),CS ) ) )", "obj1": 0.37, "obj2": 0.4328633752922393}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Max( RRSe,RMSe ) )", "obj1": 0.998, "obj2": 0.0027479403019307325}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( RRS + FirstVNF_Mem ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( MDR - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) + Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) ) - Max( ( RMSe - ( DS / ( MUM + MLU ) ) ),( MUR - ( Max( ( MUR / MLU ),( RCSe - RCSe ) ) + ( MUC * ( MUM - MLU ) ) ) ) ) ) ) )", "obj1": 0.97, "obj2": 0.00856060554066941}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * AMS ),( ( ( MDR - Min( RRS ,RRS ) ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Max( FirstVNF_CPU_Server,Const ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( Min( MUR ,RMSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Min( ( MUR / RCSe ) ,CS ) ) )", "obj1": 0.08, "obj2": 0.6711995220062372}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + PN ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( ( ( DS + MUC ) / RCSe ) - ( ( RCSe / RRSe ) - Min( DS ,RMSe ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.906, "obj2": 0.035470432439286}, {"determining": "( ( ( Max( ( Min( ( AMS - Max( FirstVNF_RAM_Server,AMS ) ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * FirstVNF_Mem ) - ( AMS * ( ( ( BR / ACS ) / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * ( Const * DDR ) )", "choosing": "( Max( Max( ( MUR * DS ),( RCSe / DS ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.086, "obj2": 0.6681168509278687}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}], "29": [{"determining": "( ( PN - Max( ( ACS - ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_Mem * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ( RRS * Const ) / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ) ,Min( ( Max( RCSe,MLU ) - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.468, "obj2": 0.2891247533254916}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.456, "obj2": 0.3396556343046677}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),( Max( PN,Max( RRS,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) - Min( Min( Min( ( Min( Min( RRSe ,( RRSe - RMSe ) ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.54, "obj2": 0.23808291643231533}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ) - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - ( RMSe / Max( DS,( ( ( MUR / RCSe ) / MLU ) + MLU ) ) ) )", "obj1": 0.394, "obj2": 0.3715272831604908}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * Min( DS ,MUR ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.724, "obj2": 0.1145698382208966}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( FirstVNF_RAM + ACS ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( ( RRSe + MUC ) - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.508, "obj2": 0.26737328553908585}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.444, "obj2": 0.34958459485244925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * CRS ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( MLU ,Min( CS ,RMSe ) ) )", "obj1": 0.614, "obj2": 0.20311744269679907}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.744, "obj2": 0.09241370238268665}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( ( AMS + Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( ( RCSe - MUC ) ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) )", "obj1": 0.74, "obj2": 0.09421681200495129}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - ( MLU / MLU ) )", "obj1": 0.684, "obj2": 0.13980803026505725}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - ( ( RRS * Const ) - RRS ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( MUC - CS ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.65, "obj2": 0.17689601625306475}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.12, "obj2": 0.646772892615733}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - Min( MUR ,MUR ) ) ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.696, "obj2": 0.12571083561433521}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( MUM ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.698, "obj2": 0.11703942607964136}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / Min( FirstVNF_Mem_Server ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) + Min( Max( ( ACS / ( Const * ( AMS + RRS ) ) ),FirstVNF_Mem_Server ) ,( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,Max( Max( CS,Max( RCSe,MLU ) ),DS ) ) ) ) - ( MLU / MLU ) )", "obj1": 0.684, "obj2": 0.13980803026505725}, {"determining": "( ( DDR + Max( ACS,Const ) ) - ( ( DDR / FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( Min( CS ,( ( ( MUM / RRSe ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) + Max( CS,CS ) ) ,( ( ( MUM * MUR ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.28, "obj2": 0.4916197118253064}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( Max( ( BR / FirstVNF_CPU ),Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( RRS / ARS ) + ( RRS / PN ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR + MUR ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.588, "obj2": 0.21142079765303187}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * RRSe ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.248, "obj2": 0.5233596316123421}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.226, "obj2": 0.5401058937771925}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * MDR ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( Max( Max( MUC,CS ),( DS / RCSe ) ),( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.18, "obj2": 0.5780102931350802}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( MUM ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.828, "obj2": 0.05230029283901745}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( Max( CRS,RRS ) - AMS ) )", "choosing": "( ( RMSe * RMSe ) - ( Min( ( RCSe - DS ) ,( ( DS * MUM ) - ( MUM * Min( RMSe ,DS ) ) ) ) / Max( RCSe,MUM ) ) )", "obj1": 0.896, "obj2": 0.0357754485750671}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RRSe + MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.216, "obj2": 0.5490324017639323}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem_Server ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RCSe + ( RRSe * MUR ) ) / RMSe ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.88, "obj2": 0.037392882589290286}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.054, "obj2": 0.7054738016815116}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( RRS / PN ) ),AMS ) ) ) + ( MDR * ( ( Const + MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( ( RMSe - DS ) * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( ( RRSe / ( MLU + DS ) ),CS ) ) * RMSe ) ) )", "obj1": 0.84, "obj2": 0.05086817771570696}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,Min( BR ,( MRS - DDR ) ) ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,Max( RMSe,( MUM * MUR ) ) ) ) ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.19, "obj2": 0.574108912078951}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.45, "obj2": 0.34351342265380547}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,DDR ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( RRSe / CS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.946, "obj2": 0.016722783442769912}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( RRS + FirstVNF_Mem ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( MDR - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) + Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) ) - Max( ( RMSe - ( DS / ( MUM + MLU ) ) ),( MUR - ( Max( ( MUR / MLU ),( RCSe - RCSe ) ) + ( MUC * ( MUM - MLU ) ) ) ) ) ) ) )", "obj1": 0.97, "obj2": 0.00856060554066941}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( BR + AMS ) ) * AMS ) ) ) )", "choosing": "( Min( Max( RRSe,MUC ) ,RRSe ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.23, "obj2": 0.5352155514203241}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + MRS ) * ACS ) ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( ( RMSe + ( MUR / DS ) ),CS ) ) - Min( MUC ,MUC ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( Const - FirstVNF_CPU_Server ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( RCSe - ( MUC / Min( MUM ,MUC ) ) ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.242, "obj2": 0.5247819135538015}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * AMS ),( ( ( MDR - Min( RRS ,RRS ) ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Max( FirstVNF_CPU_Server,Const ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( Min( MUR ,RMSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Min( ( MUR / RCSe ) ,CS ) ) )", "obj1": 0.08, "obj2": 0.6711995220062372}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * ( ACS + CRS ) ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( ( ( MUR - MUM ) * ( ( Min( RMSe ,RRSe ) / RRSe ) + MUM ) ),( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.088, "obj2": 0.6671599693743379}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_Mem_Server / ARS ) * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - Min( ( ( MLU - ( RCSe * ( CS + MLU ) ) ) * Min( MUM ,Min( Min( MUR ,CS ) ,RMSe ) ) ) ,( MLU * ( RRSe - RCSe ) ) ) ) - ( ( MUC * RMSe ) - Max( ( RCSe - ( RMSe * MUC ) ),MUM ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.91, "obj2": 0.02717549229184826}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + PN ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( ( ( DS + MUC ) / RCSe ) - ( ( RCSe / RRSe ) - Min( DS ,RMSe ) ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.906, "obj2": 0.035470432439286}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_Mem - ARS ) * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - ( RMSe / Min( MUR ,CS ) ) )", "obj1": 0.982, "obj2": 0.006506556658089089}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * Min( RRS ,RRS ) ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( RMSe ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.86, "obj2": 0.04093580295691962}], "30": [{"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) * ( RRSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( ( ACS - ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.468, "obj2": 0.2891247533254916}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.456, "obj2": 0.3396556343046677}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),( Max( PN,Max( RRS,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) - Min( Min( Min( ( Min( Min( RRSe ,( RRSe - RMSe ) ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.54, "obj2": 0.23808291643231533}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ) - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - ( RMSe / Max( DS,( ( ( MUR / RCSe ) / MLU ) + MLU ) ) ) )", "obj1": 0.394, "obj2": 0.3715272831604908}, {"determining": "( ( PN / Max( ( DDR + Max( DDR,( MDR + Max( Const,FirstVNF_Mem ) ) ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.642, "obj2": 0.18797947732749032}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( FirstVNF_RAM + ACS ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( ( RRSe + MUC ) - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.508, "obj2": 0.26737328553908585}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / Min( FirstVNF_Mem_Server ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) + Min( Max( ( ACS / ( Const * ( FirstVNF_RAM + RRS ) ) ),FirstVNF_Mem_Server ) ,( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,Max( Max( CS,Max( RCSe,RRSe ) ),DS ) ) ) ) - ( MLU / MLU ) )", "obj1": 0.672, "obj2": 0.14502123278708043}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.444, "obj2": 0.34958459485244925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * CRS ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( MLU ,Min( CS ,RMSe ) ) )", "obj1": 0.614, "obj2": 0.20311744269679907}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( FirstVNF_Mem - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * Min( DS ,MUR ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) )", "obj1": 0.674, "obj2": 0.1297481871761181}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - ( ( RRS * Const ) - RRS ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( MUC - CS ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.65, "obj2": 0.17689601625306475}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),Max( Const,FirstVNF_Mem ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RRSe ) ,CS ) )", "obj1": 0.75, "obj2": 0.08180557511826303}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.12, "obj2": 0.646772892615733}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( RMSe ,( ( RMSe + Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) ) - MUC ) ) ) - Min( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.878, "obj2": 0.035135024600023525}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( MUM ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.698, "obj2": 0.11703942607964136}, {"determining": "Min( ( Const * DDR ) ,( ( Min( ( ( RRS - ( DDR * Min( Const ,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * PN ) ) + ( Max( ( FirstVNF_RAM_Server + DDR ),ARS ) - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( MUC + Max( ( RRSe + MLU ),( ( ( ( RRSe - CS ) * RMSe ) + RMSe ) * CS ) ) ) * MUR ) / ( ( RRSe * RMSe ) * DS ) )", "obj1": 0.908, "obj2": 0.032324555539281236}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) ) ),PN ) ) + ( MDR / ( ( Min( ACS ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),( ( RCSe + ( RRSe * MUR ) ) / RMSe ) ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * Min( DS ,MUR ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.73, "obj2": 0.11262208341621045}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - Min( MUR ,MUR ) ) ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.696, "obj2": 0.12571083561433521}, {"determining": "( ( ( AMS + Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( ( RCSe - MUC ) ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) )", "obj1": 0.74, "obj2": 0.09421681200495129}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * Min( DS ,MUR ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.724, "obj2": 0.1145698382208966}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "( ( DDR + Max( ACS,Const ) ) - ( ( DDR / FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( Min( CS ,( ( ( MUM / RRSe ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) + Max( CS,CS ) ) ,( ( ( MUM * MUR ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.28, "obj2": 0.4916197118253064}, {"determining": "( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS )", "choosing": "( Max( ( ( MLU + ( Max( RMSe,MUM ) - CS ) ) - ( ( MLU - ( Min( ( MUR / MLU ) ,RRSe ) / ( ( MLU * CS ) / DS ) ) ) / RCSe ) ),RCSe ) / ( ( Max( RRSe,CS ) / Min( ( Max( RRSe,MUM ) + Max( RMSe,MUC ) ) ,RRSe ) ) * Max( Min( ( CS / ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) ,MUC ),Min( Max( CS,RRSe ) ,DS ) ) ) )", "obj1": 0.062, "obj2": 0.7041094015435845}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( Max( ( BR / FirstVNF_CPU ),Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( RRS / ARS ) + ( RRS / PN ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR + MUR ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.588, "obj2": 0.21142079765303187}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.778, "obj2": 0.068673253424554}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * RRSe ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.248, "obj2": 0.5233596316123421}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.226, "obj2": 0.5401058937771925}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * MDR ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( Max( Max( MUC,CS ),( DS / RCSe ) ),( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.18, "obj2": 0.5780102931350802}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( MUM ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.828, "obj2": 0.05230029283901745}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) ) )", "obj1": 0.086, "obj2": 0.66663574604608}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RRSe + MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.216, "obj2": 0.5490324017639323}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.054, "obj2": 0.7054738016815116}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,FirstVNF_CPU_Server ) ) ) ) - ( ACS / Max( Min( MRS ,( RRS / PN ) ),AMS ) ) ) + ( MDR * ( ( Const + MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RCSe + DS ) - Min( ( ( ( MLU / CS ) + ( MUC / MUM ) ) - ( ( RMSe - DS ) * RRSe ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( ( RRSe / ( MLU + DS ) ),CS ) ) * RMSe ) ) )", "obj1": 0.84, "obj2": 0.05086817771570696}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,Min( BR ,( MRS - DDR ) ) ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,Max( RMSe,( MUM * MUR ) ) ) ) ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.19, "obj2": 0.574108912078951}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.45, "obj2": 0.34351342265380547}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( RRS + FirstVNF_Mem ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( MDR - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) + Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) ) - Max( ( RMSe - ( DS / ( MUM + MLU ) ) ),( MUR - ( Max( ( MUR / MLU ),( RCSe - RCSe ) ) + ( MUC * ( MUM - MLU ) ) ) ) ) ) ) )", "obj1": 0.97, "obj2": 0.00856060554066941}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( BR + AMS ) ) * AMS ) ) ) )", "choosing": "( Min( Max( RRSe,MUC ) ,RRSe ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.23, "obj2": 0.5352155514203241}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + MRS ) * ACS ) ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( ( RMSe + ( MUR / DS ) ),CS ) ) - Min( MUC ,MUC ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.846, "obj2": 0.04651635275393531}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * AMS ),( ( ( MDR - Min( RRS ,RRS ) ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Max( FirstVNF_CPU_Server,Const ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( Min( MUR ,RMSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Min( ( MUR / RCSe ) ,CS ) ) )", "obj1": 0.08, "obj2": 0.6711995220062372}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( Const - FirstVNF_CPU_Server ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( RCSe - ( MUC / Min( MUM ,MUC ) ) ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.242, "obj2": 0.5247819135538015}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( DDR * Min( Const ,FirstVNF_CPU ) ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + ( MUC + RMSe ) ) ) ) )", "obj1": 0.748, "obj2": 0.091387714951015}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,DDR ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( RRSe / CS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.946, "obj2": 0.016722783442769912}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( FirstVNF_Mem_Server / ARS ) * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - Min( ( ( MLU - ( RCSe * ( CS + MLU ) ) ) * Min( MUM ,Min( Min( MUR ,CS ) ,RMSe ) ) ) ,( MLU * ( RRSe - RCSe ) ) ) ) - ( ( MUC * RMSe ) - Max( ( RCSe - ( RMSe * MUC ) ),MUM ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.91, "obj2": 0.02717549229184826}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + Max( MUC,MUC ) ),DS ) ) + RMSe ) ) ) - ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) )", "obj1": 0.998, "obj2": 0.0014832503672524882}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) - ( ( MDR - ACS ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( MUM - ( ( RRSe - RRSe ) / CS ) ) - Min( ( MUR / RCSe ) ,CS ) )", "obj1": 0.776, "obj2": 0.07070344242979293}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}], "31": [{"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,( ( ( Min( Min( CS ,RMSe ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) * ( RRSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) * ( RRSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / MRS ) ) / ( Min( RRS ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - ( ( ( ( RMSe / MUR ) - DS ) + CS ) * ( DS / MLU ) ) ) ,( RMSe + Min( RRSe ,RCSe ) ) ) - Max( MLU,CS ) )", "obj1": 0.044, "obj2": 0.7591249319202097}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.468, "obj2": 0.2891247533254916}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),( Max( PN,Max( RRS,FirstVNF_CPU ) ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) - Min( Min( Min( ( Min( Min( RRSe ,( RRSe - RMSe ) ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.54, "obj2": 0.23808291643231533}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + DDR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - Min( Min( ( ( MUM + CS ) / ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) ,CS ) )", "obj1": 0.572, "obj2": 0.2115174608850992}, {"determining": "( ( ( PN - Max( DDR,( MDR / ARS ) ) ) * ( MDR + MDR ) ) + ( MDR - ARS ) )", "choosing": "( MLU - Min( ( Max( ( ( ( RCSe + ( RCSe + CS ) ) * DS ) - MLU ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.31, "obj2": 0.4622628112300815}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * ACS ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( ( RRSe - RRSe ) / CS ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.464, "obj2": 0.33536783863892117}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ) - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - ( RMSe / Max( DS,( ( ( MUR / RCSe ) / MLU ) + MLU ) ) ) )", "obj1": 0.394, "obj2": 0.3715272831604908}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * Max( Max( BR,BR ),ACS ) ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - Min( MUR ,MUR ) ) ) ) - CS )", "obj1": 0.722, "obj2": 0.1001333082637867}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) + ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RCSe * RMSe ) - Min( Min( Min( ( Min( ( MLU / RMSe ) ,CS ) / RCSe ) ,( RCSe * RMSe ) ) ,RMSe ) ,CS ) )", "obj1": 0.626, "obj2": 0.18067620068514006}, {"determining": "( ( PN / Min( RRS ,FirstVNF_RAM_Server ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / FirstVNF_Mem ) ) + ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( MLU ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) ) - Min( ( MUR / RCSe ) ,( RCSe * RMSe ) ) )", "obj1": 0.532, "obj2": 0.248209695963629}, {"determining": "( ( PN - Max( ( ( ( Min( MRS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ( ( ARS * RRS ) / FirstVNF_CPU ) ) ) - RRS ),Min( FirstVNF_Mem ,ACS ) ) ) * ARS )", "choosing": "( Max( ( ( MUM + MUM ) - ( ( ( MUC / MUM ) - RRSe ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( ( ( ( Max( RMSe,RCSe ) / ( MLU / DS ) ) + RCSe ) * Max( MUC,MUC ) ) - MUR ) + RRSe ) + ( Max( ( ( ( ( CS * CS ) - RCSe ) / MUM ) / MUM ),DS ) / DS ) ) )", "obj1": 0.048, "obj2": 0.7132081707218327}, {"determining": "( ( PN / Max( ( DDR + ( ( BR * ( FirstVNF_CPU - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * MRS ) ),PN ) ) + ( MDR / Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( ( ( MLU * DS ) * Max( Max( RRSe,MUR ),( MUM - CS ) ) ) * MUM ) ,Max( Min( ( ( MUM + MUM ) + DS ) ,( ( Min( MUM ,CS ) / RMSe ) / RCSe ) ),( RCSe / DS ) ) ),CS ) - Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( ( RCSe + ( RRSe * MUR ) ) ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.504, "obj2": 0.27212690998838146}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.13, "obj2": 0.634476528429205}, {"determining": "( Min( Const ,MRS ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - Max( CRS,RRS ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) ) )", "choosing": "( Min( Min( ( ( ( MUC * Min( CS ,DS ) ) + ( Min( CS ,( MUM / MUC ) ) * ( ( MUM + CS ) - ( RMSe / MLU ) ) ) ) / ( ( Max( MLU,( MUM / MUR ) ) - Max( ( MUC - DS ),( RCSe * MUC ) ) ) + MUM ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( ( MLU + MUR ) + ( ( MUM / MUM ) - CS ) ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.654, "obj2": 0.1597435310265519}, {"determining": "Max( ( ( ( ( ( CRS - FirstVNF_RAM_Server ) - ARS ) * ACS ) * FirstVNF_CPU ) - AMS ),( ( Max( MDR,ARS ) + AMS ) - CRS ) )", "choosing": "( Max( DS,MLU ) / Max( RMSe,( CS / Max( ( DS + DS ),CS ) ) ) )", "obj1": 0.046, "obj2": 0.7530246738085884}, {"determining": "( ( Max( ( DDR * DDR ),BR ) / FirstVNF_RAM ) + ( MDR / ( ( FirstVNF_CPU_Server * ( FirstVNF_RAM * ACS ) ) + ( RRS / ( ( MRS - RRS ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( MUR / RCSe ) ,( RCSe / ( ( ( CS - ( RMSe * MUM ) ) * MLU ) / ( DS * ( ( MUR + MUR ) - RRSe ) ) ) ) ) )", "obj1": 0.38, "obj2": 0.4072152320175851}, {"determining": "( ( DDR + ( MRS + CRS ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) )", "choosing": "( MLU - Min( ( ( Min( RRSe ,MUM ) + Max( MUM,Max( MUR,RMSe ) ) ) / RCSe ) ,Min( CS ,( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.392, "obj2": 0.4000899852812666}, {"determining": "( ( ( PN - Max( DDR,Min( FirstVNF_RAM ,RRS ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,( Max( Max( MUM,MUC ),RCSe ) + MUM ) ),CS ) / Min( DS ,MLU ) ) ,Min( MUC ,CS ) ) )", "obj1": 0.29, "obj2": 0.48387320077107426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( MUM ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.698, "obj2": 0.11703942607964136}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( FirstVNF_RAM + ACS ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( ( RRSe + MUC ) - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.508, "obj2": 0.26737328553908585}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / Min( FirstVNF_Mem_Server ,Min( ACS ,FirstVNF_Mem_Server ) ) ) ) + Min( Max( ( ACS / ( Const * ( FirstVNF_RAM + RRS ) ) ),FirstVNF_Mem_Server ) ,( FirstVNF_CPU - Max( ( Const * ( AMS + RRS ) ),( MDR - Min( RRS ,RRS ) ) ) ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,Min( MUM ,Max( Max( CS,Max( RCSe,RRSe ) ),DS ) ) ) ) - ( MLU / MLU ) )", "obj1": 0.672, "obj2": 0.14502123278708043}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( PN + FirstVNF_RAM ) ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / Max( Min( FirstVNF_CPU ,Min( FirstVNF_RAM ,CRS ) ),AMS ) ) ) + ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM - Min( ( ( ( MLU / Min( MLU ,( MUC - MUC ) ) ) + ( MUC / MUM ) ) - ( RMSe + Max( ( CS + ( RCSe + MUM ) ),Min( MUM ,( MUR * MUR ) ) ) ) ) ,CS ) ) - Min( ( MUR / RCSe ) ,( ( MLU / Max( MUM,CS ) ) * RMSe ) ) )", "obj1": 0.798, "obj2": 0.061448444026822126}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server * PN ) ) + ( Max( DDR,ARS ) - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( MDR / ( ( ( PN + ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - BR ) ) + FirstVNF_Mem ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( MUC,RMSe ) + ( MUC / MUM ) ) - ( MUM * RRSe ) ) + MUM ) - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( CS ,( ( CS + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) )", "obj1": 0.372, "obj2": 0.43127245483932647}, {"determining": "( ( ( MDR - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + Min( CRS ,( CRS + BR ) ) ) + Max( ( CRS + ( Min( CRS ,Min( ARS ,Const ) ) - FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,Max( ( Max( MUM,( MUM + MUC ) ) - Min( Min( ( MLU / MUC ) ,DS ) ,( ( MUR / RCSe ) + ( RRSe * RMSe ) ) ) ),Min( RCSe ,RRSe ) ) ) - ( DS + Min( ( ( CS * ( Max( MUR,MUC ) * ( DS + RRSe ) ) ) + MUR ) ,MUC ) ) ) - ( RCSe - CS ) )", "obj1": 0.142, "obj2": 0.6143286261629798}, {"determining": "( ( PN / ( MDR + FirstVNF_Mem ) ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + FirstVNF_CPU_Server ) ),( Max( PN,MRS ) + FirstVNF_CPU ) ) ) - ( ACS / FirstVNF_Mem ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( MUR,MUR ) )", "obj1": 0.422, "obj2": 0.3657008114190388}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - ( ( RRS * Const ) - RRS ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( ( MUC - CS ) - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.65, "obj2": 0.17689601625306475}, {"determining": "( ( Max( BR,DDR ) - Max( ( ( RRS * Const ) - ( ( BR / Min( ( MRS / Const ) ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server / MRS ) + ( ( BR - CRS ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ),RRS ) ) * ARS )", "choosing": "( Max( ( RRSe - ( RMSe * MLU ) ),( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) ) / ( DS * Max( Min( CS ,MUC ),( RRSe / ( Max( MUC,Max( MLU,Max( DS,MLU ) ) ) - MUM ) ) ) ) )", "obj1": 0.064, "obj2": 0.6846136780121506}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( FirstVNF_Mem - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * Min( DS ,MUR ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) )", "obj1": 0.674, "obj2": 0.1297481871761181}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * CRS ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( MLU ,Min( CS ,RMSe ) ) )", "obj1": 0.614, "obj2": 0.20311744269679907}, {"determining": "Min( ( ( FirstVNF_RAM_Server - Const ) / AMS ) ,( ARS + ( Const + MRS ) ) )", "choosing": "( ( ( Max( ( MLU + Max( Min( MUR ,RRSe ),MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * Min( ( MUR - Max( MUC,( Min( RMSe ,MUR ) - CS ) ) ) ,( Max( Max( ( MUM * MUC ),MLU ),( RRSe - ( MLU * RCSe ) ) ) / RRSe ) ) ) / Min( RCSe ,( RMSe / ( RMSe - DS ) ) ) ) / Max( ( MUM / ( Max( ( DS / RMSe ),( Max( DS,( DS * MLU ) ) - ( RMSe * MLU ) ) ) + CS ) ),( Max( MUR,( MUM - Min( MLU ,Min( Max( RRSe,MUC ) ,RRSe ) ) ) ) - RCSe ) ) )", "obj1": 0.336, "obj2": 0.45927518166758247}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),Max( Const,FirstVNF_Mem ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RRSe ) ,CS ) )", "obj1": 0.75, "obj2": 0.08180557511826303}, {"determining": "( ( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.12, "obj2": 0.646772892615733}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( PN * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( Max( Min( CS ,MUC ),CS ) - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.436, "obj2": 0.3614058176350637}, {"determining": "( ( FirstVNF_Mem + FirstVNF_CPU ) - Max( ACS,( Const * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( DS + MUC ) / RCSe ) ,( ( Max( Max( ( ( RMSe - CS ) * ( RMSe * MUM ) ),Min( RMSe ,MLU ) ),MLU ) - ( RMSe / Min( CS ,( RCSe - DS ) ) ) ) * MUM ) ) )", "obj1": 0.34, "obj2": 0.4506496156009987}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( CRS + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( RCSe ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.904, "obj2": 0.030564093213225035}, {"determining": "( ( Max( ( Const - FirstVNF_Mem_Server ),( ( AMS - PN ) + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( RRS * FirstVNF_CPU ),( MDR - Min( ARS ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( RRS / Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( MLU + CS ) - Min( DS ,( RCSe - ( RCSe - ( MLU * CS ) ) ) ) ) - Min( MUC ,( RMSe * DS ) ) )", "obj1": 0.816, "obj2": 0.054954618931652925}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( RMSe ,( ( RMSe + Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) ) - MUC ) ) ) - Min( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.878, "obj2": 0.035135024600023525}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - Min( MUR ,MUR ) ) ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.696, "obj2": 0.12571083561433521}, {"determining": "( ( ( ( MRS - MRS ) - Max( ARS,FirstVNF_RAM_Server ) ) + ARS ) + ( Max( DDR,( CRS + FirstVNF_CPU ) ) / ( ( ( ACS - ARS ) / ( FirstVNF_RAM_Server / ( ( ( FirstVNF_Mem * MRS ) * DDR ) - DDR ) ) ) - Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,Min( ( MLU / RCSe ) ,( MUC / ( Min( MUM ,MUM ) + DS ) ) ) ) - RMSe ) - ( Min( ( ( Max( ( MLU / Min( MUM ,MUM ) ),Min( ( CS / MUM ) ,MUM ) ) + Max( DS,MUC ) ) / MUM ) ,( Min( ( ( DS / RMSe ) * ( MUC * RRSe ) ) ,( ( Min( DS ,DS ) - RMSe ) / ( ( MUM - RMSe ) * Max( MUR,MLU ) ) ) ) * ( ( DS / MUC ) + MLU ) ) ) / MUC ) )", "obj1": 0.356, "obj2": 0.44171390334303584}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_CPU ) * FirstVNF_CPU_Server ) + Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) )", "choosing": "( ( Min( RMSe ,MUC ) - ( DS + RCSe ) ) - Min( Max( DS,RRSe ) ,Min( Min( CS ,Min( RRSe ,( MUR - ( RCSe - RRSe ) ) ) ) ,RMSe ) ) )", "obj1": 0.146, "obj2": 0.6034763654442369}, {"determining": "( ( ( AMS + Min( MDR ,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( ( RCSe - MUC ) ,( ( ( RRSe - MUC ) * Max( MUM,( DS / Max( RRSe,DS ) ) ) ) * MUM ) ) )", "obj1": 0.74, "obj2": 0.09421681200495129}, {"determining": "( ( DDR + Max( ACS,Const ) ) - ( ( DDR / FirstVNF_Mem_Server ) + MDR ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( Min( CS ,( ( ( MUM / RRSe ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) + Max( CS,CS ) ) ,( ( ( MUM * MUR ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.28, "obj2": 0.4916197118253064}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.444, "obj2": 0.34958459485244925}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * MUM ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.058, "obj2": 0.7001358185370137}, {"determining": "( ( ( PN - Max( DDR,( FirstVNF_RAM_Server * ( Min( FirstVNF_RAM ,( MDR * PN ) ) + ( FirstVNF_Mem - FirstVNF_Mem ) ) ) ) ) * ( MDR + MDR ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - Min( ( Max( Min( CS ,Min( ( RRSe - MUR ) ,( RMSe + CS ) ) ),CS ) / RCSe ) ,Min( RRSe ,( RCSe + Max( MUC,( ( DS / ( MLU / RRSe ) ) / Min( RRSe ,Min( DS ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.27, "obj2": 0.5061119542615816}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * ( RRS - MDR ) ) ) ) ) ),( DDR / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( MUM / CS ) + ( RMSe / ( MUR + RMSe ) ) ) * CS ) )", "obj1": 0.26, "obj2": 0.5132925340999048}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( ( AMS + FirstVNF_CPU_Server ) * BR ) ) - Max( ( ( RRS * Const ) - ( ( Const * ( AMS + RRS ) ) * ( ( FirstVNF_Mem_Server / MRS ) + Max( DDR,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) ),RRS ) ) * MRS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + ( MUM / CS ) ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),( ( MUR * ( DS / MUR ) ) + ( MLU - ( ( RCSe / RRSe ) - DS ) ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.096, "obj2": 0.6621168138430487}, {"determining": "( Max( ( BR / FirstVNF_CPU ),Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( ( RRS / ARS ) + ( RRS / PN ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( MUR + MUR ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.588, "obj2": 0.21142079765303187}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( BR - ( ( MRS - Const ) + ( FirstVNF_CPU_Server * Const ) ) ) * ARS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + ( ( ( MLU + MLU ) + ( RCSe * MUM ) ) * RCSe ) ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.778, "obj2": 0.068673253424554}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * DDR ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( ( CS - MUM ) ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ) ) )", "obj1": 0.072, "obj2": 0.6726139140228838}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * Max( ( CRS + ( Min( CRS ,MDR ) - FirstVNF_Mem_Server ) ),Min( ( Const / CRS ) ,MRS ) ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * RRSe ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.248, "obj2": 0.5233596316123421}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.226, "obj2": 0.5401058937771925}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( MRS - FirstVNF_CPU_Server ) * MDR ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( MDR - ARS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( CS ,Max( Max( Max( MUC,CS ),( DS / RCSe ) ),( DS - RMSe ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.18, "obj2": 0.5780102931350802}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( MDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,( RMSe * RMSe ) ),RMSe ) - Min( MUC ,Min( CS ,RMSe ) ) )", "obj1": 0.362, "obj2": 0.43680263279217935}, {"determining": "( Max( ( Max( ARS,DDR ) + ACS ),( FirstVNF_Mem_Server / ARS ) ) + ( MDR / ( ( Min( BR ,( ( FirstVNF_RAM + ( FirstVNF_RAM / PN ) ) - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR - DS ) - CS ) ,DS ) - Min( ( ( MUM + MLU ) / ( ( ( ( RCSe / ( MLU - MLU ) ) - RRSe ) * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.934, "obj2": 0.01875565505405825}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( Max( ARS,Const ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( ( MUC / MUM ),( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,( ( MLU - CS ) * ( MUR * MUR ) ) ) - Min( ( MUR / RCSe ) ,Min( ( MUM - MLU ) ,RMSe ) ) )", "obj1": 0.598, "obj2": 0.20518145161164508}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,Max( MUM,RRSe ) ) / MLU ) - ( CS / MUR ) )", "obj1": 0.842, "obj2": 0.044950468369323704}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( MDR * Max( ( RRS / MRS ),ACS ) ) ) ) )", "choosing": "( Min( ( Min( MUC ,MUR ) * ( Min( ( ( MLU + ( MUM * RCSe ) ) / CS ) ,( RRSe - ( Min( DS ,DS ) / Min( MLU ,MUC ) ) ) ) + MUM ) ) ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.154, "obj2": 0.5940722411069554}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + FirstVNF_RAM ) ) * AMS ),( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) ) ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Max( Min( CS ,CS ),( ( ( Min( DS ,( RCSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( ( Max( RCSe,MLU ) + ( ( MUC / MUM ) - RRSe ) ) + RMSe ) ) ) ) )", "obj1": 0.086, "obj2": 0.66663574604608}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RRSe + MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.216, "obj2": 0.5490324017639323}, {"determining": "( ( PN - Max( ( ACS - ( ( FirstVNF_Mem * MRS ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( Min( MDR ,MRS ) - FirstVNF_Mem ) ) ) ),RRS ) ) * ARS )", "choosing": "( ( ( DS / MUC ) + CS ) / ( Min( MUC ,MUR ) * Max( Min( CS ,( CS - Max( DS,DS ) ) ),CS ) ) )", "obj1": 0.988, "obj2": 0.0034649553119060154}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( ( AMS - FirstVNF_RAM_Server ) - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / Max( ( FirstVNF_RAM_Server + DDR ),ARS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) ,( RRSe + MLU ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.854, "obj2": 0.044210689128252635}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( PN,MRS ) ) / ( FirstVNF_CPU_Server + PN ) ) * ARS )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / MUM ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),Min( CS ,CS ) ) / ( DS * Max( Min( ( ( MUM + CS ) / ( ( DS * MUC ) * Max( Min( CS ,MUR ),CS ) ) ) ,MUC ),CS ) ) )", "obj1": 0.054, "obj2": 0.7054738016815116}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( BR / MRS ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * Min( ( MUR - MUR ) ,( MUM - MUC ) ) ) )", "obj1": 0.928, "obj2": 0.025123195258034404}, {"determining": "( ( ( Min( Const ,BR ) * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( Const * ( AMS + RRS ) ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - Max( RRSe,MLU ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + MUM ),DS ) ) + RMSe ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.862, "obj2": 0.03976706470920775}, {"determining": "( Max( AMS,AMS ) * ( DDR + ( ( ( MRS + MRS ) - FirstVNF_CPU_Server ) + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( Min( ( DS / Max( DS,MUM ) ) ,MLU ) * ( Max( Min( CS ,MUC ),RCSe ) + MUM ) ) ) - ( ( ( Min( DS ,( RCSe - MLU ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),Min( Min( MUR ,MUC ) ,( ( ( RRSe + ( RCSe / MUC ) ) + RCSe ) / RRSe ) ) ) / ( DS * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.102, "obj2": 0.6518147735143417}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + ( ( RRS / ( ( DDR * Min( Const ,FirstVNF_CPU ) ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + ( MUC + RMSe ) ) ) ) )", "obj1": 0.748, "obj2": 0.091387714951015}, {"determining": "( ( Min( MRS ,( Const + FirstVNF_Mem ) ) / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( DS - ( RCSe - ( MUC * RRSe ) ) )", "obj1": 0.238, "obj2": 0.5312945602692004}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,( PN - ( ACS - FirstVNF_CPU_Server ) ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( Min( AMS ,( ( RRS * MDR ) - ( Max( RRS,DDR ) / ( PN - PN ) ) ) ) / DDR ) ) ,( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) )", "choosing": "( ( ( MLU - MUC ) + DS ) - Min( ( ( ( Max( ( ( MLU + RMSe ) * MUM ),Max( Min( MUR ,RRSe ),MUM ) ) * RCSe ) * DS ) + Max( CS,CS ) ) ,( RCSe / ( MUM * DS ) ) ) )", "obj1": 0.21, "obj2": 0.5491220330137245}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,Min( BR ,( MRS - DDR ) ) ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( MDR * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( Max( Min( MUR ,MUR ),( MLU / Max( MUM,Max( RMSe,( MUM * MUR ) ) ) ) ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + ( ( DS * ( ( RRSe + MUC ) * RRSe ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.19, "obj2": 0.574108912078951}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( PN ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),Const ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RCSe - ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( MLU / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( Max( MLU,( DS - Max( RRSe,MLU ) ) ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.45, "obj2": 0.34351342265380547}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( BR - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * Max( MDR,FirstVNF_Mem ) ) )", "choosing": "( RMSe - ( Min( RMSe ,Max( CS,RCSe ) ) * ( RRSe - MUM ) ) )", "obj1": 0.96, "obj2": 0.011251498116963746}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_Mem + ( MDR + ARS ) ),FirstVNF_CPU_Server ) * ( BR + ( ( Const / FirstVNF_RAM_Server ) * DDR ) ) ) / ( FirstVNF_Mem + MRS ) ) * ACS ) - CRS ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( ( Max( ( MLU + Max( RCSe,MUM ) ),( Max( MUM,( RRSe * RRSe ) ) * RRSe ) ) * MLU ) / ( MUR / ( CS / Max( ( ( MUC + RCSe ) - MLU ),( ( Max( MUC,MUR ) + ( DS - CS ) ) * ( MUM - ( RCSe / RCSe ) ) ) ) ) ) ) / Min( RRSe ,( Min( Min( ( Max( RMSe,RRSe ) * MLU ) ,Max( Max( ( RMSe - RRSe ),DS ),DS ) ) ,RCSe ) - CS ) ) )", "obj1": 0.978, "obj2": 0.006837425911984734}, {"determining": "( Max( Min( DDR ,( Const - AMS ) ),( DDR / FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( CS + CS ),MUR ) - Min( ( ( ( RRSe * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( MUC + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.158, "obj2": 0.5910335883312658}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,DDR ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * CRS ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( RRSe / CS ) ) ) + RMSe ) - ( RCSe / MUM ) ) ) )", "obj1": 0.946, "obj2": 0.016722783442769912}, {"determining": "( Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) * FirstVNF_Mem )", "choosing": "( ( ( Max( Min( Min( Min( ( MLU / RMSe ) ,CS ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ),( DS + ( MUC - ( MLU + DS ) ) ) ) - MUR ) / CS ) * ( ( MUC * ( ( MUR * RMSe ) / RMSe ) ) * MLU ) )", "obj1": 0.106, "obj2": 0.6496039438019666}, {"determining": "( ( PN / Max( ( DDR + ( Max( FirstVNF_CPU,MDR ) * MRS ) ),PN ) ) + ( MDR / ( ( Min( BR ,( MRS - DDR ) ) - ( ACS / Max( ( ( RRS * Const ) - ( ARS * MDR ) ),RRS ) ) ) + ( MDR + MDR ) ) ) )", "choosing": "( Min( ( RCSe - MUR ) ,DS ) - Min( ( ( MUR - Min( ( ( MLU - RCSe ) / MUC ) ,( ( MUR / RCSe ) / ( Max( RRSe,CS ) * ( MUC + RCSe ) ) ) ) ) / ( ( DS * MUC ) * Max( Min( CS ,MUC ),CS ) ) ) ,MUC ) )", "obj1": 0.456, "obj2": 0.3396556343046677}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Min( PN ,MDR ) * ( Max( FirstVNF_RAM,Min( MDR ,FirstVNF_RAM_Server ) ) * ( RRS + FirstVNF_Mem ) ) ) / ( DDR / DDR ) ) ,( ( ( FirstVNF_Mem_Server / PN ) + RRS ) * ( Min( ( ( FirstVNF_RAM + ACS ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM - BR ) ) ) * AMS ) ) ) )", "choosing": "( ( Max( Min( Min( ( MUM + Max( RCSe,( RRSe + RMSe ) ) ) ,DS ) ,RMSe ),CS ) + MUM ) - Min( ( ( ( Min( DS ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.204, "obj2": 0.5591866002723033}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,BR ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( RRS + FirstVNF_Mem ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( MDR - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( RMSe - ( MUM * ( ( ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) + Max( Min( MUR ,MUR ),( MLU / Max( MUM,CS ) ) ) ) - Max( ( RMSe - ( DS / ( MUM + MLU ) ) ),( MUR - ( Max( ( MUR / MLU ),( RCSe - RCSe ) ) + ( MUC * ( MUM - MLU ) ) ) ) ) ) ) )", "obj1": 0.97, "obj2": 0.00856060554066941}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( ( AMS / CRS ) * ACS ) - ARS ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( Min( MUR ,CS ) / ( DS - ( DS / DS ) ) )", "obj1": 0.172, "obj2": 0.5889898285676199}, {"determining": "( Max( AMS,( DDR / FirstVNF_RAM ) ) - Min( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) ,( MDR * ( Min( MDR ,( BR + AMS ) ) * AMS ) ) ) )", "choosing": "( Min( Max( RRSe,MUC ) ,RRSe ) - Min( ( ( ( Min( ( ( CS + RMSe ) + RMSe ) ,MUR ) * RMSe ) * DS ) + Max( CS,CS ) ) ,( ( Max( ( ( ( DS * MLU ) / MUC ) + RMSe ),MLU ) - ( RMSe / CS ) ) * MUM ) ) )", "obj1": 0.23, "obj2": 0.5352155514203241}, {"determining": "( ( PN - DDR ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,FirstVNF_Mem ) ) ) ) - ( ( MDR * DDR ) + FirstVNF_RAM ) ) + ( FirstVNF_CPU * ACS ) ) ) )", "choosing": "( ( MUM - Min( ( MUC / ( ( RRSe * DS ) / Min( RCSe ,RCSe ) ) ) ,( ( RMSe + CS ) - MUC ) ) ) - Min( ( CS / MUC ) ,CS ) )", "obj1": 0.874, "obj2": 0.039489940044184775}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) / Min( CRS ,( PN / MDR ) ) ) / Max( FirstVNF_RAM_Server,( ( Const / ( ( Max( RRS,MDR ) * FirstVNF_CPU ) - Min( ARS ,MRS ) ) ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( Const - ARS ) + CRS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe - ( Max( MLU,MUC ) - Min( ( RMSe + ( MUC * ( DS + RRSe ) ) ) ,Min( CS ,MUR ) ) ) ) - MUR ) / ( DS - ( DS / DS ) ) )", "obj1": 0.176, "obj2": 0.586713143339296}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( ( MDR * DDR ) + ACS ) ) * AMS ),( ( ( MDR - Min( RRS ,RRS ) ) / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) * ( PN * BR ) ) - Max( ( ( RRS * Max( FirstVNF_CPU_Server,Const ) ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( DDR + ( RRS + AMS ) ) )", "choosing": "( Max( ( Min( MUR ,RMSe ) - ( ( ( Min( DS ,( RCSe - RRSe ) ) / RMSe ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( DS * Min( ( MUR / RCSe ) ,CS ) ) )", "obj1": 0.08, "obj2": 0.6711995220062372}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) - ( ( FirstVNF_RAM + Max( ( Min( ( FirstVNF_CPU - CRS ) ,( Min( PN ,Const ) * AMS ) ) * ( Min( PN ,FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) - CRS ) ) ),( DDR / FirstVNF_RAM ) ) ) * ( BR * MDR ) ) )", "choosing": "( RMSe - ( MUM * ( ( Min( ( MLU * MUC ) ,RRSe ) / MLU ) - Max( RMSe,RCSe ) ) ) )", "obj1": 0.952, "obj2": 0.01368684837979977}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( Min( MDR ,Max( Max( BR,BR ),ACS ) ) * ARS ) + ( ( RRS / ( ( MRS - FirstVNF_CPU_Server ) * ACS ) ) / Max( BR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( Max( CS,( MUR - ( ( DS * RRSe ) * Min( RMSe ,MUR ) ) ) ),( CS + RCSe ) ) - ( RMSe / Max( DS,( ( RCSe / MLU ) + MLU ) ) ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( ( PN / ( ( RRS / Min( ACS ,PN ) ) / ( ( RRS / ARS ) - RRS ) ) ) + ( MDR / ( ( Min( BR ,( DDR / AMS ) ) - ( ACS / Max( ( ( RRS * Const ) - RRS ),RRS ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( Min( ( MLU / MUM ) ,CS ) + DS ) ,RRSe ) - MLU ) - Min( ( ( MUM + MLU ) / ( ( DS * MUC ) * Min( DS ,DS ) ) ) ,MUC ) )", "obj1": 0.916, "obj2": 0.025202869533199494}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + Const ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( ( ( ( Min( Min( MUM ,DS ) ,( MUR - MUM ) ) + RCSe ) / ( RRSe * RRSe ) ) + RMSe ),MLU ) ,CS ) )", "obj1": 0.828, "obj2": 0.05230029283901745}, {"determining": "( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( Const - FirstVNF_CPU_Server ) ) ) ),RRS ) ) * ( DDR + ( MRS + AMS ) ) )", "choosing": "( Max( ( ( MUR + ( ( ( MUM / Max( CS,CS ) ) - MUR ) * ( Max( Max( MUM,MUC ),RCSe ) + MUM ) ) ) - ( Min( MUR ,MLU ) - ( RRSe / CS ) ) ),RCSe ) / ( ( ( RCSe - ( MUC / Min( MUM ,MUC ) ) ) + MUM ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.242, "obj2": 0.5247819135538015}, {"determining": "( Min( Max( FirstVNF_RAM,CRS ) ,FirstVNF_Mem ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( RRS / ARS ) ) ) )", "choosing": "( MLU - ( MLU / ( ( ( CS / MUR ) - Max( MUM,Min( Max( Max( MUC,CS ),( DS / RCSe ) ) ,( MUM * MUR ) ) ) ) * ( CS / MUR ) ) ) )", "obj1": 0.284, "obj2": 0.4880471010298426}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( AMS + BR ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,RRS ) ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - RRSe ) ) ) - Min( Min( Max( RMSe,CS ) ,RMSe ) ,CS ) )", "obj1": 0.768, "obj2": 0.0727846069920086}, {"determining": "( RRS + Max( ( Min( ( FirstVNF_CPU - CRS ) ,Const ) * Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - MDR ) - ( MDR * ( Min( MDR ,MRS ) * AMS ) ) ) ) ),( Min( ( MDR * CRS ) ,FirstVNF_CPU ) / FirstVNF_RAM ) ) )", "choosing": "( RMSe - ( ( ( DS + MUC ) + ( RMSe / MUM ) ) * CS ) )", "obj1": 0.268, "obj2": 0.5108001413627242}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * Min( FirstVNF_Mem_Server ,MRS ) ),FirstVNF_CPU ) ) - ( ACS / ( MDR + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - MUC ) ) + CS ) ) ,MUR ) ,Min( MUR ,( RMSe - ( RCSe - RMSe ) ) ) ) - Min( ( MUR / RCSe ) ,Min( CS ,RMSe ) ) )", "obj1": 0.608, "obj2": 0.20472138261250192}, {"determining": "( ( PN / FirstVNF_RAM_Server ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( Const * ( FirstVNF_Mem_Server + CRS ) ),( MDR - Min( PN ,RRS ) ) ) ) - ( ACS / ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_CPU ) ) ) + DDR ) ) )", "choosing": "( ( MUM - Min( DS ,( ( RMSe + CS ) - MUC ) ) ) - Min( Max( MUM,MLU ) ,CS ) )", "obj1": 0.834, "obj2": 0.05081364973862619}, {"determining": "( ( ( Const / CRS ) - ( MDR * ( Min( MDR ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_CPU_Server + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + MRS ) * ACS ) ) ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( ( RMSe + ( MUR / DS ) ),CS ) ) - Min( MUC ,MUC ) )", "obj1": 0.194, "obj2": 0.5649186064810267}, {"determining": "( ( ( Max( ( Min( ( AMS - FirstVNF_RAM_Server ) ,( BR + ( FirstVNF_Mem + MRS ) ) ) * AMS ),FirstVNF_CPU_Server ) * ( PN * BR ) ) - Max( ( ( RRS * Const ) - ( AMS * ( ( FirstVNF_Mem_Server / MRS ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ),RRS ) ) * ( ( CRS + FirstVNF_CPU ) / MDR ) )", "choosing": "( Max( ( ( MUM / Max( CS,CS ) ) - ( ( ( Min( DS ,( RMSe - RRSe ) ) / MUM ) / ( DS + RMSe ) ) - ( RRSe / CS ) ) ),RCSe ) / ( ( Max( RCSe,MLU ) * Min( RRSe ,RRSe ) ) * Max( Min( CS ,CS ),CS ) ) )", "obj1": 0.202, "obj2": 0.5616007489822404}, {"determining": "( ( ( ( Max( MDR,FirstVNF_CPU_Server ) * ( PN * BR ) ) / ( ( ACS + FirstVNF_CPU ) - Min( ( FirstVNF_Mem / MDR ) ,CRS ) ) ) * Const ) + ( MDR / ( ( ( FirstVNF_CPU - Max( ( BR * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) - ( ACS / ( FirstVNF_RAM + MDR ) ) ) + FirstVNF_Mem ) ) )", "choosing": "( Min( Min( Min( ( MLU / RMSe ) ,( Max( MLU,( DS - ( DS / DS ) ) ) + CS ) ) ,MUR ) ,Min( MUR ,( Min( MUM ,Max( ( ( DS + RRSe ) + Max( MUC,MUC ) ),DS ) ) + RMSe ) ) ) - ( CS + ( MLU - ( ( RCSe / RRSe ) - ( CS / DS ) ) ) ) )", "obj1": 0.998, "obj2": 0.0014832503672524882}, {"determining": "( ( ( Max( Const,RRS ) / FirstVNF_RAM ) - ( MDR * ( Min( ( Max( ( FirstVNF_Mem - BR ),AMS ) / RRS ) ,MRS ) * ( MDR * ( ( FirstVNF_Mem - ARS ) + CRS ) ) ) ) ) + ( MDR / ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ( ACS / FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * Max( Min( RMSe ,( CS / ( ( MUR + ( RRSe - DS ) ) + ( MUC / MUR ) ) ) ),( MUR * ( MUC - MUR ) ) ) ) - ( DS / MLU ) )", "obj1": 0.192, "obj2": 0.5679697239623632}]}