{"1": [{"determining": "Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( ( MRS * AMS ) * Max( DDR,Min( Const ,DDR ) ) )", "choosing": "( Min( ( ( RRSe + DS ) - RCSe ) ,MUC ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}, {"determining": "( Min( ( ( MRS / BR ) - ARS ) ,MDR ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( MUC - ( ( Max( DS,RRSe ) / ( DS + CS ) ) * Min( Min( DS ,RCSe ) ,DS ) ) ) ) - ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.192, "obj2": 0.620460879551363}, {"determining": "( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,MUC ) ) - Max( RMSe,MUM ) )", "obj1": 0.63, "obj2": 0.32769407505306947}, {"determining": "( Max( MDR,Max( FirstVNF_CPU,MRS ) ) + ( FirstVNF_CPU_Server - PN ) )", "choosing": "Max( ( ( MLU + DS ) * ( MLU * MUR ) ),( Min( RMSe ,CS ) * ( MLU / CS ) ) )", "obj1": 0.47, "obj2": 0.41149378851504437}, {"determining": "Min( Min( CRS ,ACS ) ,( PN * Const ) )", "choosing": "( ( ( RRSe + MUR ) * DS ) * Max( ( MUM * DS ),CS ) )", "obj1": 0.53, "obj2": 0.3982016478041923}, {"determining": "( Min( ( PN * Min( PN ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( RRS * PN ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / ( RCSe * Max( CS,( MLU / MUR ) ) ) ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( ( MUC * MUM ) * Max( RCSe,RCSe ) ) ) )", "obj1": 0.258, "obj2": 0.5412255953554009}, {"determining": "( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - RCSe ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "( Min( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) ,Min( ( MRS - CRS ) ,Max( PN,ARS ) ) ) * Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / CS ) + Max( DS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ARS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / MUM ) ) ) ,( RMSe / MUM ) )", "obj1": 0.57, "obj2": 0.3295970622912557}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Const ) / ( ( FirstVNF_Mem / PN ) / MRS ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - RMSe ) ) ) ,( RCSe * MUR ) )", "obj1": 0.16, "obj2": 0.6922366378019378}], "2": [{"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS / BR ) - ARS ) ,MDR ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( MUC - ( ( Max( DS,RRSe ) / ( DS + CS ) ) * Min( Min( DS ,RCSe ) ,DS ) ) ) ) - ( RRSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( RMSe + RCSe ) / ( ( MUM + RCSe ) * DS ) )", "obj1": 0.054, "obj2": 0.757459843056416}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.192, "obj2": 0.620460879551363}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( RRS * PN ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / ( RCSe * Max( CS,( MLU / MUR ) ) ) ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( ( MUC * MUM ) * Max( RCSe,RCSe ) ) ) )", "obj1": 0.258, "obj2": 0.5412255953554009}, {"determining": "( ( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( RCSe + ( RRSe + MUR ) ) * Max( MUC,CS ) ) )", "obj1": 0.904, "obj2": 0.09465625451677148}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.132, "obj2": 0.7159609285585208}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + ( CRS + PN ) )", "choosing": "Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,Max( Max( ( MLU + ( MUC - ( MUC - Max( ( RCSe + MUC ),MUR ) ) ) ),( CS * CS ) ),MLU ) )", "obj1": 0.5, "obj2": 0.38895792704400706}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * FirstVNF_RAM ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( MUR - Max( RCSe,RMSe ) ) ) )", "obj1": 0.362, "obj2": 0.4637778446226101}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUC ) / Max( MUM,RMSe ) )", "obj1": 0.464, "obj2": 0.4037801345785164}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ARS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / MUM ) ) ) ,( RMSe / MUM ) )", "obj1": 0.57, "obj2": 0.3295970622912557}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ACS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / Min( MUR ,RCSe ) ) ) ) ,( RMSe / MUM ) )", "obj1": 0.536, "obj2": 0.34540801061411364}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - FirstVNF_RAM_Server )", "choosing": "( ( ( ( CS / RRSe ) / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + MUM )", "obj1": 0.668, "obj2": 0.2535789626761651}, {"determining": "Min( ( ( FirstVNF_RAM_Server + Const ) + ( CRS + PN ) ) ,( AMS * MDR ) )", "choosing": "( ( DS + DS ) - Min( ( CS - CS ) ,Max( RMSe,MLU ) ) )", "obj1": 0.62, "obj2": 0.28368857780956436}, {"determining": "( Max( ( MRS + BR ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,( RRSe * Max( Max( ( ( RRSe * MUC ) - ( MUR * ( MUR - CS ) ) ),MUC ),DS ) ) )", "obj1": 0.178, "obj2": 0.6805921907586161}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( Min( PN ,FirstVNF_RAM ) * Min( ( FirstVNF_CPU_Server - RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS / Max( CS,( MUM + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR * MUR ) ) )", "obj1": 0.41, "obj2": 0.4202430422786124}, {"determining": "( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) + Max( DS,MUC ) )", "obj1": 0.622, "obj2": 0.2803100073792249}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( Min( ( MUC + MUR ) ,MUC ) - Max( RCSe,RCSe ) )", "obj1": 0.684, "obj2": 0.23876341507089988}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ARS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( Max( DDR,FirstVNF_RAM_Server ) / Max( MRS,ARS ) ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * RCSe ) ,( RMSe / MUM ) )", "obj1": 0.56, "obj2": 0.337424493796882}, {"determining": "( ( MRS * AMS ) * Max( DDR,Min( Const ,DDR ) ) )", "choosing": "( Min( ( ( RRSe + DS ) - RCSe ) ,MUC ) - ( DS / CS ) )", "obj1": 0.146, "obj2": 0.7102148892857819}, {"determining": "( Min( ( PN * Min( PN ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.394, "obj2": 0.43611201503226754}, {"determining": "( Min( ( PN * Min( PN ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.394, "obj2": 0.43611201503226754}, {"determining": "( ( FirstVNF_RAM / MDR ) / ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,Max( MUC,( ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Max( MLU,MUM ) ) ) )", "obj1": 0.156, "obj2": 0.6932811684776246}, {"determining": "( ( ( ( Const / AMS ) / ( DDR + PN ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / ( FirstVNF_Mem / Const ) )", "choosing": "Min( ( ( DS * DS ) / MUM ) ,Max( MUC,Max( MUM,Max( MUM,MLU ) ) ) )", "obj1": 0.168, "obj2": 0.6822205824798523}, {"determining": "( ( FirstVNF_Mem_Server / Const ) / ( ( FirstVNF_Mem / PN ) / MRS ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - RMSe ) ) ) ,( RCSe * MUR ) )", "obj1": 0.16, "obj2": 0.6922366378019378}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,MLU ) * ( MUR - Max( RCSe,RMSe ) ) ) )", "obj1": 0.402, "obj2": 0.42997394866950894}, {"determining": "( Min( ( PN * Min( PN ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.398, "obj2": 0.43027402727211167}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - RCSe ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MRS ) + Min( FirstVNF_Mem_Server ,ARS ) ) ,Min( ( MRS - CRS ) ,Max( PN,ARS ) ) ) * Max( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem ) ),( Max( FirstVNF_Mem,FirstVNF_Mem ) + ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "( ( ( ( RRSe + CS ) / Min( DS ,CS ) ) - ( ( RRSe / RMSe ) * ( RCSe / MLU ) ) ) / ( ( Min( MLU ,MUR ) / ( DS / MLU ) ) * ( Max( CS,RMSe ) - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / CS ) + Max( DS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RRSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( RRS + BR ) )", "choosing": "( ( RCSe / ( ( ( MUM - CS ) / Min( ( CS * RCSe ) ,MLU ) ) + ( MUM * RCSe ) ) ) + Max( DS,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( CS / RRSe ) / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( FirstVNF_Mem + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / CS ) + Max( DS,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ACS )", "choosing": "( ( Max( CS,MUR ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( RCSe + CS ) * Max( MUC,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) - Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Max( ( Min( MUC ,MUR ) / Max( MUR,CS ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( ( ( FirstVNF_CPU_Server * Const ) + Max( MDR,MRS ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,Min( MUR ,MUC ) ) - Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( CS,MUR ) / ( Max( CS,MUC ) * RRSe ) ) * ( Min( DS ,DS ) * ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ACS + FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( CS + MUR ) * Max( MUC,CS ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( Min( ( FirstVNF_RAM_Server + ARS ) ,Min( ACS ,FirstVNF_Mem ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,Min( CS ,RCSe ) ) ,Max( ( RMSe * RRSe ),( MUR * MUM ) ) ) ,Max( Min( ( DS + MUM ) ,Min( RRSe ,MUR ) ),( Max( DS,MUR ) * ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( FirstVNF_RAM - FirstVNF_Mem ) - AMS ) - ACS )", "choosing": "( ( Max( CS,( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Const ,MDR ) * ( MDR + FirstVNF_CPU ) ),( ( CRS - ACS ) / ( RRS * FirstVNF_CPU ) ) ) / ( ( ( MRS * FirstVNF_Mem ) * ( FirstVNF_RAM_Server + AMS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - ( AMS / PN ) ) ) )", "choosing": "( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( RMSe + RCSe ) / ( ( MUM + RCSe ) * DS ) )", "obj1": 0.054, "obj2": 0.757459843056416}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( ( ( CRS - Const ) + PN ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - Const ) ) )", "choosing": "( ( CS + DS ) - ( ( ( RCSe * DS ) * ( ( MLU - Min( ( ( MUR + RMSe ) + Min( RCSe ,RRSe ) ) ,Min( DS ,MLU ) ) ) / RRSe ) ) / MLU ) )", "obj1": 0.746, "obj2": 0.19041649535944347}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( ( Max( FirstVNF_RAM,( ( MRS + ACS ) * ( FirstVNF_RAM_Server - AMS ) ) ) - FirstVNF_RAM ) - RRS ) - ACS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC * MUR ) - ( MUM + MUM ) ),MUM ) + ( MUR + RRSe ) )", "obj1": 0.83, "obj2": 0.12027736222086897}, {"determining": "( Min( ( ( MRS / BR ) - ARS ) ,MDR ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( MUC - ( ( Max( DS,RRSe ) / ( DS + CS ) ) * Min( Min( DS ,RCSe ) ,DS ) ) ) ) - ( RRSe / MUC ) ) ) )", "obj1": 0.598, "obj2": 0.2802087136243417}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "( ( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( RCSe + ( RRSe + MUR ) ) * Max( MUC,CS ) ) )", "obj1": 0.904, "obj2": 0.09465625451677148}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - FirstVNF_RAM_Server )", "choosing": "( ( ( ( CS / RRSe ) / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + MUM )", "obj1": 0.668, "obj2": 0.2535789626761651}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( ( MDR - FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( ( ( MUM + RCSe ) + MUR ) ,MUC ) - Max( RCSe,RCSe ) )", "obj1": 0.984, "obj2": 0.014631090156933226}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) - Max( RCSe,RCSe ) ) )", "obj1": 0.562, "obj2": 0.32415683978836907}, {"determining": "Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) )", "choosing": "Max( ( ( CS * CS ) / ( MLU / DS ) ),( Max( MUM,MUM ) / ( CS + MLU ) ) )", "obj1": 0.192, "obj2": 0.620460879551363}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "( Min( Max( Const,( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / FirstVNF_Mem_Server )", "choosing": "( ( ( CS - MUM ) * DS ) + ( MUM - CS ) )", "obj1": 0.454, "obj2": 0.3962080928950567}, {"determining": "( ( ( ( DDR + PN ) / ( Const / AMS ) ) / Min( Max( ( ( Min( ( CRS / CRS ) ,( FirstVNF_Mem * MRS ) ) + ( ( CRS - ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) ),PN ) ,( MDR * PN ) ) ) / Max( ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) ,( MUR - MLU ) ) ) ,Max( MUC,( MUM + Max( MLU,MUM ) ) ) )", "obj1": 0.172, "obj2": 0.6708558194978649}, {"determining": "( Const - ( Min( ( CRS + CRS ) ,Min( PN ,DDR ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - ( RMSe * MUR ) ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) )", "obj1": 0.112, "obj2": 0.7337355875989134}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.194, "obj2": 0.6013898948800274}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ACS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / Min( MUR ,RCSe ) ) ) ) ,( RMSe / MUM ) )", "obj1": 0.522, "obj2": 0.35551848858341123}, {"determining": "( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( RMSe + RCSe ) / ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.072, "obj2": 0.7479472456216509}, {"determining": "( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) )", "obj1": 0.216, "obj2": 0.5652509982854426}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + ( CRS + PN ) )", "choosing": "Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,Max( Max( ( MLU + ( MUC - ( MUC - Max( ( RCSe + MUC ),MUR ) ) ) ),( CS * CS ) ),MLU ) )", "obj1": 0.5, "obj2": 0.38895792704400706}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( CS * RCSe ) ,MLU ) ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.338, "obj2": 0.4814894045256187}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * FirstVNF_RAM ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( MUR - Max( RCSe,RMSe ) ) ) )", "obj1": 0.418, "obj2": 0.41997007236098804}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( AMS * MDR ) )", "choosing": "( Min( ( MUC + MUR ) ,MUC ) - Max( RCSe,RCSe ) )", "obj1": 0.684, "obj2": 0.23876341507089988}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Min( MLU ,( DS + ( MUR + DS ) ) ) / Max( DS,MUM ) ) - CS ) ) ) )", "obj1": 0.262, "obj2": 0.5218749406748944}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( ( MUR * Max( MUR,CS ) ) - ( Max( DS,CS ) + MUR ) ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.286, "obj2": 0.5036272631776938}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.132, "obj2": 0.7159609285585208}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUC ) / Max( MUM,RMSe ) )", "obj1": 0.488, "obj2": 0.39313115953380584}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ACS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / Min( MUR ,RCSe ) ) ) ) ,( RMSe / MUM ) )", "obj1": 0.536, "obj2": 0.34540801061411364}, {"determining": "( Max( ( MRS + BR ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,( RRSe * Max( Max( ( ( RRSe * MUC ) - ( MUR * ( MUR - CS ) ) ),MUC ),DS ) ) )", "obj1": 0.136, "obj2": 0.7039352884145162}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * FirstVNF_RAM ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( MUR - Max( RCSe,RMSe ) ) ) )", "obj1": 0.362, "obj2": 0.4637778446226101}, {"determining": "Max( ( MDR - ( ( FirstVNF_Mem_Server / CRS ) - ( BR / ACS ) ) ),Max( MRS,ARS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( DS ,RMSe ) ,MUC ) ) - MUR ) ) - Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.254, "obj2": 0.5309755032424105}, {"determining": "( ( ( PN * MRS ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.24, "obj2": 0.5450477875388733}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.376, "obj2": 0.4364745298270733}, {"determining": "Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( MUR - Max( RCSe,RMSe ) ) ) )", "obj1": 0.366, "obj2": 0.45226838949036446}, {"determining": "( ( FirstVNF_RAM / MDR ) / ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,Max( MUC,( ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Max( MLU,MUM ) ) ) )", "obj1": 0.156, "obj2": 0.6932811684776246}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ACS ) ),( CRS - AMS ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( FirstVNF_Mem_Server - AMS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * ( Min( MUC ,MLU ) * ( MLU / Min( MUR ,RCSe ) ) ) ) ,Max( RCSe,DS ) )", "obj1": 0.556, "obj2": 0.34029327245643626}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( CRS - BR ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.232, "obj2": 0.5526939313795498}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( Min( PN ,FirstVNF_RAM ) * Min( ( FirstVNF_CPU_Server - RRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS / Max( CS,( MUM + RRSe ) ) ) - ( Min( CS ,RRSe ) * ( MUR * MUR ) ) )", "obj1": 0.41, "obj2": 0.4202430422786124}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.298, "obj2": 0.5000320244673903}, {"determining": "( Max( ( Max( FirstVNF_RAM_Server,AMS ) / Max( FirstVNF_Mem_Server,ARS ) ),( ( FirstVNF_Mem - PN ) * Min( ARS ,Const ) ) ) + Max( ( ( MDR - FirstVNF_CPU ) + Min( CRS ,ACS ) ),( ( Max( DDR,FirstVNF_RAM_Server ) / Max( MRS,ARS ) ) + Max( FirstVNF_RAM_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * DS ) * RCSe ) ,( RMSe / MUM ) )", "obj1": 0.56, "obj2": 0.337424493796882}, {"determining": "( Min( ( PN * Min( PN ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.394, "obj2": 0.43611201503226754}, {"determining": "Max( ( MDR / ( ( FirstVNF_Mem_Server / CRS ) - ( RRS * PN ) ) ),Max( MRS,ARS ) )", "choosing": "( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / ( RCSe * Max( CS,( MLU / MUR ) ) ) ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( ( MUC * MUM ) * Max( RCSe,RCSe ) ) ) )", "obj1": 0.23, "obj2": 0.5604412559630336}, {"determining": "( Max( ( MRS + BR ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,( RRSe * Max( Max( ( ( RRSe * MUC ) - ( MUR * ( MUR - CS ) ) ),MUC ),DS ) ) )", "obj1": 0.158, "obj2": 0.6883996936217968}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( Min( MRS ,RRS ) + MDR ) + ( MDR * Min( ( Max( Const,ARS ) * FirstVNF_CPU ) ,( Const / CRS ) ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( RCSe * ( RRSe - RMSe ) ) )", "obj1": 0.364, "obj2": 0.46097642423598384}, {"determining": "( ( FirstVNF_RAM / MDR ) / ( ( FirstVNF_CPU + Const ) / ( PN / FirstVNF_CPU ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,Max( MUC,( ( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) + Max( MLU,MUM ) ) ) )", "obj1": 0.166, "obj2": 0.6834215806408763}, {"determining": "( ( ( ( Const / AMS ) / ( DDR + PN ) ) / Min( Max( RRS,PN ) ,( MDR * PN ) ) ) / ( FirstVNF_Mem / Const ) )", "choosing": "Min( ( ( DS * DS ) / MUM ) ,Max( MUC,Max( MUM,Max( MUM,MLU ) ) ) )", "obj1": 0.168, "obj2": 0.6822205824798523}], "4": [{"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - FirstVNF_Mem ) - AMS ) - ACS )", "choosing": "( ( Max( CS,( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) / ( RRSe * RRSe ) ) * ( Min( DS ,DS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( MUM + RCSe ) * DS ) )", "obj1": 0.042, "obj2": 0.7608769704364757}, {"determining": "( Min( ( PN * Min( ( ( FirstVNF_RAM / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) ) ,MRS ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.15, "obj2": 0.6682436974377782}, {"determining": "( ( MDR / PN ) * Max( ( DDR / Min( FirstVNF_Mem_Server ,( AMS - FirstVNF_Mem_Server ) ) ),MRS ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( RMSe + ( ( ( MUM * Max( ( MLU / MLU ),RRSe ) ) / ( ( CS * MUM ) - RCSe ) ) + Max( RRSe,MUR ) ) ) ) - ( Max( MUR,RRSe ) * ( RRSe - ( ( ( MUC + ( MLU / RRSe ) ) + MUR ) - CS ) ) ) )", "obj1": 0.19, "obj2": 0.5922836213751185}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.766, "obj2": 0.17506209303540354}, {"determining": "( ( ( Max( BR,Max( MRS,( CRS - PN ) ) ) - Min( ACS ,BR ) ) - ( ( AMS - FirstVNF_Mem ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) * ( ( ( PN * AMS ) * ( ( RRS / Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( RRS * MDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / RMSe ) - ( CS * MUM ) )", "obj1": 0.828, "obj2": 0.1253900447264397}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( ( ( CRS - Const ) + PN ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - Const ) ) )", "choosing": "( ( CS + DS ) - ( ( ( RCSe * DS ) * ( ( MLU - Min( ( ( MUR + RMSe ) + Min( RCSe ,RRSe ) ) ,Min( DS ,MLU ) ) ) / RRSe ) ) / MLU ) )", "obj1": 0.746, "obj2": 0.19041649535944347}, {"determining": "( ( ( CRS - AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( ( ( CS + MUM ) + Max( RCSe,DS ) ),( ( RCSe + ( RRSe + MUR ) ) * Max( MUC,CS ) ) )", "obj1": 0.904, "obj2": 0.09465625451677148}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.516, "obj2": 0.3311729853537703}, {"determining": "( Min( ( ( MRS / BR ) - ARS ) ,MDR ) / ( RRS - CRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( MUC - ( ( Max( DS,RRSe ) / ( DS + CS ) ) * Min( Min( DS ,RCSe ) ,DS ) ) ) ) - ( RRSe / MUC ) ) ) )", "obj1": 0.598, "obj2": 0.2802087136243417}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( Max( MRS,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( ( MLU * MLU ) + ( CS - MUR ) ) / ( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.572, "obj2": 0.31545338818000973}, {"determining": "( ( ( ( Const / AMS ) / ( DDR * PN ) ) / Min( PN ,FirstVNF_RAM ) ) / MDR )", "choosing": "Min( ( ( DS * DS ) * MUM ) ,( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( ( RCSe + ( CS / ( ( CS + MLU ) + MUM ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.514, "obj2": 0.36796506945615853}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,MUC ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.23038599422071868}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( MDR * Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) ) ) + Max( MDR,RRS ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MLU - CS ) + ( MLU * MLU ) ) - ( ( ( CS * MUR ) * Min( RMSe ,RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.402, "obj2": 0.41794049585118775}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) + MUM )", "obj1": 0.44, "obj2": 0.4146429570134443}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) - Max( RCSe,RCSe ) ) )", "obj1": 0.562, "obj2": 0.32415683978836907}, {"determining": "( Min( Max( Const,( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / FirstVNF_Mem_Server )", "choosing": "( ( ( CS - MUM ) * DS ) + ( MUM - CS ) )", "obj1": 0.454, "obj2": 0.3962080928950567}, {"determining": "Min( ( FirstVNF_RAM - ( Const - FirstVNF_RAM ) ) ,( ( MDR - FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( ( ( MUM + ( CS + DS ) ) + MUR ) ,MUC ) - Max( RCSe,RCSe ) )", "obj1": 0.974, "obj2": 0.02269825409550106}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Min( ( PN * AMS ) ,( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.644, "obj2": 0.2490136826773443}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Min( MLU ,( DS + ( MUR + DS ) ) ) / Max( DS,MUM ) ) - CS ) ) ) )", "obj1": 0.262, "obj2": 0.5218749406748944}, {"determining": "( ( Const * FirstVNF_Mem ) / ( CRS - RRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( ( Max( CS,MUM ) - DS ) - DS ) ) - ( RRSe / MUC ) ) ) )", "obj1": 0.618, "obj2": 0.27161742323100563}, {"determining": "( MRS * Max( MRS,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,( MUC / ( RRSe * MUR ) ) ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( ( MLU * MLU ) * ( MUR - MUR ) ) )", "obj1": 0.204, "obj2": 0.5725448553871748}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * ( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - CS ) / Min( ( CS * RCSe ) ,( Min( CS ,RRSe ) * RRSe ) ) ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.332, "obj2": 0.4760837017454605}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( ( MUM + RCSe ) * DS ) ) / ( CS / MLU ) ) ) )", "obj1": 0.142, "obj2": 0.6970631880019538}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + ( CRS + PN ) )", "choosing": "Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,Max( Max( ( MLU + ( MUC - ( MUC - Max( ( RCSe + MUC ),MUR ) ) ) ),( CS * CS ) ),MLU ) )", "obj1": 0.5, "obj2": 0.38895792704400706}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( ( MUR * Max( MUR,CS ) ) - ( Max( DS,CS ) + MUR ) ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.286, "obj2": 0.5036272631776938}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUC ) / Max( MUM,RMSe ) )", "obj1": 0.488, "obj2": 0.39313115953380584}, {"determining": "Min( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / RRS ) * ( PN / AMS ) ) ) ,( Const - CRS ) )", "choosing": "( ( ( ( MUR - CS ) + ( ( RMSe - ( MUC - MUM ) ) / CS ) ) + DS ) - ( ( MUC * CS ) / RMSe ) )", "obj1": 0.63, "obj2": 0.25491674669911013}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.132, "obj2": 0.7159609285585208}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "Max( ( MDR - ( ( FirstVNF_Mem_Server / CRS ) - ( BR / ACS ) ) ),Max( MRS,ARS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( DS ,RMSe ) ,MUC ) ) - MUR ) ) - Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.254, "obj2": 0.5309755032424105}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Max( Min( ( ( ( MRS * CRS ) * AMS ) - FirstVNF_CPU ) ,ARS ),ARS ) )", "choosing": "( ( RRSe + ( MUM + RCSe ) ) / ( ( MUM + RCSe ) * Max( ( MUM - ( MUR / MLU ) ),RCSe ) ) )", "obj1": 0.052, "obj2": 0.7521755077785317}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Min( CS ,RRSe ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.352, "obj2": 0.4658046638295411}, {"determining": "( ( ( PN * MRS ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.24, "obj2": 0.5450477875388733}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( Min( MLU ,RCSe ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.366, "obj2": 0.4469198551063605}, {"determining": "( FirstVNF_RAM_Server + ( CRS + PN ) )", "choosing": "Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,Max( Max( ( MLU + ( RCSe - ( MUC - Max( ( RCSe + MUC ),MUR ) ) ) ),( CS * CS ) ),MLU ) )", "obj1": 0.118, "obj2": 0.7328395917822228}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( ( Max( FirstVNF_RAM,( ( MRS + ACS ) * ( FirstVNF_RAM_Server - AMS ) ) ) - FirstVNF_RAM ) - RRS ) - ACS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC * MUR ) - ( MUM + MUM ) ),MUM ) + ( MUR + RRSe ) )", "obj1": 0.83, "obj2": 0.12027736222086897}, {"determining": "( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( RMSe + RCSe ) / ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.072, "obj2": 0.7479472456216509}, {"determining": "( Const - ( Min( ( CRS + CRS ) ,Min( ( FirstVNF_RAM - Const ) ,( ( MDR - FirstVNF_CPU ) * MDR ) ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - ( RMSe * MUR ) ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( ( MUM + RCSe ) + RRSe ) ) ) )", "obj1": 0.108, "obj2": 0.7429903157326266}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( Max( ( MRS + BR ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) )", "choosing": "Min( Min( DS ,Min( ( RMSe * MUR ) ,( MUR - MLU ) ) ) ,( RRSe * Max( Max( ( ( RRSe * MUC ) - ( MUR * ( MUR - CS ) ) ),MUC ),DS ) ) )", "obj1": 0.136, "obj2": 0.7039352884145162}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.376, "obj2": 0.4364745298270733}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( MDR - FirstVNF_CPU ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( CS * RCSe ) ,RCSe ) ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.984, "obj2": 0.012449814484099635}], "5": [{"determining": "( ( ( FirstVNF_RAM - FirstVNF_Mem ) - AMS ) - ACS )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( ( MUM + RCSe ) * DS ) ) / ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( MUM + RCSe ) * DS ) )", "obj1": 0.042, "obj2": 0.7608769704364757}, {"determining": "( ( MDR / PN ) * Max( ( DDR / Min( FirstVNF_Mem_Server ,( AMS - FirstVNF_Mem_Server ) ) ),MRS ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( RMSe + ( ( ( MUM * Max( ( MLU / MLU ),RRSe ) ) / ( ( CS * MUM ) - RCSe ) ) + Max( RRSe,MUR ) ) ) ) - ( Max( MUR,RRSe ) * ( RRSe - ( ( ( MUC + ( MLU / RRSe ) ) + MUR ) - CS ) ) ) )", "obj1": 0.19, "obj2": 0.5922836213751185}, {"determining": "Min( ( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( Min( DS ,MUC ) / Max( MUM,RMSe ) )", "obj1": 0.904, "obj2": 0.09159204116512251}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( ( FirstVNF_RAM - FirstVNF_Mem ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( DS ,DS ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( ( MUM + RCSe ) * DS ) ) / ( CS / MLU ) ) ) )", "obj1": 0.166, "obj2": 0.6460476666478373}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.804, "obj2": 0.15598981425983674}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( ( ( CRS - Const ) + PN ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - Const ) ) )", "choosing": "( ( CS + DS ) - ( ( ( RCSe * DS ) * ( ( MLU - Min( ( ( MUR + RMSe ) + Min( RCSe ,RRSe ) ) ,Min( DS ,MLU ) ) ) / RRSe ) ) / MLU ) )", "obj1": 0.746, "obj2": 0.19041649535944347}, {"determining": "( Min( Min( ( AMS / RRS ) ,Min( FirstVNF_Mem_Server ,Max( ARS,FirstVNF_RAM ) ) ) ,( FirstVNF_RAM - Const ) ) * ACS )", "choosing": "( ( ( ( Min( ( ( MUM / MUC ) / MLU ) ,( ( ( DS - CS ) - MUM ) + Min( MLU ,MLU ) ) ) * ( Min( MUM ,Min( ( DS + MUR ) ,MLU ) ) * ( ( RMSe / Min( CS ,MUR ) ) - MUR ) ) ) / Min( ( ( ( RMSe * CS ) / RMSe ) * RCSe ) ,RCSe ) ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.706, "obj2": 0.2014370127955217}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( MDR * Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) ) ) + Max( MDR,RRS ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MLU - CS ) + ( MLU * MLU ) ) - ( ( ( CS * MUR ) * Min( RMSe ,RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.402, "obj2": 0.41794049585118775}, {"determining": "( Min( Max( Const,( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / FirstVNF_Mem_Server )", "choosing": "( ( ( CS - MUM ) * DS ) + ( MUM - CS ) )", "obj1": 0.454, "obj2": 0.3962080928950567}, {"determining": "( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) + MUM )", "obj1": 0.44, "obj2": 0.4146429570134443}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) )", "obj1": 0.698, "obj2": 0.2234284473968301}, {"determining": "( ( ( ( Const / AMS ) / ( DDR * PN ) ) / Min( PN ,FirstVNF_RAM ) ) / MDR )", "choosing": "Min( ( ( DS * DS ) * MUM ) ,( ( ( Max( RMSe,RCSe ) + ( RCSe + MUR ) ) + Min( ( RCSe + ( CS / ( ( CS + MLU ) + MUM ) ) ) ,( MUC * RCSe ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( CS + CS ) * Max( RCSe,MUR ) ) ) ) )", "obj1": 0.514, "obj2": 0.36796506945615853}, {"determining": "Min( ( FirstVNF_RAM - ( Const - FirstVNF_RAM ) ) ,( ( MDR - FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( ( ( MUM + ( CS + DS ) ) + MUR ) ,MUC ) - Max( RCSe,RCSe ) )", "obj1": 0.974, "obj2": 0.02269825409550106}, {"determining": "( ( ( Max( BR,Max( MRS,( CRS - PN ) ) ) - Min( ACS ,BR ) ) - ( ( AMS - FirstVNF_Mem ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) * ( ( ( PN * AMS ) * ( ( RRS / Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( RRS * MDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / RMSe ) - ( CS * MUM ) )", "obj1": 0.828, "obj2": 0.1253900447264397}, {"determining": "( Min( ( PN * Min( ( ( FirstVNF_RAM / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) ) ,MRS ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.15, "obj2": 0.6682436974377782}, {"determining": "( ( ( PN * MRS ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.24, "obj2": 0.5450477875388733}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.772, "obj2": 0.1698404114310209}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.226, "obj2": 0.5594362929952217}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( ( MUM + RCSe ) * DS ) ) / ( CS / MLU ) ) ) )", "obj1": 0.142, "obj2": 0.6970631880019538}, {"determining": "( FirstVNF_RAM_Server + ( CRS + PN ) )", "choosing": "Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,Max( Max( ( MLU + ( RCSe - ( MUC - Max( ( RCSe + MUC ),MUR ) ) ) ),( CS * CS ) ),MLU ) )", "obj1": 0.118, "obj2": 0.7328395917822228}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.516, "obj2": 0.3311729853537703}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( ( Min( CS ,RRSe ) * RRSe ) + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.488, "obj2": 0.38933368154319015}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.52, "obj2": 0.32699788659062023}, {"determining": "( ( MRS * AMS ) * Max( DDR,FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUM ) - ( DS / CS ) )", "obj1": 0.132, "obj2": 0.7159609285585208}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Min( ( PN * AMS ) ,( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) )", "obj1": 0.644, "obj2": 0.2490136826773443}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,MUC ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.23038599422071868}, {"determining": "Max( ( MDR - ( ( FirstVNF_Mem_Server / CRS ) - ( BR / ACS ) ) ),Max( MRS,ARS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( DS ,RMSe ) ,MUC ) ) - MUR ) ) - Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.088, "obj2": 0.7436223544474946}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.766, "obj2": 0.17506209303540354}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( ( MUR * Max( MUR,CS ) ) - ( Max( DS,CS ) + MUR ) ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.286, "obj2": 0.5036272631776938}, {"determining": "( MRS * Max( MRS,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,( MUC / ( RRSe * MUR ) ) ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( ( MLU * MLU ) * ( MUR - MUR ) ) )", "obj1": 0.204, "obj2": 0.5725448553871748}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( RMSe + RCSe ) / ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.058, "obj2": 0.7458668874023655}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( DS - CS ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.664, "obj2": 0.23906440965992973}, {"determining": "( MRS * Max( MRS,( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( ( Min( MLU ,( DS + ( MUR + DS ) ) ) / Max( DS,MUM ) ) - CS ) )", "obj1": 0.16, "obj2": 0.6590322280456593}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( Min( MLU ,RCSe ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.366, "obj2": 0.4469198551063605}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) - Max( RCSe,RCSe ) ) )", "obj1": 0.562, "obj2": 0.32415683978836907}, {"determining": "( Const - ( Min( ( CRS + CRS ) ,Min( ( FirstVNF_RAM - Const ) ,( ( MDR - FirstVNF_CPU ) * MDR ) ) ) / ( Max( ARS,Const ) + Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( ( MUC * RCSe ),( DS - ( RMSe * MUR ) ) ) - ( Min( RRSe ,RMSe ) * Min( MUR ,MUM ) ) ),( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( ( MUM + RCSe ) + RRSe ) ) ) )", "obj1": 0.108, "obj2": 0.7429903157326266}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Min( CS ,RRSe ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.352, "obj2": 0.4658046638295411}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Min( MLU ,( DS + ( MUR + DS ) ) ) / Max( DS,MUM ) ) - CS ) ) ) )", "obj1": 0.28, "obj2": 0.5178673182629195}, {"determining": "Min( ( AMS - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( MUC * MUM ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) - Max( RCSe,RCSe ) ) )", "obj1": 0.51, "obj2": 0.38651649916601555}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( ( Max( FirstVNF_RAM,( ( MRS + ACS ) * ( FirstVNF_RAM_Server - AMS ) ) ) - FirstVNF_RAM ) - RRS ) - ACS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC * MUR ) - ( MUM + MUM ) ),MUM ) + ( MUR + RRSe ) )", "obj1": 0.83, "obj2": 0.12027736222086897}, {"determining": "( ( Const * FirstVNF_Mem ) / ( CRS - RRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( ( Max( CS,MUM ) - DS ) - DS ) ) - ( RRSe / MUC ) ) ) )", "obj1": 0.618, "obj2": 0.27161742323100563}, {"determining": "Min( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / RRS ) * ( PN / AMS ) ) ) ,( Const - CRS ) )", "choosing": "( ( ( ( MUR - CS ) + ( ( RMSe - ( MUC - MUM ) ) / CS ) ) + DS ) - ( ( MUC * CS ) / RMSe ) )", "obj1": 0.63, "obj2": 0.25491674669911013}], "6": [{"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - FirstVNF_Mem ) - AMS ) - ACS )", "choosing": "( ( ( ( RMSe - MUC ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,RCSe ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( ( MUM + RCSe ) * DS ) ) / ( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( MUM + RCSe ) * DS ) )", "obj1": 0.042, "obj2": 0.7608769704364757}, {"determining": "Max( ( CRS / CRS ),Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( ( ( ( ( MUC / MUM ) - RCSe ) - MUR ) / ( Max( DS,( CS - ( RRSe / MLU ) ) ) / MUR ) ) / ( MUC * MUM ) ) ) - ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) )", "obj1": 0.142, "obj2": 0.6314835494470699}, {"determining": "Min( ( ( Min( ( BR * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_CPU ) + ACS ) ) * Max( AMS,BR ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - ( ( MUM + Min( RRSe ,MUC ) ) / ( ( MUM + RCSe ) * DS ) ) ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( RMSe / ( RMSe * CS ) ) ) )", "obj1": 0.088, "obj2": 0.6951526598822322}, {"determining": "( Min( Const ,BR ) / Max( Max( FirstVNF_Mem_Server,ARS ),AMS ) )", "choosing": "( ( DS + ( CS - RMSe ) ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( RMSe / ( RMSe * RMSe ) ) ) )", "obj1": 0.494, "obj2": 0.35105303297833373}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.516, "obj2": 0.3265237556237773}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_RAM ,( ( Min( MDR ,FirstVNF_RAM ) / FirstVNF_Mem_Server ) + ( MDR * FirstVNF_RAM ) ) ) ) * Max( MRS,( PN / DDR ) ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( ( ( ( MUC - RMSe ) - ( MUM + RMSe ) ) - ( ( MUM + DS ) * Min( MUR ,MUC ) ) ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * MUR ) / ( CS / MLU ) ) ) ) ) - ( CS * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.182, "obj2": 0.5964356122889587}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( ( Min( CS ,RRSe ) * RRSe ) + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.488, "obj2": 0.38933368154319015}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( RMSe + RCSe ) / ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.086, "obj2": 0.7438034399670834}, {"determining": "Min( ( AMS / FirstVNF_Mem_Server ) ,Min( ( ( CRS - Const ) + PN ) ,( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - Const ) ) )", "choosing": "( ( CS + DS ) - ( ( ( RCSe * DS ) * ( ( MLU - Min( ( ( MUR + RMSe ) + Min( RCSe ,RRSe ) ) ,Min( DS ,MLU ) ) ) / RRSe ) ) / MLU ) )", "obj1": 0.746, "obj2": 0.19041649535944347}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( ( Min( ( FirstVNF_RAM - Const ) ,( ( MDR - ( FirstVNF_RAM_Server * MDR ) ) * MDR ) ) * ACS ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.13144082947109026}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - MDR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) + DS ) - ( Min( ( MUC + MUR ) ,MUC ) - Max( ( ( RRSe * CS ) * RMSe ),RCSe ) ) )", "obj1": 0.594, "obj2": 0.2864548417316069}, {"determining": "Min( ( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( Min( DS ,MUC ) / Max( MUM,RMSe ) )", "obj1": 0.898, "obj2": 0.09737162607224548}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) - Max( RCSe,RCSe ) ) )", "obj1": 0.562, "obj2": 0.32415683978836907}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( Min( MLU ,RCSe ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.366, "obj2": 0.4469198551063605}, {"determining": "Min( ( FirstVNF_RAM - ( ACS - ACS ) ) ,( Max( MDR,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,Max( Max( ( MLU + ( RCSe - ( MUC - Max( MUR,Max( RCSe,DS ) ) ) ) ),( CS * CS ) ),MLU ) )", "obj1": 0.964, "obj2": 0.0317872772724741}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( MDR * Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) ) ) + Max( MDR,RRS ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MLU - CS ) + ( MLU * MLU ) ) - ( ( ( CS * MUR ) * Min( RMSe ,RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.402, "obj2": 0.41794049585118775}, {"determining": "( Min( Min( ( AMS / RRS ) ,Min( FirstVNF_Mem_Server ,Max( ARS,FirstVNF_RAM ) ) ) ,( FirstVNF_RAM - Const ) ) * ACS )", "choosing": "( ( ( ( Min( ( ( MUM / MUC ) / MLU ) ,( ( ( DS - CS ) - MUM ) + Min( MLU ,MLU ) ) ) * ( Min( MUM ,Min( ( DS + MUR ) ,MLU ) ) * ( ( RMSe / Min( CS ,MUR ) ) - MUR ) ) ) / Min( ( ( ( RMSe * CS ) / RMSe ) * RCSe ) ,RCSe ) ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.706, "obj2": 0.2014370127955217}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "( Min( Max( Const,( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / FirstVNF_Mem_Server )", "choosing": "( ( ( CS - MUM ) * DS ) + ( MUM - CS ) )", "obj1": 0.454, "obj2": 0.3962080928950567}, {"determining": "( ( Const * FirstVNF_Mem ) / ( CRS - RRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( ( Max( CS,MUM ) - DS ) - DS ) ) - ( RRSe / MUC ) ) ) )", "obj1": 0.618, "obj2": 0.27161742323100563}, {"determining": "( ( ( PN * ( FirstVNF_CPU * ACS ) ) - Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( ( Max( RRSe,Max( MUM,CS ) ) + Min( MLU ,MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.572, "obj2": 0.306873322226859}, {"determining": "( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( RMSe + RCSe ) / ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.058, "obj2": 0.7458668874023655}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( MRS * Max( MRS,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,( MUC / ( RRSe * MUR ) ) ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( ( MLU * MLU ) * ( MUR - MUR ) ) )", "obj1": 0.204, "obj2": 0.5725448553871748}, {"determining": "( ( MDR / PN ) * Max( ( DDR / Min( FirstVNF_Mem_Server ,( AMS - FirstVNF_Mem_Server ) ) ),MRS ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( RMSe + ( ( ( MUM * Max( ( MLU / MLU ),RRSe ) ) / ( ( CS * MUM ) - RCSe ) ) + Max( RRSe,MUR ) ) ) ) - ( Max( MUR,RRSe ) * ( RRSe - ( ( ( MUC + ( MLU / RRSe ) ) + MUR ) - CS ) ) ) )", "obj1": 0.19, "obj2": 0.5922836213751185}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS / Min( CS ,CS ) ) + Max( Min( MLU ,RCSe ),( RMSe + DS ) ) ) + ( ( Min( MUM ,RMSe ) + ( CS - MUR ) ) / ( ( RRSe + ( CS + DS ) ) + Max( MUR,MLU ) ) ) )", "obj1": 0.766, "obj2": 0.17506209303540354}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.3, "obj2": 0.49378085585426673}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Min( CS ,RRSe ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.352, "obj2": 0.4658046638295411}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ),FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / Max( Max( ( MUM / RMSe ),( RRSe * MUM ) ),( ( RRSe * ( ( MUM + RCSe ) * DS ) ) / ( CS / MLU ) ) ) ) ) )", "obj1": 0.338, "obj2": 0.47678854658547704}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,MUC ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.23038599422071868}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) )", "obj1": 0.258, "obj2": 0.5350024503744574}, {"determining": "Min( ( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RMSe + DS ) ),RMSe ) )", "obj1": 0.906, "obj2": 0.08879224157778906}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( RRSe ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.776, "obj2": 0.15590110311665487}, {"determining": "( ( ( PN * MRS ) * Min( ACS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.24, "obj2": 0.5450477875388733}, {"determining": "( Min( MDR ,FirstVNF_RAM ) / FirstVNF_Mem_Server )", "choosing": "( Min( DS ,DS ) + ( MUM - CS ) )", "obj1": 0.43, "obj2": 0.41715988161362916}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.682, "obj2": 0.21770647983965835}, {"determining": "( ( ( Max( BR,Max( MRS,( CRS - PN ) ) ) - Min( ACS ,BR ) ) - ( ( AMS - FirstVNF_Mem ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) * ( ( ( PN * AMS ) * ( ( RRS / Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( RRS * MDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / RMSe ) - ( CS * MUM ) )", "obj1": 0.828, "obj2": 0.1253900447264397}, {"determining": "Min( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / RRS ) * ( PN / AMS ) ) ) ,( Const - CRS ) )", "choosing": "( ( ( ( MUR - CS ) + ( ( RMSe - ( MUC - MUM ) ) / CS ) ) + DS ) - ( ( MUC * CS ) / RMSe ) )", "obj1": 0.63, "obj2": 0.25491674669911013}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( ( Max( FirstVNF_RAM,( ( MRS + ACS ) * ( FirstVNF_RAM_Server - AMS ) ) ) - FirstVNF_RAM ) - RRS ) - ACS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC * MUR ) - ( MUM + MUM ) ),MUM ) + ( MUR + RRSe ) )", "obj1": 0.83, "obj2": 0.12027736222086897}, {"determining": "( ( ( Max( BR,Max( MRS,( CRS - PN ) ) ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( AMS - FirstVNF_Mem ) ) ) * ( ( ( PN * AMS ) * ( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) + MUM )", "obj1": 0.996, "obj2": 0.0015843092763151365}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( MRS * ACS ) ) * FirstVNF_RAM ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + ( MDR * FirstVNF_RAM ) ) ) ) * Max( MRS,( PN / DDR ) ) )", "choosing": "( Min( DS ,DS ) + Max( Min( MUC ,( RRSe / ( MUM * ( MUC - ( MUC - DS ) ) ) ) ),( MUC / CS ) ) )", "obj1": 0.446, "obj2": 0.40284975671419426}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( MDR * ( ( CRS - BR ) - ( FirstVNF_RAM_Server * MDR ) ) ) ) * ACS )", "choosing": "( ( ( ( MUM + CS ) / Min( ( ( ( CS * RMSe ) / RMSe ) * RCSe ) ,RCSe ) ) + ( MLU * MLU ) ) - ( ( MUR / Max( MLU,( DS * ( MUM * ( MLU * DS ) ) ) ) ) * RRSe ) )", "obj1": 0.686, "obj2": 0.2128311979020887}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.046, "obj2": 0.7562899904881152}, {"determining": "( Min( ( PN * ( Min( ( ACS * ( FirstVNF_RAM + RRS ) ) ,Max( FirstVNF_RAM,( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( RMSe / MUM ) ) - ( Min( ( RRSe + ( MUC + DS ) ) ,RRSe ) * ( RRSe - Max( ( MUC / MLU ),RCSe ) ) ) )", "obj1": 0.776, "obj2": 0.15590110311665487}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( ( MUR * Max( MUR,CS ) ) - ( Max( DS,CS ) + MUR ) ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.286, "obj2": 0.5036272631776938}], "7": [{"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( ( Min( ( BR * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_CPU ) + ACS ) ) * Max( AMS,BR ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - ( ( MUM + Min( RRSe ,MUC ) ) / ( ( MUM + RCSe ) * DS ) ) ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( RMSe / ( RMSe * CS ) ) ) )", "obj1": 0.088, "obj2": 0.6951526598822322}, {"determining": "Max( ( CRS / CRS ),Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( ( ( ( ( MUC / MUM ) - RCSe ) - MUR ) / ( Max( DS,( CS - ( RRSe / MLU ) ) ) / MUR ) ) / ( MUC * MUM ) ) ) - ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) )", "obj1": 0.142, "obj2": 0.6314835494470699}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( Min( MLU ,( DS + ( MUR + MUR ) ) ) / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.492, "obj2": 0.3442631449720501}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM - FirstVNF_Mem ) * FirstVNF_RAM ) ) ) ) * Max( MRS,( PN / DDR ) ) )", "choosing": "( ( ( RRSe * ( ( MUM + RCSe ) * DS ) ) / ( CS / MLU ) ) + ( MUM - CS ) )", "obj1": 0.466, "obj2": 0.3877922306410192}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( ( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RMSe + DS ) ),RMSe ) )", "obj1": 0.89, "obj2": 0.0948659394695618}, {"determining": "Min( ( ( BR / CRS ) * Const ) ,( ACS * Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( ( MUR + RCSe ) / ( Max( Min( ( Min( MUC ,( RMSe - DS ) ) - MLU ) ,MUM ),DS ) * DS ) )", "obj1": 0.08, "obj2": 0.7094877207073788}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( MDR * Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) ) ) + Max( MDR,RRS ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MLU - CS ) + ( MLU * MLU ) ) - ( ( ( CS * MUR ) * Min( RMSe ,RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.402, "obj2": 0.41794049585118775}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - MDR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) + DS ) - ( Min( ( MUC + MUR ) ,MUC ) - Max( ( ( RRSe * CS ) * RMSe ),RCSe ) ) )", "obj1": 0.594, "obj2": 0.2864548417316069}, {"determining": "( ( Const * FirstVNF_Mem ) / ( CRS - RRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( ( Max( CS,MUM ) - DS ) - DS ) ) - ( RRSe / MUC ) ) ) )", "obj1": 0.618, "obj2": 0.27161742323100563}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.742, "obj2": 0.18097027051637493}, {"determining": "Min( ( FirstVNF_RAM - ( ACS - ACS ) ) ,( Max( MDR,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,Max( Max( ( MLU + ( RCSe - ( MUC - Max( MUR,Max( RCSe,DS ) ) ) ) ),( CS * CS ) ),MLU ) )", "obj1": 0.964, "obj2": 0.0317872772724741}, {"determining": "( Max( ( Max( BR,Max( MRS,( CRS - ( FirstVNF_CPU_Server + MDR ) ) ) ) - ( ACS - BR ) ),( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( AMS - FirstVNF_Mem ) ) ) * ( ( ( PN * AMS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( MDR - DDR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * CS ),MUM ) + MUM )", "obj1": 0.994, "obj2": 0.0029080891393268925}, {"determining": "Max( ( Max( MRS,FirstVNF_CPU ) - ( ( FirstVNF_Mem_Server / CRS ) - ( BR / ACS ) ) ),Max( MRS,ARS ) )", "choosing": "( ( RMSe + RCSe ) / ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.068, "obj2": 0.7450953493355659}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( MUC + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.762, "obj2": 0.16926287727290776}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.516, "obj2": 0.3265237556237773}, {"determining": "( ( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - ( ( CS / ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) ) + Min( RMSe ,Min( MLU ,MUC ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.43, "obj2": 0.4068619997495424}, {"determining": "Min( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / RRS ) * ( PN / AMS ) ) ) ,( Const - CRS ) )", "choosing": "( ( ( ( MUR - CS ) + ( ( RMSe - ( MUC - MUM ) ) / CS ) ) + DS ) - ( ( MUC * CS ) / RMSe ) )", "obj1": 0.63, "obj2": 0.25491674669911013}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( CS * ( ( ( RMSe + RRSe ) / ( RRSe + ( MLU + MUR ) ) ) + RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.72, "obj2": 0.19282788650364144}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) ,ARS )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( Min( CS ,RRSe ) * ( MUR - MUR ) ) )", "obj1": 0.232, "obj2": 0.5526939313795498}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) - ( ( DS * RCSe ) * ( MUM + RRSe ) ) ) - Max( RCSe,RCSe ) ) )", "obj1": 0.562, "obj2": 0.32415683978836907}, {"determining": "( Min( ( PN * ( Min( ( ACS * AMS ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ,Min( Max( CRS,( FirstVNF_RAM - FirstVNF_CPU ) ) ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MLU,( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + Max( MUC,DS ) ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + RCSe ) ) ) - CS ) ) ) )", "obj1": 0.778, "obj2": 0.1558346768343636}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( Min( MLU ,RCSe ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.366, "obj2": 0.4469198551063605}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,MUC ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.23038599422071868}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / ( FirstVNF_RAM - Const ) ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( DS + DS ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.5198915998505116}, {"determining": "( Min( Max( Const,( FirstVNF_CPU - ( FirstVNF_Mem_Server + Max( ( BR / FirstVNF_Mem ),DDR ) ) ) ) ,FirstVNF_RAM ) / FirstVNF_Mem_Server )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,( MUC / ( CS * Min( DS ,RMSe ) ) ) ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( ( MLU * MLU ) * ( MUR * MUR ) ) )", "obj1": 0.21, "obj2": 0.5683630793854598}, {"determining": "( ( MDR / PN ) * Max( ( DDR / Min( FirstVNF_Mem_Server ,( AMS - FirstVNF_Mem_Server ) ) ),MRS ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( RMSe + ( ( ( MUM * Max( ( MLU / MLU ),RRSe ) ) / ( ( CS * MUM ) - RCSe ) ) + Max( RRSe,MUR ) ) ) ) - ( Max( MUR,RRSe ) * ( RRSe - ( ( ( MUC + ( MLU / RRSe ) ) + MUR ) - CS ) ) ) )", "obj1": 0.19, "obj2": 0.5922836213751185}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.158, "obj2": 0.6239941362017856}, {"determining": "( MRS * Max( MRS,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,( MUC / ( RRSe * MUR ) ) ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( ( MLU * MLU ) * ( MUR - MUR ) ) )", "obj1": 0.204, "obj2": 0.5725448553871748}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( Max( Min( MLU ,( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) ) ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - Min( Max( ( Max( ( MLU * ( ( RMSe - MUR ) + CS ) ),Min( ( MUM - ( MUC + CS ) ) ,MUR ) ) * RCSe ),Max( ( Max( RMSe,( RRSe / DS ) ) - RRSe ),( RMSe * ( ( RCSe / ( RCSe / MUC ) ) * RCSe ) ) ) ) ,MLU ) )", "obj1": 0.578, "obj2": 0.3040521118043917}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - ( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( DS - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.962, "obj2": 0.034346441758548854}, {"determining": "Min( ( Min( ( FirstVNF_RAM - Const ) ,( ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) - ( FirstVNF_RAM_Server * MDR ) ) * MDR ) ) * ACS ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.13144082947109026}, {"determining": "( ( ( MDR * ( ( AMS * Min( PN ,ACS ) ) * FirstVNF_Mem ) ) * Min( FirstVNF_RAM_Server ,MRS ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( MUM * RMSe ) ) - ( MLU * MLU ) ) - Min( DS ,RMSe ) )", "obj1": 0.252, "obj2": 0.5296197733555472}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.51, "obj2": 0.333615851089189}, {"determining": "( ( ( Max( BR,Max( MRS,( CRS - PN ) ) ) - Min( ACS ,BR ) ) - ( ( AMS - FirstVNF_Mem ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ) * ( ( ( PN * AMS ) * ( ( RRS / Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( RRS * MDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / RMSe ) - ( CS * MUM ) )", "obj1": 0.658, "obj2": 0.25411544275921166}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.284, "obj2": 0.5128905341646565}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( DS - CS ) + Min( CS ,RRSe ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.334, "obj2": 0.4741979520717245}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.682, "obj2": 0.21770647983965835}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( ( Max( FirstVNF_RAM,( ( MRS + ACS ) * ( FirstVNF_RAM_Server - AMS ) ) ) - FirstVNF_RAM ) - RRS ) - ACS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC * MUR ) - ( MUM + MUM ) ),MUM ) + ( MUR + RRSe ) )", "obj1": 0.83, "obj2": 0.12027736222086897}, {"determining": "Min( ( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RMSe + DS ) ),RMSe ) )", "obj1": 0.906, "obj2": 0.08879224157778906}, {"determining": "( Min( Max( Const,( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) / FirstVNF_Mem_Server )", "choosing": "( ( ( CS - MUM ) * DS ) + ( MUM - CS ) )", "obj1": 0.454, "obj2": 0.3962080928950567}, {"determining": "( ( ( Max( BR,Max( MRS,( CRS - PN ) ) ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( AMS - FirstVNF_Mem ) ) ) * ( ( ( PN * AMS ) * ( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( MDR - ( FirstVNF_RAM_Server * MDR ) ) ) ) ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * ( DDR - MDR ) ) ) )", "choosing": "( ( ( RMSe * Max( ( Min( CS ,RRSe ) * RRSe ),MUR ) ) / RMSe ) - ( CS + MUM ) )", "obj1": 0.664, "obj2": 0.24550037086072155}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( MRS * ACS ) ) * FirstVNF_RAM ) * Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + ( MDR * FirstVNF_RAM ) ) ) ) * Max( MRS,( PN / DDR ) ) )", "choosing": "( Min( DS ,DS ) + Max( Min( MUC ,( RRSe / ( MUM * ( MUC - ( MUC - DS ) ) ) ) ),( MUC / CS ) ) )", "obj1": 0.446, "obj2": 0.40284975671419426}], "8": [{"determining": "( Min( ( PN * ( Min( ( ( MDR * FirstVNF_RAM ) * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_RAM_Server ) / Max( ( ( FirstVNF_CPU + Const ) + ( PN / FirstVNF_CPU ) ),Min( ( ACS / FirstVNF_RAM ) ,( BR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( CS,( CS - MUC ) ),( ( MUC + CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),DS ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( ( Min( ( BR * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_CPU ) + ACS ) ) * Max( AMS,BR ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - ( ( MUM + Min( RRSe ,MUC ) ) / ( ( MUM + RCSe ) * DS ) ) ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( RMSe / ( RMSe * CS ) ) ) )", "obj1": 0.088, "obj2": 0.6951526598822322}, {"determining": "Max( ( CRS / CRS ),Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( ( ( ( ( MUC / MUM ) - RCSe ) - MUR ) / ( Max( DS,( CS - ( RRSe / MLU ) ) ) / MUR ) ) / ( MUC * MUM ) ) ) - ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) )", "obj1": 0.142, "obj2": 0.6314835494470699}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( CS * ( ( ( RMSe + RRSe ) / ( RRSe + ( MLU + MUR ) ) ) + RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.72, "obj2": 0.19282788650364144}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( Min( MLU ,( DS + ( MUR + MUR ) ) ) / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.492, "obj2": 0.3442631449720501}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.522, "obj2": 0.31246523203209375}, {"determining": "Min( ( Min( ( FirstVNF_RAM - Const ) ,( ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) - ( FirstVNF_RAM_Server * MDR ) ) * MDR ) ) * ACS ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.13144082947109026}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( Max( Min( MLU ,( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) ) ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - Min( Max( ( Max( ( MLU * ( ( RMSe - MUR ) + CS ) ),Min( ( MUM - ( MUC + CS ) ) ,MUR ) ) * RCSe ),Max( ( Max( RMSe,( RRSe / DS ) ) - RRSe ),( RMSe * ( ( RCSe / ( RCSe / MUC ) ) * RCSe ) ) ) ) ,MLU ) )", "obj1": 0.578, "obj2": 0.3040521118043917}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.682, "obj2": 0.21770647983965835}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( Max( Const,Const ) ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( CS - Max( Min( MLU ,( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) ) ),( RMSe + DS ) ) ) + ( MLU * MLU ) ) - Min( Max( ( Max( ( MLU * ( ( RMSe - MUR ) + CS ) ),Min( ( MUM - ( MUC + CS ) ) ,MUR ) ) * RCSe ),Max( ( Max( RMSe,( ( MUR / DS ) / DS ) ) - CS ),( RMSe * ( ( RCSe / ( RCSe / MUC ) ) * RCSe ) ) ) ) ,MLU ) )", "obj1": 0.468, "obj2": 0.3861283997056473}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( ( Max( FirstVNF_RAM,( ( MRS + ACS ) * ( FirstVNF_RAM_Server - AMS ) ) ) - FirstVNF_RAM ) - RRS ) - ACS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( MUC * MUR ) - ( MUM + MUM ) ),MUM ) + ( MUR + RRSe ) )", "obj1": 0.83, "obj2": 0.12027736222086897}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.742, "obj2": 0.18097027051637493}, {"determining": "Min( ( ( BR / CRS ) * Const ) ,( ACS * Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( ( MUR + RCSe ) / ( Max( Min( ( Min( MUC ,( RMSe - DS ) ) - MLU ) ,MUM ),DS ) * DS ) )", "obj1": 0.08, "obj2": 0.7094877207073788}, {"determining": "( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( DS - CS ) + Min( CS ,RRSe ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.334, "obj2": 0.4741979520717245}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( ( ( MDR * ( ( Min( ( FirstVNF_RAM - ( Const - FirstVNF_RAM ) ) ,( ( MDR - FirstVNF_CPU ) * MDR ) ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,( DS + DS ) ) )", "obj1": 0.976, "obj2": 0.01759410754184699}, {"determining": "( ( MDR / PN ) * Max( ( DDR / Min( FirstVNF_Mem_Server ,( AMS - FirstVNF_Mem_Server ) ) ),MRS ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( RMSe + ( ( ( MUM * Max( ( MLU / MLU ),RRSe ) ) / ( ( CS * MUM ) - RCSe ) ) + Max( RRSe,MUR ) ) ) ) - ( Max( MUR,RRSe ) * ( RRSe - ( ( ( MUC + ( MLU / RRSe ) ) + MUR ) - CS ) ) ) )", "obj1": 0.19, "obj2": 0.5922836213751185}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "( Max( FirstVNF_CPU,( Min( FirstVNF_CPU_Server ,PN ) / FirstVNF_CPU ) ) * ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ) )", "choosing": "( ( ( MUM / MLU ) - MUC ) + MUM )", "obj1": 0.888, "obj2": 0.09858428471561718}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "( ( Const * FirstVNF_Mem ) / ( CRS - RRS ) )", "choosing": "( Max( RMSe,MUC ) + ( MUR / ( ( RRSe * ( ( Max( CS,MUM ) - DS ) - DS ) ) - ( RRSe / MUC ) ) ) )", "obj1": 0.618, "obj2": 0.27161742323100563}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "Min( ARS ,( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,( Max( RCSe,MUM ) + RCSe ) ) ,MUC ) ) - MUR ) ) - Min( ( Max( MUM,RRSe ) * Min( DS ,MUC ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.144, "obj2": 0.6247302257324693}, {"determining": "( ( ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) * RRSe ) )", "obj1": 0.246, "obj2": 0.5430176005993057}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( MDR * Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) ) ) + Max( MDR,RRS ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MLU - CS ) + ( MLU * MLU ) ) - ( ( ( CS * MUR ) * Min( RMSe ,RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.402, "obj2": 0.41794049585118775}, {"determining": "( Min( ( PN * ( Min( ( ACS * AMS ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ,Min( Max( CRS,( FirstVNF_RAM - FirstVNF_CPU ) ) ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MLU,( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + Max( MUC,DS ) ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + RCSe ) ) ) - CS ) ) ) )", "obj1": 0.782, "obj2": 0.15268269660224365}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( MUC + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.762, "obj2": 0.16926287727290776}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / ( FirstVNF_RAM - Const ) ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( DS + DS ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.5198915998505116}, {"determining": "Min( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / RRS ) * ( PN / AMS ) ) ) ,( Const - CRS ) )", "choosing": "( ( ( ( MUR - CS ) + ( ( RMSe - ( MUC - MUM ) ) / CS ) ) + DS ) - ( ( MUC * CS ) / RMSe ) )", "obj1": 0.63, "obj2": 0.25491674669911013}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( Min( MLU ,RCSe ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.366, "obj2": 0.4469198551063605}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( CRS / MDR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.22, "obj2": 0.5452979814505583}, {"determining": "( ( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( ( ( DS - ( ( CS / ( ( RCSe * RCSe ) * ( RMSe / RMSe ) ) ) + Min( RMSe ,Min( MLU ,MUC ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.43, "obj2": 0.4068619997495424}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / Max( Max( Max( ( CRS - AMS ),Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * ARS ) + RRS ) ) ,DDR ) ),FirstVNF_Mem_Server ),ARS ) )", "choosing": "( ( MUM / RMSe ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( Min( MLU ,( DS + ( MUR + MUR ) ) ) / RMSe ) + CS ) ) + Min( ( Max( ( CS * MUM ),Max( ( ( RMSe + RRSe ) * ( MUR + MUC ) ),( RMSe + ( MLU - RRSe ) ) ) ) - ( ( MLU - MUC ) - ( ( RMSe * MLU ) + ( MUM * ( MUR - RCSe ) ) ) ) ) ,RCSe ) ) )", "obj1": 0.248, "obj2": 0.5235598637838021}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( Const,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.306, "obj2": 0.49661954768217675}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server - MDR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM - FirstVNF_Mem ) * FirstVNF_RAM ) ) ) ) ,ARS )", "choosing": "( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) + DS ) - ( Min( ( MUC + MUR ) ,( CS / MLU ) ) - Max( ( ( RRSe * CS ) * RMSe ),RCSe ) ) )", "obj1": 0.602, "obj2": 0.27880699219559946}, {"determining": "( Max( Max( AMS,( DDR + ACS ) ),FirstVNF_CPU ) * ( ( ( PN * AMS ) * ( ( RRS / Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( RRS * MDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( RRS * MDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) ) )", "choosing": "( ( Max( ( MUR / ( MLU * ( MUR / RMSe ) ) ),( RMSe / MUC ) ) / RMSe ) - ( CS * MUM ) )", "obj1": 0.942, "obj2": 0.03774951619409335}, {"determining": "( ( ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.408, "obj2": 0.4101866322199985}, {"determining": "Min( ( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RMSe + DS ) ),RMSe ) )", "obj1": 0.906, "obj2": 0.08879224157778906}, {"determining": "Min( ( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RRSe + DS ) ),RMSe ) )", "obj1": 0.91, "obj2": 0.07836778372385743}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) - Const ) ,ARS )", "choosing": "( ( ( ( Min( RRSe ,MUM ) * Max( RCSe,MUC ) ) * ( ( DS / RMSe ) - ( MUR + CS ) ) ) - Min( ( Max( MUM,MUR ) * Min( DS ,DS ) ) ,( Max( RCSe,RCSe ) * ( MUC * MUM ) ) ) ) - ( ( CS - MUM ) * ( MUR - MUR ) ) )", "obj1": 0.194, "obj2": 0.5795654326799774}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / Max( Max( ( AMS - ACS ),( PN / FirstVNF_Mem ) ),( AMS + FirstVNF_CPU ) ) )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.516, "obj2": 0.3265237556237773}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + Min( FirstVNF_CPU ,MRS ) ) ,FirstVNF_Mem_Server ) ) * ( ( Const - FirstVNF_RAM ) * ( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( Min( DS ,Max( Min( MUM ,( Min( Min( RMSe ,( MUR * MUM ) ) ,MLU ) + ( ( RRSe + RRSe ) / ( Max( MUM,RCSe ) * ( MUM / MUC ) ) ) ) ),( ( RRSe + DS ) - RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.586, "obj2": 0.29292371503700665}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.284, "obj2": 0.5128905341646565}, {"determining": "( ( ( PN / FirstVNF_Mem ) * Min( MRS ,FirstVNF_RAM ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( MLU - CS ) + ( ( RRSe / ( MUR * ( RRSe / MUM ) ) ) * MLU ) ) - ( RRSe * Min( CS ,RRSe ) ) )", "obj1": 0.292, "obj2": 0.5015833289834982}, {"determining": "Min( ( FirstVNF_RAM - ( Const - FirstVNF_RAM ) ) ,( ( MDR - FirstVNF_CPU ) * MDR ) )", "choosing": "( ( RMSe + RCSe ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.964, "obj2": 0.030660354798442167}], "9": [{"determining": "Min( ( ( Min( ( BR * FirstVNF_Mem_Server ) ,( Min( Const ,FirstVNF_CPU ) + ACS ) ) * Max( AMS,BR ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - ( ( MUM + Min( RRSe ,MUC ) ) / ( ( MUM + RCSe ) * DS ) ) ) / ( RRSe / Min( DS ,( DS + DS ) ) ) ) / ( ( MUC / RMSe ) + CS ) ) + ( RMSe / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN * ( Min( ( ( MDR * FirstVNF_RAM ) * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( ( Min( ( BR * FirstVNF_Mem_Server ) ,( Min( AMS ,FirstVNF_CPU ) + ACS ) ) * Max( AMS,BR ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - ( ( MUM + Min( RRSe ,MUC ) ) / ( ( MUM + RCSe ) * DS ) ) ) / ( RRSe / MUM ) ) / ( ( MUC / RMSe ) + CS ) ) + ( RMSe / ( RMSe * CS ) ) ) )", "obj1": 0.088, "obj2": 0.6951526598822322}, {"determining": "Max( ( CRS / CRS ),Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( ( ( ( ( MUC / MUM ) - RCSe ) - MUR ) / ( Max( DS,( CS - ( RRSe / MLU ) ) ) / MUR ) ) / ( MUC * MUM ) ) ) - ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) )", "obj1": 0.142, "obj2": 0.6314835494470699}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.592, "obj2": 0.2581104655300971}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.414, "obj2": 0.4010237603207901}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.522, "obj2": 0.31246523203209375}, {"determining": "( Max( FirstVNF_CPU,( Min( FirstVNF_CPU_Server ,PN ) / FirstVNF_CPU ) ) * ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ) )", "choosing": "( ( ( MUM / MLU ) - MUC ) + MUM )", "obj1": 0.888, "obj2": 0.09858428471561718}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( Max( Const,Const ) ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( CS - Max( Min( MLU ,( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) ) ),( RMSe + DS ) ) ) + ( MLU * MLU ) ) - Min( Max( ( Max( ( MLU * ( ( RMSe - MUR ) + CS ) ),Min( ( MUM - ( MUC + CS ) ) ,MUR ) ) * RCSe ),Max( ( Max( RMSe,( ( MUR / DS ) / DS ) ) - CS ),( RMSe * ( ( RCSe / ( RCSe / MUC ) ) * RCSe ) ) ) ) ,MLU ) )", "obj1": 0.468, "obj2": 0.3861283997056473}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) / ( ( Min( MLU ,( DS + ( MUR + MUR ) ) ) / RMSe ) + CS ) ) + ( ( RMSe * CS ) / RMSe ) ) )", "obj1": 0.492, "obj2": 0.3442631449720501}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( Max( Min( MLU ,( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) ) ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - Min( Max( ( Max( ( MLU * ( ( RMSe - MUR ) + CS ) ),Min( ( MUM - ( MUC + CS ) ) ,MUR ) ) * RCSe ),Max( ( Max( RMSe,( RRSe / DS ) ) - RRSe ),( RMSe * ( ( RCSe / ( RCSe / MUC ) ) * RCSe ) ) ) ) ,MLU ) )", "obj1": 0.578, "obj2": 0.3040521118043917}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.47, "obj2": 0.375822894722307}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( MUC + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.762, "obj2": 0.16926287727290776}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( AMS,FirstVNF_Mem_Server ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.742, "obj2": 0.18097027051637493}, {"determining": "Min( ( ( BR / CRS ) * Const ) ,( ACS * Min( FirstVNF_CPU_Server ,RRS ) ) )", "choosing": "( ( MUR + RCSe ) / ( Max( Min( ( Min( MUC ,( RMSe - DS ) ) - MLU ) ,MUM ),DS ) * DS ) )", "obj1": 0.08, "obj2": 0.7094877207073788}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * MDR ) ) * MDR ) ) * ACS )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( MUC + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.71, "obj2": 0.20393807522580631}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - CS ) + Min( CS ,RRSe ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.672, "obj2": 0.23426317454671644}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( CRS / MDR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.22, "obj2": 0.5452979814505583}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( Min( MLU ,RCSe ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.366, "obj2": 0.4469198551063605}, {"determining": "( ( MDR / PN ) * Max( ( DDR / Min( FirstVNF_Mem_Server ,( AMS - FirstVNF_Mem_Server ) ) ),MRS ) )", "choosing": "( ( ( Max( MUM,MUC ) + MUC ) + ( RMSe + ( ( ( MUM * Max( ( MLU / MLU ),RRSe ) ) / ( ( CS * MUM ) - RCSe ) ) + Max( RRSe,MUR ) ) ) ) - ( Max( MUR,RRSe ) * ( RRSe - ( ( ( MUC + ( MLU / RRSe ) ) + MUR ) - CS ) ) ) )", "obj1": 0.19, "obj2": 0.5922836213751185}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( CS * ( ( ( RMSe + RRSe ) / ( RRSe + ( MLU + MUR ) ) ) + RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.72, "obj2": 0.19282788650364144}, {"determining": "( Min( ( PN * ( Min( ( ACS * AMS ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ,Min( Max( CRS,( FirstVNF_RAM - FirstVNF_CPU ) ) ,Max( AMS,FirstVNF_Mem_Server ) ) ) * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - ( Min( MRS ,FirstVNF_Mem_Server ) * Max( MRS,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MLU,( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + Max( MUC,DS ) ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + RCSe ) ) ) - CS ) ) ) )", "obj1": 0.782, "obj2": 0.15268269660224365}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + Min( FirstVNF_CPU ,MRS ) ) ,FirstVNF_Mem_Server ) ) * ( ( Const - FirstVNF_RAM ) * ( Min( CRS ,FirstVNF_RAM_Server ) * MDR ) ) )", "choosing": "( Min( DS ,Max( Min( MUM ,( Min( Min( RMSe ,( MUR * MUM ) ) ,MLU ) + ( ( RRSe + RRSe ) / ( Max( MUM,RCSe ) * ( MUM / MUC ) ) ) ) ),( ( RRSe + DS ) - RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.586, "obj2": 0.29292371503700665}, {"determining": "Min( ( FirstVNF_RAM - ( Const - FirstVNF_RAM ) ) ,( ( MDR - FirstVNF_CPU ) * PN ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.964, "obj2": 0.02992689889118726}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( Max( Min( MLU ,( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) ) ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - Min( Max( ( Max( ( MLU * ( ( RMSe - MUR ) + CS ) ),Min( ( MUM - ( MUC + CS ) ) ,MUR ) ) * RCSe ),Max( ( Max( RMSe,( RRSe / DS ) ) - RRSe ),( RMSe * ( ( RCSe / ( RCSe / MUC ) ) * RCSe ) ) ) ) ,MLU ) )", "obj1": 0.638, "obj2": 0.2523756047459702}, {"determining": "( Max( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,( ( MDR - FirstVNF_CPU ) * MDR ) ),FirstVNF_Mem_Server ) / Max( ( FirstVNF_Mem_Server - ARS ),ARS ) )", "choosing": "( ( DS + DS ) - ( Min( Min( Min( Max( MLU,Min( Max( MUC,MUM ) ,RCSe ) ) ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ) + ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.35, "obj2": 0.4597439083040227}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.682, "obj2": 0.21770647983965835}, {"determining": "Min( ARS ,( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,( Max( RCSe,MUM ) + RCSe ) ) ,MUC ) ) - MUR ) ) - Min( ( Max( MUM,RRSe ) * Min( DS ,MUC ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.144, "obj2": 0.6247302257324693}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / RRS ) * ( PN / AMS ) ) ) ,( Const - CRS ) )", "choosing": "( ( ( ( MUR - CS ) + ( ( RMSe - ( MUC - MUM ) ) / CS ) ) + DS ) - ( ( MUC * CS ) / RMSe ) )", "obj1": 0.63, "obj2": 0.25491674669911013}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.316, "obj2": 0.486406159397784}, {"determining": "( Max( Max( AMS,( DDR + ACS ) ),FirstVNF_CPU ) * ( ( ( PN * AMS ) * ( ( RRS / Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( RRS * MDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( RRS * MDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) ) )", "choosing": "( ( Max( ( MUR / ( MLU * ( MUR / RMSe ) ) ),( RMSe / MUC ) ) / RMSe ) - ( CS * MUM ) )", "obj1": 0.942, "obj2": 0.03774951619409335}, {"determining": "Min( ( Const - ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) ) ,( ( FirstVNF_RAM / ( ( MRS + ACS ) * ( RRS + DDR ) ) ) - FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RCSe / ( MLU + Max( MLU,Max( ( MUC + MUC ),MLU ) ) ) ) ),RMSe ) )", "obj1": 0.904, "obj2": 0.08335620185651628}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( MUC + ( MUR + MUR ) ) ) ) - Min( CS ,RRSe ) ) ) ) )", "obj1": 0.79, "obj2": 0.14362602732637464}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( MDR ,MRS ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.498, "obj2": 0.329559253756244}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.508, "obj2": 0.3198724376842461}, {"determining": "Min( ( Min( ( FirstVNF_RAM - Const ) ,( ( Max( ( MRS + ( DDR / FirstVNF_RAM_Server ) ),( DDR * ARS ) ) - ( FirstVNF_RAM_Server * MDR ) ) * MDR ) ) * ACS ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.13144082947109026}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( Min( ( MRS / FirstVNF_CPU ) ,FirstVNF_RAM ) / RRS ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( MUM - CS ) - ( MUM * CS ) )", "obj1": 0.232, "obj2": 0.5441426947056183}, {"determining": "( Min( ( Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( CRS / MDR ) ) - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( RMSe - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.208, "obj2": 0.5772905814006224}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "( Max( DDR,( ACS * FirstVNF_Mem ) ) / CRS )", "choosing": "( ( MUM / RMSe ) - ( ( Max( ( RCSe - RCSe ),( RRSe / MUM ) ) / ( ( Min( MLU ,( DS + MLU ) ) / RMSe ) + CS ) ) + ( ( RMSe * ( DS * MUC ) ) / RMSe ) ) )", "obj1": 0.242, "obj2": 0.5285547117793908}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / ( FirstVNF_RAM - Const ) ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( DS + DS ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.5198915998505116}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.328, "obj2": 0.473970575290417}], "10": [{"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( ( ( Max( AMS,BR ) * BR ) - Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * ( MUR - Max( RCSe,MLU ) ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( BR * FirstVNF_Mem_Server ) ,( Min( Const ,FirstVNF_CPU ) + ACS ) ) * Max( AMS,BR ) ) - Const ) ,ARS )", "choosing": "( ( DS + DS ) - ( ( ( ( RCSe - ( ( MUM + Min( RRSe ,MUC ) ) / ( ( MUM + RCSe ) * DS ) ) ) / ( RRSe / Min( DS ,( DS + DS ) ) ) ) / ( ( MUC / RMSe ) + CS ) ) + ( RMSe / ( RMSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + ( MDR / Const ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) * Min( MRS ,Min( FirstVNF_Mem_Server ,( RRS + CRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( CS ,Min( MUC ,( MUM * RCSe ) ) ) ) / Min( MUM ,( DS + ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( MUR * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,DS ) ),DS ) * RCSe ) )", "obj1": 0.078, "obj2": 0.6875278363731605}, {"determining": "Max( ( CRS / CRS ),Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( ( ( ( ( MUC / MUM ) - RCSe ) - MUR ) / ( Max( DS,( CS - ( RRSe / MLU ) ) ) / MUR ) ) / ( MUC * MUM ) ) ) - ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) )", "obj1": 0.142, "obj2": 0.6314835494470699}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.414, "obj2": 0.4010237603207901}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.592, "obj2": 0.2581104655300971}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.23147669621755662}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( ( DS + DS ) ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.2, "obj2": 0.5743123658269066}, {"determining": "( ( ( Const - FirstVNF_CPU ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( DS - CS ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.438, "obj2": 0.3773555824422627}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / PN ) / CRS ) * ( ( Min( FirstVNF_Mem_Server ,MRS ) * FirstVNF_RAM ) * ( Max( PN,FirstVNF_RAM_Server ) / Const ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RRSe ,MUC ) - CS ) + ( ( Max( ( RCSe - MUR ),( RRSe / MUM ) ) / ( CS + ( Min( MLU ,( DS + MLU ) ) / RMSe ) ) ) - ( ( RMSe * ( DS * MUC ) ) / RMSe ) ) ) - Max( MUC,( Max( CS,MLU ) - MLU ) ) )", "obj1": 0.306, "obj2": 0.49397121850932074}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * ( FirstVNF_CPU_Server * ( RRS - BR ) ) ) / FirstVNF_RAM_Server ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( Max( ( MUC / MUC ),RCSe ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( MLU * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.47, "obj2": 0.3542495970526156}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.276, "obj2": 0.5059535384963808}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.392, "obj2": 0.42921335140176203}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( CRS / MDR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.22, "obj2": 0.5452979814505583}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.532, "obj2": 0.3082959288956422}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( Max( ( ( FirstVNF_RAM_Server - MDR ) + Max( FirstVNF_RAM,PN ) ),Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.354, "obj2": 0.4432775294655168}, {"determining": "( Max( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,( ( MDR - FirstVNF_CPU ) * MDR ) ),FirstVNF_Mem_Server ) / Max( ( FirstVNF_Mem_Server - ARS ),ARS ) )", "choosing": "( ( DS + DS ) - ( Min( Min( Min( Max( MLU,Min( Max( MUC,MUM ) ,RCSe ) ) ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ) + ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.35, "obj2": 0.4597439083040227}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,( FirstVNF_CPU / ( ( CRS - BR ) * RRS ) ) ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( MUM - CS ) - Max( Max( MUM,MUC ),RMSe ) )", "obj1": 0.242, "obj2": 0.5278600529900467}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.584, "obj2": 0.2925907935289892}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / ( FirstVNF_RAM - Const ) ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( DS + DS ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.5198915998505116}, {"determining": "( Max( FirstVNF_CPU,( Min( FirstVNF_CPU_Server ,PN ) / FirstVNF_CPU ) ) * ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ) )", "choosing": "( ( ( MUM / MLU ) - MUC ) + MUM )", "obj1": 0.888, "obj2": 0.09858428471561718}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( ( Const - ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) ) ,( ( FirstVNF_RAM / ( ( MRS + ACS ) * ( RRS + DDR ) ) ) - FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RCSe / ( MLU + Max( MLU,Max( ( MUC + MUC ),MLU ) ) ) ) ),RMSe ) )", "obj1": 0.904, "obj2": 0.08335620185651628}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( Max( Min( MLU ,( ( CS + DS ) - ( DS - ( MLU / RMSe ) ) ) ),( RMSe + DS ) ) - CS ) + ( MLU * MLU ) ) - Min( Max( ( Max( ( MLU * ( ( RMSe - MUR ) + CS ) ),Min( ( MUM - ( MUC + CS ) ) ,MUR ) ) * RCSe ),Max( ( Max( RMSe,( RRSe / DS ) ) - RRSe ),( RMSe * ( ( RCSe / ( RCSe / MUC ) ) * RCSe ) ) ) ) ,MLU ) )", "obj1": 0.578, "obj2": 0.3040521118043917}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * MDR ) ) * MDR ) ) * ACS )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( Min( ( RRSe + ( CS + DS ) ) ,RRSe ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( MUC + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.71, "obj2": 0.20393807522580631}, {"determining": "Min( ( FirstVNF_RAM - ( Const - FirstVNF_RAM ) ) ,( ( MDR - FirstVNF_CPU ) * PN ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.964, "obj2": 0.02992689889118726}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "Min( ARS ,( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,( Max( RCSe,MUM ) + RCSe ) ) ,MUC ) ) - MUR ) ) - Min( ( Max( MUM,RRSe ) * Min( DS ,MUC ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.144, "obj2": 0.6247302257324693}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * MDR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( MLU * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.732, "obj2": 0.18055905852058068}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.328, "obj2": 0.473970575290417}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_Mem ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.436, "obj2": 0.38976422184013904}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem / RRS ) * ( PN / AMS ) ) ) ,( Const - CRS ) )", "choosing": "( ( ( ( MUR - CS ) + ( ( RMSe - ( MUC - MUM ) ) / CS ) ) + DS ) - ( ( MUC * CS ) / RMSe ) )", "obj1": 0.63, "obj2": 0.25491674669911013}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.772, "obj2": 0.15266312806534588}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( CS * ( ( ( RMSe + RRSe ) / ( RRSe + ( MLU + MUR ) ) ) + RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.72, "obj2": 0.19282788650364144}, {"determining": "( Max( Max( AMS,( DDR + ACS ) ),FirstVNF_CPU ) * ( ( ( PN * AMS ) * ( ( RRS / Min( Min( MRS ,FirstVNF_RAM_Server ) ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * ( RRS * MDR ) ) ) ) ) + ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( RRS * MDR ) ) ) * ( FirstVNF_RAM_Server - MDR ) ) ) )", "choosing": "( ( Max( ( MUR / ( MLU * ( MUR / RMSe ) ) ),( RMSe / MUC ) ) / RMSe ) - ( CS * MUM ) )", "obj1": 0.942, "obj2": 0.03774951619409335}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU * MLU ) - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) )", "obj1": 0.178, "obj2": 0.5922838926964737}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.686, "obj2": 0.21287746243834546}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( ACS / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) ) - Max( MUM,RMSe ) )", "obj1": 0.186, "obj2": 0.5839538641556385}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - ( ARS / ( RRS * Max( CRS,MDR ) ) ) ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MLU * MLU ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.752, "obj2": 0.17455608311305237}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( MDR ,MRS ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.498, "obj2": 0.329559253756244}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( Min( ( MRS / FirstVNF_CPU ) ,FirstVNF_RAM ) / RRS ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( FirstVNF_RAM * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( MUM - CS ) - ( MUM * CS ) )", "obj1": 0.232, "obj2": 0.5441426947056183}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.492, "obj2": 0.3421846403303153}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.682, "obj2": 0.21770647983965835}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}], "11": [{"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( ( ( Max( AMS,BR ) * BR ) - Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * ( MUR - Max( RCSe,MLU ) ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + ( MDR / Const ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) * Min( MRS ,Min( FirstVNF_Mem_Server ,( RRS + CRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( CS ,Min( MUC ,( MUM * RCSe ) ) ) ) / Min( MUM ,( DS + ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( MUR * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,DS ) ),DS ) * RCSe ) )", "obj1": 0.078, "obj2": 0.6875278363731605}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( BR,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Max( ( CRS - FirstVNF_Mem ),Const ) ) / FirstVNF_RAM_Server ) ) * Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( ( ( ( ACS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) / ( MDR + RRS ) ) + Max( Max( Max( CRS,( ACS + FirstVNF_CPU_Server ) ),MRS ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * MLU ) / MUC ) - ( ( RCSe / ( CS * DS ) ) + ( ( ( RCSe - RCSe ) / ( RMSe / MUM ) ) * MLU ) ) )", "obj1": 0.556, "obj2": 0.28307610660294347}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.638, "obj2": 0.2300220055043354}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.772, "obj2": 0.15266312806534588}, {"determining": "Min( ( FirstVNF_RAM - ( Const - FirstVNF_RAM ) ) ,( ( MDR - FirstVNF_CPU ) * PN ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.964, "obj2": 0.02992689889118726}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( RMSe - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.53, "obj2": 0.3075874589089928}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.608, "obj2": 0.25182277341508813}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( CRS / MDR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.22, "obj2": 0.5452979814505583}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - ( ARS / ( RRS * Max( CRS,MDR ) ) ) ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MLU * MLU ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.752, "obj2": 0.17455608311305237}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * MDR ) ) * Min( ( Const - FirstVNF_CPU ) ,Min( MDR ,MRS ) ) ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.792, "obj2": 0.1275759806826758}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.85, "obj2": 0.11079770796643908}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "( Max( FirstVNF_CPU,( Min( FirstVNF_CPU_Server ,PN ) / FirstVNF_CPU ) ) * ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ) )", "choosing": "( ( ( MUM / MLU ) - MUC ) + MUM )", "obj1": 0.888, "obj2": 0.09858428471561718}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( PN * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + RCSe ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.07, "obj2": 0.7118669873704823}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.682, "obj2": 0.21770647983965835}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( Max( ( ( FirstVNF_RAM_Server - MDR ) + Max( FirstVNF_RAM,PN ) ),Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.354, "obj2": 0.4432775294655168}, {"determining": "( Max( Min( ( FirstVNF_RAM - ( DDR / FirstVNF_CPU_Server ) ) ,( ( MDR - FirstVNF_CPU ) * MDR ) ),FirstVNF_Mem_Server ) / Max( ( FirstVNF_Mem_Server - ARS ),ARS ) )", "choosing": "( ( DS + DS ) - ( Min( Min( Min( Max( MLU,Min( Max( MUC,MUM ) ,RCSe ) ) ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ) + ( Max( RMSe,CS ) / RMSe ) ) )", "obj1": 0.35, "obj2": 0.4597439083040227}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * ( FirstVNF_CPU_Server * ( RRS - BR ) ) ) / FirstVNF_RAM_Server ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( Max( ( MUC / MUC ),RCSe ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( MLU * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.47, "obj2": 0.3542495970526156}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( MRS ,FirstVNF_RAM ) ) * ( Max( ( MRS + ( DDR / ( FirstVNF_RAM - Const ) ) ),( DDR * ARS ) ) / ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * MLU ) ) - ( Min( CS ,Max( Max( ( DS + DS ),MUC ),DS ) ) * RRSe ) )", "obj1": 0.264, "obj2": 0.5198915998505116}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.492, "obj2": 0.3421846403303153}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * RMSe ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.392, "obj2": 0.41565202375360444}, {"determining": "Min( ARS ,( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,( Max( RCSe,MUM ) + RCSe ) ) ,MUC ) ) - MUR ) ) - Min( ( Max( MUM,RRSe ) * Min( DS ,MUC ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.144, "obj2": 0.6247302257324693}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.328, "obj2": 0.473970575290417}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,( FirstVNF_CPU / ( ( CRS - BR ) * RRS ) ) ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( MUM - CS ) - Max( Max( MUM,MUC ),RMSe ) )", "obj1": 0.242, "obj2": 0.5278600529900467}, {"determining": "Min( ( Const - ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) ) ,( ( FirstVNF_RAM / ( ( MRS + ACS ) * ( RRS + DDR ) ) ) - FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RCSe / ( MLU + Max( MLU,Max( ( MUC + MUC ),MLU ) ) ) ) ),RMSe ) )", "obj1": 0.904, "obj2": 0.08335620185651628}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.276, "obj2": 0.5059535384963808}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_Mem ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.436, "obj2": 0.38976422184013904}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.852, "obj2": 0.09958175242542451}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.414, "obj2": 0.4010237603207901}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,Const ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.454, "obj2": 0.36137354849152714}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( ( DS + DS ) ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.2, "obj2": 0.5743123658269066}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,Max( MUM,RMSe ) ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.592, "obj2": 0.2581104655300971}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / PN ) / CRS ) * ( ( Min( FirstVNF_Mem_Server ,MRS ) * FirstVNF_RAM ) * ( Max( PN,FirstVNF_RAM_Server ) / Const ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RRSe ,MUC ) - CS ) + ( ( Max( ( RCSe - MUR ),( RRSe / MUM ) ) / ( CS + ( Min( MLU ,( DS + MLU ) ) / RMSe ) ) ) - ( ( RMSe * ( DS * MUC ) ) / RMSe ) ) ) - Max( MUC,( Max( CS,MLU ) - MLU ) ) )", "obj1": 0.306, "obj2": 0.49397121850932074}, {"determining": "Min( ( Min( Max( FirstVNF_RAM,ACS ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Min( MDR ,ARS ) )", "choosing": "( ( Max( Max( RMSe,Min( ( DS * DS ) ,( ( RRSe * MUM ) * ( CS - CS ) ) ) ),MLU ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.512, "obj2": 0.3216781965290878}, {"determining": "Max( ( CRS / CRS ),Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( ( ( ( ( MUC / MUM ) - RCSe ) - MUR ) / ( Max( DS,( CS - ( RRSe / MLU ) ) ) / MUR ) ) / ( MUC * MUM ) ) ) - ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) )", "obj1": 0.142, "obj2": 0.6314835494470699}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( CS,MLU ) ) ) - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.706, "obj2": 0.19628532055910952}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.288, "obj2": 0.4961043456566777}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( MLU * MLU ) - CS ) ) )", "obj1": 0.232, "obj2": 0.5380392475450055}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( ( PN * FirstVNF_RAM ) * Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.592, "obj2": 0.2581104655300971}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( CS * ( ( ( RMSe + RRSe ) / ( RRSe + ( MLU + MUR ) ) ) + RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.7, "obj2": 0.20999956326425648}], "12": [{"determining": "( ( ( ( CRS - AMS ) - ACS ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6721206150377418}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.638, "obj2": 0.2300220055043354}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( BR,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Max( ( CRS - FirstVNF_Mem ),Const ) ) / FirstVNF_RAM_Server ) ) * Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( ( ( ( ACS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) / ( MDR + RRS ) ) + Max( Max( Max( CRS,( ACS + FirstVNF_CPU_Server ) ),MRS ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * MLU ) / MUC ) - ( ( RCSe / ( CS * DS ) ) + ( ( ( RCSe - RCSe ) / ( RMSe / MUM ) ) * MLU ) ) )", "obj1": 0.556, "obj2": 0.28307610660294347}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( RMSe - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.53, "obj2": 0.3075874589089928}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_Mem ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.436, "obj2": 0.38976422184013904}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.328, "obj2": 0.473970575290417}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( ( DS + DS ) ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.2, "obj2": 0.5743123658269066}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) - ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ) ) ,Const ) ,( PN * ( Const / BR ) ) )", "choosing": "( ( DS + DS ) - Max( MUM,Max( Max( Max( RCSe,( DS - ( ( MUC - RRSe ) - ( RCSe + MUM ) ) ) ),Max( ( ( DS * ( RCSe * DS ) ) + MLU ),RCSe ) ),( ( Min( DS ,( Max( DS,CS ) + Max( CS,MUR ) ) ) + RRSe ) / DS ) ) ) )", "obj1": 0.922, "obj2": 0.07054571746459785}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( MDR * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.414, "obj2": 0.4010237603207901}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( MDR - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.974, "obj2": 0.021239558177740488}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( Max( ( ( FirstVNF_RAM_Server - MDR ) + Max( FirstVNF_RAM,PN ) ),Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.354, "obj2": 0.4432775294655168}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * RMSe ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.392, "obj2": 0.41565202375360444}, {"determining": "Min( ( DDR - ( FirstVNF_Mem_Server - Const ) ) ,Max( MRS,( ACS / Const ) ) )", "choosing": "( ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( ( MLU / ( DS / RRSe ) ),DS ) ),DS ) ) / ( RMSe + ( CS - ( Max( Max( MUM,( Min( MLU ,RMSe ) - DS ) ),MUM ) / ( MLU - ( DS + ( MUR / DS ) ) ) ) ) ) )", "obj1": 0.964, "obj2": 0.029797438480288593}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( CS * CS ) / RMSe ) )", "obj1": 0.764, "obj2": 0.1505314864202184}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_Mem * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * ( ( CRS * PN ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Max( RMSe,MUM ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + DS ) ) )", "obj1": 0.578, "obj2": 0.271324235029361}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.72, "obj2": 0.18202078616483375}, {"determining": "Min( ( Min( Max( FirstVNF_RAM,ACS ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Min( MDR ,ARS ) )", "choosing": "( ( Max( Max( RMSe,Min( ( DS * DS ) ,( ( RRSe * MUM ) * ( CS - CS ) ) ) ),MLU ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.512, "obj2": 0.3216781965290878}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.342, "obj2": 0.45972278629655283}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,Const ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.454, "obj2": 0.36137354849152714}, {"determining": "( Min( ( PN * ( AMS - MRS ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - Const ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( ( DDR - FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( ( RCSe * DS ) + RCSe ) - ( ( CS * RMSe ) / RMSe ) )", "obj1": 0.836, "obj2": 0.12244892091172883}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - CRS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + MLU ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.676, "obj2": 0.2195305719167829}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + ( MDR / Const ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) * Min( MRS ,Min( FirstVNF_Mem_Server ,( RRS + CRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( CS ,Min( MUC ,( MUM * RCSe ) ) ) ) / Min( MUM ,( DS + ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( MUR * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,DS ) ),DS ) * RCSe ) )", "obj1": 0.078, "obj2": 0.6875278363731605}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.61, "obj2": 0.24402998442954513}, {"determining": "Min( ARS ,( FirstVNF_CPU / ACS ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,( Max( RCSe,MUM ) + RCSe ) ) ,MUC ) ) - MUR ) ) - Min( ( Max( MUM,RRSe ) * Min( DS ,MUC ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) )", "obj1": 0.144, "obj2": 0.6247302257324693}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / PN ) / CRS ) * ( ( Min( FirstVNF_Mem_Server ,MRS ) * FirstVNF_RAM ) * ( Max( PN,FirstVNF_RAM_Server ) / Const ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RRSe ,MUC ) - CS ) + ( ( Max( ( RCSe - MUR ),( RRSe / MUM ) ) / ( CS + ( Min( MLU ,( DS + MLU ) ) / RMSe ) ) ) - ( ( RMSe * ( DS * MUC ) ) / RMSe ) ) ) - Max( MUC,( Max( CS,MLU ) - MLU ) ) )", "obj1": 0.306, "obj2": 0.49397121850932074}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * ( FirstVNF_CPU_Server * ( RRS - BR ) ) ) / FirstVNF_RAM_Server ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( Max( ( MUC / MUC ),RCSe ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( MLU * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.47, "obj2": 0.3542495970526156}, {"determining": "( Max( FirstVNF_CPU,( Min( FirstVNF_CPU_Server ,PN ) / FirstVNF_CPU ) ) * ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ) )", "choosing": "( ( ( MUM / MLU ) - MUC ) + MUM )", "obj1": 0.888, "obj2": 0.09858428471561718}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const - ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ARS + ACS ) ) ) ) ,( ( FirstVNF_RAM / ( ( MRS + ACS ) * ( RRS + DDR ) ) ) - FirstVNF_RAM ) )", "choosing": "( Min( DS ,MUC ) / Max( Max( Min( MLU ,RCSe ),( RCSe / ( MLU + Max( MLU,Max( ( MUC + MUC ),MLU ) ) ) ) ),RMSe ) )", "obj1": 0.904, "obj2": 0.08335620185651628}, {"determining": "( ( ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) * FirstVNF_RAM ) * Min( Max( Max( ( ARS / ( RRS * Max( CRS,MDR ) ) ),Max( FirstVNF_CPU,Max( BR,BR ) ) ),FirstVNF_CPU ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) * Min( ( Const - FirstVNF_RAM ) ,( Min( CRS ,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.492, "obj2": 0.3421846403303153}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - ( ARS / ( RRS * Max( CRS,MDR ) ) ) ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MLU * MLU ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.752, "obj2": 0.17455608311305237}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.852, "obj2": 0.09958175242542451}, {"determining": "( Min( ( FirstVNF_RAM - ( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( ( DS + DS ) ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.2, "obj2": 0.5743123658269066}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( MLU * MLU ) - CS ) ) )", "obj1": 0.232, "obj2": 0.5380392475450055}, {"determining": "Max( ( CRS / CRS ),Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( ( ( ( ( MUC / MUM ) - RCSe ) - MUR ) / ( Max( DS,( CS - ( RRSe / MLU ) ) ) / MUR ) ) / ( MUC * MUM ) ) ) - ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) )", "obj1": 0.142, "obj2": 0.6314835494470699}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.504, "obj2": 0.3396825891748736}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( CS * ( ( ( RMSe + RRSe ) / ( RRSe + ( MLU + MUR ) ) ) + RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.7, "obj2": 0.20999956326425648}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( ( DS + RCSe ) - ( ( RMSe * Min( CS ,RMSe ) ) / RMSe ) )", "obj1": 0.844, "obj2": 0.10272469664039156}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ),FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( DS,RMSe ) )", "obj1": 0.256, "obj2": 0.5151511862566366}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( RMSe / ( MLU * Min( RMSe ,( RRSe - CS ) ) ) ) )", "obj1": 0.748, "obj2": 0.17680844533292853}], "13": [{"determining": "( ( ( ( CRS - AMS ) - ACS ) * Min( ( ( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),( Min( CS ,RRSe ) - CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - AMS ) - ACS ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.61, "obj2": 0.24402998442954513}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.408, "obj2": 0.38749587842555144}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_Mem * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * ( ( CRS * PN ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Max( RMSe,MUM ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + DS ) ) )", "obj1": 0.578, "obj2": 0.271324235029361}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.638, "obj2": 0.2300220055043354}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - FirstVNF_Mem ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( PN * FirstVNF_RAM ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + ( MUR + DS ) ) - ( ( Min( MUC ,( ( MUM + MUM ) + DS ) ) * CS ) / RMSe ) )", "obj1": 0.904, "obj2": 0.06417260347919922}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + ( MDR / Const ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) * Min( MRS ,Min( FirstVNF_Mem_Server ,( RRS + CRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( CS ,Min( MUC ,( MUM * RCSe ) ) ) ) / Min( MUM ,( DS + ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( MUR * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,DS ) ),DS ) * RCSe ) )", "obj1": 0.078, "obj2": 0.6875278363731605}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - CRS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + MLU ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.676, "obj2": 0.2195305719167829}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6721206150377418}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( ( Max( Min( DDR ,Min( BR ,( FirstVNF_CPU_Server / DDR ) ) ),( ( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM ) ) - Const ) ) * FirstVNF_Mem_Server ),FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( DS,RMSe ) )", "obj1": 0.256, "obj2": 0.5151511862566366}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5790299809695327}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.328, "obj2": 0.473970575290417}, {"determining": "Min( ( Min( Max( FirstVNF_RAM,ACS ) ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) ,Min( MDR ,ARS ) )", "choosing": "( ( Max( Max( RMSe,Min( ( DS * DS ) ,( ( RRSe * MUM ) * ( CS - CS ) ) ) ),MLU ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.512, "obj2": 0.3216781965290878}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( BR,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Max( ( CRS - FirstVNF_Mem ),Const ) ) / FirstVNF_RAM_Server ) ) * Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( ( ( ( ACS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) / ( MDR + RRS ) ) + Max( Max( Max( CRS,( ACS + FirstVNF_CPU_Server ) ),MRS ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * MLU ) / MUC ) - ( ( RCSe / ( CS * DS ) ) + ( ( ( RCSe - RCSe ) / ( RMSe / MUM ) ) * MLU ) ) )", "obj1": 0.556, "obj2": 0.28307610660294347}, {"determining": "Min( ( DDR - ( FirstVNF_Mem_Server - Const ) ) ,Max( MRS,( ACS / Const ) ) )", "choosing": "( ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( ( MLU / ( DS / RRSe ) ),DS ) ),DS ) ) / ( RMSe + ( CS - ( Max( Max( MUM,( Min( MLU ,RMSe ) - DS ) ),MUM ) / ( MLU - ( DS + ( MUR / DS ) ) ) ) ) ) )", "obj1": 0.964, "obj2": 0.029797438480288593}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "Min( ( Max( FirstVNF_RAM,( ( MRS + ACS ) * ( FirstVNF_RAM_Server - AMS ) ) ) - FirstVNF_RAM ) ,( ACS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS + MUC ) / Max( Max( Min( MLU ,RCSe ),( ( MUR + RRSe ) + Max( ( ( MUC * ( MLU + MUR ) ) - ( MUM + MUM ) ),MUM ) ) ),RMSe ) )", "obj1": 0.896, "obj2": 0.09101156256251008}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( Max( ( ( FirstVNF_RAM_Server - MDR ) + Max( FirstVNF_RAM,PN ) ),Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.354, "obj2": 0.4432775294655168}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * RMSe ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.392, "obj2": 0.41565202375360444}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,Const ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * DS ) )", "obj1": 0.278, "obj2": 0.5099701283100394}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,Max( MRS,FirstVNF_CPU ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + DS ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.702, "obj2": 0.203980450410359}, {"determining": "( Max( FirstVNF_CPU,( Min( FirstVNF_CPU_Server ,PN ) / FirstVNF_CPU ) ) * ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ) )", "choosing": "( ( ( MUM / MLU ) - MUC ) + MUM )", "obj1": 0.888, "obj2": 0.09858428471561718}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,Min( ( BR * ARS ) ,CRS ) )", "choosing": "( Max( Min( ( MUC / ( DS + MUC ) ) ,Max( RRSe,( RRSe + MUM ) ) ),MUM ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.548, "obj2": 0.3001499074089835}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) / ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( FirstVNF_RAM * PN ) * Min( ( ( MRS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( ( ( ( Max( ( MUM / MLU ),( MLU - CS ) ) * ( ( CS - RMSe ) - Min( MUR ,CS ) ) ) - MLU ) * MUR ) * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.14399937640255794}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( MLU * MLU ) - CS ) ) )", "obj1": 0.236, "obj2": 0.5359848609194886}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / PN ) / CRS ) * ( ( Min( FirstVNF_Mem_Server ,MRS ) * FirstVNF_RAM ) * ( Max( PN,FirstVNF_RAM_Server ) / Const ) ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,PN ) )", "choosing": "( ( ( Min( RRSe ,MUC ) - CS ) + ( ( Max( ( RCSe - MUR ),( RRSe / MUM ) ) / ( CS + ( Min( MLU ,( DS + MLU ) ) / RMSe ) ) ) - ( ( RMSe * ( DS * MUC ) ) / RMSe ) ) ) - Max( MUC,( Max( CS,MLU ) - MLU ) ) )", "obj1": 0.306, "obj2": 0.49397121850932074}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.72, "obj2": 0.18202078616483375}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.852, "obj2": 0.09958175242542451}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( Min( FirstVNF_CPU_Server ,( CRS - DDR ) ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( Max( MUM,Max( Min( MUC ,Max( DS,DS ) ),MUR ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUR,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.992, "obj2": 0.002177276522231001}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( ( DS + DS ) ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.2, "obj2": 0.5743123658269066}, {"determining": "( Min( ( MDR * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( MUM + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.784, "obj2": 0.14538265645788087}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( DS + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.504, "obj2": 0.3396825891748736}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( ( MUM - CS ) / Min( ( ( CS / RMSe ) * RCSe ) ,RCSe ) ) + ( CS * ( ( ( RMSe + RRSe ) / ( RRSe + ( MLU + MUR ) ) ) + RCSe ) ) ) - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.7, "obj2": 0.20999956326425648}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( MDR * AMS ) ) + Max( PN,( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * MLU ) ) ) / Max( Min( ( CS * MUC ) ,( MLU + DS ) ),( ( Min( Max( ( ( RRSe + CS ) * ( RMSe * MUR ) ),( ( RRSe * CS ) + CS ) ) ,Min( MLU ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.378, "obj2": 0.4301014288446006}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( CS * CS ) / RMSe ) )", "obj1": 0.764, "obj2": 0.1505314864202184}, {"determining": "( ( MDR - ( RRS - FirstVNF_RAM_Server ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( RMSe / MUM ) ) - Min( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MLU * MLU ) ) ) ) - Min( Max( Max( RCSe,MLU ),MUC ) ,RRSe ) ) ) ,( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.298, "obj2": 0.5044739374261968}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),DS ) * DS ) )", "obj1": 0.092, "obj2": 0.6842023090779042}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( MUR - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.758, "obj2": 0.1594340696335974}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( MDR - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.976, "obj2": 0.019076334042616338}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.376, "obj2": 0.44102511575719094}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * ( FirstVNF_CPU_Server * ( RRS - BR ) ) ) / FirstVNF_RAM_Server ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( Max( ( MUC / MUC ),RCSe ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( MLU * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.47, "obj2": 0.3542495970526156}], "14": [{"determining": "( ( ( CRS - AMS ) / ACS ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( Max( ( MUM / MLU ),( MLU - CS ) ) - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * RMSe ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - AMS ) - ACS ) * Min( ( ( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) / ( Max( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ),( Min( CS ,RRSe ) - CS ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) + ( ( ( Max( RRS,RRS ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - Max( ( RRSe - MUR ),RMSe ) ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe - ( ( Max( DS,MUM ) / Min( ( Max( MUR,MUM ) + DS ) ,MLU ) ) - CS ) ) ) )", "obj1": 0.37, "obj2": 0.4149519472071096}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.408, "obj2": 0.38749587842555144}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + ( MDR / Const ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) * Min( MRS ,Min( FirstVNF_Mem_Server ,( RRS + CRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( CS ,Min( MUC ,( MUM * RCSe ) ) ) ) / Min( MUM ,( DS + ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( MUR * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,DS ) ),DS ) * RCSe ) )", "obj1": 0.078, "obj2": 0.6875278363731605}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,MDR )", "choosing": "( ( Min( ( MUC / RCSe ) ,( Max( MUM,Max( CS,RRSe ) ) - ( MLU + MLU ) ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( RMSe ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.51, "obj2": 0.3189952248463549}, {"determining": "( Max( FirstVNF_CPU,( Min( FirstVNF_CPU_Server ,PN ) / FirstVNF_CPU ) ) * ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ) )", "choosing": "( ( ( MUM / MLU ) - MUC ) + MUM )", "obj1": 0.888, "obj2": 0.09858428471561718}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6721206150377418}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * Max( FirstVNF_RAM_Server,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - CRS ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - ( ( CS / RCSe ) + Min( RMSe ,Min( MLU ,( Max( RCSe,RMSe ) + MLU ) ) ) ) ) + ( MLU * MLU ) ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.676, "obj2": 0.2195305719167829}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( MDR ,MRS ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.488, "obj2": 0.3364112474241531}, {"determining": "Min( ( DDR - ( FirstVNF_Mem_Server - Const ) ) ,Max( MRS,( ACS / Const ) ) )", "choosing": "( ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( ( MLU / ( DS / RRSe ) ),DS ) ),DS ) ) / ( RMSe + ( CS - ( Max( Max( MUM,( Min( MLU ,RMSe ) - DS ) ),MUM ) / ( MLU - ( DS + ( MUR / DS ) ) ) ) ) ) )", "obj1": 0.964, "obj2": 0.029797438480288593}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5790299809695327}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( PN * FirstVNF_RAM ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,( Const - FirstVNF_CPU ) ),ARS ) ) )", "choosing": "( ( DS + ( MUR + DS ) ) - ( ( Min( Min( Min( CS ,RMSe ) ,MUC ) ,Max( RRSe,DS ) ) * CS ) / RMSe ) )", "obj1": 0.838, "obj2": 0.10468681666863214}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - FirstVNF_Mem ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( PN * FirstVNF_RAM ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + ( MUR + DS ) ) - ( ( Min( MUC ,( ( MUM + MUM ) + DS ) ) * CS ) / RMSe ) )", "obj1": 0.904, "obj2": 0.06417260347919922}, {"determining": "Min( ( ( Min( ( FirstVNF_CPU_Server / ACS ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) * Max( AMS,BR ) ) - Const ) ,ARS )", "choosing": "( ( MLU / ( Min( MUR ,CS ) + MUC ) ) - Max( RMSe,RMSe ) )", "obj1": 0.344, "obj2": 0.46158698633527034}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * ( FirstVNF_CPU_Server * ( RRS - BR ) ) ) / FirstVNF_RAM_Server ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( Max( ( MUC / MUC ),RCSe ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( MLU * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.444, "obj2": 0.3738783862052925}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.7, "obj2": 0.1935715753928448}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.328, "obj2": 0.473970575290417}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.638, "obj2": 0.2300220055043354}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.894, "obj2": 0.06829768263268103}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( MDR - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.976, "obj2": 0.019076334042616338}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.852, "obj2": 0.09958175242542451}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( MUR - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.752, "obj2": 0.16431834755428304}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * ( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) - CS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.726, "obj2": 0.17780893144116947}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,Min( ( BR * ARS ) ,CRS ) )", "choosing": "( Max( Min( ( MUC / ( DS + MUC ) ) ,Max( RRSe,( RRSe + MUM ) ) ),MUM ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.548, "obj2": 0.3001499074089835}, {"determining": "Min( ( CRS - FirstVNF_CPU ) ,( ARS * ( Max( FirstVNF_Mem_Server,MDR ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( Min( ( ( RMSe / MUC ) + DS ) ,CS ) - CS ) + ( ( ( ( RCSe + MUR ) / ( RMSe * CS ) ) - Min( DS ,( Max( CS,MUC ) * Max( MLU,MUC ) ) ) ) * MLU ) ) + DS ) - Max( RMSe,( RCSe + MUR ) ) )", "obj1": 0.418, "obj2": 0.38359222284095584}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.214, "obj2": 0.5563147350280765}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( ( DS + DS ) ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.2, "obj2": 0.5743123658269066}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( BR,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Max( ( CRS - FirstVNF_Mem ),Const ) ) / FirstVNF_RAM_Server ) ) * Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( ( ( ( ACS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) / ( MDR + RRS ) ) + Max( Max( Max( CRS,( ACS + FirstVNF_CPU_Server ) ),MRS ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * MLU ) / MUC ) - ( ( RCSe / ( CS * DS ) ) + ( ( ( RCSe - RCSe ) / ( RMSe / MUM ) ) * MLU ) ) )", "obj1": 0.556, "obj2": 0.28307610660294347}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,( ( RMSe * CS ) / RMSe ) ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.362, "obj2": 0.43987089836564086}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) / ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( FirstVNF_RAM * PN ) * Min( ( ( MRS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( ( ( ( Max( ( MUM / MLU ),( MLU - CS ) ) * ( ( CS - RMSe ) - Min( MUR ,CS ) ) ) - MLU ) * MUR ) * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.14399937640255794}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( FirstVNF_Mem_Server,( ( Const * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - ACS ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) * ( ( BR / ( ( ( Max( Min( ARS ,RRS ),FirstVNF_Mem ) - FirstVNF_Mem ) / ( BR * Min( Const ,BR ) ) ) + FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS - RCSe ) - ( ( ( ( RCSe + Min( ( ( MUM + RRSe ) + MUC ) ,( ( MUC - RRSe ) + DS ) ) ) * ( RRSe * RMSe ) ) * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.2285516354484455}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.448, "obj2": 0.35645322377325706}, {"determining": "Min( Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),BR ) * Min( MDR ,( ARS + ACS ) ) ) ,Const ) ,( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( MLU * MLU ) - CS ) ) )", "obj1": 0.236, "obj2": 0.5359848609194886}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.312, "obj2": 0.4863021432482905}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.61, "obj2": 0.24402998442954513}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.784, "obj2": 0.14442473560661157}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.618, "obj2": 0.23956225150021163}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( Max( ( ( FirstVNF_RAM_Server - MDR ) + Max( FirstVNF_RAM,PN ) ),Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.354, "obj2": 0.4432775294655168}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( CS * CS ) / RMSe ) )", "obj1": 0.764, "obj2": 0.1505314864202184}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( Min( ( Min( DS ,DS ) * Max( MUM,MUR ) ) ,( Max( RCSe,RCSe ) / ( MUC * MUM ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.598, "obj2": 0.2604115518630925}], "15": [{"determining": "( ( ( Max( BR,RRS ) * ( ACS - BR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( MRS,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MUC + MLU ) - ( DS + DS ) ) + ( Min( ( Min( MUM ,DS ) - Min( RRSe ,RRSe ) ) ,MUR ) * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - AMS ) / ACS ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( Max( ( MUM / MLU ),( MLU - CS ) ) - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * RMSe ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( ( ( MDR * ( ( Min( MRS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),RRS ) * PN ) ) + MRS ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) * Max( ACS,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( MLU * MLU ) ) - Min( CS ,RMSe ) )", "obj1": 0.158, "obj2": 0.600261207838766}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + ( MDR / Const ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) * Min( MRS ,Min( FirstVNF_Mem_Server ,( RRS + CRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( CS ,Min( MUC ,( MUM * RCSe ) ) ) ) / Min( MUM ,( DS + ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( MUR * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,DS ) ),DS ) * RCSe ) )", "obj1": 0.078, "obj2": 0.6875278363731605}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6721206150377418}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( ( ( ( PN * RRS ) * ( ( RRS * Min( ACS ,FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( Max( FirstVNF_Mem_Server,ACS ) - Const ) - MDR ) ) ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( ( MUM / MLU ) * CS ) / RMSe ) )", "obj1": 0.852, "obj2": 0.0971154203567981}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,MDR )", "choosing": "( ( Min( ( MUC / RCSe ) ,( Max( MUM,Max( CS,RRSe ) ) - ( MLU + MLU ) ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( RMSe ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.51, "obj2": 0.3189952248463549}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) + ( ( ( Max( RRS,RRS ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - Max( ( RRSe - MUR ),RMSe ) ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe - ( ( Max( DS,MUM ) / Min( ( Max( MUR,MUM ) + DS ) ,MLU ) ) - CS ) ) ) )", "obj1": 0.37, "obj2": 0.4149519472071096}, {"determining": "( Min( ( CRS - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),RRS ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( CS * ( MLU / RRSe ) ) / RMSe ) )", "obj1": 0.884, "obj2": 0.07788585742287722}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( MUM - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.826, "obj2": 0.10097497421683868}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5790299809695327}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * ( Max( DDR,( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.902, "obj2": 0.061906159572450305}, {"determining": "Min( ( DDR - ( FirstVNF_Mem_Server - Const ) ) ,Max( MRS,( ACS / Const ) ) )", "choosing": "( ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( ( MLU / ( DS / RRSe ) ),DS ) ),DS ) ) / ( RMSe + ( CS - ( Max( Max( MUM,( Min( MLU ,RMSe ) - DS ) ),MUM ) / ( MLU - ( DS + ( MUR / DS ) ) ) ) ) ) )", "obj1": 0.964, "obj2": 0.029797438480288593}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.448, "obj2": 0.35645322377325706}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( BR,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Max( ( CRS - FirstVNF_Mem ),Const ) ) / FirstVNF_RAM_Server ) ) * Min( FirstVNF_Mem_Server ,MRS ) ) ) ,( ( ( ( ACS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) / ( MDR + RRS ) ) + Max( Max( Max( CRS,( ACS + FirstVNF_CPU_Server ) ),MRS ),FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * MLU ) / MUC ) - ( ( RCSe / ( CS * DS ) ) + ( ( ( RCSe - RCSe ) / ( RMSe / MUM ) ) * MLU ) ) )", "obj1": 0.556, "obj2": 0.28307610660294347}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,( ( RMSe * CS ) / RMSe ) ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.344, "obj2": 0.4605959091135283}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) + FirstVNF_RAM_Server ) ,MRS ) ) ,( Const / RRS ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - ( Min( MUM ,Max( RMSe,Max( ( MUR + ( ( CS - RRSe ) - ( RRSe + CS ) ) ),( ( RCSe - ( MUM - RRSe ) ) - RRSe ) ) ) ) * DS ) )", "obj1": 0.234, "obj2": 0.5358204312330389}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( MDR ,MRS ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.488, "obj2": 0.3364112474241531}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( ACS - MDR ) + MDR ) - ( BR - AMS ) ) + PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( MLU + ( Min( Max( MUC,MLU ) ,( RMSe + RCSe ) ) * ( RMSe + ( RCSe * MLU ) ) ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.262, "obj2": 0.5238107331724734}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.328, "obj2": 0.473970575290417}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( ARS * ( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server / ( CRS * FirstVNF_CPU_Server ) ) ) + MDR ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - ( ( Min( ( RCSe - RMSe ) ,MLU ) + MUC ) - MUC ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.402, "obj2": 0.4003754167886021}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.7, "obj2": 0.1935715753928448}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( Max( ( ( FirstVNF_RAM_Server - MDR ) + Max( FirstVNF_RAM,PN ) ),Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,ARS )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.354, "obj2": 0.4432775294655168}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.214, "obj2": 0.5563147350280765}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( PN,( Const + MRS ) ) )", "choosing": "( ( ( Max( RCSe,RMSe ) + ( RCSe + MUR ) ) + Min( Max( RMSe,RCSe ) ,( MUC * RCSe ) ) ) / Max( ( ( Min( Max( Max( ( CS - MUC ),CS ),( ( RRSe * CS ) + CS ) ) ,Min( ( DS + DS ) ,MUC ) ) * ( Max( Min( MUM ,Max( RRSe,DS ) ),MUM ) - ( ( RCSe / RCSe ) + MUR ) ) ) * Max( RCSe,MUR ) ),Min( ( CS * MUC ) ,( MLU + DS ) ) ) )", "obj1": 0.2, "obj2": 0.5743123658269066}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem_Server * Min( ACS ,FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MUR - MUR ) * ( Min( MUC ,CS ) - MLU ) ) * ( MUR - Max( RCSe,MLU ) ) ) - DS ) + ( ( ( ( RMSe * CS ) / Max( MUM,DS ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( RMSe / ( RCSe + MUR ) ) )", "obj1": 0.292, "obj2": 0.5116088814801592}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.586, "obj2": 0.27058734915683685}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( Const - MDR ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUR,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.36, "obj2": 0.4306521786124897}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,Min( ( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ARS ) ,CRS ) )", "choosing": "( Max( Min( ( MUC / ( DS + MUC ) ) ,Max( RRSe,Max( RRSe,DS ) ) ),MUM ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.13399594201238121}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.428, "obj2": 0.3715389721225143}, {"determining": "Min( ( ( Max( MDR,FirstVNF_Mem_Server ) - BR ) * FirstVNF_RAM_Server ) ,Min( Const ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MLU / MUC ) + ( MUR * MLU ) ) / DS ) * ( MUR - Max( RCSe,MUC ) ) ) - CS ) + ( ( ( MUR * ( MUM - MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RCSe + MUR ) / ( RMSe * CS ) ) )", "obj1": 0.47, "obj2": 0.3523484267921942}, {"determining": "Min( ( ( Const - DDR ) - DDR ) ,Max( MRS,( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / ( CS + RRSe ) ) - CS ) ) / ( DS * Max( Min( Min( Min( CS ,DS ) ,( ( ( RMSe * MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( RRSe,DS ) ),DS ) ) )", "obj1": 0.93, "obj2": 0.037909551977676315}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( FirstVNF_Mem_Server,( ( Const * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - ACS ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) * ( ( BR / ( ( ( Max( Min( ARS ,RRS ),FirstVNF_Mem ) - FirstVNF_Mem ) / ( BR * Min( Const ,BR ) ) ) + FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS - RCSe ) - ( ( ( ( RCSe + Min( ( ( MUM + RRSe ) + MUC ) ,( ( MUC - RRSe ) + DS ) ) ) * ( RRSe * RMSe ) ) * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.2285516354484455}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.672, "obj2": 0.2178953426323078}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 0.716, "obj2": 0.18602513456134584}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.298, "obj2": 0.4914896891385767}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.784, "obj2": 0.14442473560661157}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( ( ( ACS / ( PN / CRS ) ) * Max( ARS,PN ) ) - FirstVNF_CPU ) ) ) ) ,Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR / DS ) ) ) ) - CS ) ) / ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( ( RMSe * MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( RRSe,DS ) ),Max( MUM,DS ) ) ) )", "obj1": 0.258, "obj2": 0.5311548763025999}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( ( Const - ( FirstVNF_Mem + PN ) ) ,MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( RMSe / ( ( MLU + RCSe ) * ( ( ( DS / Max( Max( MUC,RRSe ),CS ) ) - MUC ) / RMSe ) ) ) )", "obj1": 0.542, "obj2": 0.28787763776353953}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ( ( ( ( MDR + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + ( ( DS - ( MLU + MUM ) ) + ( ( ( ( DS - CS ) + Min( MLU ,MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),MUR ) )", "obj1": 0.61, "obj2": 0.24020793328386797}], "16": [{"determining": "Min( ( Const - ( ( CRS + ACS ) + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ,( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( ( ( MLU + Max( MLU,MLU ) ) - ( MUR + DS ) ) + RCSe ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,RRS ) * ( ACS - BR ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( MRS,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MUC + MLU ) - ( DS + DS ) ) + ( Min( ( Min( MUM ,DS ) - Min( RRSe ,RRSe ) ) ,MUR ) * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "( Min( ( CRS - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),RRS ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( CS * ( MLU / RRSe ) ) / RMSe ) )", "obj1": 0.884, "obj2": 0.07788585742287722}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ( ( ( ( MDR + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + ( ( DS - ( MLU + MUM ) ) + ( ( ( ( DS - CS ) + Min( MLU ,MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),MUR ) )", "obj1": 0.61, "obj2": 0.24020793328386797}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 0.736, "obj2": 0.1779614954534137}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6721206150377418}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( MRS,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( RMSe * CS ) ),( RMSe * MUC ) ) / RMSe ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.15, "obj2": 0.6149582234635353}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * ( Max( DDR,( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.902, "obj2": 0.061906159572450305}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.776, "obj2": 0.15497210689956065}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( FirstVNF_Mem_Server,( ( Const * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - ACS ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) * ( ( BR / ( ( ( Max( Min( ARS ,RRS ),FirstVNF_Mem ) - FirstVNF_Mem ) / ( BR * Min( Const ,BR ) ) ) + FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS - RCSe ) - ( ( ( ( RCSe + Min( ( ( MUM + RRSe ) + MUC ) ,( ( MUC - RRSe ) + DS ) ) ) * ( RRSe * RMSe ) ) * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.2285516354484455}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( MDR ,MRS ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.488, "obj2": 0.3364112474241531}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + ( MDR / Const ) ) - FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) * Min( MRS ,Min( FirstVNF_Mem_Server ,( RRS + CRS ) ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( CS ,Min( MUC ,( MUM * RCSe ) ) ) ) / Min( MUM ,( DS + ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( MUR * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,DS ) ),DS ) * RCSe ) )", "obj1": 0.078, "obj2": 0.6875278363731605}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem_Server * Min( ACS ,FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MUR - MUR ) * ( Min( MUC ,CS ) - MLU ) ) * ( MUR - Max( RCSe,MLU ) ) ) - DS ) + ( ( ( ( RMSe * CS ) / Max( MUM,DS ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( RMSe / ( RCSe + MUR ) ) )", "obj1": 0.292, "obj2": 0.5116088814801592}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.586, "obj2": 0.27058734915683685}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.428, "obj2": 0.3715389721225143}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( ( ( ACS / ( PN / CRS ) ) * Max( ARS,PN ) ) - FirstVNF_CPU ) ) ) ) ,Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR / DS ) ) ) ) - CS ) ) / ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( ( RMSe * MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( RRSe,DS ) ),Max( MUM,DS ) ) ) )", "obj1": 0.076, "obj2": 0.7144684586639701}, {"determining": "Min( ( DDR - ( FirstVNF_Mem_Server - Const ) ) ,Max( MRS,( ACS / Const ) ) )", "choosing": "( ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( ( MLU / ( DS / RRSe ) ),DS ) ),DS ) ) / ( RMSe + ( CS - ( Max( Max( MUM,( Min( MLU ,RMSe ) - DS ) ),MUM ) / ( MLU - ( DS + ( MUR / DS ) ) ) ) ) ) )", "obj1": 0.964, "obj2": 0.029797438480288593}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.824, "obj2": 0.0956787909484592}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.552, "obj2": 0.2800435353297168}, {"determining": "Min( ( ( Max( MDR,FirstVNF_Mem_Server ) - BR ) * FirstVNF_RAM_Server ) ,Min( Const ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MLU / MUC ) + ( MUR * MLU ) ) / DS ) * ( MUR - Max( RCSe,MUC ) ) ) - CS ) + ( ( ( MUR * ( MUM - MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RCSe + MUR ) / ( RMSe * CS ) ) )", "obj1": 0.47, "obj2": 0.3523484267921942}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,MDR )", "choosing": "( ( Min( ( MUC / RCSe ) ,( Max( MUM,Max( CS,RRSe ) ) - ( MLU + MLU ) ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( RMSe ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.51, "obj2": 0.3189952248463549}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,( ( RMSe * CS ) / RMSe ) ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.344, "obj2": 0.4605959091135283}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.298, "obj2": 0.4914896891385767}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "( ( ( Max( BR,RRS ) - ( ACS - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + ( FirstVNF_Mem - AMS ) ) ) * ( Max( ( PN * AMS ),( ( RRS * Min( ACS ,FirstVNF_RAM ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) + ( Min( BR ,FirstVNF_Mem ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( CS / DS ) + Min( Max( ( ( RCSe - RCSe ) + ( Max( ( Min( MUC ,CS ) + MUC ),CS ) * Min( ( MUM + ( RRSe - MUC ) ) ,RRSe ) ) ),Min( CS ,DS ) ) ,Min( MLU ,( RMSe - ( MLU + ( ( Min( RMSe ,MUC ) / MLU ) * Min( MUR ,( RCSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.926, "obj2": 0.039212907073177546}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( ACS - MDR ) + MDR ) - ( BR - AMS ) ) + PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( MLU + ( Min( Max( MUC,MLU ) ,( RMSe + RCSe ) ) * ( RMSe + ( RCSe * MLU ) ) ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUR,MUM ) + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.262, "obj2": 0.5238107331724734}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5790299809695327}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( ARS * ( ( ( FirstVNF_Mem + ( FirstVNF_CPU_Server / ( CRS * FirstVNF_CPU_Server ) ) ) + MDR ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - ( ( Min( ( RCSe - RMSe ) ,MLU ) + MUC ) - MUC ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.402, "obj2": 0.4003754167886021}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 0.716, "obj2": 0.18602513456134584}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,RRSe ) * RRSe ) )", "obj1": 0.322, "obj2": 0.47272959434460204}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) + FirstVNF_RAM_Server ) ,MRS ) ) ,( Const / RRS ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - ( Min( MUM ,Max( RMSe,Max( ( MUR + ( ( CS - RRSe ) - ( RRSe + CS ) ) ),( ( RCSe - ( MUM - RRSe ) ) - RRSe ) ) ) ) * DS ) )", "obj1": 0.234, "obj2": 0.5358204312330389}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( ( Const - ( FirstVNF_Mem + PN ) ) ,MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( RMSe / ( ( MLU + RCSe ) * ( ( ( DS / Max( Max( MUC,RRSe ),CS ) ) - MUC ) / RMSe ) ) ) )", "obj1": 0.542, "obj2": 0.28787763776353953}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + Min( CS ,RRSe ) ) * DS ) )", "obj1": 0.208, "obj2": 0.5561939069707652}, {"determining": "( Min( ( FirstVNF_RAM - Const ) ,( ( FirstVNF_CPU - ( Min( FirstVNF_RAM ,PN ) * BR ) ) * MDR ) ) * ACS )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) )", "obj1": 0.784, "obj2": 0.14442473560661157}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( Const - MDR ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUR,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.36, "obj2": 0.4306521786124897}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "Min( ( Const + FirstVNF_CPU ) ,Min( ( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ARS ) ,CRS ) )", "choosing": "( Max( Min( ( MUC / ( DS + MUC ) ) ,Max( RRSe,Max( RRSe,DS ) ) ),MUM ) - ( ( RMSe * CS ) / RMSe ) )", "obj1": 0.802, "obj2": 0.13399594201238121}, {"determining": "( ( Min( ( ( PN + FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - ( ARS / BR ) ) * PN ) ) ,FirstVNF_Mem_Server ) * ( PN * FirstVNF_RAM ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( Max( ( ( RCSe + MUR ) / ( RMSe * CS ) ),Min( DS ,RMSe ) ) * MLU ) ) - ( RCSe + RMSe ) )", "obj1": 0.38, "obj2": 0.40919769152915497}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "Min( ( ( Const - DDR ) - DDR ) ,Max( MRS,( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + ( ( Max( DS,MUM ) / ( CS + RRSe ) ) - CS ) ) / ( DS * Max( Min( Min( Min( CS ,DS ) ,( ( ( RMSe * MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( RRSe,DS ) ),DS ) ) )", "obj1": 0.93, "obj2": 0.037909551977676315}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.672, "obj2": 0.2178953426323078}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,MDR )", "choosing": "( ( Min( ( MUC / RCSe ) ,( Max( MUM,Max( CS,RRSe ) ) - ( MLU + MLU ) ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( RMSe ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.42, "obj2": 0.3957971562326035}], "17": [{"determining": "( ( FirstVNF_RAM_Server / ARS ) * ( AMS + DDR ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( Max( ( MUR - DS ),( RCSe * MUM ) ) ,Min( MUC ,( RCSe - DS ) ) ) ) / Min( ( DS + ( ( MUM + MLU ) - MLU ) ) ,( DS / ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( RCSe * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,MUR ) ),DS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ( ( CRS + ACS ) + ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ,( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( ( ( MLU + Max( MLU,MLU ) ) - ( MUR + DS ) ) + RCSe ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server - BR ) ) ) ) + MDR ) * Min( Const ,( Const - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR / DS ) ) ) ) - CS ) + RMSe ) / Max( DS,Max( Min( MUM ,Max( Min( ( MUC * Min( DS ,RMSe ) ) ,DS ),Max( RRSe,RRSe ) ) ),DS ) ) )", "obj1": 0.776, "obj2": 0.13056957004675698}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( MRS - PN ) / ACS ) * Min( Const ,( FirstVNF_CPU - MDR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RMSe,RCSe ) - RRSe ) + MLU ) - Max( ( MUM * ( Min( RMSe ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.734, "obj2": 0.17217627525940155}, {"determining": "( Min( ( CRS - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),RRS ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( CS * ( MLU / RRSe ) ) / RMSe ) )", "obj1": 0.884, "obj2": 0.07788585742287722}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5790299809695327}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.428, "obj2": 0.3715389721225143}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * ( Max( DDR,( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.902, "obj2": 0.061906159572450305}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.586, "obj2": 0.27058734915683685}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,MDR )", "choosing": "( ( Min( ( MUC / RCSe ) ,( Max( MUM,Max( CS,RRSe ) ) - ( MLU + MLU ) ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( RMSe ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.51, "obj2": 0.3189952248463549}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) * DS ) )", "obj1": 0.094, "obj2": 0.6686728749647254}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ( ( ( ( MDR + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + ( ( DS - ( MLU + MUM ) ) + ( ( ( ( DS - CS ) + Min( MLU ,MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),MUR ) )", "obj1": 0.61, "obj2": 0.24020793328386797}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( Const - MDR ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUR,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.396, "obj2": 0.39567441867234454}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + Min( CS ,RRSe ) ) * DS ) )", "obj1": 0.208, "obj2": 0.5561939069707652}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / ( ARS + ACS ) ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,RMSe ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.46, "obj2": 0.35419637592326253}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.552, "obj2": 0.2800435353297168}, {"determining": "( ( Min( ( ( PN + FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - ( ARS / BR ) ) * PN ) ) ,FirstVNF_Mem_Server ) * ( PN * FirstVNF_RAM ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( Max( ( ( RCSe + MUR ) / ( RMSe * CS ) ),Min( DS ,RMSe ) ) * MLU ) ) - ( RCSe + RMSe ) )", "obj1": 0.38, "obj2": 0.40919769152915497}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.068, "obj2": 0.6852159373011285}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( ( Const - MDR ) + MDR ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.054, "obj2": 0.7205495093620323}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( ( ( ARS - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( DS + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 0.42, "obj2": 0.3845433265158963}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,( ( RMSe * CS ) / RMSe ) ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.344, "obj2": 0.4605959091135283}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) + FirstVNF_RAM_Server ) ,MRS ) ) ,( Const / RRS ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - ( Min( MUM ,Max( RMSe,Max( ( MUR + ( ( CS - RRSe ) - ( RRSe + CS ) ) ),( ( RCSe - ( MUM - RRSe ) ) - RRSe ) ) ) ) * DS ) )", "obj1": 0.234, "obj2": 0.5358204312330389}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.824, "obj2": 0.0956787909484592}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.294, "obj2": 0.4890201227746001}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 0.716, "obj2": 0.18602513456134584}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.972, "obj2": 0.011997306006879453}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( ( Const - ( FirstVNF_Mem + PN ) ) ,MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( RMSe / ( ( MLU + RCSe ) * ( ( ( DS / Max( Max( MUC,RRSe ),CS ) ) - MUC ) / RMSe ) ) ) )", "obj1": 0.542, "obj2": 0.28787763776353953}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( ACS * Const ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + ( DS - CS ) ) * DS ) )", "obj1": 0.286, "obj2": 0.5054471983380501}, {"determining": "Min( ( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( ( Min( MUC ,CS ) - MLU ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.924, "obj2": 0.04878348479268921}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.648, "obj2": 0.2386783534426187}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( FirstVNF_Mem_Server,( ( Const * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - ACS ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) * ( ( BR / ( ( ( Max( Min( ARS ,RRS ),FirstVNF_Mem ) - FirstVNF_Mem ) / ( BR * Min( Const ,BR ) ) ) + FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS - RCSe ) - ( ( ( ( RCSe + Min( ( ( MUM + RRSe ) + MUC ) ,( ( MUC - RRSe ) + DS ) ) ) * ( RRSe * RMSe ) ) * CS ) / RMSe ) )", "obj1": 0.666, "obj2": 0.2285516354484455}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ),( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( ( DS - CS ) - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.488, "obj2": 0.33085882996213617}, {"determining": "( ( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,Min( ( MUC / ( DS + MUC ) ) ,Max( RRSe,Max( RRSe,DS ) ) ) ) * RRSe ) )", "obj1": 0.816, "obj2": 0.1243081107414355}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( CRS - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.672, "obj2": 0.2178953426323078}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( Const - MRS ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUC,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.318, "obj2": 0.4727430962725759}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( MRS,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( RMSe * CS ) ),( RMSe * MUC ) ) / RMSe ) - ( CS * MUM ) ) ) / Max( MUM,RMSe ) )", "obj1": 0.268, "obj2": 0.5220592056465275}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( Const - MDR ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUR,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.368, "obj2": 0.4242355842116424}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( DDR + FirstVNF_CPU ) - DDR ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( Max( ( RCSe - ( MUR / DS ) ),( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.484, "obj2": 0.33797445619855965}, {"determining": "Min( ( ( Max( MDR,FirstVNF_Mem_Server ) - BR ) * FirstVNF_RAM_Server ) ,Min( Const ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MLU / MUC ) + ( MUR * MLU ) ) / DS ) * ( MUR - Max( RCSe,MUC ) ) ) - CS ) + ( ( ( MUR * ( MUM - MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RCSe + MUR ) / ( RMSe * CS ) ) )", "obj1": 0.47, "obj2": 0.3523484267921942}], "18": [{"determining": "( Min( ( PN * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( FirstVNF_Mem_Server,( ( Const * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - ACS ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) * ( ( BR / ( ( ( Max( Min( ARS ,RRS ),FirstVNF_Mem ) - FirstVNF_Mem ) / ( BR * Min( Const ,BR ) ) ) + FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS - RCSe ) - ( ( ( ( RCSe + Min( ( ( MUM + RRSe ) + RCSe ) ,( ( MUC - RRSe ) + DS ) ) ) * ( RRSe * RMSe ) ) * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) * ( AMS + DDR ) )", "choosing": "( ( RMSe + ( ( Max( DS,Min( Max( ( MUR - DS ),( RCSe * MUM ) ) ,Min( MUC ,( RCSe - DS ) ) ) ) / Min( ( DS + ( ( MUM + MLU ) - MLU ) ) ,( DS / ( MUR + DS ) ) ) ) - Min( MLU ,CS ) ) ) / ( Max( Min( Min( Min( Max( ( RCSe * RCSe ),MLU ) ,RMSe ) ,MUC ) ,Max( MUM,MUR ) ),DS ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "( Min( ( CRS - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),RRS ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( CS * ( MLU / RRSe ) ) / RMSe ) )", "obj1": 0.884, "obj2": 0.07788585742287722}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( Const - MRS ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUC,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.318, "obj2": 0.4727430962725759}, {"determining": "Min( ( ( ( ( ( Const - Min( MRS ,FirstVNF_Mem_Server ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - ( RRSe * ( MUR / MUR ) ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.756, "obj2": 0.15802929522067752}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5790299809695327}, {"determining": "Min( ( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( ( Min( MUC ,CS ) - MLU ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.924, "obj2": 0.04878348479268921}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * ( Max( DDR,( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.902, "obj2": 0.061906159572450305}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ( ( ( ( MDR + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + ( ( DS - ( MLU + MUM ) ) + ( ( ( ( DS - CS ) + Min( MLU ,MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),MUR ) )", "obj1": 0.61, "obj2": 0.24020793328386797}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.294, "obj2": 0.4890201227746001}, {"determining": "Min( ( FirstVNF_CPU_Server / RRS ) ,( Min( Max( AMS,Const ) ,BR ) - RRS ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RCSe - RCSe ) / ( Min( ( MUR / Min( MUR ,MUM ) ) ,DS ) / MUM ) ) * ( Max( ( DS / Min( MUM ,RRSe ) ),Min( ( CS + RRSe ) ,CS ) ) * Min( DS ,Max( MUR,MLU ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * MLU ) )", "obj1": 0.278, "obj2": 0.4964907552761974}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.068, "obj2": 0.6852159373011285}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.552, "obj2": 0.2800435353297168}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.656, "obj2": 0.21694925169070678}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( ( ( Const - MDR ) + MDR ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.054, "obj2": 0.7205495093620323}, {"determining": "( Min( ( FirstVNF_RAM - ( ( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( MRS,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( RMSe * CS ) ),( RMSe * MUC ) ) / RMSe ) - ( CS * MUM ) ) ) / Max( MUM,RMSe ) )", "obj1": 0.268, "obj2": 0.5220592056465275}, {"determining": "Min( ( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( ( Min( MUC ,CS ) - MLU ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.946, "obj2": 0.03559843186816725}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( BR - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM - ( Min( MUM ,MUC ) / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.414, "obj2": 0.3777218870720051}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.428, "obj2": 0.3715389721225143}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.824, "obj2": 0.0956787909484592}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) + FirstVNF_RAM_Server ) ,MRS ) ) ,( Const / RRS ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - ( Min( MUM ,Max( RMSe,Max( ( MUR + ( ( CS - RRSe ) - ( RRSe + CS ) ) ),( ( RCSe - ( MUM - RRSe ) ) - RRSe ) ) ) ) * DS ) )", "obj1": 0.234, "obj2": 0.5358204312330389}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * Min( FirstVNF_Mem_Server ,( CRS + RRS ) ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( DS - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR / Max( MUM,RRSe ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) * DS ) )", "obj1": 0.098, "obj2": 0.6622704892811085}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,( ( RMSe * CS ) / RMSe ) ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.338, "obj2": 0.45525232250200026}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.586, "obj2": 0.27058734915683685}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * ( AMS / BR ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS - ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe + ( ( ( Min( CS ,RCSe ) * ( CS - Max( MUC,( RRSe / RCSe ) ) ) ) / Min( MLU ,( DS + ( MUR / DS ) ) ) ) - CS ) ) / ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( RRSe,DS ) ),DS ) ) )", "obj1": 0.774, "obj2": 0.12981612323448238}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( MDR ,Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( ( MUM * ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) ),DS ) )", "obj1": 0.456, "obj2": 0.362269890512272}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.648, "obj2": 0.2386783534426187}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( ACS * Const ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( DS + ( ( DS - ( ( RCSe - MLU ) * ( MUC * RRSe ) ) ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + ( DS - CS ) ) * DS ) )", "obj1": 0.36, "obj2": 0.44149565189476525}, {"determining": "( ( Min( ( ( PN + FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - ( ARS / BR ) ) * PN ) ) ,FirstVNF_Mem_Server ) * ( PN * FirstVNF_RAM ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( Max( ( ( RCSe + MUR ) / ( RMSe * CS ) ),Min( DS ,RMSe ) ) * MLU ) ) - ( RCSe + RMSe ) )", "obj1": 0.38, "obj2": 0.40919769152915497}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN * FirstVNF_RAM ) ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * ( MRS * FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( MUC * CS ) ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) )", "obj1": 0.25, "obj2": 0.5239132898098965}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,MDR )", "choosing": "( ( Min( ( MUC / RCSe ) ,( Max( MUM,Max( CS,RRSe ) ) - ( MLU + MLU ) ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( RMSe ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.51, "obj2": 0.3189952248463549}, {"determining": "( ( ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ARS ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( RRSe - ( Min( CS ,Min( ( MUC / ( DS + MUC ) ) ,Max( RRSe,Max( RRSe,DS ) ) ) ) * RRSe ) )", "obj1": 0.816, "obj2": 0.1243081107414355}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( MRS,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) / Max( MUM,RMSe ) )", "obj1": 0.204, "obj2": 0.5619480482492613}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( ( Max( MUC,Min( Min( MLU ,( MLU - RCSe ) ) ,DS ) ) / RMSe ) * RMSe ) ) )", "obj1": 0.716, "obj2": 0.18602513456134584}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( DDR + FirstVNF_CPU ) - DDR ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - Max( Max( ( RCSe - ( MUR / DS ) ),( Min( MUC ,CS ) - MLU ) ),DS ) )", "obj1": 0.484, "obj2": 0.33797445619855965}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( MRS - PN ) / ACS ) * Min( Const ,( FirstVNF_CPU - MDR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RMSe,RCSe ) - RRSe ) + MLU ) - Max( ( MUM * ( Min( RMSe ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.734, "obj2": 0.17217627525940155}, {"determining": "Min( ( ( Max( MDR,FirstVNF_Mem_Server ) - BR ) * FirstVNF_RAM_Server ) ,Min( Const ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MLU / MUC ) + ( MUR * MLU ) ) / DS ) * ( MUR - Max( RCSe,MUC ) ) ) - CS ) + ( ( ( MUR * ( MUM - MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RCSe + MUR ) / ( RMSe * CS ) ) )", "obj1": 0.47, "obj2": 0.3523484267921942}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.812, "obj2": 0.1256448367574533}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( PN - MDR ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.99, "obj2": 0.003554896564246488}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.972, "obj2": 0.011997306006879453}], "19": [{"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( CRS / ARS ) / FirstVNF_RAM_Server ) ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * ( Max( DDR,( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) ) / Max( Max( FirstVNF_Mem_Server,( CRS + FirstVNF_Mem_Server ) ),ARS ) ) )", "choosing": "( Min( RRSe ,RCSe ) - ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,Min( ACS ,Max( FirstVNF_Mem_Server,( ( Const * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - ACS ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) * ( ( BR / ( ( ( Max( Min( ARS ,RRS ),FirstVNF_Mem ) - FirstVNF_Mem ) / ( BR * Min( Const ,BR ) ) ) + FirstVNF_CPU_Server ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS - RCSe ) - ( ( ( ( RCSe + Min( ( ( MUM + RRSe ) + RCSe ) ,( ( MUC - RRSe ) + DS ) ) ) * ( RRSe * RMSe ) ) * CS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.716, "obj2": 0.14534368903521294}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * ( AMS / BR ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS - ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe + ( ( ( Min( CS ,RCSe ) * ( CS - Max( MUC,( RRSe / RCSe ) ) ) ) / Min( MLU ,( DS + ( MUR / DS ) ) ) ) - CS ) ) / ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( RRSe,DS ) ),DS ) ) )", "obj1": 0.774, "obj2": 0.12981612323448238}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33203847519951624}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.7, "obj2": 0.1948539231058413}, {"determining": "( Min( ( CRS - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),RRS ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( CS * ( MLU / RRSe ) ) / RMSe ) )", "obj1": 0.884, "obj2": 0.07788585742287722}, {"determining": "Min( Min( DDR ,FirstVNF_RAM ) ,MDR )", "choosing": "( ( Min( ( MUC / RCSe ) ,( Max( MUM,Max( CS,RRSe ) ) - ( MLU + MLU ) ) ) + DS ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( RMSe ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.51, "obj2": 0.3189952248463549}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.448, "obj2": 0.35645322377325706}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "Min( ( ( Max( AMS,BR ) * Min( Max( BR,FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_RAM_Server - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ACS ) ) ) - Const ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM + ( ( ( RRSe * ( MUR / MUR ) ) - Min( Min( CS ,RMSe ) ,( ( RMSe * CS ) / RMSe ) ) ) - MUR ) ) - Max( MUM,RMSe ) )", "obj1": 0.338, "obj2": 0.45525232250200026}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) / Min( ACS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,CS ) / Min( ( ( ( MUC + MLU ) - ( DS + MLU ) ) + RCSe ) ,DS ) )", "obj1": 0.154, "obj2": 0.6166894529660237}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ( ( ( ( MDR + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + ( ( DS - ( MLU + MUM ) ) + ( ( ( ( DS - CS ) + Min( MLU ,MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),MUR ) )", "obj1": 0.61, "obj2": 0.24020793328386797}, {"determining": "Min( ( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( ( Min( MUC ,CS ) - MLU ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.946, "obj2": 0.03559843186816725}, {"determining": "Min( ( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUM * ( ( Min( MUC ,CS ) - MLU ) - MLU ) ),( ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) - ( ( Min( CS ,RRSe ) * ( ( DS * RCSe ) - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) ) )", "obj1": 0.924, "obj2": 0.04878348479268921}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ( ( CRS - AMS ) - ACS ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * ( Max( DDR,( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.902, "obj2": 0.061906159572450305}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * Min( FirstVNF_Mem_Server ,( CRS + RRS ) ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( DS - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR / Max( MUM,RRSe ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) * DS ) )", "obj1": 0.098, "obj2": 0.6622704892811085}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.638, "obj2": 0.22464331261787462}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.656, "obj2": 0.21694925169070678}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.788, "obj2": 0.11451417528117165}, {"determining": "( ( Min( ( ( PN + FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - ( ARS / BR ) ) * PN ) ) ,FirstVNF_Mem_Server ) * ( PN * FirstVNF_RAM ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( Max( ( ( RCSe + MUR ) / ( RMSe * CS ) ),Min( DS ,RMSe ) ) * MLU ) ) - ( RCSe + RMSe ) )", "obj1": 0.38, "obj2": 0.40919769152915497}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) ) * Min( ( FirstVNF_CPU + ARS ) ,( ( BR * FirstVNF_CPU ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( DS,RMSe ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - ( RCSe + Max( ( RRSe + Max( MLU,MUM ) ),MUM ) ) ) - Max( MUM,RMSe ) )", "obj1": 0.138, "obj2": 0.6348606974281746}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( ACS * Const ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( DS + ( ( DS - ( ( RCSe - MLU ) * ( MUC * RRSe ) ) ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + ( DS - CS ) ) * DS ) )", "obj1": 0.36, "obj2": 0.44149565189476525}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) + FirstVNF_RAM_Server ) ,MRS ) ) ,( Const / RRS ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - ( Min( MUM ,Max( RMSe,Max( ( MUR + ( ( CS - RRSe ) - ( RRSe + CS ) ) ),( ( RCSe - ( MUM - RRSe ) ) - RRSe ) ) ) ) * DS ) )", "obj1": 0.234, "obj2": 0.5358204312330389}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.428, "obj2": 0.3715389721225143}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.812, "obj2": 0.1061616560877206}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( ( CRS / ARS ),( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( ( CS * MUM ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.088, "obj2": 0.6775105616775685}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.586, "obj2": 0.27058734915683685}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,( ACS * Const ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.294, "obj2": 0.4890201227746001}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) )", "obj1": 0.966, "obj2": 0.018667509577848157}, {"determining": "( Min( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( MRS,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) / Max( MUM,RMSe ) )", "obj1": 0.204, "obj2": 0.5619480482492613}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( ( PN * FirstVNF_RAM ) * ( ( ( ( Const - MRS ) + MDR ) - FirstVNF_CPU ) * PN ) ) ,FirstVNF_Mem_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( Min( CS ,RRSe ) * ( RMSe + ( ( Max( DS,MUM ) / Min( MLU ,( Max( MUC,MUM ) + DS ) ) ) - CS ) ) ) )", "obj1": 0.318, "obj2": 0.4727430962725759}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Max( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.412, "obj2": 0.39486880258734003}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( DS - CS ) + ( MLU * ( ( RCSe - CS ) / ( RCSe / MUM ) ) ) ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.548, "obj2": 0.2931132743572062}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.052, "obj2": 0.6959782475035344}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN * FirstVNF_RAM ) ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * ( MRS * FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( MUC * CS ) ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) )", "obj1": 0.25, "obj2": 0.5239132898098965}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * MDR ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( CRS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( MLU + RCSe ) * DS ) )", "obj1": 0.192, "obj2": 0.5696806046682701}, {"determining": "Min( ( FirstVNF_CPU_Server / RRS ) ,( Min( Max( AMS,Const ) ,BR ) - RRS ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RCSe - RCSe ) / ( Min( ( MUR / Min( MUR ,MUM ) ) ,DS ) / MUM ) ) * ( Max( ( DS / Min( MUM ,RRSe ) ),Min( ( CS + RRSe ) ,CS ) ) * Min( DS ,Max( MUR,MLU ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * MLU ) )", "obj1": 0.278, "obj2": 0.4964907552761974}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( ( ( ( Const - MDR ) + FirstVNF_Mem ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - ( DS + ( MUR * MUR ) ) ) ) - Max( MUM,CS ) )", "obj1": 0.56, "obj2": 0.2720587526680838}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( BR - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM - ( Min( MUM ,MUC ) / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.414, "obj2": 0.3777218870720051}], "20": [{"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN * ( Min( ( ACS * FirstVNF_Mem_Server ) ,( ( CRS / ARS ) / FirstVNF_RAM_Server ) ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * ( Max( DDR,( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) ) / Max( Max( FirstVNF_Mem_Server,( CRS + FirstVNF_Mem_Server ) ),ARS ) ) )", "choosing": "( Min( RRSe ,RCSe ) - ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.7, "obj2": 0.1948539231058413}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.716, "obj2": 0.14534368903521294}, {"determining": "( Min( ( CRS - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,Min( ACS ,Max( ( ( PN * FirstVNF_RAM ) * Min( ( ( FirstVNF_RAM - FirstVNF_CPU ) + FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ),RRS ) ) ) * ( Max( DDR,FirstVNF_CPU ) / Max( Max( FirstVNF_Mem_Server,ARS ),ARS ) ) )", "choosing": "( ( DS + RCSe ) - ( ( CS * ( MLU / RRSe ) ) / RMSe ) )", "obj1": 0.884, "obj2": 0.07788585742287722}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.314, "obj2": 0.46728496307387274}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + Max( ( DDR - MDR ),MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - ( MUR + Max( DS,CS ) ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.5, "obj2": 0.31637850931507383}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ( ( ( ( MDR + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + ( ( DS - ( MLU + MUM ) ) + ( ( ( ( DS - CS ) + Min( MLU ,MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),MUR ) )", "obj1": 0.61, "obj2": 0.24020793328386797}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( ( MDR * ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.334, "obj2": 0.4417701734811934}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.638, "obj2": 0.22464331261787462}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) )", "obj1": 0.966, "obj2": 0.018667509577848157}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.448, "obj2": 0.35645322377325706}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.812, "obj2": 0.1061616560877206}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.536, "obj2": 0.2824995489964249}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.788, "obj2": 0.11451417528117165}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN * FirstVNF_RAM ) ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * ( MRS * FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( MUC * CS ) ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) )", "obj1": 0.25, "obj2": 0.5239132898098965}, {"determining": "Min( ( ( Const - MDR ) - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( ( Min( ( MUR / Min( MUC ,MUM ) ) ,DS ) / MUM ) / ( RCSe + MUR ) ) * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.728, "obj2": 0.13967888075464702}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( Max( RRS,FirstVNF_RAM_Server ) * Min( MRS ,( ( CRS / MDR ) / FirstVNF_RAM_Server ) ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.138, "obj2": 0.6245277101537219}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( ( ( ( Const - MDR ) + FirstVNF_Mem ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - ( DS + ( MUR * MUR ) ) ) ) - Max( MUM,CS ) )", "obj1": 0.56, "obj2": 0.2720587526680838}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( ( CS * MUM ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.086, "obj2": 0.677179110300803}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) + MRS ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU - ( ( RCSe - RCSe ) / ( MUM / RRSe ) ) ) ) - ( ( ( CS / DS ) + RCSe ) * DS ) )", "obj1": 0.268, "obj2": 0.5093368799268702}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) + FirstVNF_RAM_Server ) ,MRS ) ) ,( Const / RRS ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - ( Min( MUM ,Max( RMSe,Max( ( MUR + ( ( CS - RRSe ) - ( RRSe + CS ) ) ),( ( RCSe - ( MUM - RRSe ) ) - RRSe ) ) ) ) * DS ) )", "obj1": 0.234, "obj2": 0.5358204312330389}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( Min( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) ,( ( Max( Const,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU + FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( Max( RMSe,( MUM - MUM ) ) / MLU ) * RCSe ) )", "obj1": 0.772, "obj2": 0.13631844266524545}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.052, "obj2": 0.6959782475035344}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.066, "obj2": 0.6875487247803793}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.586, "obj2": 0.27058734915683685}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( Min( CS ,RRSe ) / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.994, "obj2": 0.004964590639584305}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( ( ( ( Const - MDR ) + PN ) * Min( Const ,( ( RRS + BR ) - FirstVNF_RAM ) ) ) ,MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * Max( MUR,MUR ) ) * ( RRSe - ( Min( RRSe ,CS ) * RRSe ) ) ) - CS ) + ( ( ( ( ( RRSe * MLU ) * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.468, "obj2": 0.32735747457461284}, {"determining": "Min( ( FirstVNF_CPU_Server / RRS ) ,( Min( Max( AMS,Const ) ,BR ) - RRS ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RCSe - RCSe ) / ( Min( ( MUR / Min( MUR ,MUM ) ) ,DS ) / MUM ) ) * ( Max( ( DS / Min( MUM ,RRSe ) ),Min( ( CS + RRSe ) ,CS ) ) * Min( DS ,Max( MUR,MLU ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * MLU ) )", "obj1": 0.278, "obj2": 0.4964907552761974}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( ACS * Const ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( DS + ( ( DS - ( ( RCSe - MLU ) * ( MUC * RRSe ) ) ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + ( DS - CS ) ) * DS ) )", "obj1": 0.36, "obj2": 0.44149565189476525}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.366, "obj2": 0.42691973714443}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ACS ,( Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) ) * DS ) )", "obj1": 0.1, "obj2": 0.6582062295986}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( BR - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM - ( Min( MUM ,MUC ) / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.414, "obj2": 0.3777218870720051}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) / Min( ACS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,CS ) / Min( ( ( ( MUC + MLU ) - ( DS + MLU ) ) + RCSe ) ,DS ) )", "obj1": 0.154, "obj2": 0.6166894529660237}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.662, "obj2": 0.20893933557923364}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.656, "obj2": 0.21694925169070678}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * ( AMS / BR ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS - ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe + ( ( ( Min( CS ,RCSe ) * ( CS - Max( MUC,( RRSe / RCSe ) ) ) ) / Min( MLU ,( DS + ( MUR / DS ) ) ) ) - CS ) ) / ( DS * Max( Min( Min( Min( CS ,RMSe ) ,( ( Max( RMSe,MUM ) - Max( MUC,CS ) ) + RMSe ) ) ,Max( RRSe,DS ) ),DS ) ) )", "obj1": 0.774, "obj2": 0.12981612323448238}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.834, "obj2": 0.09434489876264283}], "21": [{"determining": "Min( ( ( ( ( ( ( PN * FirstVNF_RAM ) - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.874, "obj2": 0.06297999835222196}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.93, "obj2": 0.03663550385594367}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.448, "obj2": 0.35645322377325706}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.7, "obj2": 0.1931620979045884}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( BR - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM - ( Min( MUM ,MUC ) / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.414, "obj2": 0.3777218870720051}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.716, "obj2": 0.14534368903521294}, {"determining": "Min( ( Const - ( Const - MDR ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.404, "obj2": 0.4015396392828201}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.526, "obj2": 0.3015546245669422}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.3150287270039509}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ACS ,( Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) ) * DS ) )", "obj1": 0.1, "obj2": 0.6582062295986}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) ,( ( Max( Const,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU + FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( ( RMSe + RCSe ),MLU ) ) ) ) + ( ( ( CS * MUM ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.29, "obj2": 0.4868438921098821}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.314, "obj2": 0.46728496307387274}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,Max( ( PN / FirstVNF_RAM ),( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( MDR * DDR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( ( ( Min( MUC ,CS ) - MLU ) * Max( MUR,MUR ) ) * ( MUR - Max( RCSe,( DS * CS ) ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) )", "obj1": 0.37, "obj2": 0.4182662711108812}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) / Min( ACS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,CS ) / Min( ( ( ( MUC + MLU ) - ( DS + MLU ) ) + RCSe ) ,DS ) )", "obj1": 0.154, "obj2": 0.6166894529660237}, {"determining": "Min( ( ( Const - MDR ) - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( ( Min( ( MUR / Min( MUC ,MUM ) ) ,DS ) / MUM ) / ( RCSe + MUR ) ) * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.728, "obj2": 0.13967888075464702}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( Max( RRS,FirstVNF_RAM_Server ) * Min( MRS ,( ( CRS / MDR ) / FirstVNF_RAM_Server ) ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.138, "obj2": 0.6245277101537219}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( ( ( CRS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) + MRS ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU - ( ( RCSe - RCSe ) / ( MUM / RRSe ) ) ) ) - ( ( ( CS / DS ) + RCSe ) * DS ) )", "obj1": 0.268, "obj2": 0.5093368799268702}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "Min( Max( MDR,FirstVNF_CPU ) ,( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( ( ( ( Const - MDR ) + FirstVNF_Mem ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - ( DS + ( MUR * MUR ) ) ) ) - Max( MUM,CS ) )", "obj1": 0.56, "obj2": 0.2720587526680838}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( Max( DDR,FirstVNF_CPU ) ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( ( CS * ( MLU / RRSe ) ) / RMSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.964, "obj2": 0.0245064097140167}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.788, "obj2": 0.11451417528117165}, {"determining": "( Min( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) ,( ( Max( Const,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU + FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( Max( RMSe,( MUM - MUM ) ) / MLU ) * RCSe ) )", "obj1": 0.772, "obj2": 0.13631844266524545}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN * FirstVNF_RAM ) ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * ( MRS * FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( MUC * CS ) ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) )", "obj1": 0.25, "obj2": 0.5239132898098965}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + ( MDR * ( Max( AMS,( FirstVNF_CPU - PN ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.052, "obj2": 0.6959782475035344}, {"determining": "Min( Max( FirstVNF_CPU,DDR ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) / FirstVNF_RAM_Server ) ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS + ( ( MUR + Max( DS,CS ) ) / RRSe ) ) - ( MLU / RMSe ) )", "obj1": 0.586, "obj2": 0.27058734915683685}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.366, "obj2": 0.42691973714443}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.638, "obj2": 0.22464331261787462}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),FirstVNF_Mem_Server ) ,( ( ( ( ( MDR + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),( FirstVNF_Mem - BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + ( ( DS - ( MLU + MUM ) ) + ( ( ( ( DS - CS ) + Min( MLU ,MLU ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - Max( ( MUM * ( Min( MUC ,CS ) - MLU ) ),MUR ) )", "obj1": 0.61, "obj2": 0.24020793328386797}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( ( MDR * ( ( FirstVNF_CPU * FirstVNF_RAM ) * FirstVNF_Mem ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.32, "obj2": 0.4550170442096008}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( Min( ( ( MDR - Const ) + ( PN + RRS ) ) ,( ARS * DDR ) ) * PN ) ) ) * ( PN * FirstVNF_RAM ) ) * ( FirstVNF_CPU + ( MDR + ( FirstVNF_RAM_Server - ( ARS + ACS ) ) ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( ( DS + ( MLU * MUC ) ) + ( MLU - ( CS - ( MUM * MUC ) ) ) ) ) ) ) - Max( MUM,( ( CS - ( MUM + ( MUR / MUC ) ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.342, "obj2": 0.441156393906845}, {"determining": "Min( ( FirstVNF_CPU_Server / RRS ) ,( Min( Max( AMS,Const ) ,BR ) - RRS ) )", "choosing": "( ( ( DS - CS ) + ( ( ( RCSe - RCSe ) / ( Min( ( MUR / Min( MUR ,MUM ) ) ,DS ) / MUM ) ) * ( Max( ( DS / Min( MUM ,RRSe ) ),Min( ( CS + RRSe ) ,CS ) ) * Min( DS ,Max( MUR,MLU ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * MLU ) )", "obj1": 0.278, "obj2": 0.4964907552761974}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.812, "obj2": 0.1061616560877206}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( Min( CS ,RMSe ) + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.626, "obj2": 0.23644881078480565}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe + RCSe ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.984, "obj2": 0.005435263220171387}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.662, "obj2": 0.20893933557923364}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( DS - CS ) + ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - Min( RMSe ,DS ) ) * MLU ) ) + DS ) - Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) )", "obj1": 0.966, "obj2": 0.018667509577848157}], "22": [{"determining": "( ( ( ( ARS + ACS ) - FirstVNF_RAM_Server ) + MDR ) * Min( ( PN * Min( ( Min( ( PN / MRS ) ,ACS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,( DS + MUM ) ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUM - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( CS / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + MLU ) ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ( PN * FirstVNF_RAM ) - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( ( ( MLU + MUC ) - ( DS + DS ) ) ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.93, "obj2": 0.03663550385594367}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.448, "obj2": 0.35645322377325706}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.7, "obj2": 0.1931620979045884}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.788, "obj2": 0.11451417528117165}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.716, "obj2": 0.14534368903521294}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.74, "obj2": 0.13183506853143653}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.876, "obj2": 0.06248827932545187}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.3150287270039509}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( BR - MDR ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM - ( Min( MUM ,MUC ) / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.414, "obj2": 0.3777218870720051}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.874, "obj2": 0.06297999835222196}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( Const,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( Max( MRS,Min( DDR ,FirstVNF_RAM ) ) + MDR ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,( ( Min( RMSe ,DS ) - MUM ) - Max( CS,MUR ) ) ) / ( ( ( Max( ( MUM + ( MUR + MUR ) ),MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.536, "obj2": 0.29192062428415394}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.286, "obj2": 0.4710131995171887}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.276, "obj2": 0.4926388811903052}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) / Min( ACS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,CS ) / Min( ( ( ( MUC + MLU ) - ( DS + MLU ) ) + RCSe ) ,DS ) )", "obj1": 0.154, "obj2": 0.6166894529660237}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( CS + RRSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.052, "obj2": 0.6954667846916229}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( Max( RRS,FirstVNF_RAM_Server ) * Min( MRS ,( ( CRS / MDR ) / FirstVNF_RAM_Server ) ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.138, "obj2": 0.6245277101537219}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.638, "obj2": 0.22464331261787462}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - ( MUM / RMSe ) ) - ( ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) * ( RRSe - ( ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.682, "obj2": 0.20250023987843385}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.366, "obj2": 0.42691973714443}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / Max( Const,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( Max( DDR,FirstVNF_CPU ) ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.958, "obj2": 0.029270790039994034}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.812, "obj2": 0.1061616560877206}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( Min( ( ( MDR - Const ) + ( PN + RRS ) ) ,( ARS * DDR ) ) * PN ) ) ) * ( PN * FirstVNF_RAM ) ) * ( FirstVNF_CPU + ( MDR + ( FirstVNF_RAM_Server - ( ARS + ACS ) ) ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( ( DS + ( MLU * MUC ) ) + ( MLU - ( CS - ( MUM * MUC ) ) ) ) ) ) ) - Max( MUM,( ( CS - ( MUM + ( MUR / MUC ) ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.342, "obj2": 0.441156393906845}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) + RCSe ) * DS ) )", "obj1": 0.388, "obj2": 0.40458100487573195}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.314, "obj2": 0.46728496307387274}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( FirstVNF_CPU_Server / RRS ) ,( Min( Max( AMS,Const ) ,BR ) - RRS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.072, "obj2": 0.6851343819786878}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.662, "obj2": 0.20893933557923364}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUR + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.52, "obj2": 0.30450389787764603}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,Max( ( PN / FirstVNF_RAM ),( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( MDR * DDR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( ( ( Min( MUC ,CS ) - MLU ) * Max( MUR,MUR ) ) * ( MUR - Max( RCSe,( DS * CS ) ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) )", "obj1": 0.37, "obj2": 0.4182662711108812}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.612, "obj2": 0.23604448618375432}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + MDR ) * FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( MLU,MUM ) - ( RMSe * RCSe ) )", "obj1": 0.266, "obj2": 0.508983660287441}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.594, "obj2": 0.253269379046629}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.582, "obj2": 0.2612927171058075}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.652, "obj2": 0.22071196093747644}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN + FirstVNF_Mem_Server ) ,( Min( ( MRS / ( CRS / ARS ) ) ,MRS ) + Const ) ) )", "choosing": "( ( ( ( ( DS - MUC ) + ( MLU * MLU ) ) - ( ( MUR - Max( RCSe,MLU ) ) * ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * Min( RRSe ,RRSe ) ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) ) * DS ) )", "obj1": 0.096, "obj2": 0.6637935821939328}, {"determining": "Min( ( ( Const - MDR ) - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( ( Min( ( MUR / Min( MUC ,MUM ) ) ,DS ) / MUM ) / ( RCSe + MUR ) ) * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.728, "obj2": 0.13967888075464702}, {"determining": "Min( ( Const - ( Const - MDR ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.412, "obj2": 0.38997328621586613}], "23": [{"determining": "( ( ( FirstVNF_RAM_Server - ( ( ACS + ( MDR + MRS ) ) + ACS ) ) + MDR ) * Min( ( PN * Max( ( ( CRS / ARS ) / FirstVNF_RAM_Server ),MRS ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR * MUC ) + ( ( Max( ( RMSe * MUC ),( MUR / ( MLU - CS ) ) ) / Min( ( ( CS + ( CS / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + MLU ) ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + ACS ) - FirstVNF_RAM_Server ) + MDR ) * Min( ( PN * Min( ( Min( ( PN / MRS ) ,ACS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,( DS + MUM ) ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUM - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( CS / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + MLU ) ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.716, "obj2": 0.14534368903521294}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.74, "obj2": 0.13183506853143653}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( Const,( FirstVNF_CPU - FirstVNF_RAM ) ) * ( Max( MRS,Min( DDR ,FirstVNF_RAM ) ) + MDR ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,( ( Min( RMSe ,DS ) - MUM ) - Max( CS,MUR ) ) ) / ( ( ( Max( ( MUM + ( MUR + MUR ) ),MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.536, "obj2": 0.29192062428415394}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.7, "obj2": 0.1931620979045884}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.788, "obj2": 0.11451417528117165}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( ( Const - FirstVNF_RAM ) - DDR ) ,Max( MRS,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.968, "obj2": 0.01648369949838127}, {"determining": "Min( ( Const / FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( FirstVNF_CPU_Server ,( RRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( Min( MUC ,MUR ) / ( RCSe / ( RCSe + ( Min( Max( MUM,DS ) ,RRSe ) + RRSe ) ) ) ) ) - ( ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) / RMSe ) )", "obj1": 0.902, "obj2": 0.045780137800774764}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.286, "obj2": 0.4710131995171887}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) / Min( ACS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,CS ) / Min( ( ( ( MUC + MLU ) - ( DS + MLU ) ) + RCSe ) ,DS ) )", "obj1": 0.154, "obj2": 0.6166894529660237}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.612, "obj2": 0.23604448618375432}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - RRSe ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.812, "obj2": 0.1061616560877206}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.276, "obj2": 0.4926388811903052}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + MDR ) * FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( MLU,MUM ) - ( RMSe * RCSe ) )", "obj1": 0.266, "obj2": 0.508983660287441}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( Min( ( ( MDR - Const ) + ( PN + RRS ) ) ,( ARS * DDR ) ) * PN ) ) ) * ( PN * FirstVNF_RAM ) ) * ( FirstVNF_CPU + ( MDR + ( FirstVNF_RAM_Server - ( ARS + ACS ) ) ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( ( DS + ( MLU * MUC ) ) + ( MLU - ( CS - ( MUM * MUC ) ) ) ) ) ) ) - Max( MUM,( ( CS - ( MUM + ( MUR / MUC ) ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.342, "obj2": 0.441156393906845}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( CS + RRSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.052, "obj2": 0.6954667846916229}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.868, "obj2": 0.06841689597260524}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.842, "obj2": 0.09143545782169635}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.508, "obj2": 0.30127633385353936}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.638, "obj2": 0.22180130914240057}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) ) + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.942, "obj2": 0.02083523440157434}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.366, "obj2": 0.42691973714443}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.3150287270039509}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.31, "obj2": 0.4623347616167055}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( MRS - AMS ) ) ) / Min( ACS ,( ACS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - ( RMSe - ( MUM - ( RRSe / MUM ) ) ) ) - Max( MUM,( ( ( MUM - ( Min( MUM ,MUC ) / MUC ) ) - CS ) - Max( DS,RRSe ) ) ) )", "obj1": 0.25, "obj2": 0.5249248076028309}, {"determining": "Min( ( ( MDR - Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) + MDR ) ,( ( Min( Const ,( FirstVNF_CPU - ( RRS - ARS ) ) ) * Max( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( ( RCSe - RMSe ) / ( ( ( ( RRSe / MUM ) / ( DS - MUC ) ) + ( MUR + DS ) ) / MUM ) ) ) + ( ( MUM / Max( ( MUR / ( MLU * MLU ) ),( CS - ( MUC * MLU ) ) ) ) - CS ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.996, "obj2": 0.0030625316803916604}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN + FirstVNF_Mem_Server ) ,( Min( ( MRS / ( CRS / ARS ) ) ,MRS ) + Const ) ) )", "choosing": "( ( ( ( ( DS - MUC ) + ( MLU * MLU ) ) - ( ( MUR - Max( RCSe,MLU ) ) * ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * Min( RRSe ,RRSe ) ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) ) * DS ) )", "obj1": 0.096, "obj2": 0.6637935821939328}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + MDR ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( RMSe + RCSe ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + MLU ) ) + RCSe ) * DS ) )", "obj1": 0.114, "obj2": 0.6604457219999548}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,Max( ( PN / FirstVNF_RAM ),( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( MDR * DDR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( ( ( Min( MUC ,CS ) - MLU ) * Max( MUR,MUR ) ) * ( MUR - Max( RCSe,( DS * CS ) ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( RCSe + MUR ) ) - Min( CS ,RMSe ) ) * MLU ) ) ) )", "obj1": 0.37, "obj2": 0.4182662711108812}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( Const - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.458, "obj2": 0.34997498429376656}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) + RCSe ) * DS ) )", "obj1": 0.388, "obj2": 0.40458100487573195}, {"determining": "Min( Max( Max( FirstVNF_CPU_Server,ACS ),Const ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.838, "obj2": 0.09348612963149595}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / ( CRS / MDR ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( CS / ( RCSe + MUR ) ) )", "obj1": 0.88, "obj2": 0.059720580101298}, {"determining": "Min( ( Const - ( Const - MDR ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.412, "obj2": 0.38997328621586613}, {"determining": "Min( Max( ( ( CRS - PN ) * Max( Const,Const ) ),Max( BR,( FirstVNF_RAM_Server * Min( ( ARS + FirstVNF_Mem ) ,MDR ) ) ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) - CS ) + ( MLU * MLU ) ) + ( ( Min( CS ,RRSe ) * ( MUR - ( MLU / MUM ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.43, "obj2": 0.3714849363968848}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( DS / ( RCSe + MUR ) ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.392, "obj2": 0.3971337177315166}], "24": [{"determining": "Min( ( ( ( MDR + ( MDR - Const ) ) - FirstVNF_CPU ) * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) ) + ( ( ( ( Max( ( DS - CS ),Max( RMSe,MLU ) ) + Max( MUM,DS ) ) - MUC ) - Max( RCSe,( DS * CS ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( ACS + ( MDR + MRS ) ) + ACS ) ) + MDR ) * Min( ( PN * Max( ( ( CRS / ARS ) / FirstVNF_RAM_Server ),MRS ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR * MUC ) + ( ( Max( ( RMSe * MUC ),( MUR / ( MLU - CS ) ) ) / Min( ( ( CS + ( CS / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + MLU ) ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( Max( ( ( CRS - PN ) * Max( Const,Const ) ),Max( BR,( FirstVNF_RAM_Server * Min( ( ARS + FirstVNF_Mem ) ,MDR ) ) ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) - CS ) + ( MLU * MLU ) ) + ( ( Min( CS ,RRSe ) * ( MUR - ( MLU / MUM ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.43, "obj2": 0.3714849363968848}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.638, "obj2": 0.22180130914240057}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( MRS + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - ( RCSe / RCSe ) )", "obj1": 0.69, "obj2": 0.218595043196276}, {"determining": "Min( ( Const / FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( FirstVNF_CPU_Server ,( RRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( Min( MUC ,MUR ) / ( RCSe / ( RCSe + ( Min( Max( MUM,DS ) ,RRSe ) + RRSe ) ) ) ) ) - ( ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) / RMSe ) )", "obj1": 0.902, "obj2": 0.045780137800774764}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.788, "obj2": 0.11451417528117165}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.612, "obj2": 0.23604448618375432}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.3150287270039509}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) ) + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.942, "obj2": 0.02083523440157434}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( ( FirstVNF_CPU - FirstVNF_RAM ) + MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + RMSe ) ) / MUM ) ) ) ) - ( DS / ( RCSe + MUR ) ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.4, "obj2": 0.38967614289360275}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.138, "obj2": 0.6117234120936867}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.276, "obj2": 0.4926388811903052}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( Const - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.458, "obj2": 0.34997498429376656}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( Min( ( ( MDR - Const ) + ( PN + RRS ) ) ,( ARS * DDR ) ) * PN ) ) ) * ( PN * FirstVNF_RAM ) ) * ( FirstVNF_CPU + ( MDR + ( FirstVNF_RAM_Server - ( ARS + ACS ) ) ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( ( DS + ( MLU * MUC ) ) + ( MLU - ( CS - ( MUM * MUC ) ) ) ) ) ) ) - Max( MUM,( ( CS - ( MUM + ( MUR / MUC ) ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.342, "obj2": 0.441156393906845}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + MDR ) * FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( MLU,MUM ) - ( RMSe * RCSe ) )", "obj1": 0.266, "obj2": 0.508983660287441}, {"determining": "Min( ( ( Const - MDR ) - FirstVNF_CPU ) ,( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server * Max( ( ( ACS * CRS ) * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),RRS ) ) ) )", "choosing": "( ( MUC - ( RMSe + MUC ) ) - Max( MUM,( ( CS - ( MUM + ( MUR / MUC ) ) ) - Max( MUR,DS ) ) ) )", "obj1": 0.714, "obj2": 0.17190707966400517}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.716, "obj2": 0.14534368903521294}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * CS ) / RMSe ) )", "obj1": 0.842, "obj2": 0.09143545782169635}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.868, "obj2": 0.0676740278751195}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) ) ) ) * ( FirstVNF_CPU + ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.366, "obj2": 0.42691973714443}, {"determining": "( ( ( Const - AMS ) + MDR ) * Min( ( PN * ( ARS - CRS ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) + RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + MLU ) ) + RCSe ) * DS ) )", "obj1": 0.126, "obj2": 0.6381101663582417}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.508, "obj2": 0.30127633385353936}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.056, "obj2": 0.6947661175926899}, {"determining": "( Max( MRS,FirstVNF_CPU ) * ( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( MRS - AMS ) ) ) / Min( ACS ,( ACS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM - ( RMSe - ( MUM - ( RRSe / MUM ) ) ) ) - Max( MUM,( ( ( MUM - ( Min( MUM ,MUC ) / MUC ) ) - CS ) - Max( DS,RRSe ) ) ) )", "obj1": 0.25, "obj2": 0.5249248076028309}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN + FirstVNF_Mem_Server ) ,( Min( ( MRS / ( CRS / ARS ) ) ,MRS ) + Const ) ) )", "choosing": "( ( ( ( ( DS - MUC ) + ( MLU * MLU ) ) - ( ( MUR - Max( RCSe,MLU ) ) * ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * Min( RRSe ,RRSe ) ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) ) * DS ) )", "obj1": 0.096, "obj2": 0.6637935821939328}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( MRS - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.7, "obj2": 0.1931620979045884}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ) ) * Min( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RMSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.156, "obj2": 0.6073603653002898}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( DS / ( RCSe + MUR ) ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.538, "obj2": 0.28149863693346505}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + MDR ) * Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( RMSe + RCSe ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + MLU ) ) + RCSe ) * DS ) )", "obj1": 0.114, "obj2": 0.6604457219999548}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.286, "obj2": 0.4710131995171887}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * MRS ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - ( MUR / ( MLU * CS ) ) ) ) )", "obj1": 0.228, "obj2": 0.5330013318005099}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.31, "obj2": 0.4623347616167055}, {"determining": "Min( ( ( Const - MDR ) - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),PN ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( MUC ,CS ) - MLU ) * MUR ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.734, "obj2": 0.13785644543884276}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.704, "obj2": 0.18816019147099586}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.524, "obj2": 0.2961649936841293}], "25": [{"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + ( MDR - Const ) ) - FirstVNF_CPU ) * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) ) + ( ( ( ( Max( ( DS - CS ),Max( RMSe,MLU ) ) + Max( MUM,DS ) ) - MUC ) - Max( RCSe,( DS * CS ) ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.788, "obj2": 0.11451417528117165}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( MDR - Const ) + MDR ) - FirstVNF_CPU ) * PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( DS / ( Max( DS,( RRSe / MUR ) ) + MUR ) ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.682, "obj2": 0.19994317879205203}, {"determining": "( ( ( PN * ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * MRS ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) )", "obj1": 0.838, "obj2": 0.08495545676368407}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.638, "obj2": 0.22180130914240057}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.056, "obj2": 0.6947661175926899}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * Min( Min( CS ,RMSe ) ,( RRSe + MUR ) ) ) / RMSe ) )", "obj1": 0.82, "obj2": 0.10350282052320207}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.3150287270039509}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "Min( Max( ( ( CRS - PN ) * Max( Const,Const ) ),Max( BR,( FirstVNF_RAM_Server * Min( ( ARS + FirstVNF_Mem ) ,MDR ) ) ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) - CS ) + ( MLU * MLU ) ) + ( ( Min( CS ,RRSe ) * ( MUR - ( MLU / MUM ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.43, "obj2": 0.3714849363968848}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.286, "obj2": 0.4710131995171887}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.924, "obj2": 0.03517059175492746}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.276, "obj2": 0.4926388811903052}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( ( MDR * ( FirstVNF_CPU * FirstVNF_Mem ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe + RCSe ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RMSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) * DS ) )", "obj1": 0.336, "obj2": 0.4405481851854589}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + MDR ) * FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( MLU,MUM ) - ( RMSe * RCSe ) )", "obj1": 0.266, "obj2": 0.508983660287441}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.508, "obj2": 0.30127633385353936}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.868, "obj2": 0.0676740278751195}, {"determining": "Min( ( ( Const - MDR ) - FirstVNF_CPU ) ,( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server * Max( ( ( ACS * CRS ) * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),RRS ) ) ) )", "choosing": "( ( MUC - ( RMSe + MUC ) ) - Max( MUM,( ( CS - ( MUM + ( MUR / MUC ) ) ) - Max( MUR,DS ) ) ) )", "obj1": 0.714, "obj2": 0.17190707966400517}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 0.716, "obj2": 0.14534368903521294}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN + FirstVNF_Mem_Server ) ,( Min( ( MRS / ( CRS / ARS ) ) ,MRS ) + Const ) ) )", "choosing": "( ( ( ( ( DS - MUC ) + ( MLU * MLU ) ) - ( ( MUR - Max( RCSe,MLU ) ) * ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * Min( RRSe ,RRSe ) ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) ) * DS ) )", "obj1": 0.096, "obj2": 0.6637935821939328}, {"determining": "Min( ( Const / FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( FirstVNF_CPU_Server ,( RRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( Min( MUC ,MUR ) / ( RCSe / ( RCSe + ( Min( Max( MUM,DS ) ,RRSe ) + RRSe ) ) ) ) ) - ( ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) / RMSe ) )", "obj1": 0.902, "obj2": 0.045780137800774764}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "Min( ( Max( ( Const - RRS ),( ( ( ( ( FirstVNF_CPU * Const ) * ( ACS - FirstVNF_RAM_Server ) ) * MDR ) - ( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,ACS )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( ( Min( CS ,MUM ) + ( RRSe / ( RCSe * CS ) ) ) + ( RCSe / MUC ) ) - CS ) - ( DS - MUR ) ) ) )", "obj1": 0.376, "obj2": 0.40693619479531723}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( DS / ( RCSe + MUR ) ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.538, "obj2": 0.28149863693346505}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.124, "obj2": 0.6236114660684212}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.31, "obj2": 0.4623347616167055}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.162, "obj2": 0.5902233412384704}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.524, "obj2": 0.28750388104045566}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.962, "obj2": 0.013717189648761906}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.138, "obj2": 0.6117234120936867}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( Const - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + MUR ) ) )", "obj1": 0.458, "obj2": 0.34997498429376656}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) * Min( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ) ) * Min( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RMSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.156, "obj2": 0.6073603653002898}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( CS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6431876044673976}, {"determining": "Min( ( ( Const - MDR ) - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ),PN ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( MUC ,CS ) - MLU ) * MUR ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.734, "obj2": 0.13785644543884276}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( ( MDR * ( ( FirstVNF_CPU * Const ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( Min( CS ,RMSe ) * MLU ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.364, "obj2": 0.42747497403934354}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MLU - CS ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( MUM,CS ) )", "obj1": 0.612, "obj2": 0.23604448618375432}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.704, "obj2": 0.18816019147099586}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5755206853878018}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.624, "obj2": 0.22725846657607177}], "26": [{"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.962, "obj2": 0.013717189648761906}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - Max( DS,( RRSe / MUR ) ) )", "obj1": 0.658, "obj2": 0.19981865264681042}, {"determining": "Min( ( Max( ( Const - RRS ),( ( ( ( ( FirstVNF_CPU * Const ) * ( ACS - FirstVNF_RAM_Server ) ) * MDR ) - ( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,ACS )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( ( Min( CS ,MUM ) + ( RRSe / ( RCSe * CS ) ) ) + ( RCSe / MUC ) ) - CS ) - ( DS - MUR ) ) ) )", "obj1": 0.376, "obj2": 0.40693619479531723}, {"determining": "( Min( ( Max( MDR,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU / BR ) - FirstVNF_Mem ) ) ) ,( AMS * MDR ) ) + Max( MRS,( Const + MRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RMSe ) - ( RRSe * ( Min( RRSe ,MUM ) / MUC ) ) ) * ( ( MLU / RMSe ) - Min( ( ( MUR + DS ) + ( RMSe + MUM ) ) ,Max( MUM,MLU ) ) ) ),DS ) / RCSe ) - ( MUM - RMSe ) )", "obj1": 0.216, "obj2": 0.5452553133880998}, {"determining": "Min( ( Const / FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( FirstVNF_CPU_Server ,( RRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( Min( MUC ,MUR ) / ( RCSe / ( RCSe + ( Min( Max( MUM,DS ) ,RRSe ) + RRSe ) ) ) ) ) - ( ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) / RMSe ) )", "obj1": 0.902, "obj2": 0.045780137800774764}, {"determining": "( Min( ( PN * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ) * ( Max( ( BR - Min( FirstVNF_RAM ,FirstVNF_RAM ) ),( Min( Min( RRS ,CRS ) ,( BR + ARS ) ) + ( MDR + MRS ) ) ) + ACS ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.05, "obj2": 0.7206658556215324}, {"determining": "Min( ( Const - ( ( ARS * CRS ) * ( ( ( ( ARS / CRS ) + Max( FirstVNF_Mem_Server,ACS ) ) - BR ) + DDR ) ) ) ,( FirstVNF_RAM_Server / ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * CS ) + ( MLU * ( RMSe - ( MUM / RCSe ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "Min( Max( ( ( CRS - PN ) * Max( Const,Const ) ),Max( BR,( FirstVNF_RAM_Server * Min( ( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) ,MDR ) ) ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + Min( DS ,RMSe ) ) ) - CS ) + ( MLU * MLU ) ) + ( ( Min( CS ,RRSe ) * ( MUR - ( MLU / MUM ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.26, "obj2": 0.5409220111832903}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.924, "obj2": 0.03517059175492746}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.286, "obj2": 0.4710131995171887}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.638, "obj2": 0.22180130914240057}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.276, "obj2": 0.4926388811903052}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.704, "obj2": 0.18816019147099586}, {"determining": "Min( Max( ( ( CRS - PN ) * Max( Const,Const ) ),Max( BR,( FirstVNF_RAM_Server * Min( ( ARS + FirstVNF_Mem ) ,MDR ) ) ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) - CS ) + ( MLU * MLU ) ) + ( ( Min( CS ,RRSe ) * ( MUR - ( MLU / MUM ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.43, "obj2": 0.3714849363968848}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,ARS )", "choosing": "( ( ( ( ( RCSe - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.416, "obj2": 0.3957626769314188}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.056, "obj2": 0.6947661175926899}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN + FirstVNF_Mem_Server ) ,( Min( ( MRS / ( CRS / ARS ) ) ,MRS ) + Const ) ) )", "choosing": "( ( ( ( ( DS - MUC ) + ( MLU * MLU ) ) - ( ( MUR - Max( RCSe,MLU ) ) * ( ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * Min( RRSe ,RRSe ) ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / CS ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + ( Max( DS,MUM ) / Min( MLU ,( DS + ( MUR + MUR ) ) ) ) ) * DS ) )", "obj1": 0.096, "obj2": 0.6637935821939328}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.872, "obj2": 0.06676894172502705}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RRSe ) )", "obj1": 0.612, "obj2": 0.23172777770760716}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.3150287270039509}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.31, "obj2": 0.4623347616167055}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "Min( ( FirstVNF_CPU - ( Const - MDR ) ) ,( FirstVNF_RAM_Server * ( Max( ( Const * Min( ( ARS - FirstVNF_CPU ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - FirstVNF_RAM ) ) ),PN ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( Max( ( RMSe * CS ),( MLU + MUC ) ) - Min( DS ,( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) * MLU ) ) + DS ) - ( ( MUC / ( ( ( CS * MLU ) / MUR ) + CS ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.772, "obj2": 0.1152263835807698}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.124, "obj2": 0.6236114660684212}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + PN ) + ( MDR - Const ) ) - FirstVNF_CPU ) * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) / RMSe ) - Max( MUM,CS ) )", "obj1": 0.994, "obj2": 0.0034808227612658236}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,( Const - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) ) ) )", "obj1": 0.456, "obj2": 0.3508744001727586}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / MDR ) ) + FirstVNF_Mem ) + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,MDR ) )", "choosing": "( Min( RMSe ,RCSe ) / ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) )", "obj1": 0.048, "obj2": 0.7529533820346985}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - FirstVNF_RAM ) ) ) + ARS ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + Max( RMSe,MUM ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM / MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.848, "obj2": 0.0759310098034839}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( CS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6431876044673976}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + MDR ) * FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( MLU,MUM ) - ( RMSe * RCSe ) )", "obj1": 0.266, "obj2": 0.508983660287441}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.362, "obj2": 0.4236943289351754}, {"determining": "( Min( ( ( CRS + Min( ( AMS * DDR ) ,PN ) ) + ( MDR * ( ( AMS - ( ( PN + FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ,ACS ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + CS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * RCSe ) )", "obj1": 0.074, "obj2": 0.6899379054943064}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.326, "obj2": 0.4568361441831049}, {"determining": "( Min( ( PN * Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / FirstVNF_Mem ) / FirstVNF_RAM_Server ) ,ACS ) ) ,( Min( ( ( BR / FirstVNF_CPU ) * ( FirstVNF_Mem_Server - PN ) ) ,ARS ) + PN ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MLU - Max( ( MUM + CS ),MUC ) ) ) * Min( MUR ,( DS + CS ) ) ) ) + ( ( CS * MUM ) - ( ( ( MUR / ( MLU * ( RCSe * MUR ) ) ) + ( RMSe * MUC ) ) / RMSe ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * Max( ( ( DS * RMSe ) * MUM ),DS ) ) )", "obj1": 0.12, "obj2": 0.6424671165240607}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.262, "obj2": 0.5208462858511004}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.138, "obj2": 0.6117234120936867}, {"determining": "( ( ( PN * ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) ) * Min( FirstVNF_Mem_Server ,( ( PN / FirstVNF_RAM ) * MRS ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( ( MUM - CS ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) )", "obj1": 0.838, "obj2": 0.08495545676368407}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5755206853878018}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.524, "obj2": 0.28750388104045566}, {"determining": "Min( ( ( FirstVNF_Mem_Server * Max( Min( ( BR - ( ARS - MRS ) ) ,FirstVNF_RAM ),BR ) ) - FirstVNF_CPU ) ,Const )", "choosing": "( ( ( ( ( ( ( RMSe + RCSe ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) + ( ( ( ( ( MUC + CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe / ( Min( MUR ,RRSe ) * RRSe ) ) ) - CS ) ) + ( DS - CS ) ) - ( ( ( MUR - ( ( DS - MLU ) * ( MUC / Min( RMSe ,Max( MUM,MLU ) ) ) ) ) - Max( Min( Min( MUM ,Max( ( MUC + RRSe ),DS ) ) ,Max( MUR,RCSe ) ),RCSe ) ) * RRSe ) )", "obj1": 0.358, "obj2": 0.4316173629025592}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.83, "obj2": 0.09740620686655747}], "27": [{"determining": "Min( ( ( ( Max( ACS,ARS ) - DDR ) + AMS ) - FirstVNF_CPU ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + ( ( MUM / RMSe ) / RRSe ) ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( MLU / ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( MRS * Min( ( ARS - FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ,( ( Const - Min( FirstVNF_Mem_Server ,( Max( ( Max( BR,MRS ) * FirstVNF_CPU_Server ),( ( PN + MDR ) - DDR ) ) / MRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( RMSe * Min( ( MLU / ( RRSe + CS ) ) ,Min( ( ( RMSe + MLU ) + Max( RRSe,RMSe ) ) ,RRSe ) ) ) + CS ) / ( ( ( ( Max( CS,DS ) * RCSe ) * RRSe ) * RCSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "Min( ( FirstVNF_CPU - ( Const - MDR ) ) ,( FirstVNF_RAM_Server * ( Max( ( Const * Min( ( ARS - FirstVNF_CPU ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - FirstVNF_RAM ) ) ),PN ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( Max( ( RMSe * CS ),( MLU + MUC ) ) - Min( DS ,( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) * MLU ) ) + DS ) - ( ( MUC / ( ( ( CS * MLU ) / MUR ) + CS ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.772, "obj2": 0.1152263835807698}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.924, "obj2": 0.03517059175492746}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - Max( DS,( RRSe / MUR ) ) )", "obj1": 0.658, "obj2": 0.19981865264681042}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.962, "obj2": 0.013717189648761906}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.046, "obj2": 0.6977264801071824}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN * Min( ( FirstVNF_Mem - FirstVNF_CPU ) ,( Const - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + ( ( ( MUM + RRSe ) + MUC ) - ( DS + DS ) ) ) ) )", "obj1": 0.456, "obj2": 0.3508744001727586}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.636, "obj2": 0.21404981964213238}, {"determining": "Min( Max( ( ( CRS - PN ) * Max( Const,Const ) ),Max( BR,( FirstVNF_RAM_Server * Min( ( ARS + FirstVNF_Mem ) ,MDR ) ) ) ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( FirstVNF_CPU - FirstVNF_RAM ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) - CS ) + ( MLU * MLU ) ) + ( ( Min( CS ,RRSe ) * ( MUR - ( MLU / MUM ) ) ) * ( Max( RCSe,MLU ) - CS ) ) ) + RMSe ) / ( ( ( ( ( MUM + RRSe ) + MUC ) - ( ( DS - CS ) + DS ) ) + RCSe ) * ( RRSe * RMSe ) ) )", "obj1": 0.43, "obj2": 0.3714849363968848}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( RMSe - MUR ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.816, "obj2": 0.10207983554925427}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + FirstVNF_CPU ) / FirstVNF_Mem ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( ( ( MUC * MUM ) + Max( ( RCSe + CS ),DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) * DS ) )", "obj1": 0.74, "obj2": 0.17262689913356707}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.414, "obj2": 0.3822194607500293}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RCSe - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.518, "obj2": 0.29769395054417563}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.3150287270039509}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.158, "obj2": 0.5998844519649672}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.702, "obj2": 0.18937199880521333}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.31, "obj2": 0.4623347616167055}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.54, "obj2": 0.28096949503235596}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.286, "obj2": 0.4710131995171887}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.872, "obj2": 0.06676894172502705}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU ,ARS ) ) ) / PN ) - AMS ) ,( CRS + DDR ) )", "choosing": "( ( RCSe + MUC ) - ( ( Min( MUC ,MUM ) - MUM ) * MUM ) )", "obj1": 0.898, "obj2": 0.04877907181531596}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RRSe ) )", "obj1": 0.612, "obj2": 0.23172777770760716}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - FirstVNF_RAM ) ) ) + ARS ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + Max( RMSe,MUM ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM / MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.848, "obj2": 0.0759310098034839}, {"determining": "Min( ( Const - ( ( ARS * CRS ) * ( ( ( ( ARS / CRS ) + Max( FirstVNF_Mem_Server,ACS ) ) - BR ) + DDR ) ) ) ,( FirstVNF_RAM_Server / ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * CS ) + ( MLU * ( RMSe - ( MUM / RCSe ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.326, "obj2": 0.4568361441831049}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + MDR ) * FirstVNF_RAM ) * ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( MLU,MUM ) - ( RMSe * RCSe ) )", "obj1": 0.266, "obj2": 0.508983660287441}, {"determining": "( Min( ( ( CRS + Min( ( AMS * DDR ) ,PN ) ) + ( MDR * ( ( AMS - ( ( PN + FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ,ACS ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + CS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * RCSe ) )", "obj1": 0.074, "obj2": 0.6899379054943064}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( ( Const - FirstVNF_CPU ) ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( Max( MUR,MLU ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + DS ) ) + RCSe ) * DS ) )", "obj1": 0.396, "obj2": 0.39772967797734377}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - ( MLU + MUC ) )", "obj1": 0.486, "obj2": 0.323771197908642}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.276, "obj2": 0.4926388811903052}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.19, "obj2": 0.5755206853878018}, {"determining": "Min( ( Const - ( ( MRS / ( FirstVNF_RAM * AMS ) ) * FirstVNF_CPU ) ) ,( ( ( ( ( Max( PN,( FirstVNF_Mem / PN ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / ARS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( Min( DS ,Max( RCSe,DS ) ) / MLU ) ) ) ) + ( ( Max( ( MUR * ( MLU * DS ) ),( RMSe * MUC ) ) / Min( ( ( CS + Min( MUR ,RCSe ) ) * RRSe ) ,( ( ( DS - MUC ) * DS ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( ( RRSe - ( ( DS + RCSe ) / CS ) ) / RMSe ) ) + RCSe ) * DS ) )", "obj1": 0.83, "obj2": 0.08256740877365994}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - MUR ) + RCSe ) * DS ) )", "obj1": 0.094, "obj2": 0.6528942217327584}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( Const - MDR ) ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.722, "obj2": 0.18706183103647714}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + Max( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ),Min( ( Const + BR ) ,AMS ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( ( ( MUC * MUM ) * Min( ( RCSe / Min( MUC ,MUM ) ) ,MLU ) ) + Max( ( MUM * MUR ),MUM ) ) ) - ( Max( MLU,MUM ) * MLU ) )", "obj1": 0.254, "obj2": 0.5254027995379398}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.524, "obj2": 0.28750388104045566}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( RCSe - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) )", "obj1": 0.982, "obj2": 0.007906697375949652}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.238, "obj2": 0.5360320318378531}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( Min( RRS ,( FirstVNF_CPU_Server - RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,MUR ) * DS ) - Max( ( Max( RMSe,( CS + ( MUM * ( MUC - ( MLU - RRSe ) ) ) ) ) * RMSe ),RRSe ) )", "obj1": 0.338, "obj2": 0.44457983923353833}, {"determining": "Min( ( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) + MDR ) * FirstVNF_RAM ) * ( FirstVNF_Mem_Server / ( ( PN / FirstVNF_RAM ) * MRS ) ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( Max( MUR,MUM ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - ( MUR / ( MLU * CS ) ) ) ) ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( MUR ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe + RCSe ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) ) - ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RMSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) * DS ) )", "obj1": 0.09, "obj2": 0.6684000096374558}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( CS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.102, "obj2": 0.6431876044673976}], "28": [{"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ,Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Max( ACS,ARS ) - DDR ) + AMS ) - FirstVNF_CPU ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + ( ( MUM / RMSe ) / RRSe ) ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( MLU / ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.046, "obj2": 0.6977264801071824}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.924, "obj2": 0.03517059175492746}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + FirstVNF_CPU ) / FirstVNF_Mem ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( ( ( MUC * MUM ) + Max( ( RCSe + CS ),DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) * DS ) )", "obj1": 0.74, "obj2": 0.17262689913356707}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * BR ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MUM + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.136, "obj2": 0.6206830986908639}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - Max( DS,( RRSe / MUR ) ) )", "obj1": 0.658, "obj2": 0.19981865264681042}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( FirstVNF_Mem ,( FirstVNF_Mem * FirstVNF_Mem ) ) / ( DDR / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MLU + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.68, "obj2": 0.18495668124052994}, {"determining": "Min( ( FirstVNF_CPU - ( Const - MDR ) ) ,( FirstVNF_RAM_Server * ( Max( ( Const * Min( ( ARS - FirstVNF_CPU ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - FirstVNF_RAM ) ) ),PN ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( Max( ( RMSe * CS ),( MLU + MUC ) ) - Min( DS ,( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) * MLU ) ) + DS ) - ( ( MUC / ( ( ( CS * MLU ) / MUR ) + CS ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.772, "obj2": 0.1152263835807698}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 0.286, "obj2": 0.4710131995171887}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MLU ) / CS ) + ( ( MLU * RRSe ) * ( MLU / CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.636, "obj2": 0.21404981964213238}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( MDR - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MUC * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.954, "obj2": 0.01816686919451844}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( ( Const - RRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) + ( DS - CS ) ) - ( ( ( ( MUC * MUR ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.31295537025327347}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( RMSe - MUR ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.816, "obj2": 0.10207983554925427}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RCSe - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.518, "obj2": 0.29769395054417563}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( DS / Max( MUR,( CS + ( MUR - CS ) ) ) ) ) + ( MLU * ( ( RRSe / MUM ) / ( RCSe - RCSe ) ) ) ) - ( Max( MLU,MUM ) * DS ) )", "obj1": 0.238, "obj2": 0.5287847098480842}, {"determining": "( Min( ( ( CRS + Min( ( AMS * DDR ) ,PN ) ) + ( MDR * ( ( AMS - ( ( PN + FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ,ACS ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( Max( RCSe,MLU ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + CS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * RCSe ) )", "obj1": 0.074, "obj2": 0.6899379054943064}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM * PN ) * FirstVNF_Mem ) * Min( ( MDR / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ,BR ) )", "choosing": "( ( ( ( ( MUM - CS ) + ( MLU * MLU ) ) - ( ( ( MUR - MUR ) * Min( CS ,RRSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( Min( RCSe ,RCSe ) + RRSe ) * RRSe ) ,Max( RCSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( CS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.108, "obj2": 0.6387344429871457}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - FirstVNF_RAM ) ) ) + ARS ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + Max( RMSe,MUM ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM / MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.848, "obj2": 0.0759310098034839}, {"determining": "Min( ( Const - ( ( MRS / ( FirstVNF_RAM * AMS ) ) * FirstVNF_CPU ) ) ,( ( ( ( ( Max( PN,( FirstVNF_Mem / PN ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / ARS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( Min( DS ,Max( RCSe,DS ) ) / MLU ) ) ) ) + ( ( Max( ( MUR * ( MLU * DS ) ),( RMSe * MUC ) ) / Min( ( ( CS + Min( MUR ,RCSe ) ) * RRSe ) ,( ( ( DS - MUC ) * DS ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( ( RRSe - ( ( DS + RCSe ) / CS ) ) / RMSe ) ) + RCSe ) * DS ) )", "obj1": 0.83, "obj2": 0.08256740877365994}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) ) + RCSe ) * DS ) )", "obj1": 0.36, "obj2": 0.42301375772442207}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU ,ARS ) ) ) / PN ) - AMS ) ,( CRS + DDR ) )", "choosing": "( ( RCSe + MUC ) - ( ( Min( MUC ,MUM ) - MUM ) * MUM ) )", "obj1": 0.898, "obj2": 0.04877907181531596}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.54, "obj2": 0.28096949503235596}, {"determining": "Min( ( RRS - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( BR - ( ARS - ( FirstVNF_RAM_Server - ARS ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,CS ) * RRSe ) ) ) - CS ) + ( ( ( ( RCSe + Min( RMSe ,MLU ) ) - Min( ( DS - RRSe ) ,CS ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + ( ( ( MUM + RRSe ) / MUC ) - ( DS + DS ) ) ) ) )", "obj1": 0.454, "obj2": 0.35541454295072333}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.414, "obj2": 0.3822194607500293}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( DDR - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.276, "obj2": 0.4926388811903052}, {"determining": "( Min( ACS ,( ( CRS + ( ARS - FirstVNF_RAM ) ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( ( Const + AMS ) ,BR ) )", "choosing": "( ( Max( RRSe,RRSe ) - RCSe ) - Max( MUM,RMSe ) )", "obj1": 0.252, "obj2": 0.5249649104485028}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( CRS / FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.466, "obj2": 0.33147610884703765}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) / ARS ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( ( ( Min( RRSe ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( MUM * Max( RMSe,RCSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.218, "obj2": 0.5479127139895325}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.872, "obj2": 0.06676894172502705}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - ( MLU + MUC ) )", "obj1": 0.486, "obj2": 0.323771197908642}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ),FirstVNF_RAM ) ,( Max( FirstVNF_Mem,BR ) / FirstVNF_CPU_Server ) ) / CRS ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,Max( CS,Max( RRSe,MUR ) ) ) )", "obj1": 0.348, "obj2": 0.4390373420666758}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) * ( ( CRS / FirstVNF_Mem ) * FirstVNF_RAM ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( Max( Min( Min( ( Max( ( RRSe * RMSe ),RMSe ) * ( RMSe + RMSe ) ) ,CS ) ,RMSe ),MLU ),RCSe ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.15, "obj2": 0.6080336359997139}, {"determining": "Min( ( Const - ( ( ARS * CRS ) * ( ( ( ( ARS / CRS ) + Max( FirstVNF_Mem_Server,ACS ) ) - BR ) + DDR ) ) ) ,( FirstVNF_RAM_Server / ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * CS ) + ( MLU * ( RMSe - ( MUM / RCSe ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "Min( MDR ,( Max( ( ( MRS * Min( Min( ARS ,FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ),( Min( ( RRS - ARS ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe - ( Min( CS ,( ( ( ( RCSe - DS ) * MUC ) / ( ( RCSe * RRSe ) - CS ) ) + RCSe ) ) * RRSe ) ) - Max( MUM,RRSe ) )", "obj1": 0.712, "obj2": 0.1815888375994252}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.618, "obj2": 0.2247375366122466}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + ( CS * MUM ) ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.186, "obj2": 0.5754197529277781}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * ( ( ARS - ( Const * PN ) ) / ( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.164, "obj2": 0.5989413074234713}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( Min( RRS ,( FirstVNF_CPU_Server - RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,MUR ) * DS ) - Max( ( Max( RMSe,( CS + ( MUM * ( MUC - ( MLU - RRSe ) ) ) ) ) * RMSe ),RRSe ) )", "obj1": 0.338, "obj2": 0.44457983923353833}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - MUR ) + RCSe ) * DS ) )", "obj1": 0.094, "obj2": 0.6528942217327584}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.524, "obj2": 0.28750388104045566}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.326, "obj2": 0.4568361441831049}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.31, "obj2": 0.4623347616167055}], "29": [{"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) ,Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.046, "obj2": 0.6977264801071824}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "Min( ( Const - ( ( ARS * CRS ) * ( ( ( ( ARS / CRS ) + Max( FirstVNF_Mem_Server,ACS ) ) - BR ) + DDR ) ) ) ,( FirstVNF_RAM_Server / ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * CS ) + ( MLU * ( RMSe - ( MUM / RCSe ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "Min( ( FirstVNF_CPU - ( Const - MDR ) ) ,( FirstVNF_RAM_Server * ( Max( ( Const * Min( ( ARS - FirstVNF_CPU ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - FirstVNF_RAM ) ) ),PN ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( Max( ( RMSe * CS ),( MLU + MUC ) ) - Min( DS ,( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) * MLU ) ) + DS ) - ( ( MUC / ( ( ( CS * MLU ) / MUR ) + CS ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.772, "obj2": 0.1152263835807698}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU ,ARS ) ) ) / PN ) - AMS ) ,( CRS + DDR ) )", "choosing": "( ( RCSe + MUC ) - ( ( Min( MUC ,MUM ) - MUM ) * MUM ) )", "obj1": 0.898, "obj2": 0.04877907181531596}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( ARS / FirstVNF_CPU_Server ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.872, "obj2": 0.06676894172502705}, {"determining": "( ( ( CRS + ACS ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MUM - CS ) - Max( MUM,RMSe ) ) - ( Max( MLU,MUM ) * DS ) )", "obj1": 0.122, "obj2": 0.6158852707114738}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( FirstVNF_Mem ,( FirstVNF_Mem * FirstVNF_Mem ) ) / ( DDR / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MLU + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.68, "obj2": 0.18495668124052994}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM * PN ) * FirstVNF_Mem ) * Min( ( MDR / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ,BR ) )", "choosing": "( ( ( ( ( MUM - CS ) + ( MLU * MLU ) ) - ( ( ( MUR - MUR ) * Min( CS ,RRSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( Min( RCSe ,RCSe ) + RRSe ) * RRSe ) ,Max( RCSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( CS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.108, "obj2": 0.6387344429871457}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.618, "obj2": 0.2247375366122466}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - MUR ) + RCSe ) * DS ) )", "obj1": 0.094, "obj2": 0.6528942217327584}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( ( Const - FirstVNF_CPU ) * Min( RRS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM_Server ,DDR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR + ( Min( RMSe ,RMSe ) * MUC ) ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RMSe ) ) )", "obj1": 0.44, "obj2": 0.3651794435065295}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + FirstVNF_CPU ) / FirstVNF_Mem ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( ( ( MUC * MUM ) + Max( ( RCSe + CS ),DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) * DS ) )", "obj1": 0.74, "obj2": 0.17262689913356707}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.924, "obj2": 0.03517059175492746}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "( Min( ( PN + Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,( PN / FirstVNF_RAM ) ) ) ,Min( ACS ,( ( ( MDR * ARS ) + ACS ) + ( MDR * ( ( ( CRS - RRS ) + ARS ) * FirstVNF_Mem ) ) ) ) ) * ( DDR * MRS ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( DS / ( RRSe / MUR ) ) ) ) - Max( Max( ( ( ( ( ( RRSe - MLU ) / DS ) + MLU ) / ( ( Max( CS,MUC ) + RMSe ) * ( CS * Max( CS,MUC ) ) ) ) * RMSe ),Max( RRSe,( Min( MLU ,RMSe ) - MUC ) ) ),( Min( MLU ,( ( MUR / ( MLU / RMSe ) ) * MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.2, "obj2": 0.5622753331002583}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( ( Const - RRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) + ( DS - CS ) ) - ( ( ( ( MUC * MUR ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.31295537025327347}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - Max( DS,( RRSe / MUR ) ) )", "obj1": 0.654, "obj2": 0.19963965885690155}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RCSe - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.518, "obj2": 0.29769395054417563}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.072, "obj2": 0.6892858445938636}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MUC * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.268, "obj2": 0.5082857878360917}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( ( Const * FirstVNF_RAM_Server ) - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( RMSe - MUR ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,( ( RRSe + DS ) - ( MUR + DS ) ) ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.812, "obj2": 0.10395868880007204}, {"determining": "Min( ( RRS - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( BR - ( ARS - ( FirstVNF_RAM_Server - ARS ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,CS ) * RRSe ) ) ) - CS ) + ( ( ( ( RCSe + Min( RMSe ,MLU ) ) - Min( ( DS - RRSe ) ,CS ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + ( ( ( MUM + RRSe ) / MUC ) - ( DS + DS ) ) ) ) )", "obj1": 0.454, "obj2": 0.35541454295072333}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.54, "obj2": 0.28096949503235596}, {"determining": "( Min( ACS ,( ( CRS + ( ARS - FirstVNF_RAM ) ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( ( Const + AMS ) ,BR ) )", "choosing": "( ( Max( RRSe,RRSe ) - RCSe ) - Max( MUM,RMSe ) )", "obj1": 0.252, "obj2": 0.5249649104485028}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.414, "obj2": 0.3822194607500293}, {"determining": "( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( DS / Max( MUR,( CS + ( MUR - CS ) ) ) ) ) + ( MLU * ( ( RRSe / MUM ) / ( RCSe - RCSe ) ) ) ) - ( Max( MLU,MUM ) * DS ) )", "obj1": 0.238, "obj2": 0.5287847098480842}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( DDR / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MLU + RRSe ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.946, "obj2": 0.029975781096760898}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( MDR - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.97, "obj2": 0.012827153690647398}, {"determining": "Min( ( Const - ( ( MRS / ( FirstVNF_RAM * AMS ) ) * FirstVNF_CPU ) ) ,( ( ( ( ( Max( PN,( FirstVNF_Mem / PN ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / ARS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( Min( DS ,Max( RCSe,DS ) ) / MLU ) ) ) ) + ( ( Max( ( MUR * ( MLU * DS ) ),( RMSe * MUC ) ) / Min( ( ( CS + Min( MUR ,RCSe ) ) * RRSe ) ,( ( ( DS - MUC ) * DS ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( ( RRSe - ( ( DS + RCSe ) / CS ) ) / RMSe ) ) + RCSe ) * DS ) )", "obj1": 0.83, "obj2": 0.08256740877365994}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * ( ( ARS - ( Const * PN ) ) / ( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.164, "obj2": 0.5989413074234713}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - ( MLU + MUC ) )", "obj1": 0.486, "obj2": 0.323771197908642}, {"determining": "Min( MDR ,( Max( ( ( MRS * Min( Min( ARS ,FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ),( Min( ( RRS - ARS ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe - ( Min( CS ,( ( ( ( RCSe - DS ) * MUC ) / ( ( RCSe * RRSe ) - CS ) ) + RCSe ) ) * RRSe ) ) - Max( MUM,RRSe ) )", "obj1": 0.712, "obj2": 0.1815888375994252}, {"determining": "( ( ( PN * FirstVNF_RAM ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + ( CS * MUM ) ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.186, "obj2": 0.5754197529277781}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) / ARS ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( ( ( Min( RRSe ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( MUM * Max( RMSe,RCSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.218, "obj2": 0.5479127139895325}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( Min( RRS ,( FirstVNF_CPU_Server - RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,MUR ) * DS ) - Max( ( Max( RMSe,( CS + ( MUM * ( MUC - ( MLU - RRSe ) ) ) ) ) * RMSe ),RRSe ) )", "obj1": 0.338, "obj2": 0.44457983923353833}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) * ( ( CRS / FirstVNF_Mem ) * FirstVNF_RAM ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( Max( Min( Min( ( Max( ( RRSe * RMSe ),RMSe ) * ( RMSe + RMSe ) ) ,CS ) ,RMSe ),MLU ),RCSe ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.15, "obj2": 0.6080336359997139}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.222, "obj2": 0.544278261709559}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.524, "obj2": 0.28750388104045566}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - Min( CS ,RMSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.272, "obj2": 0.491751186961327}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) ) + RCSe ) * DS ) )", "obj1": 0.842, "obj2": 0.07312747122936054}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - ( MLU + MUC ) )", "obj1": 0.464, "obj2": 0.33703166327269124}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,Min( Const ,( FirstVNF_CPU - ARS ) ) ) ) / CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUC - ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) ) - Min( Min( MUC ,RMSe ) ,Max( DS,( Max( MLU,MUM ) - RRSe ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.372, "obj2": 0.4120975624052136}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ),FirstVNF_RAM ) ,( Max( FirstVNF_Mem,BR ) / FirstVNF_CPU_Server ) ) / CRS ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,Max( CS,Max( RRSe,MUR ) ) ) )", "obj1": 0.348, "obj2": 0.4390373420666758}], "30": [{"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( MUR * Min( CS ,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( PN,CRS ) - ( DDR + ( ( FirstVNF_RAM_Server * ARS ) + PN ) ) ) ,ACS )", "choosing": "( ( ( DS - CS ) + ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * DS ) ) ) - CS ) + ( MUC * ( MUM - Max( CS,( RRSe - MLU ) ) ) ) ) ) - ( ( ( CS + MUM ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.618, "obj2": 0.2247375366122466}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + FirstVNF_CPU ) / FirstVNF_Mem ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( ( ( MUC * MUM ) + Max( ( RCSe + CS ),DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) * DS ) )", "obj1": 0.74, "obj2": 0.17262689913356707}, {"determining": "Min( ( Const - ( ( ARS * CRS ) * ( ( ( ( ARS / CRS ) + Max( FirstVNF_Mem_Server,ACS ) ) - BR ) + DDR ) ) ) ,( FirstVNF_RAM_Server / ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * CS ) + ( MLU * ( RMSe - ( MUM / RCSe ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "Min( ( FirstVNF_CPU - ( Const - MDR ) ) ,( FirstVNF_RAM_Server * ( Max( ( Const * Min( ( ARS - FirstVNF_CPU ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - FirstVNF_RAM ) ) ),PN ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( Max( ( RMSe * CS ),( MLU + MUC ) ) - Min( DS ,( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) * MLU ) ) + DS ) - ( ( MUC / ( ( ( CS * MLU ) / MUR ) + CS ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.772, "obj2": 0.1152263835807698}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,Min( Const ,( FirstVNF_CPU - ARS ) ) ) ) / CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MUC - ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) ) - Min( Min( MUC ,RMSe ) ,Max( DS,( Max( MLU,MUM ) - RRSe ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.372, "obj2": 0.4120975624052136}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.046, "obj2": 0.6977264801071824}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( MDR - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - CS ) - Max( MUM,RMSe ) )", "obj1": 0.97, "obj2": 0.012827153690647398}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - Max( DS,( RRSe / MUR ) ) )", "obj1": 0.654, "obj2": 0.19963965885690155}, {"determining": "Min( ( Max( ( Const - RRS ),( ( ( Max( FirstVNF_Mem_Server,DDR ) - ( FirstVNF_CPU_Server * Const ) ) - ( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe - RCSe ) ) ) ) - MUR ) * MUM ) - Max( MUM,DS ) )", "obj1": 0.328, "obj2": 0.4651180463652593}, {"determining": "( ( ( CRS + ACS ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MUM - CS ) - Max( MUM,RMSe ) ) - ( Max( MLU,MUM ) * DS ) )", "obj1": 0.122, "obj2": 0.6158852707114738}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( BR - ( ARS - MRS ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.41, "obj2": 0.3912356851158204}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM * PN ) * FirstVNF_Mem ) * Min( ( MDR / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ,BR ) )", "choosing": "( ( ( ( ( MUM - CS ) + ( MLU * MLU ) ) - ( ( ( MUR - MUR ) * Min( CS ,RRSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( Min( RCSe ,RCSe ) + RRSe ) * RRSe ) ,Max( RCSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( CS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.108, "obj2": 0.6387344429871457}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( DDR / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MLU + RRSe ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.946, "obj2": 0.029975781096760898}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.924, "obj2": 0.03517059175492746}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU ,ARS ) ) ) / PN ) - AMS ) ,( CRS + DDR ) )", "choosing": "( ( RCSe + MUC ) - ( ( Min( MUC ,MUM ) - MUM ) * MUM ) )", "obj1": 0.898, "obj2": 0.04877907181531596}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( ( Const * FirstVNF_RAM_Server ) - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( RMSe - MUR ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,( ( RRSe + DS ) - ( MUR + DS ) ) ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.812, "obj2": 0.10395868880007204}, {"determining": "Min( ( RRS - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( BR - ( ARS - ( FirstVNF_RAM_Server - ARS ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,CS ) * RRSe ) ) ) - CS ) + ( ( ( ( RCSe + Min( RMSe ,MLU ) ) - Min( ( DS - RRSe ) ,CS ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + ( ( ( MUM + RRSe ) / MUC ) - ( DS + DS ) ) ) ) )", "obj1": 0.454, "obj2": 0.35541454295072333}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( ( Const - RRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) + ( DS - CS ) ) - ( ( ( ( MUC * MUR ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.492, "obj2": 0.31295537025327347}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RCSe - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.518, "obj2": 0.29769395054417563}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( Min( ( PN * ( ( ARS - ( Const * PN ) ) / ( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - Min( CS ,RMSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( ( MUC * DS ) ,MLU ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.292, "obj2": 0.4726283109052075}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( ( MUR - CS ) + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MUM ) ) ) - ( CS * MUM ) ) ) / ( ( ( MLU / DS ) + RCSe ) * DS ) )", "obj1": 0.366, "obj2": 0.43079798121221063}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( ( Const - FirstVNF_CPU ) * Min( RRS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM_Server ,DDR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR + ( Min( RMSe ,RMSe ) * MUC ) ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RMSe ) ) )", "obj1": 0.44, "obj2": 0.3651794435065295}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) ) + RCSe ) * DS ) )", "obj1": 0.842, "obj2": 0.07267203252780419}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( Min( RRS ,( FirstVNF_CPU_Server - RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,MUR ) * DS ) - Max( ( Max( RMSe,( CS + ( MUM * ( MUC - ( MLU - RRSe ) ) ) ) ) * RMSe ),RRSe ) )", "obj1": 0.338, "obj2": 0.44457983923353833}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( FirstVNF_RAM * RRS ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RRSe - RMSe ) + MUM ) ) ) - ( ( RCSe + ( RMSe + ( ( ( ( RMSe - RRSe ) - Min( RRSe ,RCSe ) ) / RMSe ) + MLU ) ) ) * DS ) )", "obj1": 0.172, "obj2": 0.5756344864694155}, {"determining": "Min( ( Const - ( ( MRS / ( FirstVNF_RAM * AMS ) ) * FirstVNF_CPU ) ) ,( ( ( ( ( Max( PN,( FirstVNF_Mem / PN ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / ARS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( Min( DS ,Max( RCSe,DS ) ) / MLU ) ) ) ) + ( ( Max( ( MUR * ( MLU * DS ) ),( RMSe * MUC ) ) / Min( ( ( CS + Min( MUR ,RCSe ) ) * RRSe ) ,( ( ( DS - MUC ) * DS ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( ( RRSe - ( ( DS + RCSe ) / CS ) ) / RMSe ) ) + RCSe ) * DS ) )", "obj1": 0.83, "obj2": 0.08256740877365994}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - MDR ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - Min( CS ,RMSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.272, "obj2": 0.491751186961327}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( PN * ( ( ARS - ( Const * PN ) ) / ( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,DS ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( Min( Max( ( CS - Min( MLU ,RMSe ) ),CS ) ,( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.164, "obj2": 0.5989413074234713}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( MUM * Max( RMSe,RCSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.862, "obj2": 0.06555407766006043}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.072, "obj2": 0.6892858445938636}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - Max( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) - CS ),CS ) )", "obj1": 0.428, "obj2": 0.3803592606367561}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - ( MLU + MUC ) )", "obj1": 0.486, "obj2": 0.323771197908642}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( FirstVNF_Mem ,( FirstVNF_Mem * FirstVNF_Mem ) ) / ( DDR / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MLU + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.68, "obj2": 0.18495668124052994}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ),FirstVNF_RAM ) ,( Max( FirstVNF_Mem,BR ) / FirstVNF_CPU_Server ) ) / CRS ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,Max( CS,Max( RRSe,MUR ) ) ) )", "obj1": 0.348, "obj2": 0.4390373420666758}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( Min( MUC ,CS ) - MLU ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.464, "obj2": 0.33095679089472435}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( Min( RCSe ,( MUR - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.282, "obj2": 0.47908291448677937}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MUC * ( ( RCSe - RCSe ) / ( RRSe / ( RCSe / MUC ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.244, "obj2": 0.5212992414487378}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - MUR ) + RCSe ) * DS ) )", "obj1": 0.094, "obj2": 0.6528942217327584}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - Const ) / RRS ) / ( MRS * ( PN / FirstVNF_RAM ) ) ) * ( ( CRS / FirstVNF_Mem ) * FirstVNF_RAM ) ) * ( FirstVNF_CPU + RRS ) )", "choosing": "( Max( Max( Min( Min( ( Max( ( RRSe * RMSe ),RMSe ) * ( RMSe + RMSe ) ) ,CS ) ,RMSe ),MLU ),RCSe ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.15, "obj2": 0.6080336359997139}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MUC * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.268, "obj2": 0.5082857878360917}, {"determining": "Min( MDR ,( Max( ( ( MRS * Min( Min( ARS ,FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ),( Min( ( RRS - ARS ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe - ( Min( CS ,( ( ( ( RCSe - DS ) * MUC ) / ( ( RCSe * RRSe ) - CS ) ) + RCSe ) ) * RRSe ) ) - Max( MUM,RRSe ) )", "obj1": 0.712, "obj2": 0.1815888375994252}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) / ARS ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( MUR * Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) ) + RCSe ) * DS ) )", "obj1": 0.258, "obj2": 0.512982778857893}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.54, "obj2": 0.28096949503235596}], "31": [{"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( ( Const - FirstVNF_CPU ) * Min( RRS ,Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM_Server ,DDR ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MUR ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR + ( Min( RMSe ,RMSe ) * MUC ) ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( MUR * Min( CS ,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( RMSe + RCSe ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.042, "obj2": 0.7567480461572935}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.046, "obj2": 0.6977264801071824}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_RAM * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - Max( DS,( RRSe / MUR ) ) )", "obj1": 0.654, "obj2": 0.19963965885690155}, {"determining": "Min( ( Const - ( ( ARS * CRS ) * ( ( ( ( ARS / CRS ) + Max( FirstVNF_Mem_Server,ACS ) ) - BR ) + DDR ) ) ) ,( FirstVNF_RAM_Server / ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( CRS - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( DS * CS ) + ( MLU * ( RMSe - ( MUM / RCSe ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.592, "obj2": 0.25003356477525834}, {"determining": "Min( ( Max( ( Const - RRS ),( ( ( Max( FirstVNF_Mem_Server,DDR ) - ( FirstVNF_CPU_Server * Const ) ) - ( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe - RCSe ) ) ) ) - MUR ) * MUM ) - Max( MUM,DS ) )", "obj1": 0.328, "obj2": 0.4651180463652593}, {"determining": "Min( ( RRS - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( BR - ( ARS - ( FirstVNF_RAM_Server - ARS ) ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( DS / ( RCSe + MUR ) ) * ( RRSe - ( Min( CS ,CS ) * RRSe ) ) ) - CS ) + ( ( ( ( RCSe + Min( RMSe ,MLU ) ) - Min( ( DS - RRSe ) ,CS ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( RMSe * CS ) / ( RCSe + ( ( ( MUM + RRSe ) / MUC ) - ( DS + DS ) ) ) ) )", "obj1": 0.454, "obj2": 0.35541454295072333}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( ( PN * Min( ( ARS - FirstVNF_CPU ) ,( ( AMS + FirstVNF_CPU_Server ) - FirstVNF_RAM ) ) ),RRS ) * Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * Max( BR,FirstVNF_CPU ) ) - ( ARS - RRS ) ) ,RRS ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( MLU - Min( MUC ,CS ) ) * ( RMSe - MUR ) ) * ( ( Min( CS ,CS ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,MUC ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( ( DS + MLU ) ,MUC ) + ( ( MUM * ( ( RRSe - MUR ) * ( RMSe * MLU ) ) ) - MLU ) ) ) ) )", "obj1": 0.75, "obj2": 0.12973476498203407}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.54, "obj2": 0.28096949503235596}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.618, "obj2": 0.2247375366122466}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / Const ) )", "choosing": "( ( MUM - Min( Min( CS ,RMSe ) ,( Min( MUC ,CS ) - MLU ) ) ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - CS ) - Max( DS,MUR ) ) ) )", "obj1": 0.464, "obj2": 0.33095679089472435}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( DS + RCSe ) - ( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.924, "obj2": 0.03517059175492746}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( BR - ( ARS - MRS ) ) / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.41, "obj2": 0.3912356851158204}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( FirstVNF_RAM_Server - Min( BR ,BR ) ) * ( Const + ( ARS - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS + RCSe ),( ( MUR * ( ( Max( ( Max( MUR,CS ) - MLU ),MLU ) / ( ( CS * Min( RCSe ,RMSe ) ) * RMSe ) ) / RRSe ) ) / RMSe ) )", "obj1": 0.97, "obj2": 0.011470533581629168}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,( ( ( MUM + ( RCSe / MUC ) ) - ( ( DS + ( MUR + MUR ) ) / MUM ) ) - Max( DS,MUR ) ) ) )", "obj1": 0.63, "obj2": 0.22087046539979902}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MUC * ( ( RCSe - RCSe ) / ( RRSe / ( RCSe / MUC ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.422, "obj2": 0.36210842842009555}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - Const ) + MDR ) * Min( ( Const - RRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * ( ( RCSe - Max( DS,( RRSe / ( DS / MUM ) ) ) ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) + ( DS - CS ) ) - ( ( ( ( MUC * MUR ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.748, "obj2": 0.16555043409897285}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU ,ARS ) ) ) / PN ) - AMS ) ,( CRS + DDR ) )", "choosing": "( ( RCSe + MUC ) - ( ( Min( MUC ,MUM ) - MUM ) * MUM ) )", "obj1": 0.898, "obj2": 0.04877907181531596}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( Min( ( PN * ( ( ARS - ( Const * PN ) ) / ( ARS - MRS ) ) ) ,Min( ACS ,( FirstVNF_CPU + ( FirstVNF_Mem / BR ) ) ) ),MDR ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( MUR - ( DS + RCSe ) ) ) * ( RRSe - Min( CS ,RMSe ) ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( ( MUC * DS ) ,MLU ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.292, "obj2": 0.4726283109052075}, {"determining": "( Min( ACS ,( ( CRS + ACS ) + ( ( FirstVNF_Mem / MDR ) * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( ( ( ( RRSe + DS ) - ( MUR + DS ) ) + RCSe ) * ( MUC + RMSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.072, "obj2": 0.6892858445938636}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + ( Const / Const ) ) * ( Max( FirstVNF_RAM_Server,( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( DS + RCSe ) ) + RCSe ) * DS ) )", "obj1": 0.38, "obj2": 0.40592432929582634}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( FirstVNF_Mem ,( FirstVNF_Mem * FirstVNF_Mem ) ) / ( DDR / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MLU + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.68, "obj2": 0.18495668124052994}, {"determining": "Min( MDR ,( Max( ( ( MRS * Min( Min( ARS ,FirstVNF_CPU ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ),( Min( ( RRS - ARS ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + Max( MDR,( ( PN * ( RRS - RRS ) ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RRSe - ( Min( CS ,( ( ( ( RCSe - DS ) * MUC ) / ( ( RCSe * RRSe ) - CS ) ) + RCSe ) ) * RRSe ) ) - Max( MUM,RRSe ) )", "obj1": 0.712, "obj2": 0.1815888375994252}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( ( Const - RRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - ( Max( PN,FirstVNF_CPU ) * Min( Const ,( MDR - FirstVNF_RAM ) ) ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) + ( DS - CS ) ) - ( ( ( ( MUC * MUR ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.36, "obj2": 0.4257350425290019}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.568, "obj2": 0.2601286944000407}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - ( Min( CS ,( ( ( ( RCSe - DS ) * MUC ) / ( ( RCSe * RRSe ) - CS ) ) + RCSe ) ) * RRSe ) ) - Max( MUM,RRSe ) )", "obj1": 0.886, "obj2": 0.055920900802028266}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ( ( ( ( Const * FirstVNF_RAM_Server ) - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( RMSe - MUR ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,( ( RRSe + DS ) - ( MUR + DS ) ) ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.812, "obj2": 0.10395868880007204}, {"determining": "Min( ( Max( ( Const - RRS ),( ( ( ( ARS / CRS ) + Max( FirstVNF_Mem_Server,ACS ) ) - BR ) / ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MUC * ( ( RCSe - RCSe ) / ( RRSe / ( RCSe / MUC ) ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( ( DS * CS ) + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.222, "obj2": 0.540850321170729}, {"determining": "( Max( MRS,FirstVNF_CPU ) * Min( ( ( ACS + ( RRS + FirstVNF_Mem ) ) + ( ( ARS - ( Const * PN ) ) / ( ARS - Min( Min( FirstVNF_Mem_Server ,MRS ) ,PN ) ) ) ) ,Min( ACS ,( ( FirstVNF_Mem / BR ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( ( RCSe - Max( RCSe,MUM ) ) / Min( MUC ,RMSe ) ) + ( MLU - MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,( Min( MUM ,CS ) + ( MUR + RCSe ) ) ) ) ) ) * ( ( Max( ( MUR / ( MLU * CS ) ),( MUC * RMSe ) ) / Min( ( ( CS + ( MUR / RCSe ) ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - Min( DS ,( ( Max( CS,MUM ) - ( DS + DS ) ) + MUC ) ) ) + RCSe ) * ( DS + ( ( Max( ( CS - Min( MLU ,RMSe ) ),CS ) - ( MUM - MUM ) ) * ( ( MUM * Min( ( MUC * DS ) ,MLU ) ) * ( RRSe - RMSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6720590465988323}, {"determining": "Min( Max( Const,FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + FirstVNF_CPU ) / FirstVNF_Mem ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( ( ( MUC * MUM ) + Max( ( RCSe + CS ),DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) * DS ) )", "obj1": 0.74, "obj2": 0.17262689913356707}, {"determining": "Min( ( AMS - ( DDR * Min( DDR ,( ( ( PN * FirstVNF_RAM ) / ( DDR / ( FirstVNF_RAM_Server * DDR ) ) ) - DDR ) ) ) ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( DS + RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( CS,RMSe ) ) ) + RCSe ) * Max( DS,( ( RMSe / ( MLU + Min( RCSe ,MLU ) ) ) * MUM ) ) ) )", "obj1": 0.556, "obj2": 0.2672987376382583}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( Max( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - MDR ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) - MDR ) + PN ) ) * ( ACS * BR ) ) )", "choosing": "( ( ( ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) - CS ) + ( ( ( ( RMSe * CS ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) - ( DS / ( RRSe + MUR ) ) )", "obj1": 0.786, "obj2": 0.11103765208612072}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( Min( RRS ,( FirstVNF_CPU_Server - RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MLU,MUR ) * DS ) - Max( ( Max( RMSe,( CS + ( MUM * ( MUC - ( MLU - RRSe ) ) ) ) ) * RMSe ),RRSe ) )", "obj1": 0.338, "obj2": 0.44457983923353833}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( DDR / ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - DDR ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MLU + RRSe ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.946, "obj2": 0.029975781096760898}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( Min( RRSe ,CS ) - MLU ) * ( Min( RCSe ,( RMSe - RMSe ) ) - ( DS + RCSe ) ) ) * ( RRSe - ( Min( CS ,RRSe ) * RRSe ) ) ) - CS ) + ( ( MUM * Max( RMSe,RCSe ) ) * MLU ) ) - ( DS / ( RCSe + MUR ) ) )", "obj1": 0.862, "obj2": 0.06555407766006043}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + ( ( ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,MUC ) ) - MUR ) ) - ( MLU + MUC ) )", "obj1": 0.486, "obj2": 0.323771197908642}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ( ( Const * DDR ) / Max( FirstVNF_RAM,MDR ) ) ) * Min( ( ( CRS / ARS ) / FirstVNF_RAM_Server ) ,MRS ) ) ,Min( ACS ,( FirstVNF_CPU + Max( MDR,( ( AMS * ( FirstVNF_CPU - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) ) ) ) * Max( MRS,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Max( ( MUC * MUM ),Max( RMSe,DS ) ) + Max( MUM,DS ) ) - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) / ( ( ( ( MLU + ( MUC * MUM ) ) - ( DS + DS ) ) + RCSe ) - DS ) )", "obj1": 0.192, "obj2": 0.5738130662938455}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RCSe - MUC ) - Min( Min( CS ,RMSe ) ,Max( DS,( RRSe / MUR ) ) ) ) - MUR ) * MUM ) - Max( MUM,CS ) )", "obj1": 0.518, "obj2": 0.29769395054417563}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( Min( Const ,( ( FirstVNF_RAM - FirstVNF_CPU ) - FirstVNF_RAM ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( Max( ( MUR - CS ),Max( RMSe,DS ) ) + Max( MLU,DS ) ) - MUC ) ) + RCSe ) * DS ) )", "obj1": 0.418, "obj2": 0.37937484490191464}, {"determining": "Min( ( Const - ( ( MRS / ( FirstVNF_RAM * AMS ) ) * FirstVNF_CPU ) ) ,( ( ( ( ( Max( PN,( FirstVNF_Mem / PN ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU * ( FirstVNF_CPU_Server / ARS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( ( Min( MUC ,CS ) - MLU ) * ( Min( DS ,Max( RCSe,DS ) ) / MLU ) ) ) ) + ( ( Max( ( MUR * ( MLU * DS ) ),( RMSe * MUC ) ) / Min( ( ( CS + Min( MUR ,RCSe ) ) * RRSe ) ,( ( ( DS - MUC ) * DS ) - CS ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( ( RRSe - ( ( DS + RCSe ) / CS ) ) / RMSe ) ) + RCSe ) * DS ) )", "obj1": 0.83, "obj2": 0.08256740877365994}, {"determining": "Min( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ,( ( ( ( Max( PN,FirstVNF_CPU ) * Min( Const ,( MDR - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) + ( DS - CS ) ) - ( ( ( ( MUC * MUR ) - ( ( MUM - CS ) - Max( MUM,RMSe ) ) ) + RCSe ) * DS ) )", "obj1": 0.954, "obj2": 0.018085416933198786}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ),FirstVNF_RAM ) ,( Max( FirstVNF_Mem,BR ) / FirstVNF_CPU_Server ) ) / CRS ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( MUM - CS ) - Max( MUM,Max( CS,Max( RRSe,MUR ) ) ) )", "obj1": 0.348, "obj2": 0.4390373420666758}, {"determining": "Min( ( ( ( ( ( Const - MDR ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * Min( Const ,( ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) - FirstVNF_RAM ) ) ) ,( ( ( ( ( Const * FirstVNF_RAM_Server ) - ( ARS + ACS ) ) + MDR ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( ( Min( MUC ,CS ) - MLU ) * ( RMSe - MUR ) ) * ( ( Min( CS ,RRSe ) * RRSe ) - RRSe ) ) - CS ) + ( ( ( ( RMSe * RMSe ) / ( MLU + MUC ) ) - Min( DS ,RMSe ) ) * MLU ) ) + DS ) - ( ( ( Min( CS ,( ( RRSe + DS ) - ( MUR + DS ) ) ) - MLU ) * ( MUR - MUR ) ) * ( RMSe - ( Min( CS ,RRSe ) * RRSe ) ) ) )", "obj1": 0.824, "obj2": 0.09609863458327815}, {"determining": "( ( ( ( ACS / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( CRS + MRS ) ) ) * FirstVNF_RAM ) * Max( ACS,( ( ARS - Max( Max( FirstVNF_Mem_Server,PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) ) + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Const ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + ( MLU * Max( ( RCSe / RMSe ),( RRSe / MUM ) ) ) ) - ( ( RCSe + ( RMSe + ( ( RMSe / ( ( MUR - RRSe ) - Min( RRSe ,RCSe ) ) ) + MLU ) ) ) * DS ) )", "obj1": 0.218, "obj2": 0.5654701343679005}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) * FirstVNF_Mem ) ) ) ) * Min( Max( AMS,Const ) ,BR ) )", "choosing": "( ( ( ( ( DS - CS ) + ( MLU * MLU ) ) - ( ( Min( CS ,RRSe ) * ( MUR - MUR ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( CS + RRSe ) * RRSe ) ,Max( RRSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - MUR ) + RCSe ) * DS ) )", "obj1": 0.094, "obj2": 0.6528942217327584}, {"determining": "( Min( FirstVNF_CPU ,( ( CRS + ACS ) + ( MDR * ( ( AMS - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) ) * Min( ( FirstVNF_RAM_Server + ( ( ( FirstVNF_RAM * PN ) * FirstVNF_Mem ) * Min( ( MDR / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ,BR ) )", "choosing": "( ( ( ( ( MUM - CS ) + ( MLU * MLU ) ) - ( ( ( MUR - MUR ) * Min( CS ,RRSe ) ) * ( MUR - Max( RCSe,MLU ) ) ) ) + ( ( Max( ( MUR / ( MLU * CS ) ),( RMSe * MUC ) ) / Min( ( ( Min( RCSe ,RCSe ) + RRSe ) * RRSe ) ,Max( RCSe,MLU ) ) ) - ( CS * MUM ) ) ) / ( ( ( ( MLU + MUC ) - ( DS + ( ( ( MLU + MUC ) - ( CS + DS ) ) + MUC ) ) ) + RCSe ) * DS ) )", "obj1": 0.09, "obj2": 0.6588466764030877}, {"determining": "Min( ( Max( ( Const - RRS ),( Min( Max( FirstVNF_RAM,Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) ,( ARS / FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) ,MDR )", "choosing": "( ( ( DS - CS ) + ( MUC * ( ( RCSe - RCSe ) / ( RRSe / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( ( DS / ( RCSe + MUR ) ) - CS ) ) + RCSe ) * DS ) )", "obj1": 0.268, "obj2": 0.5082857878360917}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,( ( ( ( ( ( ( FirstVNF_RAM_Server * ARS ) - MDR ) + PN ) * Min( Const ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + MDR ) * ( ( FirstVNF_RAM_Server - ( ARS + ACS ) ) + MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS - CS ) + ( MLU * ( ( RCSe - RCSe ) / ( ( DS + ( MUR + MUR ) ) / MUM ) ) ) ) - ( ( ( ( MLU + MUC ) - ( MUR * Min( Min( CS ,RMSe ) ,( DS - CS ) ) ) ) + RCSe ) * DS ) )", "obj1": 0.768, "obj2": 0.12092597760783401}, {"determining": "( ( ( CRS + ACS ) * Min( ACS ,( FirstVNF_RAM_Server + ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_Mem ) * Min( ( Const / CRS ) ,( Max( ARS,ARS ) * FirstVNF_CPU ) ) ) ) ) ) * Max( PN,FirstVNF_CPU ) )", "choosing": "( ( ( MUM - CS ) - Max( MUM,RMSe ) ) - ( Max( MLU,MUM ) * DS ) )", "obj1": 0.122, "obj2": 0.6158852707114738}]}