{"1": [{"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RMSe ) / ( DS + MLU ) )", "obj1": 0.11, "obj2": 0.7292189139824652}, {"determining": "( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU / MUR ) ,( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) )", "choosing": "Min( ( RMSe - RMSe ) ,Max( MUC,RMSe ) )", "obj1": 0.222, "obj2": 0.6057338105093132}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.168, "obj2": 0.6719638728558843}, {"determining": "( ( ( ACS + AMS ) - MRS ) * ( RRS * ( PN * MRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) - Max( MUR,CS ) ),( Min( MUM ,MUC ) + ( MUM * DS ) ) )", "obj1": 0.48, "obj2": 0.41314532347589755}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "Min( ( ( MUC * MLU ) * CS ) ,Min( MLU ,RMSe ) )", "obj1": 0.904, "obj2": 0.11172783511801274}, {"determining": "Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( Min( PN ,ACS ) / ( Const / RRS ) ) )", "choosing": "Min( Min( ( RMSe + RCSe ) ,( RCSe - MLU ) ) ,( ( RRSe - CS ) * ( RMSe / RRSe ) ) )", "obj1": 0.164, "obj2": 0.6783101183636094}, {"determining": "( ( ( FirstVNF_RAM_Server * Const ) + Min( FirstVNF_CPU ,ARS ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - RCSe ) - ( MUC - DS ) ) + Min( ( MUC + RRSe ) ,( RCSe * RRSe ) ) )", "obj1": 0.508, "obj2": 0.39155114627974297}, {"determining": "Max( ( Const * CRS ),( ( ACS * AMS ) / MDR ) )", "choosing": "( ( RRSe * Min( MUC ,CS ) ) * ( RRSe + DS ) )", "obj1": 0.426, "obj2": 0.48392185163692386}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "Max( ( MRS * RRS ),( FirstVNF_RAM_Server - RRS ) )", "choosing": "( Min( MUC ,Min( RRSe ,DS ) ) - ( RCSe * MUM ) )", "obj1": 0.294, "obj2": 0.5615949018216759}, {"determining": "Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - MUR ) ) )", "obj1": 0.594, "obj2": 0.28217953390565664}, {"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "Min( ( Max( Min( MRS ,FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,ACS ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC * DS ) - ( RRSe + DS ) )", "obj1": 0.314, "obj2": 0.5352336961584884}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( ( DDR - ( BR / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 0.082, "obj2": 0.7553015587604724}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - ( ( AMS + RRS ) + ( Const * CRS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS * BR ) + ( ACS - CRS ) ) / ( ( DDR - FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ACS ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( RRS + PN ) ) / Max( ( FirstVNF_RAM_Server / RRS ),Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( MLU - MUC ),( MLU * RCSe ) ),Max( Max( RCSe,DS ),Min( MUC ,RMSe ) ) ) * ( ( ( DS + RRSe ) * ( RMSe + MUR ) ) * Max( ( MUM - CS ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.554, "obj2": 0.3849359010058988}, {"determining": "( ( ( Const * FirstVNF_CPU ) - FirstVNF_CPU_Server ) + Max( DDR,CRS ) )", "choosing": "( Max( RMSe,( ( RCSe / RCSe ) - RCSe ) ) / ( ( MUR / MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_Mem_Server ,Const ),( FirstVNF_Mem + CRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( BR * RRS ) ) + ( Max( FirstVNF_CPU_Server,RRS ) + ( BR - DDR ) ) ) )", "choosing": "( ( RMSe - MLU ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) / Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( Min( ( CS + MUR ) ,( MLU * CS ) ) + ( ( RCSe - RRSe ) + ( RCSe + CS ) ) ),Max( ( ( RRSe + MUM ) + ( MUR / MLU ) ),( Min( CS ,MUR ) + ( MLU / RCSe ) ) ) )", "obj1": 0.218, "obj2": 0.6582436360218401}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "Min( Max( ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( MDR + RRS ) ),Max( ( FirstVNF_CPU - Const ),Min( DDR ,FirstVNF_CPU ) ) ) ,( ( Max( PN,ARS ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) - Min( Min( RRS ,CRS ) ,( RRS / BR ) ) ) )", "choosing": "( ( ( ( DS + MUM ) + ( RCSe * RRSe ) ) - ( ( CS / MLU ) / ( RCSe - MUC ) ) ) / Max( Min( Max( RCSe,MUC ) ,( MUM * RRSe ) ),( ( MUM * CS ) - ( RMSe - MUC ) ) ) )", "obj1": 0.442, "obj2": 0.4324142895067528}, {"determining": "( ( BR - PN ) - ( Min( PN ,FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( ( Max( CS,( MUC - MUR ) ) + ( MUC - ( MUR / CS ) ) ) / Min( Min( ( MUC + MUC ) ,RMSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ARS - ACS ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ) / ( ( MUR - CS ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU / MUR ) ,( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( ( FirstVNF_Mem_Server - ( BR / FirstVNF_Mem_Server ) ) - PN ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( ( MLU * MLU ) + ( RMSe - RRSe ) ) ) ),( ( ( MUC - DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 0.072, "obj2": 0.7598045340814759}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "Min( ( ( MUC * MLU ) * CS ) ,Min( MLU ,RMSe ) )", "obj1": 0.904, "obj2": 0.11172783511801274}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "Min( ( ( BR * ARS ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.662, "obj2": 0.2569265745867959}, {"determining": "Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ACS ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - Max( DS,MUM ) ) ) )", "obj1": 0.498, "obj2": 0.3726701389325489}, {"determining": "Max( ( Max( ( MDR + ACS ),Min( MDR ,MDR ) ) / ACS ),Max( FirstVNF_CPU,AMS ) )", "choosing": "( ( MUM / RCSe ) + ( Min( DS ,RMSe ) * MUM ) )", "obj1": 0.588, "obj2": 0.3071981121666858}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS * FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) + Min( MLU ,CS ) ) ) )", "obj1": 0.254, "obj2": 0.5351521799048644}, {"determining": "( ( FirstVNF_CPU * ( ( MRS / PN ) / Min( FirstVNF_RAM_Server ,DDR ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "( Max( RRSe,MUM ) / CS )", "obj1": 0.318, "obj2": 0.4971305920636585}, {"determining": "Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - MUR ) ) )", "obj1": 0.594, "obj2": 0.28217953390565664}, {"determining": "Max( Min( Const ,( ( FirstVNF_CPU_Server / CRS ) * ( ( DDR - ( BR / FirstVNF_Mem_Server ) ) - MDR ) ) ),( FirstVNF_RAM * MDR ) )", "choosing": "( ( MLU * MLU ) + ( RMSe - CS ) )", "obj1": 0.356, "obj2": 0.4886121421221701}, {"determining": "Min( ( ( Min( Max( AMS,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,BR ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( RRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ,Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RMSe ) / ( DS + Max( MUR,RRSe ) ) )", "obj1": 0.132, "obj2": 0.6834203948717162}, {"determining": "Min( Max( ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( MDR + RRS ) ),Max( ( FirstVNF_CPU - Const ),Min( DDR ,FirstVNF_CPU ) ) ) ,( ( Max( PN,ARS ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) - Min( Min( RRS ,CRS ) ,( RRS / BR ) ) ) )", "choosing": "( ( ( ( DS + MUM ) + ( RCSe * RRSe ) ) - ( ( CS / MLU ) / ( RCSe - MUC ) ) ) / Max( Min( Max( RCSe,MUC ) ,( MUM * RRSe ) ),( ( MUM * CS ) - ( RMSe - MUC ) ) ) )", "obj1": 0.442, "obj2": 0.4324142895067528}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * ( FirstVNF_CPU * MDR ) ) ) / ( PN * ACS ) )", "choosing": "Min( ( RCSe * MUC ) ,Max( DS,( MLU - MUR ) ) )", "obj1": 0.394, "obj2": 0.46847297824669254}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( FirstVNF_RAM * RRS ) ) + ( RRS + PN ) ) ) )", "choosing": "( Max( RRSe,MUM ) - Max( DS,DS ) )", "obj1": 0.42, "obj2": 0.4582976754611636}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 0.234, "obj2": 0.563890034163233}, {"determining": "( Max( ARS,Const ) / Max( Const,RRS ) )", "choosing": "( Max( MUM,CS ) * ( MLU - RCSe ) )", "obj1": 0.194, "obj2": 0.6377937247706565}, {"determining": "( ( FirstVNF_Mem_Server / BR ) / ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( Min( ( Max( Max( ( ( CS - CS ) + ( MUM - MLU ) ),( Min( MLU ,MUM ) - Max( RCSe,MUR ) ) ),Max( ( Max( RRSe,MUM ) + ( MLU * CS ) ),( Max( CS,MLU ) * ( RMSe + CS ) ) ) ) - ( ( ( ( DS + RCSe ) + ( CS - MUR ) ) * ( ( MUM - CS ) - ( MUM / MLU ) ) ) * ( Max( ( MUM * MUM ),Min( RCSe ,MUR ) ) + ( Max( MUM,RMSe ) / Max( RMSe,MLU ) ) ) ) ) ,( ( ( ( Min( RCSe ,RCSe ) + Min( MUR ,MUR ) ) + ( ( MUC - MUC ) / ( RCSe * MUR ) ) ) + Min( Max( ( MUM / RRSe ),( CS * MUM ) ) ,( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) ) / ( Min( Max( ( RMSe / MUM ),( MLU * MUR ) ) ,Max( ( MUM * RCSe ),( MUR * RRSe ) ) ) * Min( ( Min( CS ,MLU ) + ( MUM / MLU ) ) ,Max( Max( CS,MUM ),( RMSe - DS ) ) ) ) ) ) * Min( Max( Min( ( ( Max( MUR,RRSe ) * ( CS * RMSe ) ) / ( Max( MUR,MUR ) + ( RMSe + MLU ) ) ) ,( Min( ( RMSe + RMSe ) ,Min( MUM ,RMSe ) ) / ( ( RRSe + MUR ) / ( DS - MUM ) ) ) ),Max( ( ( ( MUM * MUR ) * Max( MUM,RMSe ) ) / ( Min( RCSe ,MLU ) * Max( MUC,RCSe ) ) ),( Max( Min( CS ,MUM ),Min( MUC ,MUR ) ) / ( ( RMSe / MUC ) / Max( MUM,MUM ) ) ) ) ) ,( Max( ( Min( ( RCSe + MUM ) ,( RRSe - RMSe ) ) + ( ( RRSe * DS ) - Max( MUC,MUM ) ) ),Min( ( Max( MUC,RRSe ) * Max( RRSe,DS ) ) ,( ( MUR + RMSe ) + ( MUM + MUM ) ) ) ) - Min( ( ( Min( CS ,MUR ) / ( DS - CS ) ) / ( Max( DS,MUR ) / Max( CS,MLU ) ) ) ,Max( ( Max( MUC,RCSe ) * Min( RMSe ,CS ) ),( ( RMSe / RCSe ) / ( MLU + RRSe ) ) ) ) ) ) ) * ( Max( Max( ( ( ( Max( RCSe,MUM ) - Max( MLU,RRSe ) ) + ( ( DS - DS ) * ( CS * CS ) ) ) + ( Max( ( MUR / MUR ),( MUR * MUR ) ) * Min( ( MUM / MUR ) ,( MUM - MUR ) ) ) ),( ( ( Max( DS,MUC ) * ( RCSe / MUM ) ) / ( ( MLU * MUM ) + ( RCSe * MLU ) ) ) - Min( ( ( MUM - CS ) - ( RMSe / MUC ) ) ,Min( Max( MUM,MUC ) ,Min( MUC ,RCSe ) ) ) ) ),( Max( ( ( ( MUM * RRSe ) - ( MUC - MUR ) ) * Max( ( RCSe + MUC ),Max( MLU,MLU ) ) ),( ( Max( CS,MUC ) * ( RMSe / RRSe ) ) / ( Min( MUC ,MUM ) - ( MUM - DS ) ) ) ) - ( Max( ( Max( RMSe,MUC ) * Min( RCSe ,RMSe ) ),( ( MUC / MLU ) / ( MUM / MUR ) ) ) / ( Max( ( CS + DS ),( MLU / MUC ) ) - ( Max( MLU,MUR ) / Min( DS ,RCSe ) ) ) ) ) ) - ( ( ( ( ( Min( MUC ,RCSe ) - ( MLU + RCSe ) ) * ( Min( CS ,MUM ) * ( RRSe - RRSe ) ) ) + ( ( ( RRSe - MUM ) / Min( MUR ,MUC ) ) + ( ( CS - RMSe ) / ( CS + MUR ) ) ) ) / Max( Min( Max( ( DS - MUC ),( MUM * RRSe ) ) ,( Min( MLU ,MUM ) - Min( RCSe ,MUM ) ) ),( ( ( RCSe / RCSe ) + ( CS + MUM ) ) + ( ( RRSe / RCSe ) - ( MUM - RCSe ) ) ) ) ) * Min( ( Min( Max( Min( CS ,DS ),( DS + RRSe ) ) ,( ( RRSe * RCSe ) - ( DS + MUM ) ) ) / ( ( ( CS - RCSe ) / ( MUM * RRSe ) ) / ( ( RRSe * MUR ) + ( DS / MLU ) ) ) ) ,( ( ( ( MUR - CS ) * ( MUC + DS ) ) + Max( Max( MLU,RMSe ),( RMSe / DS ) ) ) + ( ( Max( RCSe,MLU ) + ( MLU - CS ) ) + ( ( MUM + RMSe ) * ( RCSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.168, "obj2": 0.6686113648448495}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,MDR ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.08, "obj2": 0.7046808330136167}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / Min( DS ,MLU ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.088, "obj2": 0.7025200254412006}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),( FirstVNF_RAM * MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 0.076, "obj2": 0.7571782864219501}, {"determining": "Max( ( FirstVNF_Mem_Server * Max( MRS,Min( MRS ,ARS ) ) ),( ( ACS * AMS ) / MDR ) )", "choosing": "( ( MUR + Max( RMSe,MLU ) ) * ( RRSe + DS ) )", "obj1": 0.488, "obj2": 0.41132113650064933}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( MUM - ( RRSe + RMSe ) )", "obj1": 0.232, "obj2": 0.5922556451531108}, {"determining": "( ( ( ACS + AMS ) - MRS ) * ( RRS * ( PN * MRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) - Max( MUR,CS ) ),( Min( MUM ,MUC ) + ( MUM * DS ) ) )", "obj1": 0.474, "obj2": 0.4168684107916564}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) )", "choosing": "Min( ( RMSe - RMSe ) ,Max( MUC,RMSe ) )", "obj1": 0.222, "obj2": 0.6057338105093132}, {"determining": "Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( Min( PN ,ACS ) / ( Const / RRS ) ) )", "choosing": "Min( Min( ( RMSe + RCSe ) ,( RCSe - MLU ) ) ,( ( RRSe - CS ) * ( RMSe / RRSe ) ) )", "obj1": 0.164, "obj2": 0.6783101183636094}, {"determining": "Max( ( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) ),Min( MDR ,MDR ) )", "choosing": "( RRSe - ( RRSe + RMSe ) )", "obj1": 0.216, "obj2": 0.6257680055513101}, {"determining": "Max( ( Const * CRS ),( ( ACS * AMS ) / MDR ) )", "choosing": "Min( ( RRSe + ( MUR + Max( RMSe,MLU ) ) ) ,( MLU - RMSe ) )", "obj1": 0.214, "obj2": 0.6350774928055435}, {"determining": "( ( ( ACS + AMS ) - MRS ) * ( RRS * ( PN * MRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) - Max( MUR,CS ) ),( Min( MUM ,MUC ) + ( MUM * DS ) ) )", "obj1": 0.48, "obj2": 0.41314532347589755}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - ( ( AMS + RRS ) + ( Const * CRS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_CPU ) - FirstVNF_CPU_Server ) + Max( DDR,CRS ) )", "choosing": "( Max( RMSe,( ( RCSe / RCSe ) - RCSe ) ) / ( ( MUR / MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_Mem_Server ,Const ),( FirstVNF_Mem + CRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( BR * RRS ) ) + ( Max( FirstVNF_CPU_Server,RRS ) + ( BR - DDR ) ) ) )", "choosing": "( ( RMSe - MLU ) - Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( Min( PN ,FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( ( Max( CS,( MUC - MUR ) ) + ( MUC - ( MUR / CS ) ) ) / Min( Min( ( MUC + MUC ) ,RMSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,( Const * CRS ) ) ) )", "choosing": "( ( Max( MLU,MUR ) - ( RMSe + RCSe ) ) * ( ( MUC + RMSe ) - ( DS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,( Const * CRS ) ) ) ) ,BR ) * ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( MUM ,MUC ) + Max( MUC,( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / Min( MUM ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ( ACS + RRS ) ) - Min( ( MRS - PN ) ,( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ARS ) / ( MRS - PN ) )", "choosing": "( ( ( MUR / DS ) * Min( MUC ,MUR ) ) + Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ACS ) - ( ACS + DDR ) )", "choosing": "( ( CS * CS ) / Min( ( ( RCSe + MUC ) / RMSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ACS ) - ( ( PN + FirstVNF_RAM_Server ) + DDR ) )", "choosing": "Min( ( MUC * CS ) ,( CS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( ( ( MUC + RMSe ) - ( DS / MLU ) ) + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,( Const * CRS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( MUC ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Max( ( MDR + ACS ),Min( MDR ,MDR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( Min( DS ,RMSe ) - ( RRSe + RMSe ) ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( ( ARS - ACS ) - ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( CS - Max( MUR,RRSe ) ),Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ACS ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( BR - PN ) - ( Min( PN ,FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( ( Max( CS,( MUC - MUR ) ) + ( MUC - ( MUR / CS ) ) ) / Min( Min( ( MUC + MUC ) ,RMSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ACS ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ) / ( ( MUR - CS ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS - PN ),( FirstVNF_RAM * MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( ( ( MUR / DS ) * Min( MUC ,MUR ) ) + Min( MUC ,DS ) ) ) )", "obj1": 0.068, "obj2": 0.7679651640117438}, {"determining": "Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ACS ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - Max( DS,MUM ) ) ) )", "obj1": 0.498, "obj2": 0.3726701389325489}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.524, "obj2": 0.29176768387621566}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( ( MUR + Max( MUR,MLU ) ) * ( RRSe + DS ) )", "obj1": 0.932, "obj2": 0.06366724750940704}, {"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - MUR ) ) )", "obj1": 0.594, "obj2": 0.28217953390565664}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.678, "obj2": 0.22357190300509458}, {"determining": "( ( FirstVNF_Mem - ( ACS + RRS ) ) - Min( ( MRS - PN ) ,( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) / Max( RRSe,MUC ) )", "obj1": 0.848, "obj2": 0.13641033839328623}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.452, "obj2": 0.40242089668963876}, {"determining": "( ( Max( Min( ( Max( ( Max( ARS,RRS ) / Max( RRS,FirstVNF_Mem ) ),( ( CRS - BR ) / ( DDR * AMS ) ) ) / ( Max( ( FirstVNF_Mem - MRS ),Min( CRS ,CRS ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( FirstVNF_RAM_Server - MRS ),( MDR * PN ) ) - Max( ( MRS * FirstVNF_RAM_Server ),( ACS + PN ) ) ) / Max( ( ( PN - CRS ) * ( AMS - CRS ) ),( ( DDR * FirstVNF_Mem_Server ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ),( ( Max( Max( Min( Const ,RRS ),Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( RRS - MRS ) ) ) * Min( ( ( MDR - BR ) - ( ARS - FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Max( Max( ( ( RRS / FirstVNF_CPU ) / ( Const + Const ) ),Min( ( DDR * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + BR ) ) ),( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),Max( RRS,MRS ) ) - ( ( BR / PN ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) / Max( Max( ( Max( ( ( RRS + ARS ) - ( PN * MRS ) ),( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM / BR ) ) ) * Max( ( Max( FirstVNF_RAM_Server,MRS ) - ( FirstVNF_RAM + Const ) ),( ( FirstVNF_RAM_Server - RRS ) - ( DDR + PN ) ) ) ),( ( ( ( FirstVNF_Mem_Server / BR ) / ( CRS - CRS ) ) * ( Max( AMS,RRS ) + ( ARS - RRS ) ) ) / Max( ( ( ACS - FirstVNF_RAM ) * ( FirstVNF_RAM - MDR ) ),( ( FirstVNF_RAM_Server * ACS ) * ( Const - AMS ) ) ) ) ),Min( ( ( ( ( PN * RRS ) * ( AMS - FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,DDR ) + Min( FirstVNF_RAM_Server ,Const ) ) ) * ( ( Max( BR,FirstVNF_CPU ) * ( BR * RRS ) ) + Max( ( FirstVNF_CPU_Server * ACS ),Min( BR ,FirstVNF_CPU ) ) ) ) ,( ( ( ( CRS - MRS ) + ( MDR - ARS ) ) / ( ( AMS * MRS ) + Min( PN ,PN ) ) ) + ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( CRS / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server * BR ) + Min( ARS ,FirstVNF_Mem ) ) ) ) ) ) ) * Max( ( Max( ( ( Max( Min( Const ,ACS ),( FirstVNF_CPU_Server * MDR ) ) + Min( Max( ACS,FirstVNF_RAM ) ,( MDR - FirstVNF_Mem_Server ) ) ) / Min( ( ( Const + FirstVNF_CPU ) - ( ACS + AMS ) ) ,Min( Max( ACS,FirstVNF_CPU ) ,Max( PN,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + MRS ) ,( ARS * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) + ( ( ( CRS - FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,ACS ) ) - ( Max( FirstVNF_CPU_Server,CRS ) * ( DDR + RRS ) ) ) ) ) / ( ( ( ( Max( RRS,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,Const ) ) - ( ( AMS / DDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( MRS - PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( ( BR - FirstVNF_CPU ) + ( MRS + PN ) ) ) ) + ( ( Min( ( MRS / AMS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * PN ) + ( ARS / FirstVNF_RAM ) ) ) * Min( ( Max( Const,RRS ) + ( FirstVNF_RAM_Server + DDR ) ) ,( Max( PN,BR ) / ( FirstVNF_RAM_Server * AMS ) ) ) ) ) ),( ( ( ( ( ( AMS - RRS ) + Min( RRS ,BR ) ) - ( Max( AMS,ACS ) / Min( AMS ,CRS ) ) ) - Min( ( ( Const * DDR ) - ( FirstVNF_RAM_Server / PN ) ) ,( Max( Const,PN ) * ( FirstVNF_CPU / AMS ) ) ) ) * ( ( ( ( PN + MDR ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( BR + AMS ) / ( RRS + BR ) ) ) + Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / Min( BR ,ARS ) ),( ( AMS * ARS ) * ( MDR * FirstVNF_RAM ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_Mem_Server * ARS ),Min( ACS ,FirstVNF_Mem ) ) ,Max( ( MRS - ACS ),( ARS + FirstVNF_RAM ) ) ) / ( Min( ( FirstVNF_RAM_Server / MDR ) ,( CRS + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM / MRS ) * ( FirstVNF_Mem * MRS ) ) ) ) + ( ( Max( ( PN + MRS ),( MRS * PN ) ) - ( ( DDR * CRS ) * Max( FirstVNF_Mem,RRS ) ) ) / ( Max( ( ARS / PN ),( FirstVNF_CPU - MDR ) ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( MUR + MUM ) * ( Min( ( ( RCSe + MUM ) + ( Min( MUR ,RRSe ) * Min( MLU ,DS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,CS ) + ( CS + ( RMSe / ( MUR * Max( MUR,DS ) ) ) ) ) ) - Max( MUC,MUC ) ) )", "obj1": 0.884, "obj2": 0.09923194798056739}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / ( RRSe / RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.434, "obj2": 0.42616501930602363}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS * FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) + Min( MLU ,CS ) ) ) )", "obj1": 0.254, "obj2": 0.5351521799048644}, {"determining": "Min( ( ( BR * FirstVNF_CPU_Server ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,DS ) )", "obj1": 0.77, "obj2": 0.16126967402840775}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( ( RMSe - MLU ) - ( RRSe + RMSe ) )", "obj1": 0.158, "obj2": 0.661256242592239}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( FirstVNF_RAM * RRS ) ) + ( RRS + PN ) ) ) )", "choosing": "( Max( RRSe,MUM ) - Max( DS,DS ) )", "obj1": 0.42, "obj2": 0.4582976754611636}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 0.234, "obj2": 0.563890034163233}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 0.292, "obj2": 0.5304700760831405}, {"determining": "Min( ( ( BR * ARS ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.658, "obj2": 0.2514950875999371}, {"determining": "Max( Min( Const ,( ( FirstVNF_CPU_Server / CRS ) * ( ( DDR - ( BR / FirstVNF_Mem_Server ) ) - MDR ) ) ),( FirstVNF_RAM * MDR ) )", "choosing": "( ( MLU * MLU ) + ( RMSe - CS ) )", "obj1": 0.356, "obj2": 0.4886121421221701}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,MDR ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.08, "obj2": 0.7046808330136167}, {"determining": "( Max( ARS,Const ) / Max( Const,RRS ) )", "choosing": "( Max( MUM,CS ) * ( MLU - RCSe ) )", "obj1": 0.194, "obj2": 0.6377937247706565}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( ( FirstVNF_Mem_Server - ( BR / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( ( MLU * MLU ) + ( RMSe - RRSe ) ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 0.076, "obj2": 0.7565026744277308}, {"determining": "( Min( ( ( BR * ARS ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) ) * ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( MUM ,MUC ) + Max( MUC,( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( Min( ( MUR / MUR ) ,Min( MUM ,RRSe ) ) + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) ) )", "obj1": 0.64, "obj2": 0.2685385693195389}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),Max( Const,BR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.108, "obj2": 0.6889524391415399}, {"determining": "( ( ( ( ( Max( ( ( PN + PN ) + Min( ACS ,MDR ) ),Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS - MDR ) / ( FirstVNF_Mem * ARS ) ),Max( ( MDR - AMS ),( DDR - ACS ) ) ) ) + Max( ( ( ( Const + ACS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ( Max( Const,Const ) - ( RRS / FirstVNF_RAM_Server ) ) ),( ( ( Const * AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ARS ) * ( FirstVNF_Mem_Server * AMS ) ) ) ) ) * ( Min( Max( ( Min( MRS ,PN ) / ( PN / ARS ) ),( Max( FirstVNF_RAM_Server,DDR ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ,( Min( ( BR - DDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ( DDR * FirstVNF_RAM ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Max( ACS,FirstVNF_CPU ) / ( CRS / MRS ) ) / ( ( FirstVNF_CPU + RRS ) / ( FirstVNF_CPU - ARS ) ) ) ,( ( ( CRS - PN ) + Max( FirstVNF_CPU_Server,MDR ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( Min( ( ( FirstVNF_RAM * PN ) / ( Const * PN ) ) ,( Max( PN,MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) + ( Max( Min( DDR ,PN ),( FirstVNF_RAM / DDR ) ) / ( Min( Const ,PN ) - ( RRS / ARS ) ) ) ) + ( ( Max( ( ARS - RRS ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( AMS * Const ) / ( FirstVNF_RAM + MDR ) ) ) / ( ( ( MDR + FirstVNF_Mem ) - ( MDR + CRS ) ) / Max( ( FirstVNF_Mem_Server / PN ),( BR - FirstVNF_CPU ) ) ) ) ),Min( ( ( Min( ( Const * ACS ) ,( AMS * RRS ) ) + Min( ( AMS * FirstVNF_RAM ) ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( ( ( ARS / FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,DDR ) ) / ( ( ACS * BR ) - Max( FirstVNF_CPU_Server,DDR ) ) ) ) ,( ( Max( ( FirstVNF_Mem * AMS ),( MRS / PN ) ) / ( ( ARS / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM * RRS ) + ( FirstVNF_Mem + ACS ) ) * Min( ( MRS - MDR ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) + ( ( ( ( Min( ( ( BR + MRS ) - ( MDR - FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) ) / Max( ( ( ACS * FirstVNF_CPU ) * Min( CRS ,CRS ) ),( Max( FirstVNF_RAM_Server,Const ) / ( ARS * CRS ) ) ) ) - ( ( Min( ( FirstVNF_Mem + MDR ) ,( FirstVNF_Mem_Server - CRS ) ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( FirstVNF_Mem,RRS ) ) ) / ( ( Min( RRS ,MDR ) / Min( RRS ,MRS ) ) + Min( Max( CRS,ARS ) ,( AMS * ARS ) ) ) ) ) + ( Min( ( Max( ( MDR * FirstVNF_RAM ),( PN + AMS ) ) + ( ( MRS - MRS ) * ( PN / AMS ) ) ) ,( ( Max( ARS,CRS ) + Min( FirstVNF_Mem ,DDR ) ) * ( Max( FirstVNF_CPU,MDR ) * ( PN / RRS ) ) ) ) - ( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) ,( ( FirstVNF_RAM * PN ) + ( FirstVNF_CPU - Const ) ) ) - ( ( Max( AMS,CRS ) * ( FirstVNF_CPU_Server - MRS ) ) - ( ( RRS + FirstVNF_RAM_Server ) + ( Const - ARS ) ) ) ) ) ) - ( ( Min( ( Min( ( BR / Const ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( ( AMS - ACS ) / ( DDR / Const ) ) ) ,Min( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_RAM / MRS ) + ( PN * FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( PN - Const ) / ( FirstVNF_RAM + RRS ) ) + Max( ( BR * FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) ,( Min( Max( PN,ARS ) ,Min( CRS ,BR ) ) / ( ( MRS / MRS ) / ( ARS + FirstVNF_RAM ) ) ) ) ) - ( Min( ( Min( ( Const * FirstVNF_CPU ) ,( ARS / AMS ) ) - ( ( MRS * DDR ) - Min( RRS ,PN ) ) ) ,( ( Max( ACS,RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * Max( ( MDR / FirstVNF_RAM_Server ),Max( Const,PN ) ) ) ) / ( ( ( ( AMS + Const ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) - ( Max( ( MDR * FirstVNF_CPU ),Min( ARS ,FirstVNF_RAM_Server ) ) * Min( Max( FirstVNF_RAM,ARS ) ,( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( DS - Max( CS,RMSe ) ) * ( CS - ( RCSe - ( Min( Max( Min( ( RCSe + RMSe ) ,Max( RCSe,RCSe ) ),MUM ) ,RRSe ) + ( MUC + ( ( Max( MUC,RMSe ) + MUR ) - ( ( MUR - MUC ) / MUC ) ) ) ) ) ) )", "obj1": 0.304, "obj2": 0.5073072662529942}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / Min( MUM ,MUC ) )", "obj1": 0.902, "obj2": 0.07986668209004534}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( MUM - ( RRSe + RMSe ) )", "obj1": 0.232, "obj2": 0.5922556451531108}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * ( FirstVNF_CPU * MDR ) ) ) + ( PN * ACS ) )", "choosing": "Min( ( RCSe * MUC ) ,Max( DS,( MLU - MUR ) ) )", "obj1": 0.392, "obj2": 0.47984438798015433}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) )", "choosing": "Min( ( RMSe - RMSe ) ,Max( MUC,RMSe ) )", "obj1": 0.222, "obj2": 0.6057338105093132}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * ( FirstVNF_CPU * MDR ) ) ) / ( PN * ACS ) )", "choosing": "Min( ( RCSe * MUC ) ,Max( DS,( MLU - MUR ) ) )", "obj1": 0.394, "obj2": 0.46847297824669254}, {"determining": "Min( ( ( Min( Max( AMS,FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,BR ) ) / Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,( RRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ,Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RMSe ) / ( DS + Max( MUR,RRSe ) ) )", "obj1": 0.132, "obj2": 0.6834203948717162}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,( ( ACS + AMS ) - MRS ) ) ) ,MDR ) )", "choosing": "( MUM - ( Min( MUM ,MUC ) + ( MUM * DS ) ) )", "obj1": 0.146, "obj2": 0.6761039181727555}, {"determining": "Max( ( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) ),Min( MDR ,MDR ) )", "choosing": "( RRSe - ( RRSe + RMSe ) )", "obj1": 0.216, "obj2": 0.6257680055513101}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( Const - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.916, "obj2": 0.07383868431862696}, {"determining": "( ( ( ( FirstVNF_CPU_Server * RRS ) + Min( FirstVNF_Mem ,CRS ) ) / ( ( DDR + ARS ) / ( MRS - PN ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,( Const * CRS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - RRSe ) ,( CS / DS ) ) ) / MUC )", "obj1": 0.33, "obj2": 0.49289289915876455}, {"determining": "( Max( ( Min( ( ( Min( ( ACS / DDR ) ,( ACS / FirstVNF_RAM ) ) + ( ( MRS / FirstVNF_RAM_Server ) / ( AMS / Const ) ) ) * ( ( ( RRS + FirstVNF_Mem_Server ) - Max( MRS,Const ) ) - ( ( FirstVNF_Mem_Server + Const ) - ( FirstVNF_RAM * MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ),Max( ( RRS + PN ),Min( FirstVNF_RAM ,AMS ) ) ) / Max( ( ( FirstVNF_RAM * ARS ) + ( MRS - Const ) ),Min( ( ARS + ARS ) ,( MRS * FirstVNF_RAM ) ) ) ) ) - Min( ( ( ( Max( ACS,Const ) - ( DDR - FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,ACS ) - ( FirstVNF_RAM / Const ) ) ) + ( Max( ( Const - ACS ),( AMS * FirstVNF_Mem_Server ) ) / ( Max( ARS,Const ) + ( AMS + FirstVNF_RAM_Server ) ) ) ) ,( Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( RRS,AMS ) ),Min( ( AMS / DDR ) ,Max( MRS,ACS ) ) ) + ( ( Max( ARS,MDR ) / ( CRS + FirstVNF_Mem_Server ) ) + ( ( DDR - MRS ) * ( ACS + FirstVNF_RAM ) ) ) ) ) ),Min( ( ( ( Min( ( ARS - CRS ) ,( Const / FirstVNF_RAM ) ) * ( Max( DDR,FirstVNF_CPU ) - Min( DDR ,RRS ) ) ) * ( Min( ( FirstVNF_Mem - CRS ) ,( PN + DDR ) ) + ( ( DDR - FirstVNF_Mem_Server ) / ( RRS * FirstVNF_RAM ) ) ) ) + ( Min( ( ( FirstVNF_Mem_Server + BR ) / ( DDR / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,RRS ) ) ) / ( ( ( PN - AMS ) + Max( DDR,MRS ) ) + ( Max( Const,RRS ) / Min( FirstVNF_CPU ,BR ) ) ) ) ) ,( ( ( ( ( MRS * FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem_Server * ARS ) ) ) / ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( AMS ,ARS ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / BR ) ) ) ) + ( ( Min( ( ARS - FirstVNF_Mem ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) * ( ( AMS * RRS ) / ( ACS * ARS ) ) ) - ( Max( ( AMS - DDR ),Min( ARS ,FirstVNF_CPU_Server ) ) - ( ( ARS - MRS ) / Min( RRS ,BR ) ) ) ) ) ) ) / ( ( ( ( ( ( ( Const * ARS ) - ( CRS + RRS ) ) - Max( Max( PN,ACS ),( PN / FirstVNF_CPU_Server ) ) ) - ( ( ( BR - Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( MRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server - BR ) + ( AMS - FirstVNF_Mem ) ) / ( ( RRS * MRS ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem / MRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) - ( ( ( ( ( MRS * RRS ) - ( RRS * DDR ) ) + ( Max( ACS,CRS ) + ( Const + CRS ) ) ) * Max( Max( ( MRS - DDR ),( FirstVNF_Mem_Server + BR ) ),( ( PN / BR ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) - ( ( Min( ( AMS * BR ) ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) * Max( ACS,CRS ) ) / ( ( Const + FirstVNF_Mem ) + Min( AMS ,PN ) ) ) ) ) ) * ( ( Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,Min( RRS ,ACS ) ) * Min( Min( MDR ,Const ) ,( CRS - RRS ) ) ) ,Max( ( Min( CRS ,AMS ) - ( ARS * AMS ) ),( Max( AMS,ACS ) * ( ARS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( DDR ,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) - ( ( RRS + ACS ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / BR ) ) / ( ( FirstVNF_Mem + AMS ) / ( ARS / MRS ) ) ) ) ) / ( ( ( Max( ( MRS / Const ),( PN / ACS ) ) / ( ( FirstVNF_RAM - MRS ) * ( CRS * DDR ) ) ) + ( Min( Min( Const ,FirstVNF_Mem ) ,( ACS / CRS ) ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) / ( Min( ( ( ACS + FirstVNF_RAM_Server ) - ( MRS / BR ) ) ,( ( BR * FirstVNF_CPU_Server ) + Min( ACS ,MDR ) ) ) + Max( ( ( PN * PN ) * Max( FirstVNF_Mem,ACS ) ),( ( ARS * MDR ) / ( MDR + RRS ) ) ) ) ) ) ) )", "choosing": "Min( Max( Max( DS,Max( Max( MUC,Min( RMSe ,MUM ) ),MLU ) ),( ( Max( RRSe,MUM ) - RMSe ) + Max( RMSe,( Min( RCSe ,( MUR + ( RCSe / MUR ) ) ) * CS ) ) ) ) ,Min( DS ,RMSe ) )", "obj1": 0.776, "obj2": 0.15093412214412225}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / Min( DS ,MLU ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.088, "obj2": 0.7025200254412006}, {"determining": "( ( FirstVNF_CPU * ( ( MRS / PN ) / Min( FirstVNF_RAM_Server ,DDR ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "( Max( RRSe,MUM ) / CS )", "obj1": 0.318, "obj2": 0.4971305920636585}, {"determining": "Min( ( ( BR * ARS ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + DDR ) )", "choosing": "Min( ( MUC / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.648, "obj2": 0.26592813651540165}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( MUM - ( RRSe + RMSe ) )", "obj1": 0.2, "obj2": 0.6297593130205995}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( Min( PN ,ACS ) / ( Const / RRS ) ) )", "choosing": "( Max( RRSe,MUM ) - Max( RRSe,DS ) )", "obj1": 0.198, "obj2": 0.632407425834142}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),( FirstVNF_RAM * MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 0.07, "obj2": 0.7612588459934898}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( ( FirstVNF_Mem_Server - ( BR / FirstVNF_Mem_Server ) ) - PN ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( ( MLU * MLU ) + ( RMSe - RRSe ) ) ) ),( ( ( MUC - DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 0.072, "obj2": 0.7598045340814759}, {"determining": "( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU / MUR ) ,( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - ( ( AMS + RRS ) + ( Const * CRS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_CPU ) - FirstVNF_CPU_Server ) + Max( DDR,CRS ) )", "choosing": "( Max( RMSe,( ( RCSe / RCSe ) - RCSe ) ) / ( ( MUR / MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MLU ) + ( RMSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - PN ) - ( Min( PN ,FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( ( Max( CS,( MUC - MUR ) ) + ( MUC - ( MUR / CS ) ) ) / Min( Min( ( MUC + MUC ) ,RMSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ACS ),Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) ) ,MDR ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.044, "obj2": 0.7138663015851563}, {"determining": "Min( FirstVNF_Mem_Server ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MLU ) / CS ),( ( MUC * MUC ) * ( RRSe - MUR ) ) )", "obj1": 0.63, "obj2": 0.2578342586677727}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - RMSe ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.476, "obj2": 0.30548562776180105}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.46, "obj2": 0.39575933927728735}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.968, "obj2": 0.03205240999852208}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * ( FirstVNF_CPU * MDR ) ) ) / ( PN * ACS ) )", "choosing": "Min( ( RCSe * MUC ) ,Max( DS,( MLU - MUR ) ) )", "obj1": 0.394, "obj2": 0.46847297824669254}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS * FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) + Min( MLU ,CS ) ) ) )", "obj1": 0.254, "obj2": 0.5351521799048644}, {"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "Max( Min( Const ,( ( FirstVNF_CPU_Server / CRS ) * ( ( DDR - ( BR / FirstVNF_Mem_Server ) ) - MDR ) ) ),Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU * MLU ) + ( Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - MUR ) ) ) - CS ) )", "obj1": 0.348, "obj2": 0.46861766477583755}, {"determining": "( ( Max( Min( ( Max( ( Max( ARS,RRS ) / Max( RRS,FirstVNF_Mem ) ),( ( CRS - BR ) / ( DDR * AMS ) ) ) / ( Max( ( FirstVNF_Mem - MRS ),Min( CRS ,CRS ) ) + ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / Min( MDR ,FirstVNF_RAM_Server ) ) ) ) ,( ( Max( ( FirstVNF_RAM_Server - MRS ),( MDR * PN ) ) - Max( ( MRS * FirstVNF_RAM_Server ),( ACS + PN ) ) ) / Max( ( ( PN - CRS ) * ( AMS - CRS ) ),( ( DDR * FirstVNF_Mem_Server ) * ( BR - FirstVNF_Mem_Server ) ) ) ) ),( ( Max( Max( Min( Const ,RRS ),Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ),Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( RRS - MRS ) ) ) * Min( ( ( MDR - BR ) - ( ARS - FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) / Max( Max( ( ( RRS / FirstVNF_CPU ) / ( Const + Const ) ),Min( ( DDR * FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + BR ) ) ),( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),Max( RRS,MRS ) ) - ( ( BR / PN ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) ) ) ) / Max( Max( ( Max( ( ( RRS + ARS ) - ( PN * MRS ) ),( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM / BR ) ) ) * Max( ( Max( FirstVNF_RAM_Server,MRS ) - ( FirstVNF_RAM + Const ) ),( ( FirstVNF_RAM_Server - RRS ) - ( DDR + PN ) ) ) ),( ( ( ( FirstVNF_Mem_Server / BR ) / ( CRS - CRS ) ) * ( Max( AMS,RRS ) + ( ARS - RRS ) ) ) / Max( ( ( ACS - FirstVNF_RAM ) * ( FirstVNF_RAM - MDR ) ),( ( FirstVNF_RAM_Server * ACS ) * ( Const - AMS ) ) ) ) ),Min( ( ( ( ( PN * RRS ) * ( AMS - FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,DDR ) + Min( FirstVNF_RAM_Server ,Const ) ) ) * ( ( Max( BR,FirstVNF_CPU ) * ( BR * RRS ) ) + Max( ( FirstVNF_CPU_Server * ACS ),Min( BR ,FirstVNF_CPU ) ) ) ) ,( ( ( ( CRS - MRS ) + ( MDR - ARS ) ) / ( ( AMS * MRS ) + Min( PN ,PN ) ) ) + ( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),( CRS / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server * BR ) + Min( ARS ,FirstVNF_Mem ) ) ) ) ) ) ) * Max( ( Max( ( ( Max( Min( Const ,ACS ),( FirstVNF_CPU_Server * MDR ) ) + Min( Max( ACS,FirstVNF_RAM ) ,( MDR - FirstVNF_Mem_Server ) ) ) / Min( ( ( Const + FirstVNF_CPU ) - ( ACS + AMS ) ) ,Min( Max( ACS,FirstVNF_CPU ) ,Max( PN,FirstVNF_CPU ) ) ) ),( ( Min( ( FirstVNF_CPU + MRS ) ,( ARS * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM / BR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) + ( ( ( CRS - FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,ACS ) ) - ( Max( FirstVNF_CPU_Server,CRS ) * ( DDR + RRS ) ) ) ) ) / ( ( ( ( Max( RRS,FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,Const ) ) - ( ( AMS / DDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) ) - ( ( ( MRS - PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( ( BR - FirstVNF_CPU ) + ( MRS + PN ) ) ) ) + ( ( Min( ( MRS / AMS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * PN ) + ( ARS / FirstVNF_RAM ) ) ) * Min( ( Max( Const,RRS ) + ( FirstVNF_RAM_Server + DDR ) ) ,( Max( PN,BR ) / ( FirstVNF_RAM_Server * AMS ) ) ) ) ) ),( ( ( ( ( ( AMS - RRS ) + Min( RRS ,BR ) ) - ( Max( AMS,ACS ) / Min( AMS ,CRS ) ) ) - Min( ( ( Const * DDR ) - ( FirstVNF_RAM_Server / PN ) ) ,( Max( Const,PN ) * ( FirstVNF_CPU / AMS ) ) ) ) * ( ( ( ( PN + MDR ) - ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / ( ( BR + AMS ) / ( RRS + BR ) ) ) + Max( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / Min( BR ,ARS ) ),( ( AMS * ARS ) * ( MDR * FirstVNF_RAM ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_Mem_Server * ARS ),Min( ACS ,FirstVNF_Mem ) ) ,Max( ( MRS - ACS ),( ARS + FirstVNF_RAM ) ) ) / ( Min( ( FirstVNF_RAM_Server / MDR ) ,( CRS + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM / MRS ) * ( FirstVNF_Mem * MRS ) ) ) ) + ( ( Max( ( PN + MRS ),( MRS * PN ) ) - ( ( DDR * CRS ) * Max( FirstVNF_Mem,RRS ) ) ) / ( Max( ( ARS / PN ),( FirstVNF_CPU - MDR ) ) - Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( MUR + MUM ) * ( Min( ( ( RCSe + MUM ) + ( Min( MUR ,RRSe ) * Min( MLU ,DS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,CS ) + ( CS + ( RMSe / ( MUR * Max( MUR,DS ) ) ) ) ) ) - Max( MUC,MUC ) ) )", "obj1": 0.884, "obj2": 0.09923194798056739}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / Min( MUM ,MUC ) )", "obj1": 0.682, "obj2": 0.21924000230634058}, {"determining": "Min( ( ( BR * ARS ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "( Max( RRSe,MUM ) / CS )", "obj1": 0.652, "obj2": 0.22592230647525324}, {"determining": "( ( FirstVNF_Mem - ( ACS + RRS ) ) - Min( ( MRS - PN ) ,( BR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MLU * MLU ) ) / Max( RRSe,MUC ) )", "obj1": 0.844, "obj2": 0.13322503537090144}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "( DDR * ( FirstVNF_RAM * Const ) )", "choosing": "( Max( ( MUR / MLU ),MUM ) / CS )", "obj1": 0.314, "obj2": 0.4817211179321954}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,( ( ACS + AMS ) - MRS ) ) ) ,MDR ) )", "choosing": "( MUM - ( Min( MUM ,MUC ) + ( MUM * DS ) ) )", "obj1": 0.146, "obj2": 0.6761039181727555}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.234, "obj2": 0.5609882703540577}, {"determining": "( ( FirstVNF_Mem - ( ACS + RRS ) ) - Min( ( MRS - PN ) ,( Const / DDR ) ) )", "choosing": "( ( MLU * MLU ) + ( RMSe - CS ) )", "obj1": 0.85, "obj2": 0.11517143434380694}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * FirstVNF_RAM_Server ) ) * RRS ) ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.414, "obj2": 0.4322003945682874}, {"determining": "Min( ( ( BR / BR ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.71, "obj2": 0.1655841308850983}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.938, "obj2": 0.05346913663613571}, {"determining": "Min( ( ( BR * FirstVNF_CPU_Server ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,DS ) )", "obj1": 0.77, "obj2": 0.16126967402840775}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "Min( ( RMSe - RMSe ) ,MUC )", "obj1": 0.232, "obj2": 0.5851661165044125}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - FirstVNF_CPU ) - ( CRS + FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( Max( DS,( MLU - MUR ) ) / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.154, "obj2": 0.6464292699006422}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( Max( RRSe,MUM ) / CS )", "obj1": 0.9, "obj2": 0.07974384022308928}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.114, "obj2": 0.6834058288483529}, {"determining": "Min( ( ( FirstVNF_RAM_Server - MDR ) * ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( Min( PN ,ACS ) / ( Const / RRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( MUM - MUC ),CS ) )", "obj1": 0.29, "obj2": 0.5188025495605877}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.452, "obj2": 0.40242089668963876}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / ( RRSe / RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.434, "obj2": 0.42616501930602363}, {"determining": "Max( Min( MDR ,ACS ),( Max( ( ( BR * ARS ) / PN ),( FirstVNF_CPU * AMS ) ) * MDR ) )", "choosing": "( Min( MUC ,DS ) - ( RRSe * RMSe ) )", "obj1": 0.168, "obj2": 0.6407494321906243}, {"determining": "Max( ( ACS + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( ( Min( MUC ,MUM ) + ( MLU - RMSe ) ) - ( RRSe + RMSe ) )", "obj1": 0.2, "obj2": 0.6231796739419708}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,DS ) + ( MUR * DS ) ) )", "obj1": 0.096, "obj2": 0.6879118771221082}, {"determining": "Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),Max( DDR,FirstVNF_CPU ) )", "choosing": "Min( ( RMSe - RMSe ) ,Max( MUC,RMSe ) )", "obj1": 0.222, "obj2": 0.6057338105093132}, {"determining": "Max( ( MDR + ACS ),( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.066, "obj2": 0.706725301023299}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( Const - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.916, "obj2": 0.07383868431862696}, {"determining": "( ( ( ( Min( PN ,ACS ) / ( Const / RRS ) ) + Min( FirstVNF_Mem ,CRS ) ) - ( ( DDR + ARS ) / ( MRS - PN ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,( Const * CRS ) ) ) )", "choosing": "( ( Max( RRSe,MUM ) - Max( RRSe,DS ) ) / MUC )", "obj1": 0.212, "obj2": 0.60729696013821}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / RRS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( DS,CS ) )", "obj1": 0.306, "obj2": 0.5053648126392697}, {"determining": "( Max( ( Min( ( ( Min( ( ACS / DDR ) ,( ACS / FirstVNF_RAM ) ) + ( ( MRS / FirstVNF_RAM_Server ) / ( AMS / Const ) ) ) * ( ( ( RRS + FirstVNF_Mem_Server ) - Max( MRS,Const ) ) - ( ( FirstVNF_Mem_Server + Const ) - ( FirstVNF_RAM * MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ),Max( ( RRS + PN ),Min( FirstVNF_RAM ,AMS ) ) ) / Max( ( ( FirstVNF_RAM * ARS ) + ( MRS - Const ) ),Min( ( ARS + ARS ) ,( MRS * FirstVNF_RAM ) ) ) ) ) - Min( ( ( ( Max( ACS,Const ) - ( DDR - FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,ACS ) - ( FirstVNF_RAM / Const ) ) ) + ( Max( ( Const - ACS ),( AMS * FirstVNF_Mem_Server ) ) / ( Max( ARS,Const ) + ( AMS + FirstVNF_RAM_Server ) ) ) ) ,( Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( RRS,AMS ) ),Min( ( AMS / DDR ) ,Max( MRS,ACS ) ) ) + ( ( Max( ARS,MDR ) / ( CRS + FirstVNF_Mem_Server ) ) + ( ( DDR - MRS ) * ( ACS + FirstVNF_RAM ) ) ) ) ) ),Min( ( ( ( Min( ( ARS - CRS ) ,( Const / FirstVNF_RAM ) ) * ( Max( DDR,FirstVNF_CPU ) - Min( DDR ,RRS ) ) ) * ( Min( ( FirstVNF_Mem - CRS ) ,( PN + DDR ) ) + ( ( DDR - FirstVNF_Mem_Server ) / ( RRS * FirstVNF_RAM ) ) ) ) + ( Min( ( ( FirstVNF_Mem_Server + BR ) / ( DDR / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,RRS ) ) ) / ( ( ( PN - AMS ) + Max( DDR,MRS ) ) + ( Max( Const,RRS ) / Min( FirstVNF_CPU ,BR ) ) ) ) ) ,( ( ( ( ( MRS * FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem_Server * ARS ) ) ) / ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( AMS ,ARS ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / BR ) ) ) ) + ( ( Min( ( ARS - FirstVNF_Mem ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) * ( ( AMS * RRS ) / ( ACS * ARS ) ) ) - ( Max( ( AMS - DDR ),Min( ARS ,FirstVNF_CPU_Server ) ) - ( ( ARS - MRS ) / Min( RRS ,BR ) ) ) ) ) ) ) / ( ( ( ( ( ( ( Const * ARS ) - ( CRS + RRS ) ) - Max( Max( PN,ACS ),( PN / FirstVNF_CPU_Server ) ) ) - ( ( ( BR - Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( MRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server - BR ) + ( AMS - FirstVNF_Mem ) ) / ( ( RRS * MRS ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem / MRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) - ( ( ( ( ( MRS * RRS ) - ( RRS * DDR ) ) + ( Max( ACS,CRS ) + ( Const + CRS ) ) ) * Max( Max( ( MRS - DDR ),( FirstVNF_Mem_Server + BR ) ),( ( PN / BR ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) - ( ( Min( ( AMS * BR ) ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) * Max( ACS,CRS ) ) / ( ( Const + FirstVNF_Mem ) + Min( AMS ,PN ) ) ) ) ) ) * ( ( Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,Min( RRS ,ACS ) ) * Min( Min( MDR ,Const ) ,( CRS - RRS ) ) ) ,Max( ( Min( CRS ,AMS ) - ( ARS * AMS ) ),( Max( AMS,ACS ) * ( ARS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( DDR ,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) - ( ( RRS + ACS ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / BR ) ) / ( ( FirstVNF_Mem + AMS ) / ( ARS / MRS ) ) ) ) ) / ( ( ( Max( ( MRS / Const ),( PN / ACS ) ) / ( ( FirstVNF_RAM - MRS ) * ( CRS * DDR ) ) ) + ( Min( Min( Const ,FirstVNF_Mem ) ,( ACS / CRS ) ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) / ( Min( ( ( ACS + FirstVNF_RAM_Server ) - ( MRS / BR ) ) ,( ( BR * FirstVNF_CPU_Server ) + Min( ACS ,MDR ) ) ) + Max( ( ( PN * PN ) * Max( FirstVNF_Mem,ACS ) ),( ( ARS * MDR ) / ( MDR + RRS ) ) ) ) ) ) ) )", "choosing": "Min( Max( Max( DS,Max( Max( MUC,Min( RMSe ,MUM ) ),MLU ) ),( ( Max( RRSe,MUM ) - RMSe ) + Max( RMSe,( Min( RCSe ,( MUR + ( RCSe / MUR ) ) ) * CS ) ) ) ) ,Min( DS ,RMSe ) )", "obj1": 0.776, "obj2": 0.15093412214412225}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.678, "obj2": 0.22357190300509458}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( MUM - ( RRSe + RMSe ) )", "obj1": 0.19, "obj2": 0.6324926892178221}, {"determining": "Max( Min( Const ,( ( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) * ( ( DDR - ( BR / FirstVNF_Mem_Server ) ) - MDR ) ) ),( FirstVNF_RAM * MDR ) )", "choosing": "( ( MLU * MLU ) + ( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) ) )", "obj1": 0.088, "obj2": 0.7013331140891231}, {"determining": "( ( ( ( ( Max( ( ( PN + PN ) + Min( ACS ,MDR ) ),Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS - MDR ) / ( FirstVNF_Mem * ARS ) ),Max( ( MDR - AMS ),( DDR - ACS ) ) ) ) + Max( ( ( ( Const + ACS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ( Max( Const,Const ) - ( RRS / FirstVNF_RAM_Server ) ) ),( ( ( Const * AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ARS ) * ( FirstVNF_Mem_Server * AMS ) ) ) ) ) * ( Min( Max( ( Min( MRS ,PN ) / ( PN / ARS ) ),( Max( FirstVNF_RAM_Server,DDR ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ,( Min( ( BR - DDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ( DDR * FirstVNF_RAM ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Max( ACS,FirstVNF_CPU ) / ( CRS / MRS ) ) / ( ( FirstVNF_CPU + RRS ) / ( FirstVNF_CPU - ARS ) ) ) ,( ( ( CRS - PN ) + Max( FirstVNF_CPU_Server,MDR ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( Min( ( ( FirstVNF_RAM * PN ) / ( Const * PN ) ) ,( Max( PN,MRS ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) + ( Max( Min( DDR ,PN ),( FirstVNF_RAM / DDR ) ) / ( Min( Const ,PN ) - ( RRS / ARS ) ) ) ) + ( ( Max( ( ARS - RRS ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( AMS * Const ) / ( FirstVNF_RAM + MDR ) ) ) / ( ( ( MDR + FirstVNF_Mem ) - ( MDR + CRS ) ) / Max( ( FirstVNF_Mem_Server / PN ),( BR - FirstVNF_CPU ) ) ) ) ),Min( ( ( Min( ( Const * ACS ) ,( AMS * RRS ) ) + Min( ( AMS * FirstVNF_RAM ) ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( ( ( ARS / FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,DDR ) ) / ( ( ACS * BR ) - Max( FirstVNF_CPU_Server,DDR ) ) ) ) ,( ( Max( ( FirstVNF_Mem * AMS ),( MRS / PN ) ) / ( ( ARS / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM * RRS ) + ( FirstVNF_Mem + ACS ) ) * Min( ( MRS - MDR ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) + ( ( ( ( Min( ( ( BR + MRS ) - ( MDR - FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) ) / Max( ( ( ACS * FirstVNF_CPU ) * Min( CRS ,CRS ) ),( Max( FirstVNF_RAM_Server,Const ) / ( ARS * CRS ) ) ) ) - ( ( Min( ( FirstVNF_Mem + MDR ) ,( FirstVNF_Mem_Server - CRS ) ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( FirstVNF_Mem,RRS ) ) ) / ( ( Min( RRS ,MDR ) / Min( RRS ,MRS ) ) + Min( Max( CRS,ARS ) ,( AMS * ARS ) ) ) ) ) + ( Min( ( Max( ( MDR * FirstVNF_RAM ),( PN + AMS ) ) + ( ( MRS - MRS ) * ( PN / AMS ) ) ) ,( ( Max( ARS,CRS ) + Min( FirstVNF_Mem ,DDR ) ) * ( Max( FirstVNF_CPU,MDR ) * ( PN / RRS ) ) ) ) - ( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) ,( ( FirstVNF_RAM * PN ) + ( FirstVNF_CPU - Const ) ) ) - ( ( Max( AMS,CRS ) * ( FirstVNF_CPU_Server - MRS ) ) - ( ( RRS + FirstVNF_RAM_Server ) + ( Const - ARS ) ) ) ) ) ) - ( ( Min( ( Min( ( BR / Const ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( ( AMS - ACS ) / ( DDR / Const ) ) ) ,Min( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_RAM / MRS ) + ( PN * FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( PN - Const ) / ( FirstVNF_RAM + RRS ) ) + Max( ( BR * FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) ,( Min( Max( PN,ARS ) ,Min( CRS ,BR ) ) / ( ( MRS / MRS ) / ( ARS + FirstVNF_RAM ) ) ) ) ) - ( Min( ( Min( ( Const * FirstVNF_CPU ) ,( ARS / AMS ) ) - ( ( MRS * DDR ) - Min( RRS ,PN ) ) ) ,( ( Max( ACS,RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * Max( ( MDR / FirstVNF_RAM_Server ),Max( Const,PN ) ) ) ) / ( ( ( ( AMS + Const ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) - ( Max( ( MDR * FirstVNF_CPU ),Min( ARS ,FirstVNF_RAM_Server ) ) * Min( Max( FirstVNF_RAM,ARS ) ,( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( DS - Max( CS,RMSe ) ) * ( CS - ( RCSe - ( Min( Max( Min( ( RCSe + RMSe ) ,Max( RCSe,RCSe ) ),MUM ) ,RRSe ) + ( MUC + ( ( Max( MUC,RMSe ) + MUR ) - ( ( MUR - MUC ) / MUC ) ) ) ) ) ) )", "obj1": 0.304, "obj2": 0.5073072662529942}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( MUM * ( RRSe + DS ) )", "obj1": 0.93, "obj2": 0.06637621533303611}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / Min( RRSe ,CS ) )", "obj1": 0.292, "obj2": 0.5171950066727686}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,MDR ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.078, "obj2": 0.7032718557715204}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR - FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RRSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.426, "obj2": 0.4288600622756617}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( ( MUR + Max( MUR,MLU ) ) * ( RRSe + DS ) )", "obj1": 0.932, "obj2": 0.06366724750940704}, {"determining": "Max( ( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ),Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( ( MUM / RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.192, "obj2": 0.6297082041257765}], "5": [{"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * RRS ) ) )", "choosing": "( ( MLU * MLU ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MLU ) + ( RMSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) + FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Min( ( ( RCSe + MUM ) + ( Min( MUR ,RRSe ) * Min( MLU ,DS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,CS ) + ( CS + ( RMSe / ( MUR * Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.832, "obj2": 0.06324494256385632}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( MUM * ( RRSe + DS ) )", "obj1": 0.63, "obj2": 0.22815019860864172}, {"determining": "Min( ( ( ( BR / BR ) / ( BR * FirstVNF_CPU_Server ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( MUR / MUR ) ) )", "obj1": 0.544, "obj2": 0.256820534553675}, {"determining": "Min( Min( ( BR / BR ) ,( BR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MLU ) ) / ( RRSe * MUC ) )", "obj1": 0.434, "obj2": 0.3391173506293991}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,RRS )", "choosing": "( ( ( MLU * MLU ) + ( RMSe - CS ) ) + ( MUR * DS ) )", "obj1": 0.432, "obj2": 0.42507636326956477}, {"determining": "( ( ARS + Max( FirstVNF_CPU,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,( ( RCSe * DS ) - ( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM * MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.192, "obj2": 0.5833227054707097}, {"determining": "( ( FirstVNF_Mem - ( ARS + RRS ) ) - Min( ( MRS - PN ) ,( BR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR / MUM ) ,Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.928, "obj2": 0.0582744532243963}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( MUM - ( RRSe + RMSe ) )", "obj1": 0.19, "obj2": 0.6324926892178221}, {"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - RMSe ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.476, "obj2": 0.30548562776180105}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.526, "obj2": 0.26075491620965363}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,Max( Const,BR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MLU ) + ( ( CS * DS ) - CS ) )", "obj1": 0.372, "obj2": 0.4566816703168448}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / Min( MUM ,MUC ) )", "obj1": 0.682, "obj2": 0.21924000230634058}, {"determining": "( ( AMS * PN ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( RMSe ,CS ) ) ) )", "obj1": 0.348, "obj2": 0.4680226196405679}, {"determining": "Max( ( MDR + ACS ),Min( Max( ( MDR / PN ),Max( FirstVNF_CPU,( ( ACS + AMS ) - MRS ) ) ) ,MDR ) )", "choosing": "( MUM - ( Min( MUM ,MUC ) + ( MUM * DS ) ) )", "obj1": 0.146, "obj2": 0.6761039181727555}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.448, "obj2": 0.33059345130559725}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "Min( ( ( BR * FirstVNF_CPU_Server ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,DS ) )", "obj1": 0.77, "obj2": 0.16126967402840775}, {"determining": "( DDR * ( FirstVNF_RAM * Const ) )", "choosing": "( Max( ( MUR / MLU ),MUM ) / CS )", "obj1": 0.314, "obj2": 0.4817211179321954}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.97, "obj2": 0.030524635058781398}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS * CRS ) ) + ( Min( ( BR + FirstVNF_CPU ) ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * FirstVNF_RAM_Server ) ) * RRS ) ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) - Max( Max( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ),( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ),DS ) )", "obj1": 0.412, "obj2": 0.4437729622125507}, {"determining": "( ( ( ( ( Max( ( ( PN + PN ) + Min( ACS ,MDR ) ),Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS - MDR ) / ( FirstVNF_Mem * ARS ) ),Max( ( MDR - AMS ),( DDR - ACS ) ) ) ) + Max( ( ( ( Const + ACS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ( Max( Const,Const ) - ( RRS / FirstVNF_RAM_Server ) ) ),( ( ( Const * AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ARS ) * ( FirstVNF_Mem_Server * AMS ) ) ) ) ) * ( Min( Max( ( Min( MRS ,PN ) / ( PN / ARS ) ),( Max( FirstVNF_RAM_Server,DDR ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ,( Min( ( BR - DDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ( DDR * FirstVNF_RAM ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Max( ACS,FirstVNF_CPU ) / ( CRS / MRS ) ) / ( ( FirstVNF_CPU + RRS ) / ( FirstVNF_CPU - ARS ) ) ) ,( ( ( CRS - PN ) + Max( FirstVNF_CPU_Server,MDR ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) + ( ( Max( ( ARS - RRS ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( AMS * Const ) / ( FirstVNF_RAM + MDR ) ) ) / ( ( ( MDR + FirstVNF_Mem ) - ( MDR + CRS ) ) / Max( ( FirstVNF_Mem_Server / PN ),( BR - FirstVNF_CPU ) ) ) ) ),Min( ( ( Min( ( Const * ACS ) ,( AMS * RRS ) ) + Min( ( AMS * FirstVNF_RAM ) ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( ( ( ARS / FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,DDR ) ) / ( ( ACS * BR ) - Max( FirstVNF_CPU_Server,DDR ) ) ) ) ,( ( Max( ( FirstVNF_Mem * AMS ),( MRS / PN ) ) / ( ( ARS / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM * RRS ) + ( FirstVNF_Mem + ACS ) ) * Min( ( MRS - MDR ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) + ( ( ( ( Min( ( ( BR + MRS ) - ( MDR - FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) ) / Max( ( ( ACS * FirstVNF_CPU ) * Min( CRS ,CRS ) ),( Max( FirstVNF_RAM_Server,Const ) / ( ARS * CRS ) ) ) ) - ( ( Min( ( FirstVNF_Mem + MDR ) ,( FirstVNF_Mem_Server - CRS ) ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( FirstVNF_Mem,RRS ) ) ) / ( ( Min( RRS ,MDR ) / Min( RRS ,MRS ) ) + Min( Max( CRS,ARS ) ,( AMS * ARS ) ) ) ) ) + ( Min( ( Max( ( MDR * FirstVNF_RAM ),( PN + AMS ) ) + ( ( MRS - MRS ) * ( PN / AMS ) ) ) ,( ( Max( ARS,CRS ) + Min( FirstVNF_Mem ,DDR ) ) * ( Max( FirstVNF_CPU,MDR ) * ( PN / RRS ) ) ) ) - ( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) ,( ( FirstVNF_RAM * PN ) + ( FirstVNF_CPU - Const ) ) ) - ( ( Max( AMS,CRS ) * ( FirstVNF_CPU_Server - MRS ) ) - ( ( RRS + FirstVNF_RAM_Server ) + ( Const - ARS ) ) ) ) ) ) - ( ( Min( ( Min( ( BR / Const ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( ( AMS - ACS ) / ( DDR / Const ) ) ) ,Min( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_RAM / MRS ) + ( PN * FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( PN - Const ) / ( FirstVNF_RAM + RRS ) ) + Max( ( BR * FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) ,( Min( Max( PN,ARS ) ,Min( CRS ,BR ) ) / ( ( MRS / MRS ) / ( ARS + FirstVNF_RAM ) ) ) ) ) - ( Min( ( Min( ( Const * FirstVNF_CPU ) ,( ARS / AMS ) ) - ( ( MRS * DDR ) - Min( RRS ,PN ) ) ) ,( ( Max( ACS,RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * Max( ( MDR / FirstVNF_RAM_Server ),Max( Const,PN ) ) ) ) / ( ( ( ( AMS + Const ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) - ( Max( ( MDR * FirstVNF_CPU ),Min( ARS ,FirstVNF_RAM_Server ) ) * Min( Max( FirstVNF_RAM,ARS ) ,( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( DS - Max( CS,RMSe ) ) * ( CS - Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5704702220936827}, {"determining": "Max( ( MDR + ACS ),( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - CS ) ,( CS / DS ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.6424641296956647}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MUM ) / RRSe ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.276, "obj2": 0.5339258222285073}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.114, "obj2": 0.6834058288483529}, {"determining": "Min( ( Max( BR,BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( ( DS / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.714, "obj2": 0.1637830415095543}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ARS - ACS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MLU ),Max( MUC,MLU ) ) ) / ( Min( ( RRSe / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.228, "obj2": 0.5578556068479016}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.246, "obj2": 0.5429564882130905}, {"determining": "Min( ( ( BR * ARS ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "( Max( RRSe,MUM ) / CS )", "obj1": 0.652, "obj2": 0.22592230647525324}, {"determining": "Max( Min( MDR ,ACS ),( Max( ( ( BR * ARS ) / PN ),( FirstVNF_CPU * AMS ) ) * MDR ) )", "choosing": "( Min( MUC ,DS ) - ( RRSe * RMSe ) )", "obj1": 0.168, "obj2": 0.6407494321906243}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,DS ) + ( MUR * DS ) ) )", "obj1": 0.096, "obj2": 0.6879118771221082}, {"determining": "( Max( ( Min( ( ( Min( ( ACS / DDR ) ,( ACS / FirstVNF_RAM ) ) + ( ( MRS / FirstVNF_RAM_Server ) / ( AMS / Const ) ) ) * ( ( ( RRS + FirstVNF_Mem_Server ) - Max( MRS,Const ) ) - ( ( FirstVNF_Mem_Server + Const ) - ( FirstVNF_RAM * MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ),Max( ( RRS + PN ),Min( FirstVNF_RAM ,AMS ) ) ) / Max( ( ( FirstVNF_RAM * ARS ) + ( MRS - Const ) ),Min( ( ARS + ARS ) ,( MRS * FirstVNF_RAM ) ) ) ) ) - Min( ( ( ( Max( ACS,Const ) - ( DDR - FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,ACS ) - ( FirstVNF_RAM / Const ) ) ) + ( Max( ( Const - ACS ),( AMS * FirstVNF_Mem_Server ) ) / ( Max( ARS,Const ) + ( AMS + FirstVNF_RAM_Server ) ) ) ) ,( Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( RRS,AMS ) ),Min( ( AMS / DDR ) ,Max( MRS,ACS ) ) ) + ( ( Max( ARS,MDR ) / ( CRS + FirstVNF_Mem_Server ) ) + ( ( DDR - MRS ) * ( ACS + FirstVNF_RAM ) ) ) ) ) ),Min( ( ( ( Min( ( ARS - CRS ) ,( Const / FirstVNF_RAM ) ) * ( Max( DDR,FirstVNF_CPU ) - Min( DDR ,RRS ) ) ) * ( Min( ( FirstVNF_Mem - CRS ) ,( PN + DDR ) ) + ( ( DDR - FirstVNF_Mem_Server ) / ( RRS * FirstVNF_RAM ) ) ) ) + ( Min( ( ( FirstVNF_Mem_Server + BR ) / ( DDR / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,RRS ) ) ) / ( ( ( PN - AMS ) + Max( DDR,MRS ) ) + ( Max( Const,RRS ) / Min( FirstVNF_CPU ,BR ) ) ) ) ) ,( ( ( ( ( MRS * FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem_Server * ARS ) ) ) / ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( AMS ,ARS ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / BR ) ) ) ) + ( ( Min( ( ARS - FirstVNF_Mem ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) * ( ( AMS * RRS ) / ( ACS * ARS ) ) ) - ( Max( ( AMS - DDR ),Min( ARS ,FirstVNF_CPU_Server ) ) - ( ( ARS - MRS ) / Min( RRS ,BR ) ) ) ) ) ) ) / ( ( ( ( ( ( ( Const * ARS ) - ( CRS + RRS ) ) - Max( Max( PN,ACS ),( PN / FirstVNF_CPU_Server ) ) ) - ( ( ( BR - Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( MRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server - BR ) + ( AMS - FirstVNF_Mem ) ) / ( ( RRS * MRS ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem / MRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) - ( ( ( ( ( MRS * RRS ) - ( RRS * DDR ) ) + ( Max( ACS,CRS ) + ( Const + CRS ) ) ) * Max( Max( ( MRS - DDR ),( FirstVNF_Mem_Server + BR ) ),( ( PN / BR ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) - ( ( Min( ( AMS * BR ) ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) * Max( ACS,CRS ) ) / ( ( Const + FirstVNF_Mem ) + Min( AMS ,PN ) ) ) ) ) ) * ( ( Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,Min( RRS ,ACS ) ) * Min( Min( MDR ,Const ) ,( CRS - RRS ) ) ) ,Max( ( Min( CRS ,AMS ) - ( ARS * AMS ) ),( Max( AMS,ACS ) * ( ARS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( DDR ,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) - ( ( RRS + ACS ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / BR ) ) / ( ( FirstVNF_Mem + AMS ) / ( ARS / MRS ) ) ) ) ) / ( ( ( Max( ( MRS / Const ),( PN / ACS ) ) / ( ( FirstVNF_RAM - MRS ) * ( CRS * DDR ) ) ) + ( Min( Min( Const ,FirstVNF_Mem ) ,( ACS / CRS ) ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) / ( Min( ( ( ACS + FirstVNF_RAM_Server ) - ( MRS / BR ) ) ,( ( BR * FirstVNF_CPU_Server ) + Min( ACS ,MDR ) ) ) + Max( ( ( PN * PN ) * Max( FirstVNF_Mem,ACS ) ),( ( ARS * MDR ) / ( MDR + RRS ) ) ) ) ) ) ) )", "choosing": "Min( Max( Max( DS,Max( Max( MUC,Min( RMSe ,MUM ) ),MLU ) ),( ( Max( RRSe,MUM ) - RMSe ) + Max( RMSe,( Min( RCSe ,( MUR + ( RCSe / MUR ) ) ) * CS ) ) ) ) ,Min( DS ,RMSe ) )", "obj1": 0.776, "obj2": 0.15093412214412225}, {"determining": "Max( ( MDR + ACS ),( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.066, "obj2": 0.706725301023299}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS * FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) + Min( MLU ,CS ) ) ) )", "obj1": 0.254, "obj2": 0.5351521799048644}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN - AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( MUR + Max( RMSe,MLU ) ) * ( RRSe + RMSe ) )", "obj1": 0.958, "obj2": 0.04307358016459028}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.678, "obj2": 0.22357190300509458}, {"determining": "Max( Min( Const ,( ( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) * ( ( DDR - ( BR / FirstVNF_Mem_Server ) ) - MDR ) ) ),( FirstVNF_RAM * MDR ) )", "choosing": "( ( MLU * MLU ) + ( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) ) )", "obj1": 0.088, "obj2": 0.7013331140891231}, {"determining": "Max( ( MDR + ACS ),Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) ) ,MDR ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.044, "obj2": 0.7138663015851563}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * FirstVNF_RAM_Server ) ) * RRS ) ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUC * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.414, "obj2": 0.4322003945682874}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,MDR ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.078, "obj2": 0.7032718557715204}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR - FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RRSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.426, "obj2": 0.4288600622756617}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( Const - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( DS ,MLU ) / CS ),( ( MUC * MUC ) * ( RRSe - MUR ) ) )", "obj1": 0.96, "obj2": 0.034278022692878246}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.938, "obj2": 0.05346913663613571}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ,Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.71, "obj2": 0.16537508800647885}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "Min( Max( Max( DS,Max( Max( MUC,Min( RMSe ,MUM ) ),MLU ) ),( ( Max( RCSe,MUM ) - RMSe ) + Max( RMSe,( Min( RCSe ,( MUR + ( RCSe / MUR ) ) ) * CS ) ) ) ) ,Min( DS ,RMSe ) )", "obj1": 0.942, "obj2": 0.0514293173455375}], "6": [{"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * RRS ) ) )", "choosing": "( ( MLU * MLU ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.396, "obj2": 0.3429871353396087}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,Max( Const,BR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MLU ) + ( ( CS * DS ) - CS ) )", "obj1": 0.372, "obj2": 0.4566816703168448}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) + FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Min( ( ( RCSe + MUM ) + ( Min( MUR ,RRSe ) * Min( MLU ,DS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,CS ) + ( CS + ( RMSe / ( MUR * Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.832, "obj2": 0.06324494256385632}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.574, "obj2": 0.2280442996141394}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( BR,AMS ) * ( PN + CRS ) ) )", "choosing": "( Min( MUM ,DS ) + ( MUR * DS ) )", "obj1": 0.806, "obj2": 0.14196579435905077}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) )", "choosing": "( MUM * Min( MUM ,MLU ) )", "obj1": 0.844, "obj2": 0.05818919811556362}, {"determining": "Min( ( ( BR * ARS ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "( Max( RRSe,MUM ) / CS )", "obj1": 0.652, "obj2": 0.22592230647525324}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.938, "obj2": 0.05346913663613571}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - RMSe ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.474, "obj2": 0.30515356816731026}, {"determining": "Min( ( ( ( BR / BR ) / ( BR * FirstVNF_CPU_Server ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( MUR / MUR ) ) )", "obj1": 0.542, "obj2": 0.2543529471887513}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.448, "obj2": 0.33059345130559725}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.676, "obj2": 0.22193062053071577}, {"determining": "Max( Min( MDR ,ACS ),Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.134, "obj2": 0.6638657436023805}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.68, "obj2": 0.18670653375752969}, {"determining": "Min( ( ( BR * FirstVNF_CPU_Server ) - ( CRS * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( MUM ,DS ) )", "obj1": 0.77, "obj2": 0.16126967402840775}, {"determining": "( ( AMS * PN ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( RMSe ,CS ) ) ) )", "obj1": 0.348, "obj2": 0.4680226196405679}, {"determining": "( DDR * ( FirstVNF_RAM * Const ) )", "choosing": "( Max( ( MUR / MLU ),MUM ) / CS )", "obj1": 0.182, "obj2": 0.6215071151191732}, {"determining": "Min( ( MDR + ACS ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,( RRSe + RMSe ) ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( MUR / MUR ) ) )", "obj1": 0.524, "obj2": 0.26943095863455957}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR - FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RRSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.99, "obj2": 0.0044253905854132}, {"determining": "( ( ARS + Max( FirstVNF_CPU,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,( ( RCSe * DS ) - ( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM * MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.192, "obj2": 0.5833227054707097}, {"determining": "Min( Min( ( BR / BR ) ,( BR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MLU ) ) / ( RRSe * MUC ) )", "obj1": 0.434, "obj2": 0.3391173506293991}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "Max( ( MDR + ACS ),( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - CS ) ,( CS / DS ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.6424641296956647}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "Min( ( Max( BR,BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( ( DS / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.714, "obj2": 0.1637830415095543}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.32, "obj2": 0.4755800307965703}, {"determining": "Max( ( MDR + ACS ),( FirstVNF_Mem + Max( FirstVNF_RAM_Server,Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.074, "obj2": 0.7001700512240295}, {"determining": "( ( ( ( ( Max( ( ( PN + PN ) + Min( ACS ,MDR ) ),Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS - MDR ) / ( FirstVNF_Mem * ARS ) ),Max( ( MDR - AMS ),( DDR - ACS ) ) ) ) + Max( ( ( ( Const + ACS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ( Max( Const,Const ) - ( RRS / FirstVNF_RAM_Server ) ) ),( ( ( Const * AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ARS ) * ( FirstVNF_Mem_Server * AMS ) ) ) ) ) * ( Min( Max( ( Min( MRS ,PN ) / ( PN / ARS ) ),( Max( FirstVNF_RAM_Server,DDR ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ,( Min( ( BR - DDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ( DDR * FirstVNF_RAM ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Max( ACS,FirstVNF_CPU ) / ( CRS / MRS ) ) / ( ( FirstVNF_CPU + RRS ) / ( FirstVNF_CPU - ARS ) ) ) ,( ( ( CRS - PN ) + Max( FirstVNF_CPU_Server,MDR ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) + ( ( Max( ( ARS - RRS ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( AMS * Const ) / ( FirstVNF_RAM + MDR ) ) ) / ( ( ( MDR + FirstVNF_Mem ) - ( MDR + CRS ) ) / Max( ( FirstVNF_Mem_Server / PN ),( BR - FirstVNF_CPU ) ) ) ) ),Min( ( ( Min( ( Const * ACS ) ,( AMS * RRS ) ) + Min( ( AMS * FirstVNF_RAM ) ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( ( ( ARS / FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,DDR ) ) / ( ( ACS * BR ) - Max( FirstVNF_CPU_Server,DDR ) ) ) ) ,( ( Max( ( FirstVNF_Mem * AMS ),( MRS / PN ) ) / ( ( ARS / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM * RRS ) + ( FirstVNF_Mem + ACS ) ) * Min( ( MRS - MDR ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) + ( ( ( ( Min( ( ( BR + MRS ) - ( MDR - FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) ) / Max( ( ( ACS * FirstVNF_CPU ) * Min( CRS ,CRS ) ),( Max( FirstVNF_RAM_Server,Const ) / ( ARS * CRS ) ) ) ) - ( ( Min( ( FirstVNF_Mem + MDR ) ,( FirstVNF_Mem_Server - CRS ) ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( FirstVNF_Mem,RRS ) ) ) / ( ( Min( RRS ,MDR ) / Min( RRS ,MRS ) ) + Min( Max( CRS,ARS ) ,( AMS * ARS ) ) ) ) ) + ( Min( ( Max( ( MDR * FirstVNF_RAM ),( PN + AMS ) ) + ( ( MRS - MRS ) * ( PN / AMS ) ) ) ,( ( Max( ARS,CRS ) + Min( FirstVNF_Mem ,DDR ) ) * ( Max( FirstVNF_CPU,MDR ) * ( PN / RRS ) ) ) ) - ( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) ,( ( FirstVNF_RAM * PN ) + ( FirstVNF_CPU - Const ) ) ) - ( ( Max( AMS,CRS ) * ( FirstVNF_CPU_Server - MRS ) ) - ( ( RRS + FirstVNF_RAM_Server ) + ( Const - ARS ) ) ) ) ) ) - ( ( Min( ( Min( ( BR / Const ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( ( AMS - ACS ) / ( DDR / Const ) ) ) ,Min( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_RAM / MRS ) + ( PN * FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( PN - Const ) / ( FirstVNF_RAM + RRS ) ) + Max( ( BR * FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) ,( Min( Max( PN,ARS ) ,Min( CRS ,BR ) ) / ( ( MRS / MRS ) / ( ARS + FirstVNF_RAM ) ) ) ) ) - ( Min( ( Min( ( Const * FirstVNF_CPU ) ,( ARS / AMS ) ) - ( ( MRS * DDR ) - Min( RRS ,PN ) ) ) ,( ( Max( ACS,RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * Max( ( MDR / FirstVNF_RAM_Server ),Max( Const,PN ) ) ) ) / ( ( ( ( AMS + Const ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) - ( Max( ( MDR * FirstVNF_CPU ),Min( ARS ,FirstVNF_RAM_Server ) ) * Min( Max( FirstVNF_RAM,ARS ) ,( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( DS - Max( CS,RMSe ) ) * ( CS - Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5704702220936827}, {"determining": "Max( Min( MDR ,ACS ),( Max( ( ( BR * ARS ) / PN ),( FirstVNF_CPU * AMS ) ) * MDR ) )", "choosing": "( Min( MUC ,DS ) - ( RRSe * RMSe ) )", "obj1": 0.168, "obj2": 0.6407494321906243}, {"determining": "( Max( ( Min( ( ( Min( ( ACS / DDR ) ,( ACS / FirstVNF_RAM ) ) + ( ( MRS / FirstVNF_RAM_Server ) / ( AMS / Const ) ) ) * ( ( ( RRS + FirstVNF_Mem_Server ) - Max( MRS,Const ) ) - ( ( FirstVNF_Mem_Server + Const ) - ( FirstVNF_RAM * MRS ) ) ) ) ,( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ),Max( ( RRS + PN ),Min( FirstVNF_RAM ,AMS ) ) ) / Max( ( ( FirstVNF_RAM * ARS ) + ( MRS - Const ) ),Min( ( ARS + ARS ) ,( MRS * FirstVNF_RAM ) ) ) ) ) - Min( ( ( ( Max( ACS,Const ) - ( DDR - FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,ACS ) - ( FirstVNF_RAM / Const ) ) ) + ( Max( ( Const - ACS ),( AMS * FirstVNF_Mem_Server ) ) / ( Max( ARS,Const ) + ( AMS + FirstVNF_RAM_Server ) ) ) ) ,( Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - Max( RRS,AMS ) ),Min( ( AMS / DDR ) ,Max( MRS,ACS ) ) ) + ( ( Max( ARS,MDR ) / ( CRS + FirstVNF_Mem_Server ) ) + ( ( DDR - MRS ) * ( ACS + FirstVNF_RAM ) ) ) ) ) ),Min( ( ( ( Min( ( ARS - CRS ) ,( Const / FirstVNF_RAM ) ) * ( Max( DDR,FirstVNF_CPU ) - Min( DDR ,RRS ) ) ) * ( Min( ( FirstVNF_Mem - CRS ) ,( PN + DDR ) ) + ( ( DDR - FirstVNF_Mem_Server ) / ( RRS * FirstVNF_RAM ) ) ) ) + ( Min( ( ( FirstVNF_Mem_Server + BR ) / ( DDR / FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,RRS ) ) ) / ( ( ( PN - AMS ) + Max( DDR,MRS ) ) + ( Max( Const,RRS ) / Min( FirstVNF_CPU ,BR ) ) ) ) ) ,( ( ( ( ( MRS * FirstVNF_RAM_Server ) - ( CRS / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem_Server * ARS ) ) ) / ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( AMS ,ARS ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / BR ) ) ) ) + ( ( Min( ( ARS - FirstVNF_Mem ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) * ( ( AMS * RRS ) / ( ACS * ARS ) ) ) - ( Max( ( AMS - DDR ),Min( ARS ,FirstVNF_CPU_Server ) ) - ( ( ARS - MRS ) / Min( RRS ,BR ) ) ) ) ) ) ) / ( ( ( ( ( ( ( Const * ARS ) - ( CRS + RRS ) ) - Max( Max( PN,ACS ),( PN / FirstVNF_CPU_Server ) ) ) - ( ( ( BR - Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( MRS + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_CPU_Server - BR ) + ( AMS - FirstVNF_Mem ) ) / ( ( RRS * MRS ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( FirstVNF_RAM / ARS ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem / MRS ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) - ( ( ( ( ( MRS * RRS ) - ( RRS * DDR ) ) + ( Max( ACS,CRS ) + ( Const + CRS ) ) ) * Max( Max( ( MRS - DDR ),( FirstVNF_Mem_Server + BR ) ),( ( PN / BR ) / ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) ) - ( ( Min( ( AMS * BR ) ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MRS ) ) ) - ( ( ( ACS / FirstVNF_Mem_Server ) * Max( ACS,CRS ) ) / ( ( Const + FirstVNF_Mem ) + Min( AMS ,PN ) ) ) ) ) ) * ( ( Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,Min( RRS ,ACS ) ) * Min( Min( MDR ,Const ) ,( CRS - RRS ) ) ) ,Max( ( Min( CRS ,AMS ) - ( ARS * AMS ) ),( Max( AMS,ACS ) * ( ARS + FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( DDR ,FirstVNF_RAM_Server ) * Max( FirstVNF_RAM,AMS ) ) - ( ( RRS + ACS ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / BR ) ) / ( ( FirstVNF_Mem + AMS ) / ( ARS / MRS ) ) ) ) ) / ( ( ( Max( ( MRS / Const ),( PN / ACS ) ) / ( ( FirstVNF_RAM - MRS ) * ( CRS * DDR ) ) ) + ( Min( Min( Const ,FirstVNF_Mem ) ,( ACS / CRS ) ) * ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) ) / ( Min( ( ( ACS + FirstVNF_RAM_Server ) - ( MRS / BR ) ) ,( ( BR * FirstVNF_CPU_Server ) + Min( ACS ,MDR ) ) ) + Max( ( ( PN * PN ) * Max( FirstVNF_Mem,ACS ) ),( ( ARS * MDR ) / ( MDR + RRS ) ) ) ) ) ) ) )", "choosing": "Min( Max( Max( DS,Max( Max( MUC,Min( RMSe ,MUM ) ),MLU ) ),( ( Max( RRSe,MUM ) - RMSe ) + Max( RMSe,( Min( RCSe ,( MUR + ( RCSe / MUR ) ) ) * CS ) ) ) ) ,Min( DS ,RMSe ) )", "obj1": 0.776, "obj2": 0.15093412214412225}, {"determining": "Max( ( MDR + ACS ),( Max( ( MDR / PN ),Max( FirstVNF_CPU,( ( ACS + AMS ) - MRS ) ) ) - MDR ) )", "choosing": "( MUM - ( Min( MUM ,MUC ) / ( MUM * DS ) ) )", "obj1": 0.12, "obj2": 0.6797401562310816}, {"determining": "( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) / DS ) ) )", "obj1": 0.694, "obj2": 0.17583865731890896}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,Max( Const,BR ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.21, "obj2": 0.5819712597487481}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN - AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( MUR + Max( RMSe,MLU ) ) * ( RRSe + RMSe ) )", "obj1": 0.958, "obj2": 0.04307358016459028}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( Const - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + CS ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.238, "obj2": 0.5537864953321086}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.174, "obj2": 0.6249829411252006}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.114, "obj2": 0.6834058288483529}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - Max( Min( FirstVNF_Mem ,ARS ),Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( Min( RMSe ,MUC ),( MLU / DS ) ) )", "obj1": 0.97, "obj2": 0.030436851157793536}, {"determining": "Max( Min( MDR ,ACS ),Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.278, "obj2": 0.5214822340636873}, {"determining": "( DDR * ( FirstVNF_RAM * Const ) )", "choosing": "( Max( ( MUR / MLU ),MUM ) / CS )", "obj1": 0.314, "obj2": 0.4817211179321954}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.526, "obj2": 0.26075491620965363}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ARS - ACS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MLU ),Max( MUC,MLU ) ) ) / ( Min( ( RRSe / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.228, "obj2": 0.5578556068479016}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "Min( Max( Max( DS,Max( Max( MUC,Min( RMSe ,MUM ) ),MLU ) ),( ( Max( RCSe,MUM ) - RMSe ) + Max( RMSe,( Min( RCSe ,( MUR + ( RCSe / MUR ) ) ) * CS ) ) ) ) ,Min( DS ,RMSe ) )", "obj1": 0.942, "obj2": 0.0514293173455375}, {"determining": "Max( ( MDR + ACS ),Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) ) ,MDR ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.058, "obj2": 0.7089242540939827}, {"determining": "Min( ( ( BR / BR ) / ( CRS * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( DS + MUM ) / RRSe ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) ,CS ) ) ) )", "obj1": 0.266, "obj2": 0.521640968521947}], "7": [{"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MLU ) + ( ( CS * Max( RRSe,MUM ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.37, "obj2": 0.36832739455775465}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) ) / MLU ) ,Min( MUM ,RRSe ) )", "obj1": 0.616, "obj2": 0.20510543539397544}, {"determining": "( DDR * Min( ( ARS - ACS ) ,MDR ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUC ),( RMSe - ( MUM * ( RRSe + DS ) ) ) ) ) / CS ),MUM ) / CS )", "obj1": 0.362, "obj2": 0.4592888206964617}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.574, "obj2": 0.2280442996141394}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + ( Max( DS,RCSe ) / ( RRSe + MUM ) ) ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.744, "obj2": 0.10200472578867385}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( ( Max( BR,BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( ( DS / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.714, "obj2": 0.1637830415095543}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) )", "choosing": "Min( ( Min( Min( ( MUR / MUR ) ,Min( ( RRSe / MUR ) ,Min( MUM ,DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.842, "obj2": 0.05631214554899106}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( ( Min( ( RMSe - CS ) ,( CS / DS ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) ) * Min( MLU ,CS ) ) ) )", "obj1": 0.79, "obj2": 0.09107343301048504}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.938, "obj2": 0.05346913663613571}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.528, "obj2": 0.24985682543287288}, {"determining": "Min( PN ,( Min( PN ,FirstVNF_CPU ) - ( MDR + PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.456, "obj2": 0.3019172591347987}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) + FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Min( ( ( RCSe + MUM ) + ( Min( MUR ,RRSe ) * Min( MLU ,DS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,CS ) + ( CS + ( RMSe / ( MUR * Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.832, "obj2": 0.06324494256385632}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.516, "obj2": 0.2578718864019979}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.674, "obj2": 0.18704499468799818}, {"determining": "( ( ARS + Max( FirstVNF_CPU,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,( ( RCSe * DS ) - ( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM * MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.192, "obj2": 0.5833227054707097}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,Max( RMSe,MLU ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.182, "obj2": 0.6191618497832008}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.448, "obj2": 0.33059345130559725}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.396, "obj2": 0.3429871353396087}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) )", "choosing": "( MUM * Min( MUM ,MLU ) )", "obj1": 0.764, "obj2": 0.09188949212978817}, {"determining": "( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) / DS ) ) )", "obj1": 0.694, "obj2": 0.17583865731890896}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR - FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) + ( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RRSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.988, "obj2": 0.005447098126672731}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MLU ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / RRSe ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.206, "obj2": 0.5784416251058044}, {"determining": "Max( Min( MDR ,ACS ),Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.134, "obj2": 0.6638657436023805}, {"determining": "( ( ( ( ( Max( ( ( PN + PN ) + Min( ACS ,MDR ) ),Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS - MDR ) / ( FirstVNF_Mem * ARS ) ),Max( ( MDR - AMS ),( DDR - ACS ) ) ) ) + Max( ( ( ( Const + ACS ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + ( Max( Const,Const ) - ( RRS / FirstVNF_RAM_Server ) ) ),( ( ( Const * AMS ) * Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ARS ) * ( FirstVNF_Mem_Server * AMS ) ) ) ) ) * ( Min( Max( ( Min( MRS ,PN ) / ( PN / ARS ) ),( Max( FirstVNF_RAM_Server,DDR ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ,( Min( ( BR - DDR ) ,( BR - FirstVNF_Mem_Server ) ) - ( ( DDR * FirstVNF_RAM ) - ( AMS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Max( ACS,FirstVNF_CPU ) / ( CRS / MRS ) ) / ( ( FirstVNF_CPU + RRS ) / ( FirstVNF_CPU - ARS ) ) ) ,( ( ( CRS - PN ) + Max( FirstVNF_CPU_Server,MDR ) ) - Min( Max( MRS,FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) ) + Max( ( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) + ( ( Max( ( ARS - RRS ),Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + ( ( AMS * Const ) / ( FirstVNF_RAM + MDR ) ) ) / ( ( ( MDR + FirstVNF_Mem ) - ( MDR + CRS ) ) / Max( ( FirstVNF_Mem_Server / PN ),( BR - FirstVNF_CPU ) ) ) ) ),Min( ( ( Min( ( Const * ACS ) ,( AMS * RRS ) ) + Min( ( AMS * FirstVNF_RAM ) ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( ( ( ARS / FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,DDR ) ) / ( ( ACS * BR ) - Max( FirstVNF_CPU_Server,DDR ) ) ) ) ,( ( Max( ( FirstVNF_Mem * AMS ),( MRS / PN ) ) / ( ( ARS / FirstVNF_RAM ) * ( RRS + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM * RRS ) + ( FirstVNF_Mem + ACS ) ) * Min( ( MRS - MDR ) ,Min( CRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) + ( ( ( ( Min( ( ( BR + MRS ) - ( MDR - FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * ( FirstVNF_RAM / RRS ) ) ) / Max( ( ( ACS * FirstVNF_CPU ) * Min( CRS ,CRS ) ),( Max( FirstVNF_RAM_Server,Const ) / ( ARS * CRS ) ) ) ) - ( ( Min( ( FirstVNF_Mem + MDR ) ,( FirstVNF_Mem_Server - CRS ) ) * Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,Max( FirstVNF_Mem,RRS ) ) ) / ( ( Min( RRS ,MDR ) / Min( RRS ,MRS ) ) + Min( Max( CRS,ARS ) ,( AMS * ARS ) ) ) ) ) + ( Min( ( Max( ( MDR * FirstVNF_RAM ),( PN + AMS ) ) + ( ( MRS - MRS ) * ( PN / AMS ) ) ) ,( ( Max( ARS,CRS ) + Min( FirstVNF_Mem ,DDR ) ) * ( Max( FirstVNF_CPU,MDR ) * ( PN / RRS ) ) ) ) - ( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) ,( ( FirstVNF_RAM * PN ) + ( FirstVNF_CPU - Const ) ) ) - ( ( Max( AMS,CRS ) * ( FirstVNF_CPU_Server - MRS ) ) - ( ( RRS + FirstVNF_RAM_Server ) + ( Const - ARS ) ) ) ) ) ) - ( ( Min( ( Min( ( BR / Const ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) / ( ( AMS - ACS ) / ( DDR / Const ) ) ) ,Min( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_RAM / MRS ) + ( PN * FirstVNF_Mem_Server ) ) ) ) + Min( ( ( ( PN - Const ) / ( FirstVNF_RAM + RRS ) ) + Max( ( BR * FirstVNF_CPU ),( CRS * FirstVNF_RAM ) ) ) ,( Min( Max( PN,ARS ) ,Min( CRS ,BR ) ) / ( ( MRS / MRS ) / ( ARS + FirstVNF_RAM ) ) ) ) ) - ( Min( ( Min( ( Const * FirstVNF_CPU ) ,( ARS / AMS ) ) - ( ( MRS * DDR ) - Min( RRS ,PN ) ) ) ,( ( Max( ACS,RRS ) - Min( CRS ,FirstVNF_Mem_Server ) ) * Max( ( MDR / FirstVNF_RAM_Server ),Max( Const,PN ) ) ) ) / ( ( ( ( AMS + Const ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( MDR - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) - ( Max( ( MDR * FirstVNF_CPU ),Min( ARS ,FirstVNF_RAM_Server ) ) * Min( Max( FirstVNF_RAM,ARS ) ,( ARS * MDR ) ) ) ) ) ) ) )", "choosing": "( ( DS - Max( CS,RMSe ) ) * ( CS - Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ) )", "obj1": 0.226, "obj2": 0.5704702220936827}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "Max( Min( MDR ,ACS ),( Max( ( ( BR * ARS ) / PN ),( FirstVNF_CPU * AMS ) ) * MDR ) )", "choosing": "( Min( MUC ,DS ) - ( RRSe * RMSe ) )", "obj1": 0.168, "obj2": 0.6407494321906243}, {"determining": "Max( ( MDR + ACS ),( Max( ( MDR / PN ),Max( FirstVNF_CPU,( ( ACS + AMS ) - MRS ) ) ) - MDR ) )", "choosing": "( MUM - ( Min( MUM ,MUC ) / ( MUM * DS ) ) )", "obj1": 0.12, "obj2": 0.6797401562310816}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN - AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( MUR + Max( RMSe,MLU ) ) * ( RRSe + RMSe ) )", "obj1": 0.958, "obj2": 0.04307358016459028}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.344, "obj2": 0.47304233732257706}, {"determining": "Max( ( MDR + ACS ),Min( MDR ,( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.174, "obj2": 0.6249829411252006}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.32, "obj2": 0.4755800307965703}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( Const - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + CS ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.238, "obj2": 0.5537864953321086}, {"determining": "Max( Min( MDR ,ACS ),Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.278, "obj2": 0.5214822340636873}, {"determining": "( DDR * ( FirstVNF_RAM * Const ) )", "choosing": "( Max( ( MUR / MLU ),MUM ) / CS )", "obj1": 0.314, "obj2": 0.4817211179321954}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - Max( Min( FirstVNF_Mem ,ARS ),Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( Min( RMSe ,MUC ),( MLU / DS ) ) )", "obj1": 0.97, "obj2": 0.030436851157793536}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MUR ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.346, "obj2": 0.46250676924176426}, {"determining": "Min( ( ( BR / Min( ( ( BR / RRS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( ( PN + FirstVNF_CPU ) ,( MDR - PN ) ) )", "choosing": "Min( ( CS / MLU ) ,Min( CS ,MUC ) )", "obj1": 0.71, "obj2": 0.16537508800647885}, {"determining": "Min( Min( ( BR / BR ) ,( BR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MLU ) ) / ( RRSe * MUC ) )", "obj1": 0.434, "obj2": 0.3391173506293991}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.68, "obj2": 0.18670653375752969}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM_Server,Min( PN ,FirstVNF_CPU ) ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.26, "obj2": 0.5343025155990857}, {"determining": "Max( ( MDR + ACS ),( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - CS ) ,( CS / DS ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.6424641296956647}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ARS - ACS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MLU ),Max( MUC,MLU ) ) ) / ( Min( ( RRSe / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.228, "obj2": 0.5578556068479016}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.424, "obj2": 0.33942120228458017}, {"determining": "Max( ( MDR + FirstVNF_CPU_Server ),( FirstVNF_Mem / Max( FirstVNF_RAM_Server,( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( MUM / Max( RRSe,RRSe ) ) - ( Min( MUR ,RMSe ) / Min( DS ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.136, "obj2": 0.6536176859266863}], "8": [{"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MLU ) + ( ( CS * Max( RRSe,MUM ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) ) / MLU ) ,Min( MUM ,RRSe ) )", "obj1": 0.616, "obj2": 0.20510543539397544}, {"determining": "( DDR * Min( ( ARS - ACS ) ,MDR ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUC ),( RMSe - ( MUM * ( RRSe + DS ) ) ) ) ) / CS ),MUM ) / CS )", "obj1": 0.362, "obj2": 0.4592888206964617}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.37, "obj2": 0.36832739455775465}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) + FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Min( ( ( RCSe + MUM ) + ( Min( MUR ,RRSe ) * Min( MLU ,DS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,CS ) + ( CS + ( RMSe / ( MUR * Min( MUR ,DS ) ) ) ) ) ) )", "obj1": 0.832, "obj2": 0.06324494256385632}, {"determining": "Min( PN ,( Min( ( ARS - ACS ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / ( RRSe + DS ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.74, "obj2": 0.0850707194867258}, {"determining": "( ( ( Const * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - AMS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) / MUM ) ) )", "obj1": 0.888, "obj2": 0.04345420201129126}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.726, "obj2": 0.0963480115392636}, {"determining": "Min( ( Max( BR,BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( ( DS / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.714, "obj2": 0.1637830415095543}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN - AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( MUR + Max( RMSe,MLU ) ) * ( RRSe + RMSe ) )", "obj1": 0.958, "obj2": 0.04307358016459028}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.528, "obj2": 0.24985682543287288}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.674, "obj2": 0.18704499468799818}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.16, "obj2": 0.611282386653927}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN + AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( MRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS * RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.97, "obj2": 0.029884737213636377}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.574, "obj2": 0.2280442996141394}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.396, "obj2": 0.3429871353396087}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.57, "obj2": 0.22960711153278598}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( MUM - CS ) - Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.446, "obj2": 0.3084960618698226}, {"determining": "Min( PN ,( Min( PN ,FirstVNF_CPU ) - ( MDR + PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.456, "obj2": 0.3019172591347987}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "Min( Min( ( BR / BR ) ,( BR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MLU ) ) / ( RRSe * MUC ) )", "obj1": 0.434, "obj2": 0.3391173506293991}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.848, "obj2": 0.055258215133774505}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.382, "obj2": 0.3652300857907127}, {"determining": "Max( ( MDR + ACS ),( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - CS ) ,( CS / DS ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.6424641296956647}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( BR / FirstVNF_Mem ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( RMSe * DS ) ) )", "obj1": 0.128, "obj2": 0.6627346004912666}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR - FirstVNF_CPU ) ) ) ,Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) )", "choosing": "( ( Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUM,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RRSe ,MUC ) ) ) ) - Max( RRSe,DS ) )", "obj1": 0.988, "obj2": 0.005388642342969373}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "Min( ( ( ( ( ( BR / BR ) / ( BR * FirstVNF_CPU_Server ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) )", "obj1": 0.506, "obj2": 0.26622795082567197}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.184, "obj2": 0.6037272942405215}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM_Server,Min( PN ,FirstVNF_CPU ) ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.26, "obj2": 0.5343025155990857}, {"determining": "Max( Min( MDR ,ACS ),( Max( ( ( BR * ARS ) / PN ),( FirstVNF_CPU * AMS ) ) * MDR ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.058, "obj2": 0.707581905651404}, {"determining": "( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Min( ( ( RCSe + MUM ) + ( Min( MUR ,RRSe ) * Min( MLU ,DS ) ) ) ,( Min( Min( RCSe ,RCSe ) ,CS ) + ( CS + ( RMSe / ( MUR * Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.494, "obj2": 0.27880621212900353}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_Mem + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MLU ),Max( RMSe,MLU ) ) ) / ( Min( ( MLU / RRSe ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.206, "obj2": 0.5784416251058044}, {"determining": "Max( ( MDR + FirstVNF_CPU_Server ),( FirstVNF_Mem / Max( FirstVNF_RAM_Server,( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( MUM / Max( RRSe,RRSe ) ) - ( Min( MUR ,RMSe ) / Min( DS ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.136, "obj2": 0.6536176859266863}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.516, "obj2": 0.2578718864019979}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.34, "obj2": 0.4715908584922199}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.424, "obj2": 0.33942120228458017}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + Min( PN ,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,DS ) + ( MUR * DS ) ) )", "obj1": 0.08, "obj2": 0.7072161063676923}, {"determining": "( ( ARS + Max( FirstVNF_CPU,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,( ( RCSe * DS ) - ( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM * MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.192, "obj2": 0.5833227054707097}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.32, "obj2": 0.4755800307965703}, {"determining": "( DDR * ( FirstVNF_RAM * Const ) )", "choosing": "( Max( ( MUR / MLU ),MUM ) / CS )", "obj1": 0.314, "obj2": 0.4817211179321954}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( ARS - ACS ) - ( CRS + BR ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MUR ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.346, "obj2": 0.46250676924176426}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( Min( ( RRS - ( ( PN - ACS ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) - ( CRS + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( DS + MUM ),Min( CS ,RCSe ) ) / ( Min( RMSe ,DS ) + ( MUR * DS ) ) )", "obj1": 0.086, "obj2": 0.6968323127269741}, {"determining": "( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) - ( AMS - PN ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) / DS ) ) )", "obj1": 0.694, "obj2": 0.17583865731890896}, {"determining": "Min( ( ( BR / Min( ( ( BR / RRS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( ( PN + FirstVNF_CPU ) ,( MDR - PN ) ) )", "choosing": "Min( ( CS / MLU ) ,Min( CS ,MUC ) )", "obj1": 0.71, "obj2": 0.16537508800647885}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}], "9": [{"determining": "Min( PN ,( Min( PN ,FirstVNF_CPU ) - ( MDR + PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / FirstVNF_Mem ) / ( CRS * MDR ) ) ,( Min( PN ,BR ) - ( ARS - PN ) ) )", "choosing": "( ( MUR * DS ) + ( RRSe * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( PN ,( Min( ( ARS - ACS ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / ( RRSe + DS ) ) ,Min( MUM ,RRSe ) )", "obj1": 0.74, "obj2": 0.0850707194867258}, {"determining": "Min( DDR ,Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.366, "obj2": 0.4494942046094432}, {"determining": "Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( DS - Max( ( RMSe - MUC ),CS ) ) / MLU ) ,Min( MUM ,RRSe ) )", "obj1": 0.83, "obj2": 0.05345676763422613}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.726, "obj2": 0.0963480115392636}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.37, "obj2": 0.36832739455775465}, {"determining": "( ( ( Const * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - AMS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) / MUM ) ) )", "obj1": 0.888, "obj2": 0.04345420201129126}, {"determining": "Min( ( Max( BR,BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( ( DS / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.714, "obj2": 0.1637830415095543}, {"determining": "( ( ( Min( Min( ( ( Max( RRS,ARS ) + Min( Const ,FirstVNF_Mem ) ) * ( ( AMS - FirstVNF_CPU ) + ( MDR + ACS ) ) ) ,Max( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / ( Const + ACS ) ),( Min( CRS ,PN ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ,( ( ( ( BR + PN ) - ( CRS / FirstVNF_RAM ) ) * ( ( ACS / PN ) - Max( CRS,FirstVNF_RAM ) ) ) + ( Min( ( FirstVNF_CPU - CRS ) ,Max( PN,RRS ) ) - ( Min( FirstVNF_Mem ,ARS ) / Max( ACS,FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR + AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) / Max( Min( ( ( ( ( AMS * FirstVNF_CPU ) + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Min( ( RRS / FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) / Min( ( Max( Const,MRS ) / Max( FirstVNF_CPU_Server,MDR ) ) ,( ( FirstVNF_RAM / PN ) / Max( PN,RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * ( PN + FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( MRS / BR ) - Max( ARS,RRS ) ) ,( ( Const / AMS ) / Max( Const,FirstVNF_RAM_Server ) ) ) ) ),( ( Min( ( Max( FirstVNF_Mem_Server,RRS ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( FirstVNF_Mem_Server + DDR ) + ( Const * FirstVNF_Mem ) ) ) - ( ( ( MRS * MDR ) + ( ARS / AMS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( CRS - RRS ) ) ) ) / Min( ( ( ( DDR + FirstVNF_RAM_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) - ( ( MDR - FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server - Const ) ) ) ,( ( ( FirstVNF_CPU_Server / DDR ) / ( BR - FirstVNF_RAM_Server ) ) + ( ( PN * MDR ) - Min( ACS ,MDR ) ) ) ) ) ) ) * ( ( ( Max( ( ( Min( FirstVNF_Mem_Server ,BR ) - Min( BR ,MDR ) ) / Min( Min( FirstVNF_CPU ,CRS ) ,( DDR + PN ) ) ),( ( Min( FirstVNF_CPU ,MDR ) + ( FirstVNF_CPU_Server + ARS ) ) + ( Min( ACS ,DDR ) + Min( BR ,FirstVNF_Mem_Server ) ) ) ) + ( Max( Max( ( MRS + FirstVNF_Mem ),( BR * FirstVNF_RAM ) ),( ( FirstVNF_CPU / ARS ) + Min( PN ,FirstVNF_RAM ) ) ) / Max( Min( ( PN - AMS ) ,Max( MRS,ACS ) ),( ( FirstVNF_CPU / CRS ) + ( Const - Const ) ) ) ) ) * ( ( ( ( ( ACS - DDR ) - Min( MRS ,Const ) ) / Max( Min( FirstVNF_RAM ,AMS ),( CRS - ACS ) ) ) - ( Max( ( FirstVNF_Mem + AMS ),( FirstVNF_Mem_Server - AMS ) ) / ( ( RRS * Const ) + ( MRS - ARS ) ) ) ) + Min( Max( Max( Max( AMS,ACS ),Max( RRS,PN ) ),( ( ARS - RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( ( Max( FirstVNF_Mem,CRS ) - Min( BR ,FirstVNF_RAM ) ) + ( ( DDR - CRS ) / ( CRS - FirstVNF_RAM_Server ) ) ) ) ) ) * Max( Max( ( ( ( Min( RRS ,AMS ) - ( BR - Const ) ) + ( ( FirstVNF_CPU - ACS ) + ( FirstVNF_RAM_Server * PN ) ) ) * Max( ( Max( ARS,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_CPU ) ),( Min( FirstVNF_CPU ,RRS ) - ( MDR + BR ) ) ) ),Max( ( ( ( CRS + ACS ) / ( BR * DDR ) ) / ( ( CRS - Const ) * ( FirstVNF_CPU_Server * PN ) ) ),( Max( ( MRS + MRS ),Max( ACS,FirstVNF_RAM ) ) / ( ( RRS / Const ) + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ),Max( Max( ( ( ( RRS * ACS ) / Max( FirstVNF_CPU,ARS ) ) / ( Max( ACS,ARS ) + ( AMS + ARS ) ) ),( Max( Max( DDR,CRS ),( RRS * BR ) ) - ( ( FirstVNF_RAM + ACS ) + Max( FirstVNF_Mem_Server,BR ) ) ) ),Min( Max( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_Mem + ARS ) ),Min( Min( MDR ,FirstVNF_RAM ) ,( ACS / FirstVNF_RAM_Server ) ) ) ,( ( Min( FirstVNF_Mem_Server ,AMS ) * ( ARS - PN ) ) / Min( Max( BR,MRS ) ,Min( FirstVNF_Mem ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( MUR + Max( RMSe,MLU ) ) * ( RRSe + RMSe ) )", "obj1": 0.958, "obj2": 0.04307358016459028}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.528, "obj2": 0.24985682543287288}, {"determining": "( ( ARS + Max( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ),( FirstVNF_Mem + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( CRS + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( MLU,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / RRSe ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.234, "obj2": 0.5622436798714817}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM_Server,Min( PN ,FirstVNF_CPU ) ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.26, "obj2": 0.5343025155990857}, {"determining": "Max( ( MDR + ACS ),( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - CS ) ,( CS / DS ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.6424641296956647}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.57, "obj2": 0.22960711153278598}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.16, "obj2": 0.611282386653927}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.312, "obj2": 0.456362837122018}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( ( ARS + Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( MLU / ( Min( ( MLU - RRSe ) ,( MUM / CS ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.204, "obj2": 0.5758009188808583}, {"determining": "Min( PN ,( Min( PN ,FirstVNF_CPU ) - ( MDR + PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.456, "obj2": 0.3019172591347987}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.17, "obj2": 0.6013706999351841}, {"determining": "( ( ARS + Max( FirstVNF_CPU,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,( ( RCSe * DS ) - ( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM * MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.192, "obj2": 0.5833227054707097}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) ) / MLU ) ,Min( MUM ,RRSe ) )", "obj1": 0.616, "obj2": 0.20510543539397544}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - MDR ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.432, "obj2": 0.31655686325262833}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.324, "obj2": 0.4534366432733033}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.382, "obj2": 0.3652300857907127}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.396, "obj2": 0.3429871353396087}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( BR / FirstVNF_Mem ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( RMSe * DS ) ) )", "obj1": 0.128, "obj2": 0.6627346004912666}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) ) / MLU ) ,Min( MUM ,RRSe ) )", "obj1": 0.638, "obj2": 0.19019581123209173}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( Min( PN ,( ( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) - ( CRS + FirstVNF_CPU_Server ) ) ),( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( CS - RMSe ) ) - Max( ( ( MUC / MLU ) * Min( MLU ,CS ) ),CS ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.966, "obj2": 0.01460745967717951}, {"determining": "Min( ( ( CRS / ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( MUR * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.59, "obj2": 0.2211835359715895}, {"determining": "Max( ( MDR + FirstVNF_CPU_Server ),( FirstVNF_Mem / Max( FirstVNF_RAM_Server,( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( MUM / Max( RRSe,RRSe ) ) - ( Min( MUR ,RMSe ) / Min( DS ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.136, "obj2": 0.6536176859266863}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.602, "obj2": 0.2122130554605543}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.494, "obj2": 0.27318512536425493}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.424, "obj2": 0.33942120228458017}, {"determining": "( ( ( Max( ( ( Max( ( FirstVNF_RAM + DDR ),( CRS - Const ) ) / ( Max( ACS,AMS ) - Max( ARS,FirstVNF_Mem_Server ) ) ) / ( ( ( RRS - AMS ) * ( RRS - MRS ) ) / ( ( MDR * PN ) + ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ),Min( ( Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) + Min( Min( CRS ,Const ) ,( MRS + PN ) ) ) ,( Max( ( ACS / BR ),Min( MRS ,MDR ) ) * Max( Min( DDR ,ACS ),( ACS / FirstVNF_Mem ) ) ) ) ) * Max( ( ( Max( Min( CRS ,BR ),( ARS - FirstVNF_CPU ) ) + ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server + MRS ) ) ) + ( Max( ( Const * BR ),Max( FirstVNF_RAM,BR ) ) / Min( Max( ACS,MDR ) ,( AMS - PN ) ) ) ),Max( ( ( ( FirstVNF_Mem / ACS ) * Min( PN ,DDR ) ) * ( Max( FirstVNF_Mem_Server,ARS ) / Min( DDR ,FirstVNF_CPU ) ) ),( ( ( Const - MDR ) - ( BR - BR ) ) / Max( Max( Const,FirstVNF_RAM_Server ),( FirstVNF_RAM + AMS ) ) ) ) ) ) * ( ( ( Max( ( Min( FirstVNF_Mem ,ARS ) - Max( MRS,FirstVNF_RAM ) ),Min( ( MDR + FirstVNF_CPU ) ,( FirstVNF_RAM + FirstVNF_Mem ) ) ) + ( Max( ( MRS + FirstVNF_Mem_Server ),( FirstVNF_RAM / FirstVNF_CPU ) ) * ( Max( BR,RRS ) / ( ARS * DDR ) ) ) ) + ( Max( ( ( ACS - BR ) * ( FirstVNF_RAM * FirstVNF_RAM ) ),( Max( FirstVNF_Mem,DDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) ) / ( ( Min( FirstVNF_Mem ,MRS ) + Max( FirstVNF_Mem,BR ) ) - ( ( ACS / AMS ) * Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) + Min( ( Min( ( ( MDR * MRS ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server + Const ) ,Min( FirstVNF_Mem ,DDR ) ) ) / ( ( Min( BR ,AMS ) + ( BR * ACS ) ) * ( ( DDR - PN ) - ( RRS - FirstVNF_CPU ) ) ) ) ,( ( ( ( ARS + AMS ) - ( BR - MDR ) ) * ( ( CRS / CRS ) + ( ACS / DDR ) ) ) / Max( ( ( MRS - RRS ) + ( ACS * Const ) ),Min( Min( FirstVNF_RAM ,DDR ) ,( FirstVNF_RAM / MRS ) ) ) ) ) ) ) / Min( ( ( ( Max( Min( ( FirstVNF_CPU - MRS ) ,Max( PN,AMS ) ),Max( ( FirstVNF_RAM_Server + DDR ),( ACS * FirstVNF_CPU_Server ) ) ) * ( ( ( DDR + PN ) - ( BR * FirstVNF_Mem_Server ) ) / ( ( RRS - MDR ) * Min( FirstVNF_CPU ,PN ) ) ) ) * Max( Max( ( ( ACS + RRS ) * ( MRS - FirstVNF_RAM_Server ) ),Max( ( FirstVNF_CPU_Server / AMS ),( MRS / FirstVNF_Mem ) ) ),Max( ( ( RRS * PN ) * ( FirstVNF_Mem_Server / MRS ) ),( Max( Const,FirstVNF_Mem ) / ( ARS / FirstVNF_RAM ) ) ) ) ) / ( ( Min( ( Min( MRS ,DDR ) - ( DDR * FirstVNF_CPU_Server ) ) ,( ( MDR / MRS ) - ( Const - BR ) ) ) / ( Min( ( BR / FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,DDR ) ) / ( ( MDR / FirstVNF_CPU ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) / ( ( ( ( ARS + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - CRS ) ) - ( ( MRS / FirstVNF_Mem ) * Max( FirstVNF_CPU,Const ) ) ) + ( Min( Max( AMS,DDR ) ,( BR * FirstVNF_Mem ) ) + ( Max( MRS,FirstVNF_CPU ) - ( CRS + PN ) ) ) ) ) ) ,Min( ( Max( ( ( ( DDR + FirstVNF_CPU ) - ( MDR * FirstVNF_CPU ) ) + ( Min( ARS ,FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - BR ) ) ),( ( ( FirstVNF_Mem - DDR ) + ( DDR / MRS ) ) / ( ( CRS * FirstVNF_CPU_Server ) / ( MDR + ACS ) ) ) ) * ( ( ( ( RRS + FirstVNF_RAM_Server ) - ( FirstVNF_RAM + ACS ) ) + ( Min( BR ,DDR ) * Min( FirstVNF_Mem_Server ,ARS ) ) ) + ( ( ( RRS + AMS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_RAM ,RRS ),( FirstVNF_CPU + MRS ) ) ) ) ) ,( ( Min( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,Max( ( DDR - PN ),( FirstVNF_RAM_Server / RRS ) ) ) - Min( Min( ( RRS * FirstVNF_RAM_Server ) ,( ACS * FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem_Server * ACS ) ,Max( AMS,PN ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server / PN ) - ( DDR / DDR ) ) ,Max( ( ACS * MRS ),( MRS * RRS ) ) ),( ( Min( FirstVNF_Mem ,MDR ) * ( RRS + FirstVNF_RAM_Server ) ) - ( Max( MDR,ARS ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,Min( RRSe ,RRSe ) ) / ( ( MUM / DS ) + RCSe ) )", "obj1": 0.962, "obj2": 0.02569110450527958}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.516, "obj2": 0.2578718864019979}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( MUM - CS ) - Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.446, "obj2": 0.3084960618698226}, {"determining": "Min( ( ( ( ( ( BR / BR ) / ( BR * FirstVNF_CPU_Server ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) )", "obj1": 0.506, "obj2": 0.26622795082567197}, {"determining": "Min( ( ( CRS + Min( PN ,FirstVNF_CPU ) ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Min( RMSe ,DS ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.646, "obj2": 0.18993652846813316}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.286, "obj2": 0.4946042369251674}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.674, "obj2": 0.18704499468799818}, {"determining": "Min( ( Max( ( MRS / FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR - FirstVNF_CPU ) ) ) ,Max( ( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR / PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) - ( AMS - PN ) ),( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) )", "choosing": "( ( Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUM,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RRSe ,MUC ) ) ) ) - ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( Max( Min( MUR ,CS ),Min( RMSe ,MLU ) ) / DS ) ) ) )", "obj1": 0.986, "obj2": 0.006370867974119237}], "10": [{"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - DDR ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) / MLU ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( Min( PN ,FirstVNF_CPU ) - ( MDR + PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( Max( BR,BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "Min( ( MUR / MUR ) ,Min( ( DS / MUR ) ,Min( MUM ,DS ) ) )", "obj1": 0.714, "obj2": 0.1637830415095543}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.606, "obj2": 0.17617799367273945}, {"determining": "Min( ( Max( BR,BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.366, "obj2": 0.4466602329878605}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.726, "obj2": 0.0963480115392636}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.37, "obj2": 0.36832739455775465}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Min( RMSe ,DS ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.68, "obj2": 0.16630753737356116}, {"determining": "( ( ( Const * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - AMS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) / MUM ) ) )", "obj1": 0.888, "obj2": 0.04345420201129126}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) )", "choosing": "( ( Min( Min( ( MUR / CS ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( RRSe - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.762, "obj2": 0.07942726872945256}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.55, "obj2": 0.22474446583997051}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.802, "obj2": 0.06339326565821488}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.602, "obj2": 0.2122130554605543}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.16, "obj2": 0.611282386653927}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.312, "obj2": 0.456362837122018}, {"determining": "Min( PN ,( Min( PN ,FirstVNF_CPU ) - ( MDR + PN ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.456, "obj2": 0.3019172591347987}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.17, "obj2": 0.6013706999351841}, {"determining": "Min( ( ( CRS / ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( MUR * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.59, "obj2": 0.2211835359715895}, {"determining": "( ( ARS + Max( FirstVNF_CPU,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,( ( RCSe * DS ) - ( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM * MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.192, "obj2": 0.5833227054707097}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.92, "obj2": 0.026640599307136015}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - MDR ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.432, "obj2": 0.31655686325262833}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( Min( ( RMSe - ( MUM * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.424, "obj2": 0.33942120228458017}, {"determining": "Min( ( ( ( ( ( BR / BR ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.276, "obj2": 0.5313252304095749}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.382, "obj2": 0.3652300857907127}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "Max( ( MDR + ACS ),( Max( BR,( Min( ( AMS + RRS ) ,( Const * CRS ) ) * RRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - CS ) ,( CS / DS ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.6424641296956647}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( BR / FirstVNF_Mem ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( RMSe * DS ) ) )", "obj1": 0.128, "obj2": 0.6627346004912666}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.536, "obj2": 0.2459452403791745}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.352, "obj2": 0.45053680785238387}, {"determining": "Min( ( ( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,ARS ) * ( PN + CRS ) ) ) - ( CRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Max( ( ( MUC / MLU ) * Min( MLU ,CS ) ),CS ) / Min( Min( ( MLU / MUR ) ,( MUM - RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.952, "obj2": 0.02068948334088059}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.324, "obj2": 0.4534366432733033}, {"determining": "( ( FirstVNF_RAM_Server - PN ) - ( BR / FirstVNF_Mem ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.05, "obj2": 0.7133080538696929}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.396, "obj2": 0.3429871353396087}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.494, "obj2": 0.27318512536425493}, {"determining": "( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.218, "obj2": 0.5726010599713033}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( MDR,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( MUM - CS ) - Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.446, "obj2": 0.3084960618698226}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM_Server,Min( PN ,FirstVNF_CPU ) ) * Min( DDR ,FirstVNF_CPU ) ) / BR ) / ( BR * FirstVNF_CPU_Server ) ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( RRS - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.26, "obj2": 0.5343025155990857}, {"determining": "Max( ( MDR + FirstVNF_CPU_Server ),( FirstVNF_Mem / Max( FirstVNF_RAM_Server,( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( MUM / Max( RRSe,RRSe ) ) - ( Min( MUR ,RMSe ) / Min( DS ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.136, "obj2": 0.6536176859266863}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - ( Max( ( RMSe - MUC ),CS ) * ( RRSe + DS ) ) ) ,Max( MUC,RMSe ) ) / MUR ) ,Min( MUM ,RRSe ) )", "obj1": 0.232, "obj2": 0.5624269508801898}, {"determining": "( ( ARS + Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( MLU / ( Min( ( MLU - RRSe ) ,( MUM / CS ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.204, "obj2": 0.5758009188808583}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.926, "obj2": 0.024369420392128558}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.286, "obj2": 0.4946042369251674}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.812, "obj2": 0.0597628135025537}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}], "11": [{"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( ( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - MUC ),CS ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( PN ,( FirstVNF_RAM * MDR ) ) - DDR ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) / MLU ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.672, "obj2": 0.14116731049553038}, {"determining": "( DDR * ( ( PN - CRS ) * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( ( CS - RMSe ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.722, "obj2": 0.0922058286328477}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.606, "obj2": 0.17617799367273945}, {"determining": "( ( ( Const * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - AMS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) / MUM ) ) )", "obj1": 0.888, "obj2": 0.04345420201129126}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.494, "obj2": 0.27318512536425493}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.37, "obj2": 0.36832739455775465}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) + RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.364, "obj2": 0.42792454065172236}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) )", "choosing": "( ( Min( Min( ( MUR / CS ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( RRSe - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.762, "obj2": 0.07942726872945256}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.536, "obj2": 0.2459452403791745}, {"determining": "Min( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / ( CS * DS ) )", "obj1": 0.148, "obj2": 0.6225868891675854}, {"determining": "Min( ( ( CRS / ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( MUR * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.588, "obj2": 0.2208823094982478}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.55, "obj2": 0.22474446583997051}, {"determining": "Min( ( ( BR / BR ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR / RRSe ) ) ) )", "obj1": 0.602, "obj2": 0.17758490669512925}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUM ) ) / DS ) ) )", "obj1": 0.306, "obj2": 0.453524854686192}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.416, "obj2": 0.3185500886098736}, {"determining": "Max( ( MDR + FirstVNF_CPU_Server ),( FirstVNF_Mem / Max( FirstVNF_RAM_Server,( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( MUM / Max( RRSe,RRSe ) ) - ( Min( MUR ,RMSe ) / Min( DS ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.136, "obj2": 0.6536176859266863}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.448, "obj2": 0.30176961857853973}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.92, "obj2": 0.026640599307136015}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( DDR ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( ( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) / ( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.792, "obj2": 0.0669121563827457}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.73, "obj2": 0.09112155234142368}, {"determining": "Min( ( RRS - ( ( ARS - ACS ) - ( CRS + Max( PN,FirstVNF_CPU ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - MDR ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6602215441647172}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.396, "obj2": 0.3429871353396087}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MDR ) + ( Max( PN,BR ) * ( PN + CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.212, "obj2": 0.5672552056496615}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.16, "obj2": 0.611282386653927}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.18, "obj2": 0.5920977797653164}, {"determining": "( ( ARS + Max( FirstVNF_CPU,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,( ( RCSe * DS ) - ( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM * MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.192, "obj2": 0.5833227054707097}, {"determining": "Min( ( ( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) - ( CRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),CS ) ) / MUR ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.966, "obj2": 0.01460745967717951}, {"determining": "( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,CS ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( ( ( ( ( DS / MUR ) + ( MUC + MUC ) ) + ( ( MUM * DS ) - ( MUR - MLU ) ) ) + ( ( ( RRSe / MUM ) + ( RMSe + MUR ) ) + Max( ( RCSe - MUR ),( MUR - CS ) ) ) ) ,( Min( ( ( RMSe + MLU ) + ( MLU * RCSe ) ) ,( Min( CS ,CS ) / Max( RMSe,RMSe ) ) ) * Max( Min( ( MUC - MUR ) ,Max( RRSe,DS ) ),Min( Max( MLU,CS ) ,( RMSe + RCSe ) ) ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.17, "obj2": 0.6013706999351841}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - MDR ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.432, "obj2": 0.31655686325262833}, {"determining": "Min( ( ( CRS / ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( MUR * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.586, "obj2": 0.22303209701016657}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.538, "obj2": 0.24392298875259555}, {"determining": "Min( ( ( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) - ( CRS + FirstVNF_CPU_Server ) ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( Min( MUM ,Max( ( RMSe - MUC ),CS ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.98, "obj2": 0.005761461641980195}, {"determining": "( ( ARS + Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( MLU / ( Min( ( MLU - RRSe ) ,( MUM / CS ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.204, "obj2": 0.5758009188808583}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( DDR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( Min( DS ,MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.394, "obj2": 0.3438518561616028}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.256, "obj2": 0.5276672670645707}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN - FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,Min( MUM ,RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RMSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.384, "obj2": 0.36475674738433383}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.926, "obj2": 0.024369420392128558}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) - ( BR / FirstVNF_Mem ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( RMSe ,( MUM / RRSe ) ) ,( RMSe * DS ) ) )", "obj1": 0.23, "obj2": 0.555696937902028}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( ( RRS - ( ( ARS - ACS ) - ( CRS + ( PN * FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.286, "obj2": 0.4946042369251674}, {"determining": "( ( RRS - PN ) - ( BR / FirstVNF_Mem ) )", "choosing": "( ( Max( DS,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.056, "obj2": 0.7105233440011344}], "12": [{"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( ( RCSe / RMSe ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( ( ( Min( RMSe ,MLU ) - ( RRSe + RMSe ) ) - Max( ( RMSe - MUC ),CS ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( ( PN / FirstVNF_CPU ) ,( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Max( Min( MUR ,Min( CS ,MUM ) ),Min( RCSe ,MUC ) ) + RMSe ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.364, "obj2": 0.42471399270008275}, {"determining": "Min( ( PN / ( CRS * FirstVNF_CPU ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.616, "obj2": 0.1681722025715292}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.672, "obj2": 0.14116731049553038}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUM ) ) / DS ) ) )", "obj1": 0.306, "obj2": 0.453524854686192}, {"determining": "Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,Max( DS,Max( RMSe,MLU ) ) ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.688, "obj2": 0.13887444398124058}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.37, "obj2": 0.36832739455775465}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - MDR ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.358, "obj2": 0.45267127025668774}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.718, "obj2": 0.09996843910496643}, {"determining": "Min( ( ( CRS / ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.506, "obj2": 0.2671586577455227}, {"determining": "Min( ( ( BR / BR ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR / RRSe ) ) ) )", "obj1": 0.602, "obj2": 0.17758490669512925}, {"determining": "Min( ( ( CRS / ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( MUR * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.588, "obj2": 0.2208823094982478}, {"determining": "Min( ( ( ( ( FirstVNF_RAM * MDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) - ( CRS + FirstVNF_CPU_Server ) ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.962, "obj2": 0.014565324130331746}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.878, "obj2": 0.04288649667168792}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.55, "obj2": 0.22474446583997051}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS - RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.13, "obj2": 0.6343859066104798}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5870621063965757}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.416, "obj2": 0.3185500886098736}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( DDR ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( ( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) / ( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.792, "obj2": 0.0669121563827457}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ( BR * RRS ) / PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Max( ( RMSe - RCSe ),CS ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.464, "obj2": 0.29404519664377393}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / Max( ( Const / ACS ),FirstVNF_CPU ) ) + ( ( PN / AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,CS ) ) / DS ) ),MUM ) / CS )", "obj1": 0.914, "obj2": 0.029385726434474308}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.536, "obj2": 0.2459452403791745}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.44, "obj2": 0.29955388082927986}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.182, "obj2": 0.576345319125451}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN - FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,Min( MUM ,RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RMSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.384, "obj2": 0.36475674738433383}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.926, "obj2": 0.024369420392128558}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.398, "obj2": 0.3419055248452789}, {"determining": "Min( ( RRS - ( ( ARS - ACS ) - ( CRS + Max( PN,FirstVNF_CPU ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - MDR ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6602215441647172}, {"determining": "Min( ( ( CRS / ( ( CRS - ( MDR - PN ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Max( RRSe,RRSe ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.814, "obj2": 0.05922713223455222}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) )", "choosing": "( ( Min( Min( ( MUR / CS ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( RRSe - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.762, "obj2": 0.07942726872945256}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.16, "obj2": 0.611282386653927}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.866, "obj2": 0.048588121324095734}, {"determining": "Min( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / ( CS * DS ) )", "obj1": 0.148, "obj2": 0.6225868891675854}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,DDR ) * ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) / ( RRSe + MLU ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.734, "obj2": 0.08781967164407026}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.256, "obj2": 0.5276672670645707}, {"determining": "Min( ( ( CRS / ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( MUR * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.586, "obj2": 0.22303209701016657}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "( ( ARS + Max( FirstVNF_CPU_Server,( DDR + FirstVNF_CPU ) ) ) - Min( ( RRS - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - FirstVNF_CPU ) ) ,FirstVNF_RAM ) )", "choosing": "( MLU / ( Min( ( MLU - RRSe ) ,( MUM / CS ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.204, "obj2": 0.5758009188808583}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( DDR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( Min( DS ,MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.394, "obj2": 0.3438518561616028}, {"determining": "( ( ( Const * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.274, "obj2": 0.517300935062787}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ),FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - MDR ) ) )", "choosing": "( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.116, "obj2": 0.6628672479317025}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Max( FirstVNF_CPU,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( MUM * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.76, "obj2": 0.07994838101229275}], "13": [{"determining": "Min( ( ( ( Const / ACS ) - FirstVNF_RAM ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( MUR ,MUM ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( ( RCSe / RMSe ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.332, "obj2": 0.40962369762241013}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.571515384591556}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.37, "obj2": 0.36832739455775465}, {"determining": "( Max( DDR,( ( CRS / FirstVNF_CPU_Server ) - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / Min( RCSe ,MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * CS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.224, "obj2": 0.5428075949788054}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( ( PN / FirstVNF_CPU ) ,FirstVNF_CPU ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6082833143213554}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.536, "obj2": 0.2459452403791745}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5870621063965757}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.578, "obj2": 0.2087344049714205}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) ) ) * ( PN - CRS ) ) )", "choosing": "( ( Max( MUR,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MLU ) ) / DS ) ) )", "obj1": 0.696, "obj2": 0.11655729517845824}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( PN - CRS ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( MUR,Max( RMSe,MLU ) ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.96, "obj2": 0.013783847063847728}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS - RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.13, "obj2": 0.6343859066104798}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.6, "obj2": 0.19462680700069063}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ( BR * RRS ) / PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Max( ( RMSe - RCSe ),CS ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.464, "obj2": 0.29404519664377393}, {"determining": "Min( ( ( CRS / ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.506, "obj2": 0.2671586577455227}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.642, "obj2": 0.1560316390881016}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( ( PN - FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,Min( MUM ,RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RMSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.988, "obj2": 0.0033721549586976526}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR / PN ) ) )", "choosing": "( ( Min( ( RCSe / MUR ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( Min( ( MLU / MUR ) ,( MUM / RRSe ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.52, "obj2": 0.2635370684755305}, {"determining": "Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,Max( DS,Max( RMSe,MLU ) ) ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.688, "obj2": 0.13887444398124058}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "Min( ( Max( BR,BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ACS ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ) / CS ),MUM ) / ( CS * DS ) )", "obj1": 0.116, "obj2": 0.6451520062507331}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR / RRSe ) ) ) )", "obj1": 0.71, "obj2": 0.09961206562111928}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( DDR ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Min( ( ( Min( ( ( DS - MUR ) / ( RRSe / MUM ) ) ,( ( MLU * RRSe ) / Min( CS ,CS ) ) ) / ( ( Min( CS ,MUM ) * Min( MUR ,MUM ) ) + ( Max( MLU,RRSe ) + ( RCSe / RRSe ) ) ) ) / ( ( ( Max( MUR,RMSe ) + ( MLU - MLU ) ) + ( Min( RMSe ,RCSe ) - ( RMSe / DS ) ) ) * ( ( ( MUC + RCSe ) * ( DS * RMSe ) ) * ( Min( MLU ,MLU ) + Min( RCSe ,MLU ) ) ) ) ) ,( ( ( ( ( MLU + MUC ) * ( MUC / MUR ) ) - ( ( RMSe + MUM ) * ( CS + MUM ) ) ) + Max( ( ( DS - MUC ) + ( CS + MUC ) ),( ( RRSe + RMSe ) - Max( MUC,MUM ) ) ) ) + ( ( ( ( MLU / RCSe ) / Max( CS,RMSe ) ) + ( ( MLU * MUM ) + ( MLU + RRSe ) ) ) - Min( Min( ( RRSe + RRSe ) ,( MUM - MUR ) ) ,Min( ( RCSe * DS ) ,( RRSe * CS ) ) ) ) ) ) ) ,( ( ( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) / ( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.792, "obj2": 0.0669121563827457}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( RRSe * Min( MLU ,CS ) ) ) )", "obj1": 0.548, "obj2": 0.22123851299364883}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.416, "obj2": 0.3185500886098736}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.384, "obj2": 0.36239112449813954}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.302, "obj2": 0.4551215443102659}, {"determining": "Min( ( PN / ( CRS * FirstVNF_CPU ) ) ,( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / Max( MUR,DS ) ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.434, "obj2": 0.30609734701294566}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / DS ) * Max( ( RCSe / RMSe ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.41, "obj2": 0.32891443395575237}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.866, "obj2": 0.048483528416663084}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.774, "obj2": 0.07933729930824768}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( MRS + BR ) + Min( MDR ,DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.556, "obj2": 0.21988599541800924}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.44, "obj2": 0.29955388082927986}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,Max( RRSe,RRSe ) ) ) / DS ) ),MUM ) / CS )", "obj1": 0.942, "obj2": 0.020747829448729514}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / Max( ( Const / ACS ),FirstVNF_CPU ) ) + ( ( PN / AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,CS ) ) / DS ) ),MUM ) / CS )", "obj1": 0.914, "obj2": 0.029385726434474308}, {"determining": "Min( ( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.666, "obj2": 0.145069416551084}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( RCSe,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.39, "obj2": 0.3427224067864895}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,DDR ) * ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) / ( RRSe + MLU ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.734, "obj2": 0.08781967164407026}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.398, "obj2": 0.3419055248452789}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.878, "obj2": 0.04288649667168792}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( ( RCSe / RMSe ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.826, "obj2": 0.054633597296410374}], "14": [{"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_CPU ) ) + ( Const - AMS ) )", "choosing": "( Max( ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,Max( RRSe,RRSe ) ) ) / DS ) ),( Max( MUR,Max( RMSe,MLU ) ) / DS ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const / ACS ) - FirstVNF_RAM ) / Max( CRS,FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( MUR ,MUM ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.358, "obj2": 0.39400389686184706}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( ( PN / FirstVNF_CPU ) ,FirstVNF_CPU ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6082833143213554}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.332, "obj2": 0.40962369762241013}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.614, "obj2": 0.16971979230943865}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.6, "obj2": 0.19462680700069063}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.3, "obj2": 0.48939963503992356}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.642, "obj2": 0.1560316390881016}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.53, "obj2": 0.24454018727235338}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5870621063965757}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.214, "obj2": 0.561276102056652}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) ) ) * ( PN - CRS ) ) )", "choosing": "( ( Max( MUR,MUM ) * ( CS - RMSe ) ) - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MLU ) ) / DS ) ) )", "obj1": 0.696, "obj2": 0.11655729517845824}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.386, "obj2": 0.34050256750219876}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,DDR ) * ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) / ( RRSe + MLU ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.792, "obj2": 0.06681050554460968}, {"determining": "Min( ( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.666, "obj2": 0.145069416551084}, {"determining": "Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,Max( DS,Max( RMSe,MLU ) ) ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.688, "obj2": 0.13887444398124058}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.11, "obj2": 0.6426661403148115}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ( BR * RRS ) / PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Max( ( RMSe - RCSe ),CS ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.464, "obj2": 0.29404519664377393}, {"determining": "Min( ( ( CRS / ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.506, "obj2": 0.2671586577455227}, {"determining": "Min( Min( MDR ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR / RRSe ) ) ) )", "obj1": 0.71, "obj2": 0.09961206562111928}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.578, "obj2": 0.2087344049714205}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / DS ) * Max( ( RCSe / RMSe ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.41, "obj2": 0.32891443395575237}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.302, "obj2": 0.4551215443102659}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( RRSe * Min( MLU ,CS ) ) ) )", "obj1": 0.548, "obj2": 0.22123851299364883}, {"determining": "( Max( DDR,( ( CRS * FirstVNF_CPU_Server ) - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * CS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.222, "obj2": 0.5401054624035401}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.878, "obj2": 0.04288649667168792}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / Max( ( Const / ACS ),FirstVNF_CPU ) ) + ( ( PN / AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,CS ) ) / DS ) ),MUM ) / CS )", "obj1": 0.914, "obj2": 0.029385726434474308}, {"determining": "( ( AMS - PN ) - Min( ( RRS - ( ( Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( ARS ,MRS ) ) ,( ( AMS * CRS ) * ( FirstVNF_CPU_Server * MRS ) ) ) / ( Min( ( AMS + BR ) ,( Const / MRS ) ) * ( Max( ACS,FirstVNF_Mem ) - Max( MRS,FirstVNF_Mem ) ) ) ) / Min( ( ( ( BR * FirstVNF_CPU_Server ) + ( DDR * AMS ) ) + ( ( MRS + BR ) + Min( MDR ,DDR ) ) ) ,( ( ( ARS * MRS ) / Min( FirstVNF_Mem ,ACS ) ) / ( ( ACS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + DDR ) ) ) ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS - RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.13, "obj2": 0.6343859066104798}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.416, "obj2": 0.3185500886098736}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR / PN ) ) )", "choosing": "( ( Min( ( RCSe / MUR ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( Min( ( MLU / MUR ) ,( MUM / RRSe ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.52, "obj2": 0.2635370684755305}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.182, "obj2": 0.5706787231226679}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( ( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.816, "obj2": 0.057959545860540244}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.774, "obj2": 0.07933729930824768}, {"determining": "Min( ( PN / ( CRS * FirstVNF_CPU ) ) ,( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / Max( MUR,DS ) ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.434, "obj2": 0.30609734701294566}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.052, "obj2": 0.711029697567028}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.34, "obj2": 0.4047867442117433}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.44, "obj2": 0.29955388082927986}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.866, "obj2": 0.04838192667030641}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.571515384591556}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( PN / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.98, "obj2": 0.005768088211444648}], "15": [{"determining": "Min( ( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) / ( BR / FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) * ( CS + RCSe ) ) * Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_CPU ) ) + ( Const - AMS ) )", "choosing": "( Max( ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,Max( RRSe,RRSe ) ) ) / DS ) ),( Max( MUR,Max( RMSe,MLU ) ) / DS ) ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.11, "obj2": 0.6426661403148115}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / Max( ( Const / ACS ),FirstVNF_CPU ) ) + ( ( PN / AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,CS ) ) / DS ) ),MUM ) / CS )", "obj1": 0.914, "obj2": 0.029385726434474308}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.774, "obj2": 0.07933729930824768}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.332, "obj2": 0.40962369762241013}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.6, "obj2": 0.19462680700069063}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.962, "obj2": 0.013807395580718102}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - ACS ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUR ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.292, "obj2": 0.46694368585015433}, {"determining": "( Max( DDR,( ( CRS * FirstVNF_CPU_Server ) - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * CS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.258, "obj2": 0.5189599935981883}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5870621063965757}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * BR ) ) - ( MDR - PN ) ) ,( ( PN / FirstVNF_CPU ) - Max( MDR,PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( CS / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + Min( MUR ,DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.716, "obj2": 0.09585482652173218}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.214, "obj2": 0.561276102056652}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.13, "obj2": 0.6155297655877208}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( RRSe * Min( MLU ,CS ) ) ) )", "obj1": 0.548, "obj2": 0.22123851299364883}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( PN - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUC ) - ( MUR * RRSe ) ) ) )", "obj1": 0.64, "obj2": 0.15552815480980026}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.358, "obj2": 0.39400389686184706}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( ( PN / FirstVNF_CPU ) ,FirstVNF_CPU ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6082833143213554}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.386, "obj2": 0.34050256750219876}, {"determining": "( ( ( BR - PN ) / ( Min( Const ,BR ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) + ( MUR * DS ) ) - Min( MLU ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.656, "obj2": 0.14095287745460672}, {"determining": "( Min( Max( ( ( BR * RRS ) / PN ),Max( FirstVNF_CPU,AMS ) ) ,MRS ) + ( Max( PN,BR ) * ( PN * CRS ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - Min( RRSe ,RMSe ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.24, "obj2": 0.5367923938907654}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ( BR * RRS ) / PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Max( ( RMSe - RCSe ),CS ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.464, "obj2": 0.29404519664377393}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( MUR / CS ),( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) / CS )", "obj1": 0.53, "obj2": 0.24454018727235338}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / DS ) * Max( ( RCSe / RMSe ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.41, "obj2": 0.32891443395575237}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.578, "obj2": 0.2087344049714205}, {"determining": "( Max( DDR,( ( CRS * FirstVNF_CPU_Server ) - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * CS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.222, "obj2": 0.5401054624035401}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.614, "obj2": 0.16971979230943865}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.894, "obj2": 0.034988620336608094}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.182, "obj2": 0.5706787231226679}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.09, "obj2": 0.6864481327461776}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.56, "obj2": 0.20907625138760502}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.44, "obj2": 0.29955388082927986}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( CRS - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( Min( MUR ,CS ) * Max( RMSe,MLU ) ) ) / ( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) - ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.478, "obj2": 0.280002814883119}, {"determining": "Min( ( ( BR + Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) - ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) / Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,MUR ) ) )", "obj1": 0.48, "obj2": 0.2721119809950212}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.62, "obj2": 0.16834358965089913}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.866, "obj2": 0.04838192667030641}, {"determining": "Min( ( ( CRS / ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) * Max( Min( MUR ,CS ),Max( RMSe,MLU ) ) ) / ( MUR + Max( CS,MLU ) ) )", "obj1": 0.506, "obj2": 0.2671586577455227}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.71, "obj2": 0.09940530526739234}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.571515384591556}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,DDR ) * ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) / ( RRSe + MLU ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.792, "obj2": 0.06681050554460968}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.434, "obj2": 0.3059336770274968}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) ) )", "obj1": 0.086, "obj2": 0.6943558903207251}, {"determining": "Min( ( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,RRSe ) ) / DS ) ),MUM ) / CS )", "obj1": 0.694, "obj2": 0.13366197837335372}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.302, "obj2": 0.4551215443102659}], "16": [{"determining": "Min( ( ( ( Const / ACS ) - FirstVNF_RAM ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( MRS / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) / ( BR / FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) * ( CS + RCSe ) ) * Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "( DDR * Max( ( ARS - ACS ),FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) / CS ),MUM ) / CS )", "obj1": 0.28, "obj2": 0.503309674522395}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.11, "obj2": 0.6426661403148115}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.222, "obj2": 0.5261314654590066}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.236, "obj2": 0.5039411035684034}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - ACS ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUR ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.292, "obj2": 0.46694368585015433}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) / ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,Max( MUM,RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.5444356968982161}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.6, "obj2": 0.19462680700069063}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / Max( ( Const / ACS ),FirstVNF_CPU ) ) + ( ( PN / AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,CS ) ) / DS ) ),MUM ) / CS )", "obj1": 0.914, "obj2": 0.029385726434474308}, {"determining": "( ( ( BR - PN ) / ( Min( Const ,BR ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) + ( MUR * DS ) ) - Min( MLU ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.656, "obj2": 0.14095287745460672}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.13, "obj2": 0.6155297655877208}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3895384097046189}, {"determining": "Min( ( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,RRSe ) ) / DS ) ),MUM ) / CS )", "obj1": 0.694, "obj2": 0.13366197837335372}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.386, "obj2": 0.34050256750219876}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.866, "obj2": 0.04838192667030641}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.96, "obj2": 0.013783847063847728}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( RRSe * Min( MLU ,CS ) ) ) )", "obj1": 0.548, "obj2": 0.22123851299364883}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.578, "obj2": 0.2087344049714205}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.774, "obj2": 0.07933729930824768}, {"determining": "Min( ( ( ( MDR / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( RCSe ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.892, "obj2": 0.03490127768644519}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.64, "obj2": 0.15507303700429118}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ),RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.41, "obj2": 0.32760124946857666}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.738, "obj2": 0.08525785081464049}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR * PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + ( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Max( RMSe,CS ) ) - CS ) + Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.184, "obj2": 0.560963580065114}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Max( Max( FirstVNF_CPU_Server,PN ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.512, "obj2": 0.2536751406372912}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Max( ( PN / FirstVNF_CPU ),( MDR - PN ) ) ) ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUC + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * DS ) ) )", "obj1": 0.7, "obj2": 0.11446345885519353}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - BR ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) + PN )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.536, "obj2": 0.2370067260802321}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( CS / MLU ) * Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.056, "obj2": 0.7067655385480662}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.612, "obj2": 0.17140766598984328}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.56, "obj2": 0.20907625138760502}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.522, "obj2": 0.23945598994424477}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.44, "obj2": 0.29955388082927986}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ( BR * RRS ) / PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU - MUR ) - ( CS - MUR ) ) / Min( ( RCSe - MUM ) ,( DS * MLU ) ) ) / ( ( ( RMSe / DS ) / Max( MLU,RRSe ) ) * ( Max( RRSe,RMSe ) + ( MUC + CS ) ) ) ) / ( ( ( ( MUM / RRSe ) * ( MUC / MUC ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,MUM ) ) ) - ( Min( Max( RRSe,RMSe ) ,Min( MUR ,MUR ) ) - ( ( RCSe * MUM ) - Min( RRSe ,MUR ) ) ) ) ) - Min( ( ( ( ( DS - MUC ) - Min( MUR ,RMSe ) ) * ( ( CS * MLU ) + ( RCSe + MUR ) ) ) / ( Min( ( CS / MUC ) ,( CS * MUM ) ) * ( Max( CS,MLU ) / Min( RCSe ,MUC ) ) ) ) ,( ( ( ( CS + RMSe ) * ( MUM + MUC ) ) * ( ( MLU - DS ) * ( CS + MUC ) ) ) * Max( ( Max( RCSe,MUM ) / Min( RCSe ,MUM ) ),( ( DS + RCSe ) + ( DS / RRSe ) ) ) ) ) ) + Max( ( RMSe - RCSe ),CS ) ) ,( ( Min( Max( ( ( ( RCSe * RRSe ) + ( MLU - MUR ) ) / ( Max( MUM,RRSe ) * ( RMSe / RMSe ) ) ),( ( ( RCSe / MUC ) - ( RRSe - MLU ) ) + Max( ( CS / DS ),( CS / MUR ) ) ) ) ,( ( Min( Min( MUC ,MUM ) ,( RRSe - RMSe ) ) - ( ( MUM * RMSe ) - ( RRSe + RRSe ) ) ) / Max( Max( ( MLU - RCSe ),( MUM + MLU ) ),( Min( RCSe ,MUR ) * ( RCSe * MLU ) ) ) ) ) - Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) * ( Min( ( Min( Max( ( RMSe - DS ),( MUM * RRSe ) ) ,Max( Min( MUC ,DS ),Min( DS ,MLU ) ) ) - ( Max( ( MUR + RCSe ),( RCSe + DS ) ) / ( Max( CS,DS ) + ( MUM / MUR ) ) ) ) ,( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - ( ( CS - RCSe ) / ( RRSe + MUM ) ) ) * Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( CS ,RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * DS ) / Min( MUM ,DS ) ) * ( ( MUC + MUC ) * ( MUR + MLU ) ) ) - ( Min( ( RRSe * RMSe ) ,Max( DS,RMSe ) ) * ( Min( MUM ,RCSe ) * ( RCSe - RMSe ) ) ) ) / Max( Min( Max( Max( MUM,MUR ),( CS * MUC ) ) ,Max( Max( CS,CS ),Min( MUR ,MUR ) ) ),Max( ( ( CS - RMSe ) - ( MUC - MUC ) ),( ( RMSe / RMSe ) + ( RMSe - RMSe ) ) ) ) ) ) ) )", "obj1": 0.464, "obj2": 0.29404519664377393}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.412, "obj2": 0.3176879717326946}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) - CRS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.818, "obj2": 0.057732889914393036}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( BR,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( DS / ( CS * DS ) )", "obj1": 0.986, "obj2": 0.004591901312724384}, {"determining": "Min( ( ( BR + Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) - ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) / Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,MUR ) ) )", "obj1": 0.48, "obj2": 0.2721119809950212}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( ( PN / FirstVNF_CPU ) ,FirstVNF_CPU ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6063005440078199}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5870621063965757}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.432, "obj2": 0.31226095717565344}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.302, "obj2": 0.4551215443102659}, {"determining": "( DDR * ( FirstVNF_RAM * Min( Min( Min( FirstVNF_CPU ,( ( Min( PN ,DDR ) * ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) / ( RRSe + MLU ) ) - Max( ( RMSe - RCSe ),CS ) )", "obj1": 0.792, "obj2": 0.06681050554460968}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,PN ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) + Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( ( RMSe / MLU ),MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.166, "obj2": 0.5820849688173769}], "17": [{"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( AMS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * MUR ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const / ACS ) - FirstVNF_RAM ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( MRS / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.236, "obj2": 0.5039411035684034}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "Min( ( ( BR + Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) - ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) / Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,MUR ) ) )", "obj1": 0.48, "obj2": 0.2721119809950212}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * Min( DDR ,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.064, "obj2": 0.6956738513311683}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( BR + FirstVNF_CPU ) ) ) - ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) )", "obj1": 0.096, "obj2": 0.6657936065922776}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3895384097046189}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Max( Max( FirstVNF_CPU_Server,PN ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.512, "obj2": 0.2536751406372912}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.96, "obj2": 0.013783847063847728}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.462, "obj2": 0.29143997653454207}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( ( ( ( MDR / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( RCSe ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.892, "obj2": 0.03490127768644519}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.932, "obj2": 0.02266529374728222}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Min( RMSe ,MLU ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.342, "obj2": 0.39908672633196696}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.11, "obj2": 0.6426661403148115}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.6, "obj2": 0.19462680700069063}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.64, "obj2": 0.15507303700429118}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.222, "obj2": 0.5261314654590066}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.44, "obj2": 0.29955388082927986}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( BR,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( DS / ( CS * DS ) )", "obj1": 0.986, "obj2": 0.004591901312724384}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - ACS ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUR ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.292, "obj2": 0.46694368585015433}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / Max( ( Const / ACS ),FirstVNF_CPU ) ) + ( ( PN / AMS ) * ( PN - CRS ) ) )", "choosing": "( Max( ( ( RMSe - MUC ) / ( Max( MUR,Max( RMSe,CS ) ) / DS ) ),MUM ) / CS )", "obj1": 0.914, "obj2": 0.029385726434474308}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6277898814801751}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.612, "obj2": 0.17140766598984328}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.678, "obj2": 0.13257807643596523}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.774, "obj2": 0.07933729930824768}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) ) ) ,( ( MUC / MUM ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.62, "obj2": 0.16797682541302644}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,PN ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) + Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( ( RMSe / MLU ),MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.166, "obj2": 0.5820849688173769}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( CS / MLU ) * Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.056, "obj2": 0.7067655385480662}, {"determining": "( ( ( FirstVNF_Mem + ( BR + Max( PN,FirstVNF_CPU ) ) ) * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - BR ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.684, "obj2": 0.12119541546686961}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.724, "obj2": 0.09408810033879408}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.218, "obj2": 0.5357656537120241}, {"determining": "( ( ( FirstVNF_RAM * MDR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.866, "obj2": 0.04838192667030641}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR * PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + ( ( ( ( ( ( DS + MUM ) / Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - Max( RMSe,CS ) ) - CS ) + Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.182, "obj2": 0.5648659463007881}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.386, "obj2": 0.34050256750219876}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.1, "obj2": 0.6555824283584064}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.746, "obj2": 0.08426176015190143}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( FirstVNF_CPU / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( MLU ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.53, "obj2": 0.23272264802732626}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.13, "obj2": 0.6155297655877208}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) / ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,Max( MUM,RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.5444356968982161}, {"determining": "( ( ( BR - PN ) / ( Min( Const ,BR ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) + ( MUR * DS ) ) - Min( MLU ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.656, "obj2": 0.14095287745460672}, {"determining": "Min( ( ( BR / BR ) / Min( BR ,FirstVNF_CPU_Server ) ) ,Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( ( PN / FirstVNF_CPU ) ,FirstVNF_CPU ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6063005440078199}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.546, "obj2": 0.2204632086167466}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,RRSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.59, "obj2": 0.20317727306620534}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.796, "obj2": 0.06462325617688175}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}], "18": [{"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( ARS - ACS ) - ( BR + Max( BR,FirstVNF_CPU ) ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( BR,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( DS / ( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( AMS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * MUR ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),MUM ) ) / RMSe ) ,Min( MUM ,Max( ( RMSe - MUC ),CS ) ) )", "obj1": 0.84, "obj2": 0.05045625076715221}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Max( Max( FirstVNF_CPU_Server,PN ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.512, "obj2": 0.2536751406372912}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.418, "obj2": 0.3238264259242979}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.236, "obj2": 0.5039411035684034}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6041309377436541}, {"determining": "Min( ( ( BR + Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) - ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) / Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,MUR ) ) )", "obj1": 0.48, "obj2": 0.2721119809950212}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( MUR,DS ) + ( MUR * MUM ) ),( ( DS - DS ) - ( MUR * RRSe ) ) ) )", "obj1": 0.588, "obj2": 0.21999834631773105}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.546, "obj2": 0.2204632086167466}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.796, "obj2": 0.06462325617688175}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Min( RMSe ,MLU ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.342, "obj2": 0.39908672633196696}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.11, "obj2": 0.6426661403148115}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR * PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + ( ( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( RRSe,RRSe ) ) - Max( RMSe,CS ) ) - CS ) + Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.086, "obj2": 0.6703714754442868}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.366, "obj2": 0.38630840423905966}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,ARS ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / DS ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( MUM - RRSe ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.318, "obj2": 0.42637639457246534}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.462, "obj2": 0.29143997653454207}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "( ( ( BR - PN ) / ( Min( Const ,BR ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) + ( MUR * DS ) ) - Min( MLU ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.656, "obj2": 0.14095287745460672}, {"determining": "( ( ( MDR / PN ) / ( ( Const / ACS ) - Min( PN ,FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,RMSe ) ) ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.696, "obj2": 0.11586869882802601}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6277898814801751}, {"determining": "( Max( DDR,( ( ( ( ( PN / ARS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.072, "obj2": 0.6956503901860971}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( PN - CRS ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.392, "obj2": 0.33669326943515293}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - ACS ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUR ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.292, "obj2": 0.46694368585015433}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) ) ) ,( ( MUC / MUM ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.62, "obj2": 0.16797682541302644}, {"determining": "Min( ( ( ( MDR / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( RCSe ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.892, "obj2": 0.03490127768644519}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( DDR ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUR / RMSe ) ) + Min( ( ( ( ( CS + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.712, "obj2": 0.0982921224906851}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.638, "obj2": 0.15464072121459746}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.222, "obj2": 0.5261314654590066}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( ( DS + MUM ) / Min( CS ,RRSe ) ) )", "obj1": 0.526, "obj2": 0.2386422115766595}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,RRSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.59, "obj2": 0.20317727306620534}, {"determining": "( Min( ( FirstVNF_Mem + ( BR + Max( PN,FirstVNF_CPU ) ) ) ,Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - BR ) ) - ( MDR - ( CRS * FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( Min( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) ,RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.746, "obj2": 0.08303233746647971}, {"determining": "( DDR * ( FirstVNF_RAM * Min( PN ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.13, "obj2": 0.6155297655877208}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.1, "obj2": 0.6555824283584064}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.386, "obj2": 0.34050256750219876}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.872, "obj2": 0.045147039956482206}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * ( Min( Max( MUR,DS ) ,( MUR * DS ) ) / Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.476, "obj2": 0.2811489211669203}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.228, "obj2": 0.5082213901693984}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MLU ) ) / DS ) ) )", "obj1": 0.608, "obj2": 0.18904800788446113}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.932, "obj2": 0.02266529374728222}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.96, "obj2": 0.013783847063847728}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5650836578702068}], "19": [{"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( CRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) ) )", "choosing": "( ( Max( MUC,MUM ) / ( RCSe * MUM ) ) * Max( ( Max( DS,RRSe ) / ( CS * MUR ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( ARS - ACS ) - ( BR + Max( BR,FirstVNF_CPU ) ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( ( RRS / ( ( ARS - ACS ) - ( BR + Max( BR,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( DS / ( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Max( Max( FirstVNF_CPU_Server,PN ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.512, "obj2": 0.2536751406372912}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.546, "obj2": 0.2204632086167466}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( ( DS + MUM ) / Min( CS ,RRSe ) ) )", "obj1": 0.526, "obj2": 0.2386422115766595}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,RRSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.59, "obj2": 0.20317727306620534}, {"determining": "Min( ( ( BR + Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) - ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) / Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,MUR ) ) )", "obj1": 0.48, "obj2": 0.2721119809950212}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.604, "obj2": 0.17738034639316588}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.638, "obj2": 0.15464072121459746}, {"determining": "( ( ( BR - PN ) / ( Min( Const ,BR ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) + ( MUR * DS ) ) - Min( MLU ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.656, "obj2": 0.14095287745460672}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - ACS ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MUR ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) )", "obj1": 0.292, "obj2": 0.46694368585015433}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR * PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + ( ( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( RRSe,RRSe ) ) - Max( RMSe,CS ) ) - CS ) + Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.086, "obj2": 0.6703714754442868}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( MUR,DS ) + ( MUR * MUM ) ),( ( DS - DS ) - ( MUR * RRSe ) ) ) )", "obj1": 0.588, "obj2": 0.21999834631773105}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.366, "obj2": 0.38630840423905966}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.11, "obj2": 0.6426661403148115}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6041309377436541}, {"determining": "( ( ( MDR / PN ) / ( ( Const / ACS ) - Min( PN ,FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,RMSe ) ) ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.696, "obj2": 0.11586869882802601}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Min( RMSe ,MLU ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.342, "obj2": 0.39908672633196696}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}, {"determining": "( Max( DDR,( Const * PN ) ) / ( FirstVNF_Mem + Max( BR,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + CS ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.1, "obj2": 0.6555824283584064}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6277898814801751}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.418, "obj2": 0.3238264259242979}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( PN - CRS ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.392, "obj2": 0.33669326943515293}, {"determining": "Min( ( ( ( MDR / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( ( Max( BR,BR ) / Min( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - MDR ) ) ,FirstVNF_CPU_Server ) ) * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) * Max( RCSe,( RMSe / MLU ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( RCSe ,MUM ),Max( RMSe,MLU ) ) ) ) )", "obj1": 0.9, "obj2": 0.032576707559687515}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / Min( ( ARS - FirstVNF_Mem ) ,( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUM ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.176, "obj2": 0.5636267908786892}, {"determining": "( Max( DDR,( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.084, "obj2": 0.6942903354460227}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.796, "obj2": 0.06462325617688175}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.222, "obj2": 0.5261314654590066}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( RCSe,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.422, "obj2": 0.3180298967904027}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * ACS ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RCSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.93, "obj2": 0.023644753970359277}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * ( Min( Max( MUR,DS ) ,( MUR * DS ) ) / Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.476, "obj2": 0.2811489211669203}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - BR ) ) - Min( MDR ,( CRS * FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) )", "obj1": 0.98, "obj2": 0.006233760540675654}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.932, "obj2": 0.02266529374728222}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.462, "obj2": 0.29143997653454207}, {"determining": "( ( ( FirstVNF_Mem + ( BR + Max( PN,FirstVNF_RAM ) ) ) * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - BR ) ) - ( MDR - ( CRS * FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),Max( Min( MUM ,CS ),MLU ) ) + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.734, "obj2": 0.08761500927824081}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.216, "obj2": 0.5388749064728592}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Min( RMSe ,MLU ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3917661125004587}, {"determining": "Min( ( ( Max( Const,BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( CS ,MUC ) ) ) )", "obj1": 0.448, "obj2": 0.2923663198367584}, {"determining": "Min( ( BR + FirstVNF_CPU ) ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / ( Min( RMSe ,RMSe ) + ( MUR * DS ) ) ) ) ,( ( MUC / MUM ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.62, "obj2": 0.16797682541302644}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.85, "obj2": 0.04975239046333399}], "20": [{"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( AMS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) ) )", "choosing": "( ( Max( MUC,MUM ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * MUR ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( CRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) ) )", "choosing": "( ( Max( MUC,MUM ) / ( RCSe * MUM ) ) * Max( ( Max( DS,RRSe ) / ( CS * MUR ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( Max( DDR,( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.074, "obj2": 0.6917612568414364}, {"determining": "( Max( DDR,( Const - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.142, "obj2": 0.6041309377436541}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( ( DS + MUM ) / Min( CS ,RRSe ) ) )", "obj1": 0.526, "obj2": 0.2386422115766595}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.604, "obj2": 0.17738034639316588}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.546, "obj2": 0.2204632086167466}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / Min( ( ARS - FirstVNF_Mem ) ,( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUM ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.176, "obj2": 0.5636267908786892}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "( ( ( BR - PN ) / ( Min( Const ,BR ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) + ( MUR * DS ) ) - Min( MLU ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) )", "obj1": 0.656, "obj2": 0.14095287745460672}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.972, "obj2": 0.008313178459126526}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6277898814801751}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.85, "obj2": 0.04975239046333399}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.892, "obj2": 0.03448219103879389}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( PN - CRS ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.392, "obj2": 0.33669326943515293}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.366, "obj2": 0.38630840423905966}, {"determining": "( ( FirstVNF_RAM * ( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,Max( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ),( MDR - PN ) ) ) ,MRS ) * Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUC ) ,Min( MUR ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,( MUM - CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.324, "obj2": 0.41969048964669164}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.932, "obj2": 0.02266529374728222}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,RRSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.59, "obj2": 0.20317727306620534}, {"determining": "Min( ( ( BR + Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) - ( BR * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( DS + MLU ) / ( CS + RCSe ) ) / Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) / ( Min( RMSe ,RMSe ) + Min( MUR ,MUR ) ) )", "obj1": 0.48, "obj2": 0.2721119809950212}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR * PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + ( ( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( RRSe,RRSe ) ) - Max( RMSe,CS ) ) - CS ) + Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.086, "obj2": 0.6703714754442868}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.216, "obj2": 0.5388749064728592}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN - CRS ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) )", "obj1": 0.51, "obj2": 0.26141367772446045}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR + BR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( Min( ( MUM * RMSe ) ,Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.564, "obj2": 0.2105415426568861}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "( Max( DDR,( Const + PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.054, "obj2": 0.711561577958079}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.796, "obj2": 0.06462325617688175}, {"determining": "( ( ( FirstVNF_Mem + ( BR + Max( PN,FirstVNF_RAM ) ) ) * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - BR ) ) - ( MDR - ( CRS * FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) ) + PN )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),Max( Min( MUM ,CS ),MLU ) ) + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.734, "obj2": 0.08761500927824081}, {"determining": "( ( ( MDR - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) / ( ( Const / BR ) - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) / ( CS * DS ) )", "obj1": 0.238, "obj2": 0.5249310092303816}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.15, "obj2": 0.585105234987812}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,Max( Max( FirstVNF_CPU_Server,PN ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.512, "obj2": 0.2536751406372912}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.638, "obj2": 0.15464072121459746}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * ( Min( Max( MUR,DS ) ,( MUR * DS ) ) / Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.476, "obj2": 0.2811489211669203}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.462, "obj2": 0.29143997653454207}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.398, "obj2": 0.32609763784292467}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.352, "obj2": 0.3874438219554668}, {"determining": "Min( ( ( Max( Const,BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( CS ,MUC ) ) ) )", "obj1": 0.448, "obj2": 0.2923663198367584}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - BR ) ) - Min( MDR ,( CRS * FirstVNF_CPU_Server ) ) ) ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / ( CS * DS ) )", "obj1": 0.7, "obj2": 0.10448569076152885}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.222, "obj2": 0.5261314654590066}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - Min( PN ,FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.694, "obj2": 0.1164827062128998}], "21": [{"determining": "( ( Max( ( Max( ( ( Min( Const ,Const ) - ( FirstVNF_CPU_Server / PN ) ) + Min( ( ACS + Const ) ,( DDR * ARS ) ) ),Max( Min( Min( MRS ,ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( PN - Const ) * Max( ARS,FirstVNF_CPU ) ) ) ) / ( ( ( ( CRS - FirstVNF_RAM ) - ( FirstVNF_Mem + ARS ) ) - ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU + RRS ),Max( MRS,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + PN ) ) ) ) ),( ( ( ( Min( BR ,FirstVNF_Mem ) - ( MDR / DDR ) ) + ( Min( BR ,DDR ) + ( Const + FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ( ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server + Const ) ) * Min( ( MRS / MRS ) ,( ARS * FirstVNF_Mem_Server ) ) ) + ( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,ACS ) ) / Max( ( MRS * RRS ),( FirstVNF_CPU_Server / DDR ) ) ) ) ) ) - Max( ( Max( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) + ( ( Const - ACS ) - ( AMS - MRS ) ) ),Max( Max( ( CRS - ARS ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ),Min( ( CRS - FirstVNF_Mem_Server ) ,Min( Const ,MDR ) ) ) ) - ( ( ( Max( FirstVNF_Mem,ACS ) / Max( FirstVNF_CPU_Server,Const ) ) * Min( ( CRS - ARS ) ,Max( MDR,MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) * ( BR + ACS ) ) - ( Max( FirstVNF_RAM_Server,CRS ) + ( MRS / MRS ) ) ) ) ),( ( ( ( Max( FirstVNF_CPU,ACS ) / Min( FirstVNF_CPU ,PN ) ) / Min( Min( ACS ,CRS ) ,( MDR - FirstVNF_Mem ) ) ) * Max( ( ( Const / MDR ) - ( ARS / MRS ) ),( ( FirstVNF_RAM + RRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( RRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) + Max( ( MRS * FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,RRS ) ) ) - ( ( ( Const + FirstVNF_CPU_Server ) / Min( DDR ,RRS ) ) + ( ( FirstVNF_RAM_Server * Const ) * Max( MDR,Const ) ) ) ) ) ) ) - ( ( ( Min( ( ( ( RRS + FirstVNF_CPU ) / Min( BR ,MDR ) ) / ( Min( ARS ,ACS ) * ( PN * PN ) ) ) ,( Max( Min( ACS ,FirstVNF_RAM ),Max( CRS,FirstVNF_CPU ) ) * ( ( CRS - AMS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_CPU ) ) - ( ( PN - Const ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ,Max( ( ( PN / FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_RAM_Server ) ),( ( CRS * FirstVNF_Mem ) / Max( ARS,FirstVNF_RAM ) ) ) ) ) / ( Min( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * RRS ) ) * Max( Min( MRS ,CRS ),Min( ARS ,AMS ) ) ) ,( ( ( ACS / FirstVNF_CPU_Server ) + ( DDR + MDR ) ) + ( ( AMS / RRS ) * Max( Const,BR ) ) ) ) - Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( DDR + ACS ) ) * ( ( ACS * AMS ) - ( ARS + MRS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,AMS ) ) / Min( Max( RRS,MRS ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) - ( ( Min( Min( ( Min( RRS ,CRS ) + Min( FirstVNF_Mem ,Const ) ) ,( ( FirstVNF_RAM * BR ) / Min( MRS ,DDR ) ) ) ,Min( ( Min( FirstVNF_RAM ,RRS ) * Min( MDR ,ARS ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( ACS + AMS ) ,( PN / PN ) ) * Min( ( RRS / BR ) ,( BR / RRS ) ) ) * ( Max( Max( CRS,AMS ),( DDR / FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_Mem_Server ) / ( MRS + RRS ) ) ) ) ) * ( ( ( ( Min( ACS ,MRS ) / ( AMS - CRS ) ) + ( ( FirstVNF_CPU * ARS ) + ( DDR * PN ) ) ) / ( ( ( FirstVNF_RAM_Server - RRS ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU * ACS ) ) ) ) * Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( MRS / BR ) ) ,( ( PN - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ),( ( Max( MRS,FirstVNF_Mem_Server ) + Max( MDR,CRS ) ) - ( ( DDR + FirstVNF_RAM ) + Max( Const,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( RRSe * ( Max( RMSe,RCSe ) * Max( RMSe,RMSe ) ) ) ,RRSe ) * MUM ) * Max( ( ( ( MLU - MUC ) * ( ( CS + MUR ) / DS ) ) + ( MLU * MUC ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( AMS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) ) )", "choosing": "( ( Max( MUC,MUM ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * MUR ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6277898814801751}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "( Max( DDR,( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.074, "obj2": 0.6917612568414364}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.85, "obj2": 0.04975239046333399}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.638, "obj2": 0.15464072121459746}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( Max( DDR,( Const + PN ) ) / ( AMS + ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MLU - CS ) + ( MUR * RRSe ) ) ) )", "obj1": 0.106, "obj2": 0.6489271599405969}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / Min( ( ARS - FirstVNF_Mem ) ,( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUM ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.176, "obj2": 0.5636267908786892}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( ( PN - CRS ) / ( CRS * FirstVNF_CPU_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( ( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) / ( CS * DS ) ) ) / ( ( DS + MUM ) / Min( CS ,RRSe ) ) )", "obj1": 0.524, "obj2": 0.2345128622905387}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.892, "obj2": 0.03448219103879389}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.404, "obj2": 0.32303377472656686}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),Max( Min( MUR ,CS ),MLU ) ) + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.086, "obj2": 0.6649090887978419}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MUM * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3846472596050125}, {"determining": "( ( FirstVNF_RAM * ( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,Max( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ),( MDR - PN ) ) ) ,MRS ) * Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUC ) ,Min( MUR ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,( MUM - CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.324, "obj2": 0.41969048964669164}, {"determining": "( Max( DDR,( Const + PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.054, "obj2": 0.711561577958079}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( ( MLU + MUM ) ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.612, "obj2": 0.17284189149910184}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.546, "obj2": 0.2204632086167466}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.138, "obj2": 0.5967790580964673}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - Min( PN ,FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.694, "obj2": 0.1164827062128998}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.826, "obj2": 0.054702405317812904}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( BR ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( FirstVNF_RAM - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( ( ( DS + MUM ) / Min( CS ,RRSe ) ) ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( RCSe * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.97, "obj2": 0.009143148822642022}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.216, "obj2": 0.5388749064728592}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( ( MUR / CS ) * Max( RMSe,MLU ) ) ) ) * ( MUR * DS ) )", "obj1": 0.934, "obj2": 0.022452389053021514}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - Max( BR,Min( ( ( BR / BR ) / ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( RMSe * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.512, "obj2": 0.2507270754800902}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * Min( Const ,FirstVNF_CPU ) ) ) / ( CRS * DDR ) ) ,( Min( PN ,RRS ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( Min( MUM ,CS ) / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.9, "obj2": 0.031934426139109844}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.796, "obj2": 0.06462325617688175}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( Max( RMSe,MLU ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.592, "obj2": 0.19945590980515315}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * ( Min( Max( MUR,DS ) ,( MUR * DS ) ) / Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.476, "obj2": 0.2811489211669203}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.222, "obj2": 0.5217352776993203}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.604, "obj2": 0.17738034639316588}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( PN - CRS ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / ( CS * DS ) )", "obj1": 0.378, "obj2": 0.34178450246844627}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.234, "obj2": 0.5183831737705407}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.928, "obj2": 0.02415387142057204}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR + BR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( Min( ( MUM * RMSe ) ,Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.564, "obj2": 0.2105415426568861}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( BR / BR ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),( RMSe * MLU ) ) ) ) * Max( ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.458, "obj2": 0.2899107594388829}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,RRSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.59, "obj2": 0.20317727306620534}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.102, "obj2": 0.6647824437564203}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( ( PN - CRS ) / ( CRS * CRS ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( RCSe / CS ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.392, "obj2": 0.33669326943515293}], "22": [{"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_Mem_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( AMS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) ) )", "choosing": "( ( Max( CS,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) / ( CS + DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Max( ( ( Min( Const ,Const ) - ( FirstVNF_CPU_Server / PN ) ) + Min( ( ACS + Const ) ,( DDR * ARS ) ) ),Max( Min( Min( MRS ,ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( PN - Const ) * Max( ARS,FirstVNF_CPU ) ) ) ) / ( ( ( ( CRS - FirstVNF_RAM ) - ( FirstVNF_Mem + ARS ) ) - ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU + RRS ),Max( MRS,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + PN ) ) ) ) ),( ( ( ( Min( BR ,FirstVNF_Mem ) - ( MDR / DDR ) ) + ( Min( BR ,DDR ) + ( Const + FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ( ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server + Const ) ) * Min( ( MRS / MRS ) ,( ARS * FirstVNF_Mem_Server ) ) ) + ( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,ACS ) ) / Max( ( MRS * RRS ),( FirstVNF_CPU_Server / DDR ) ) ) ) ) ) - Max( ( Max( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) + ( ( Const - ACS ) - ( AMS - MRS ) ) ),Max( Max( ( CRS - ARS ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ),Min( ( CRS - FirstVNF_Mem_Server ) ,Min( Const ,MDR ) ) ) ) - ( ( ( Max( FirstVNF_Mem,ACS ) / Max( FirstVNF_CPU_Server,Const ) ) * Min( ( CRS - ARS ) ,Max( MDR,MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) * ( BR + ACS ) ) - ( Max( FirstVNF_RAM_Server,CRS ) + ( MRS / MRS ) ) ) ) ),( ( ( ( Max( FirstVNF_CPU,ACS ) / Min( FirstVNF_CPU ,PN ) ) / Min( Min( ACS ,CRS ) ,( MDR - FirstVNF_Mem ) ) ) * Max( ( ( Const / MDR ) - ( ARS / MRS ) ),( ( FirstVNF_RAM + RRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( RRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) + Max( ( MRS * FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,RRS ) ) ) - ( ( ( Const + FirstVNF_CPU_Server ) / Min( DDR ,RRS ) ) + ( ( FirstVNF_RAM_Server * Const ) * Max( MDR,Const ) ) ) ) ) ) ) - ( ( ( Min( ( ( ( RRS + FirstVNF_CPU ) / Min( BR ,MDR ) ) / ( Min( ARS ,ACS ) * ( PN * PN ) ) ) ,( Max( Min( ACS ,FirstVNF_RAM ),Max( CRS,FirstVNF_CPU ) ) * ( ( CRS - AMS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_CPU ) ) - ( ( PN - Const ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ,Max( ( ( PN / FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_RAM_Server ) ),( ( CRS * FirstVNF_Mem ) / Max( ARS,FirstVNF_RAM ) ) ) ) ) / ( Min( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * RRS ) ) * Max( Min( MRS ,CRS ),Min( ARS ,AMS ) ) ) ,( ( ( ACS / FirstVNF_CPU_Server ) + ( DDR + MDR ) ) + ( ( AMS / RRS ) * Max( Const,BR ) ) ) ) - Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( DDR + ACS ) ) * ( ( ACS * AMS ) - ( ARS + MRS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,AMS ) ) / Min( Max( RRS,MRS ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) - ( ( Min( Min( ( Min( RRS ,CRS ) + Min( FirstVNF_Mem ,Const ) ) ,( ( FirstVNF_RAM * BR ) / Min( MRS ,DDR ) ) ) ,Min( ( Min( FirstVNF_RAM ,RRS ) * Min( MDR ,ARS ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( ACS + AMS ) ,( PN / PN ) ) * Min( ( RRS / BR ) ,( BR / RRS ) ) ) * ( Max( Max( CRS,AMS ),( DDR / FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_Mem_Server ) / ( MRS + RRS ) ) ) ) ) * ( ( ( ( Min( ACS ,MRS ) / ( AMS - CRS ) ) + ( ( FirstVNF_CPU * ARS ) + ( DDR * PN ) ) ) / ( ( ( FirstVNF_RAM_Server - RRS ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU * ACS ) ) ) ) * Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( MRS / BR ) ) ,( ( PN - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ),( ( Max( MRS,FirstVNF_Mem_Server ) + Max( MDR,CRS ) ) - ( ( DDR + FirstVNF_RAM ) + Max( Const,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( RRSe * ( Max( RMSe,RCSe ) * Max( RMSe,RMSe ) ) ) ,RRSe ) * MUM ) * Max( ( ( ( MLU - MUC ) * ( ( CS + MUR ) / DS ) ) + ( MLU * MUC ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.638, "obj2": 0.15464072121459746}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MUM * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3846472596050125}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( BR ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( FirstVNF_RAM - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( ( ( DS + MUM ) / Min( CS ,RRSe ) ) ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( RCSe * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.97, "obj2": 0.009143148822642022}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "Min( ( ( BR / Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.504, "obj2": 0.26505309255638687}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / Min( ( ARS - FirstVNF_Mem ) ,( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUM ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.176, "obj2": 0.5636267908786892}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * ( Min( Max( MUR,DS ) ,( MUR * DS ) ) / Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.476, "obj2": 0.2811489211669203}, {"determining": "( Max( DDR,( ( ( ( ( PN / AMS ) * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.074, "obj2": 0.6917612568414364}, {"determining": "( Max( DDR,( Const + PN ) ) / ( AMS + ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MLU - CS ) + ( MUR * RRSe ) ) ) )", "obj1": 0.106, "obj2": 0.6489271599405969}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.138, "obj2": 0.5967790580964673}, {"determining": "( ( FirstVNF_RAM * ( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,Max( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ),( MDR - PN ) ) ) ,MRS ) * Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUC ) ,Min( MUR ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,( MUM - CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.324, "obj2": 0.41969048964669164}, {"determining": "( Max( DDR,( Const + PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.054, "obj2": 0.711561577958079}, {"determining": "Min( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) - BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.872, "obj2": 0.04280619044126371}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( ( MUR / CS ) * Max( RMSe,MLU ) ) ) ) * ( MUR * DS ) )", "obj1": 0.934, "obj2": 0.022452389053021514}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.796, "obj2": 0.06462325617688175}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6277898814801751}, {"determining": "Min( ( ( BR / ( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( Min( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) ,Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.418, "obj2": 0.3126269983473886}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - Const ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( RMSe - MUR ) - ( MUR * CS ) ) ) )", "obj1": 0.716, "obj2": 0.095803434655666}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.404, "obj2": 0.32303377472656686}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.604, "obj2": 0.17738034639316588}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - Min( PN ,FirstVNF_CPU ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( Min( ( MLU / MUR ) ,( MUM / Max( DS,MUM ) ) ) ,( ( ( DS + MUM ) / Min( CS ,RRSe ) ) * Max( Min( MUR ,MUM ),Max( RMSe,MLU ) ) ) ) * ( MUM / RMSe ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.694, "obj2": 0.1164827062128998}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR + BR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MLU,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( Min( ( MUM * RMSe ) ,Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.564, "obj2": 0.2105415426568861}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( Max( RMSe,MLU ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.592, "obj2": 0.19945590980515315}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( Max( MUM,RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.388, "obj2": 0.3326159514711482}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.126, "obj2": 0.6332050135699804}, {"determining": "Min( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.742, "obj2": 0.08545861948043848}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * Min( Const ,FirstVNF_CPU ) ) ) / ( CRS * DDR ) ) ,( Min( PN ,RRS ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( Min( MUM ,CS ) / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.9, "obj2": 0.031934426139109844}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - Max( BR,Min( ( ( BR / BR ) / ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( RMSe * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.7, "obj2": 0.10670520463246565}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.216, "obj2": 0.5388749064728592}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6751749666029186}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.546, "obj2": 0.2204632086167466}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.928, "obj2": 0.02415387142057204}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.228, "obj2": 0.5163992437804339}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / CS ),Min( ( ( Min( MUM ,RRSe ) - ( RRSe + CS ) ) - Min( ( CS - RCSe ) ,( RRSe + MUM ) ) ) ,Min( ( ( MLU + MUM ) / ( DS / RRSe ) ) ,( Max( MUR,MUR ) * Min( RCSe ,RRSe ) ) ) ) ) / CS )", "obj1": 0.892, "obj2": 0.03448219103879389}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.222, "obj2": 0.5217352776993203}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.102, "obj2": 0.6647824437564203}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.628, "obj2": 0.16248748636769686}], "23": [{"determining": "( ( Max( ( Max( ( ( Min( Const ,Const ) - ( FirstVNF_CPU_Server / PN ) ) + Min( ( ACS + Const ) ,( DDR * ARS ) ) ),Max( Min( Min( MRS ,ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( PN - Const ) * Max( ARS,FirstVNF_CPU ) ) ) ) / ( ( ( ( CRS - FirstVNF_RAM ) - ( FirstVNF_Mem + ARS ) ) - ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU + RRS ),Max( MRS,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + PN ) ) ) ) ),( ( ( ( Min( BR ,FirstVNF_Mem ) - ( MDR / DDR ) ) + ( Min( BR ,DDR ) + ( Const + FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ( ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server + Const ) ) * Min( ( MRS / MRS ) ,( ARS * FirstVNF_Mem_Server ) ) ) + ( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,ACS ) ) / Max( ( MRS * RRS ),( FirstVNF_CPU_Server / DDR ) ) ) ) ) ) - Max( ( Max( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) + ( ( Const - ACS ) - ( AMS - MRS ) ) ),Max( Max( ( CRS - ARS ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ),Min( ( CRS - FirstVNF_Mem_Server ) ,Min( Const ,MDR ) ) ) ) - ( ( ( Max( FirstVNF_Mem,ACS ) / Max( FirstVNF_CPU_Server,Const ) ) * Min( ( CRS - ARS ) ,Max( MDR,MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) * ( BR + ACS ) ) - ( Max( FirstVNF_RAM_Server,CRS ) + ( MRS / MRS ) ) ) ) ),( ( ( ( Max( FirstVNF_CPU,ACS ) / Min( FirstVNF_CPU ,PN ) ) / Min( Min( ACS ,CRS ) ,( MDR - FirstVNF_Mem ) ) ) * Max( ( ( Const / MDR ) - ( ARS / MRS ) ),( ( FirstVNF_RAM + RRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( RRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) + Max( ( MRS * FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,RRS ) ) ) - ( ( ( Const + FirstVNF_CPU_Server ) / Min( DDR ,RRS ) ) + ( ( FirstVNF_RAM_Server * Const ) * Max( MDR,Const ) ) ) ) ) ) ) - ( ( ( Min( ( ( ( RRS + FirstVNF_CPU ) / Min( BR ,MDR ) ) / ( Min( ARS ,ACS ) * ( PN * PN ) ) ) ,( Max( Min( ACS ,FirstVNF_RAM ),Max( CRS,FirstVNF_CPU ) ) * ( ( CRS - AMS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_CPU ) ) - ( ( PN - Const ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ,Max( ( ( PN / FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_RAM_Server ) ),( ( CRS * FirstVNF_Mem ) / Max( ARS,FirstVNF_RAM ) ) ) ) ) / ( Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * RRS ) ) * Max( Min( MRS ,CRS ),Min( ARS ,AMS ) ) ) ,( ( ( ACS / FirstVNF_CPU_Server ) + ( DDR + MDR ) ) + ( ( AMS / RRS ) * Max( Const,BR ) ) ) ) - Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( DDR + ACS ) ) * ( ( ACS * AMS ) - ( ARS + MRS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( Const,AMS ) ) / Min( Max( RRS,MRS ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) - ( ( Min( Min( ( Min( RRS ,CRS ) + Min( FirstVNF_Mem ,Const ) ) ,( ( FirstVNF_RAM * BR ) / Min( MRS ,DDR ) ) ) ,Min( ( Min( FirstVNF_RAM ,RRS ) * Min( MDR ,ARS ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( ACS + AMS ) ,( PN / PN ) ) * Min( ( RRS / BR ) ,( BR / RRS ) ) ) * ( Max( Max( CRS,AMS ),( DDR / FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_Mem_Server ) / ( MRS + RRS ) ) ) ) ) * ( ( ( ( Min( ACS ,MRS ) / ( AMS - CRS ) ) + ( ( FirstVNF_CPU * ARS ) + ( DDR * PN ) ) ) / ( ( ( FirstVNF_RAM_Server - RRS ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU * ACS ) ) ) ) * Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( MRS / BR ) ) ,( ( PN - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ),( ( Max( MRS,FirstVNF_Mem_Server ) + Max( MDR,CRS ) ) - ( ( DDR + FirstVNF_RAM ) + Max( Const,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( RRSe * ( Max( RMSe,RCSe ) * Max( RMSe,RMSe ) ) ) ,RRSe ) * MUM ) * Max( ( ( ( MLU - MUC ) * ( ( CS + MUR ) / DS ) ) + ( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * ( Min( MUR ,( CS - DS ) ) - ( ( CS - MUR ) - ( MUR * RRSe ) ) ) ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_Mem_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( AMS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( FirstVNF_RAM * MDR ) ) + ( MDR - PN ) ) ) )", "choosing": "( ( Max( CS,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) / ( CS + DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( ( BR / Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.504, "obj2": 0.26505309255638687}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.546, "obj2": 0.21975303674887325}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MUM * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3846472596050125}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / Min( ( ARS - FirstVNF_Mem ) ,( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUM ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.176, "obj2": 0.5636267908786892}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( MUR / MUR ),RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM + RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.648, "obj2": 0.15132619724034893}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "( ( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * ( Min( Max( MUR,DS ) ,( MUR * DS ) ) / Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 0.476, "obj2": 0.2811489211669203}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.212, "obj2": 0.526100484117076}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( ( FirstVNF_RAM * ( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,Max( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ),( MDR - PN ) ) ) ,MRS ) * Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUC ) ,Min( MUR ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,( MUM - CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.324, "obj2": 0.41969048964669164}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.128, "obj2": 0.6277898814801751}, {"determining": "Min( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.742, "obj2": 0.08545861948043848}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( ( MUR / CS ) * Max( RMSe,MLU ) ) ) ) * ( MUR * DS ) )", "obj1": 0.934, "obj2": 0.022452389053021514}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( ( FirstVNF_RAM_Server / MDR ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * DS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.138, "obj2": 0.5962083737389992}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( BR ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( FirstVNF_RAM - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( RMSe / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( ( ( DS + MUM ) / Min( CS ,RRSe ) ) ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( RCSe * DS ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.97, "obj2": 0.009143148822642022}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( Max( MUM,RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.388, "obj2": 0.3326159514711482}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6751749666029186}, {"determining": "( Max( DDR,( ( ( ( RRS * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_Mem_Server * ( BR + Max( PN,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MLU / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / Min( CS ,DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.096, "obj2": 0.6670649751981859}, {"determining": "( Max( DDR,( Const + PN ) ) / ( AMS + ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MLU - CS ) + ( MUR * RRSe ) ) ) )", "obj1": 0.106, "obj2": 0.6489271599405969}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( AMS / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( DS ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.464, "obj2": 0.2968342590545313}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.126, "obj2": 0.6332050135699804}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / Max( CRS,DDR ) ) ,( ( MDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( MUR + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) * Max( ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ),Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) )", "obj1": 0.816, "obj2": 0.05922009835443723}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "Min( ( ( BR / ( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( Min( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) ,Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.418, "obj2": 0.3126269983473886}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.628, "obj2": 0.16248748636769686}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU_Server ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) ),RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.374, "obj2": 0.351707941077297}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) / ( CRS * DDR ) ) ,Min( Min( PN ,FirstVNF_CPU ) ,( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ),( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.846, "obj2": 0.05169923808414716}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.228, "obj2": 0.5163992437804339}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.796, "obj2": 0.06462325617688175}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.61, "obj2": 0.17484843220804425}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.604, "obj2": 0.17738034639316588}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.598, "obj2": 0.19855028157574708}, {"determining": "Min( ( ( ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) - BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.872, "obj2": 0.04280619044126371}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.062, "obj2": 0.7021186170787626}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.404, "obj2": 0.32303377472656686}, {"determining": "Min( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( ( ( BR + BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),Max( DS,( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) )", "obj1": 0.726, "obj2": 0.09044979693041805}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( BR ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.972, "obj2": 0.008474669541042186}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( Const / BR ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * MUM ) / ( CS * DS ) )", "obj1": 0.998, "obj2": 0.0005221531397003966}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.91, "obj2": 0.03122012262200621}], "24": [{"determining": "( ( ( RRS / BR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * Min( Min( Max( MUR,DS ) ,( MUR * ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) ) ) ,Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Max( ( ( Min( Const ,Const ) - ( FirstVNF_CPU_Server / PN ) ) + Min( ( ACS + Const ) ,( DDR * ARS ) ) ),Max( Min( Min( MRS ,ARS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( PN - Const ) * Max( ARS,FirstVNF_CPU ) ) ) ) / ( ( ( ( CRS - FirstVNF_RAM ) - ( FirstVNF_Mem + ARS ) ) - ( Max( FirstVNF_Mem,DDR ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) * ( Max( ( FirstVNF_CPU + RRS ),Max( MRS,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + PN ) ) ) ) ),( ( ( ( Min( BR ,FirstVNF_Mem ) - ( MDR / DDR ) ) + ( Min( BR ,DDR ) + ( Const + FirstVNF_Mem ) ) ) / ( Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server + DDR ) ) ) ) - ( ( ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server + Const ) ) * Min( ( MRS / MRS ) ,( ARS * FirstVNF_Mem_Server ) ) ) + ( Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,ACS ) ) / Max( ( MRS * RRS ),( FirstVNF_CPU_Server / DDR ) ) ) ) ) ) - Max( ( Max( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) + ( ( Const - ACS ) - ( AMS - MRS ) ) ),Max( Max( ( CRS - ARS ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ),Min( ( CRS - FirstVNF_Mem_Server ) ,Min( Const ,MDR ) ) ) ) - ( ( ( Max( FirstVNF_Mem,ACS ) / Max( FirstVNF_CPU_Server,Const ) ) * Min( ( CRS - ARS ) ,Max( MDR,MDR ) ) ) + ( ( ( FirstVNF_CPU_Server * ARS ) * ( BR + ACS ) ) - ( Max( FirstVNF_RAM_Server,CRS ) + ( MRS / MRS ) ) ) ) ),( ( ( ( Max( FirstVNF_CPU,ACS ) / Min( FirstVNF_CPU ,PN ) ) / Min( Min( ACS ,CRS ) ,( MDR - FirstVNF_Mem ) ) ) * Max( ( ( Const / MDR ) - ( ARS / MRS ) ),( ( FirstVNF_RAM + RRS ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( RRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,AMS ) ) + Max( ( MRS * FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,RRS ) ) ) - ( ( ( Const + FirstVNF_CPU_Server ) / Min( DDR ,RRS ) ) + ( ( FirstVNF_RAM_Server * Const ) * Max( MDR,Const ) ) ) ) ) ) ) - ( ( ( Min( ( ( ( RRS + FirstVNF_CPU ) / Min( BR ,MDR ) ) / ( Min( ARS ,ACS ) * ( PN * PN ) ) ) ,( Max( Min( ACS ,FirstVNF_RAM ),Max( CRS,FirstVNF_CPU ) ) * ( ( CRS - AMS ) / ( ARS + FirstVNF_RAM_Server ) ) ) ) * Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( Const / FirstVNF_CPU ) ) - ( ( PN - Const ) / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ,Max( ( ( PN / FirstVNF_Mem_Server ) - Min( DDR ,FirstVNF_RAM_Server ) ),( ( CRS * FirstVNF_Mem ) / Max( ARS,FirstVNF_RAM ) ) ) ) ) / ( Min( ( ( Min( CRS ,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * RRS ) ) * Max( Min( MRS ,CRS ),Min( ARS ,AMS ) ) ) ,( ( ( ACS / FirstVNF_CPU_Server ) + ( DDR + MDR ) ) + ( ( AMS / RRS ) * Max( Const,BR ) ) ) ) - Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( DDR + ACS ) ) * ( ( ACS * AMS ) - ( ARS + MRS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( Const,AMS ) ) / Min( Max( RRS,MRS ) ,Max( PN,FirstVNF_Mem_Server ) ) ) ) ) ) - ( ( Min( Min( ( Min( RRS ,CRS ) + Min( FirstVNF_Mem ,Const ) ) ,( ( FirstVNF_RAM * BR ) / Min( MRS ,DDR ) ) ) ,Min( ( Min( FirstVNF_RAM ,RRS ) * Min( MDR ,ARS ) ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( ACS + AMS ) ,( PN / PN ) ) * Min( ( RRS / BR ) ,( BR / RRS ) ) ) * ( Max( Max( CRS,AMS ),( DDR / FirstVNF_Mem_Server ) ) + ( ( RRS - FirstVNF_Mem_Server ) / ( MRS + RRS ) ) ) ) ) * ( ( ( ( Min( ACS ,MRS ) / ( AMS - CRS ) ) + ( ( FirstVNF_CPU * ARS ) + ( DDR * PN ) ) ) / ( ( ( FirstVNF_RAM_Server - RRS ) + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU * ACS ) ) ) ) * Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( MRS / BR ) ) ,( ( PN - FirstVNF_Mem ) * ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ),( ( Max( MRS,FirstVNF_Mem_Server ) + Max( MDR,CRS ) ) - ( ( DDR + FirstVNF_RAM ) + Max( Const,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( RRSe * ( Max( RMSe,RCSe ) * Max( RMSe,RMSe ) ) ) ,RRSe ) * MUM ) * Max( ( ( ( MLU - MUC ) * ( ( CS + MUR ) / DS ) ) + ( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * ( Min( MUR ,( CS - DS ) ) - ( ( CS - MUR ) - ( MUR * RRSe ) ) ) ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( CS - ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) )", "obj1": 0.308, "obj2": 0.45122354178902874}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.546, "obj2": 0.21975303674887325}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.528, "obj2": 0.23625135990353258}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "Min( ( ( BR / Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.504, "obj2": 0.26505309255638687}, {"determining": "Min( PN ,( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( MUR / MUR ),RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM + RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.648, "obj2": 0.15132619724034893}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MUM * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3846472596050125}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( BR - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( ( MUR / CS ),Max( RMSe,( CS - MUR ) ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.696, "obj2": 0.10653863823408656}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6751749666029186}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Max( RMSe,MLU ) * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.588, "obj2": 0.19947027081738755}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.212, "obj2": 0.526100484117076}, {"determining": "( Max( DDR,( Const + PN ) ) / ( AMS + ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MLU - CS ) + ( MUR * RRSe ) ) ) )", "obj1": 0.106, "obj2": 0.6489271599405969}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.192, "obj2": 0.5479799068814281}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( ( FirstVNF_RAM_Server / MDR ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * DS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.138, "obj2": 0.5962083737389992}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( Max( MUM,RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.388, "obj2": 0.3326159514711482}, {"determining": "( Max( DDR,( ( ( ( RRS * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_Mem_Server * ( BR + Max( PN,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MLU / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / Min( CS ,DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.096, "obj2": 0.6670649751981859}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( ( FirstVNF_RAM * ( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,Max( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ),( MDR - PN ) ) ) ,MRS ) * Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUC ) ,Min( MUR ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,( MUM - CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.324, "obj2": 0.41969048964669164}, {"determining": "Min( RRS ,( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * ( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) ) )", "obj1": 0.128, "obj2": 0.6243161809868818}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.228, "obj2": 0.5163992437804339}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.91, "obj2": 0.03122012262200621}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.062, "obj2": 0.7021186170787626}, {"determining": "Min( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU_Server ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( ( ( BR + BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),Max( ( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * ( ( MUR / CS ) * Max( RMSe,MLU ) ) ) ) * ( MUR * DS ) ),( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) )", "obj1": 0.742, "obj2": 0.08528672223611053}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.404, "obj2": 0.32303377472656686}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.126, "obj2": 0.6332050135699804}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / Min( ( ARS - FirstVNF_Mem ) ,( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUM ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.176, "obj2": 0.5636267908786892}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ACS ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) / Min( CS ,RCSe ) ) * ( ( MUR / CS ) * Max( RMSe,MLU ) ) ) ) * ( MUR * DS ) )", "obj1": 0.942, "obj2": 0.021848573843266515}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.89, "obj2": 0.037172800107300424}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( CRS - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / ( ( RMSe - MUC ) - ( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.714, "obj2": 0.09629936744948847}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - FirstVNF_Mem ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.478, "obj2": 0.2696451877590995}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( BR ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.97, "obj2": 0.009093698228248168}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU_Server ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) ),RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.374, "obj2": 0.351707941077297}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( PN ,FirstVNF_CPU ) ) ) + PN )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.328, "obj2": 0.4190471556582337}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR * FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( PN / FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( RMSe,RCSe ) + ( MUR - DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.786, "obj2": 0.07009234276290333}, {"determining": "Min( ( ( FirstVNF_Mem_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe - RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.152, "obj2": 0.590138903237666}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "Min( ( FirstVNF_RAM * Min( Min( Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,Min( ( ( BR + BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( ( Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( MUM ,CS ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( Min( MUR ,RCSe ),CS ) ) - ( Max( RMSe,CS ) / Min( RCSe ,MUC ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),Max( DS,( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) )", "obj1": 0.726, "obj2": 0.09044979693041805}, {"determining": "Min( ( ( BR / ( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( Min( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) ,Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.418, "obj2": 0.3126269983473886}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) / ( CRS * DDR ) ) ,Min( Min( PN ,FirstVNF_CPU ) ,( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ),( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.846, "obj2": 0.05169923808414716}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.626, "obj2": 0.16030470239847097}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "Min( ( Const / BR ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.058, "obj2": 0.7067728137431253}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.182, "obj2": 0.5559621249830671}], "25": [{"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( PN / AMS ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( MLU ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),( ( Min( RRSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / BR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( ( ( CS + MUM ) / Min( CS ,RCSe ) ) * Min( Min( Max( MUR,DS ) ,( MUR * ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) ) ) ,Min( CS ,RCSe ) ) ) / Min( Min( ( MLU / RCSe ) ,( MUM / RRSe ) ) ,( DS * Min( MLU ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) / ( CRS * DDR ) ) ,Min( Min( PN ,FirstVNF_CPU ) ,( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ),( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.846, "obj2": 0.05169923808414716}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.304, "obj2": 0.4237478704543692}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.528, "obj2": 0.23625135990353258}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR * FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( PN / FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( RMSe,RCSe ) + ( MUR - DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.786, "obj2": 0.07009234276290333}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MUM * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3846472596050125}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.21, "obj2": 0.5244173861591277}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.546, "obj2": 0.21975303674887325}, {"determining": "( Max( DDR,( Const + PN ) ) / ( AMS + ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MLU - CS ) + ( MUR * RRSe ) ) ) )", "obj1": 0.106, "obj2": 0.6489271599405969}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ACS ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.934, "obj2": 0.021397785333524173}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.89, "obj2": 0.037172800107300424}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - Max( PN,AMS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.184, "obj2": 0.5460741890597037}, {"determining": "Min( ( ( BR / Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.504, "obj2": 0.26505309255638687}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( BR + Max( PN,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.076, "obj2": 0.6751749666029186}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "( Max( DDR,( ( ( ( RRS * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_Mem_Server * ( BR + Max( PN,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MLU / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / Min( CS ,DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.096, "obj2": 0.6670649751981859}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "Min( ( ( AMS / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.466, "obj2": 0.2865698193109605}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( BR - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( ( MUR / CS ),Max( RMSe,( CS - MUR ) ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.696, "obj2": 0.10653863823408656}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.228, "obj2": 0.5163992437804339}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( MDR - PN ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( DS,MUM ) / ( CS * DS ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.334, "obj2": 0.4166762462022881}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( FirstVNF_Mem - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR - DDR ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) ) * Max( ( Min( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) ,Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.612, "obj2": 0.1771894172129365}, {"determining": "( PN / ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( MUR / MUR ),RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM + RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.652, "obj2": 0.14965611031619896}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( BR ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.97, "obj2": 0.009093698228248168}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.126, "obj2": 0.6332050135699804}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / Min( ( ARS - FirstVNF_Mem ) ,( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUM ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.176, "obj2": 0.5636267908786892}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Max( RMSe,MLU ) * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.574, "obj2": 0.20832693684894843}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( Max( MUM,RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.388, "obj2": 0.3326159514711482}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( ( FirstVNF_RAM_Server / MDR ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * DS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.138, "obj2": 0.5962083737389992}, {"determining": "Min( ( ( BR / ( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( Min( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) ,Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.418, "obj2": 0.3126269983473886}, {"determining": "( Max( DDR,( ( ( ( MDR * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) / ( FirstVNF_Mem + Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * ( MUM + RMSe ) ) ) ) ) ) )", "obj1": 0.072, "obj2": 0.6995702572100193}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.626, "obj2": 0.16030470239847097}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - FirstVNF_Mem ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.478, "obj2": 0.2696451877590995}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.608, "obj2": 0.18983062073763493}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( BR ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( ARS - PN ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) )", "obj1": 0.972, "obj2": 0.008274741100303433}, {"determining": "Min( ( ( FirstVNF_Mem_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe - RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.152, "obj2": 0.590138903237666}, {"determining": "Min( RRS ,( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * ( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) ) )", "obj1": 0.128, "obj2": 0.6243161809868818}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,CRS ) * ( PN - CRS ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR - RRSe ) ) ) ) ) )", "obj1": 0.308, "obj2": 0.4173986583508678}, {"determining": "Min( ( ( ( Const / BR ) - ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( MDR - PN ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( Max( Min( ( MLU / MUR ) ,( MUM / RRSe ) ),( ( MUC / MLU ) * Min( MUM ,CS ) ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.92, "obj2": 0.027167107209946553}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) - ( MDR - ( MDR * ( PN - CRS ) ) ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - FirstVNF_Mem ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) ) )", "obj1": 0.758, "obj2": 0.08417262709196109}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.378, "obj2": 0.3441652740444683}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / ( ( BR / ACS ) / ( CRS * RRS ) ) ) - ( PN - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( MDR / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / MUR ) ) + Min( ( ( ( ( Max( DS,MUM ) + Min( CS ,RRSe ) ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) / Min( RRSe ,DS ) ) ) - CS ) ,Min( RRSe ,CS ) ) ) * ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUR / MUR ) - Min( MUM ,DS ) ) ) )", "obj1": 0.768, "obj2": 0.07711580810919975}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / ( CS / RCSe ) ) * Max( DS,( ( Min( ( ( MUR / MUR ) * Min( MUM ,DS ) ) ,( MUM / RMSe ) ) + ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,MLU ) ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.91, "obj2": 0.03122012262200621}], "26": [{"determining": "( ( ( FirstVNF_Mem_Server / BR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( PN / AMS ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( MLU ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),( ( Min( RRSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe - MUC ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.304, "obj2": 0.4237478704543692}, {"determining": "Min( ( ( BR / Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.504, "obj2": 0.26505309255638687}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MUM * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3846472596050125}, {"determining": "Min( ( ( BR / ( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( Min( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) ,Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.418, "obj2": 0.3126269983473886}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - ACS ) ) - CRS ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ),RCSe ) / Max( RCSe,MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.068, "obj2": 0.6951665248661076}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( Max( MUM,RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.388, "obj2": 0.3326159514711482}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.528, "obj2": 0.23625135990353258}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "( Max( DDR,( Const + PN ) ) / ( AMS + ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MLU - CS ) + ( MUR * RRSe ) ) ) )", "obj1": 0.106, "obj2": 0.6489271599405969}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.608, "obj2": 0.18983062073763493}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( ( FirstVNF_RAM_Server / MDR ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * DS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.138, "obj2": 0.5962083737389992}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - Max( PN,AMS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5578972328511639}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - FirstVNF_Mem ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.478, "obj2": 0.2696451877590995}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.21, "obj2": 0.5244173861591277}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.626, "obj2": 0.16030470239847097}, {"determining": "( Max( DDR,( ( ( ( RRS * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_Mem_Server * ( BR + Max( PN,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MLU / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / Min( CS ,DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.096, "obj2": 0.6670649751981859}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.546, "obj2": 0.21975303674887325}, {"determining": "Min( RRS ,( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * ( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) ) )", "obj1": 0.128, "obj2": 0.6243161809868818}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.228, "obj2": 0.5163992437804339}, {"determining": "Min( Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( ( MLU + RMSe ) * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Max( RMSe,MLU ) * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.578, "obj2": 0.20630320399846047}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.314, "obj2": 0.41174617281514775}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( FirstVNF_Mem - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR - DDR ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) ) * Max( ( Min( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) ,Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.612, "obj2": 0.1771894172129365}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.842, "obj2": 0.046519081380184256}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ACS ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.934, "obj2": 0.021397785333524173}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( PN - Max( PN,AMS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( ( Min( MLU ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) * RRSe ) ) ) )", "obj1": 0.198, "obj2": 0.5438931764906723}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.126, "obj2": 0.6332050135699804}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.968, "obj2": 0.010977870314385308}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,CRS ) * ( PN - CRS ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR - RRSe ) ) ) ) ) )", "obj1": 0.694, "obj2": 0.11036206048065243}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) - ( MDR - ( MDR * ( PN - CRS ) ) ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - FirstVNF_Mem ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) ) )", "obj1": 0.758, "obj2": 0.08417262709196109}, {"determining": "Min( ( ( AMS / Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * MUR ) / ( CS * DS ) )", "obj1": 0.734, "obj2": 0.0902768464727359}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( Max( RMSe,MLU ) * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.574, "obj2": 0.20832693684894843}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.668, "obj2": 0.13440708622022057}, {"determining": "Min( ( ( AMS / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,MUC ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.456, "obj2": 0.28982153641755526}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.462, "obj2": 0.28521204619918095}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.834, "obj2": 0.056492520009395475}, {"determining": "( PN / ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( MUR / MUR ),RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM + RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.652, "obj2": 0.14965611031619896}, {"determining": "Min( ( ( BR / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.378, "obj2": 0.3441652740444683}, {"determining": "Min( ( ( FirstVNF_Mem_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe - RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.152, "obj2": 0.590138903237666}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR * FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( PN / FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( RMSe,RCSe ) + ( MUR - DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.786, "obj2": 0.07009234276290333}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,RRSe ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.712, "obj2": 0.09851164395597614}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ACS ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.874, "obj2": 0.043721153095808485}], "27": [{"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( Min( ACS ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ) / Min( CS ,RCSe ) ) * Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) ) / ( MUM / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / BR ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + Min( ( ( CRS / ( Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - CRS ) ) ) * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / ARS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR + PN ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( Const + PN ) ) / ( FirstVNF_Mem + ( FirstVNF_RAM_Server + ( MDR + ACS ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe - MUC ) ) * Max( ( Max( DS,MUC ) + ( CS + DS ) ),( ( CS - MUR ) + Max( MUR,RRSe ) ) ) )", "obj1": 0.042, "obj2": 0.7149005786371634}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.4752943362402197}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.304, "obj2": 0.4237478704543692}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( MUM * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC * MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUR / CS ) ) ) / Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.354, "obj2": 0.3846472596050125}, {"determining": "Min( ( ( BR / ( ( FirstVNF_RAM_Server / Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( Min( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) ,Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) ) / Max( DS,MUM ) )", "obj1": 0.418, "obj2": 0.3126269983473886}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MRS - PN ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUR ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.368, "obj2": 0.3522379142827455}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( Max( ( MUR / CS ),( Min( MUM ,CS ) / MLU ) ) / RCSe ) ) * Max( ( MUR / DS ),Max( RMSe,MLU ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MLU ) ) - RCSe ) - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.338, "obj2": 0.396410451540424}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,MDR ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * ( DS / ( ( ( Max( MUM,RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - DS ) ) ) / ( CS * DS ) )", "obj1": 0.388, "obj2": 0.3326159514711482}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) - ( MDR - ( MDR * ( PN - CRS ) ) ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - FirstVNF_Mem ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) ) )", "obj1": 0.758, "obj2": 0.08417262709196109}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.314, "obj2": 0.41174617281514775}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( FirstVNF_CPU / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS - FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.884, "obj2": 0.03886024683176121}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( RCSe * Min( ( DS + MUM ) ,( ( CS / MLU ) - Min( MUM ,CS ) ) ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.528, "obj2": 0.23625135990353258}, {"determining": "( Max( DDR,( Const + PN ) ) / ( AMS + ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MLU - CS ) + ( MUR * RRSe ) ) ) )", "obj1": 0.106, "obj2": 0.6489271599405969}, {"determining": "( Max( DDR,( ( ( ( RRS * ( PN - CRS ) ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) - AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_Mem_Server * ( BR + Max( PN,BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MLU / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / Min( CS ,DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.096, "obj2": 0.6670649751981859}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( RRS / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - Max( MDR,PN ) ) )", "choosing": "( ( Min( RCSe ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) - Max( ( RMSe / MUC ),CS ) )", "obj1": 0.252, "obj2": 0.4836005309912698}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( Min( ( FirstVNF_RAM_Server / MDR ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * DS ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.138, "obj2": 0.5962083737389992}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.842, "obj2": 0.046519081380184256}, {"determining": "( Max( FirstVNF_RAM,Min( Min( Min( Max( DDR,( RRS - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) - ( MDR - PN ) ) ) ,FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR - RRSe ) ) ) ) ) )", "obj1": 0.072, "obj2": 0.6948492266935066}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR * FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( PN / FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( RMSe,RCSe ) + ( MUR - DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.59, "obj2": 0.19764025196998772}, {"determining": "Min( ( ( BR / Min( ( ( Min( DDR ,FirstVNF_CPU ) / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ) ) / ( BR * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,DS ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.516, "obj2": 0.25830758687959016}, {"determining": "Min( MDR ,( Min( ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - ( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - ( ( MUC / MLU ) * Min( MUM ,CS ) ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.924, "obj2": 0.028522272958258953}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR * FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( PN / FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( Max( RMSe,RCSe ) + ( MUR - DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,( MUM + DS ) ) ) - CS ) ) ) / ( MUM / RRSe ) )", "obj1": 0.786, "obj2": 0.07009234276290333}, {"determining": "( PN / ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( MUR / MUR ),RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM + RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.652, "obj2": 0.14965611031619896}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.626, "obj2": 0.16030470239847097}, {"determining": "Min( RRS ,( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.126, "obj2": 0.6332050135699804}, {"determining": "Min( ( ( BR / Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ),( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / ( BR * BR ) ) ,( ( FirstVNF_RAM_Server / MRS ) + ( MDR - DDR ) ) )", "choosing": "( ( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / Max( MUM,RRSe ) )", "obj1": 0.504, "obj2": 0.26505309255638687}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( MDR / PN ) ) ) ,FirstVNF_Mem_Server ) ,( CRS * FirstVNF_CPU_Server ) ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) )", "obj1": 0.048, "obj2": 0.7128538560583728}, {"determining": "Min( ( ( ( Const / BR ) * ( BR * BR ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ACS ,( Min( PN ,FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.874, "obj2": 0.043721153095808485}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( MDR / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( ( Const + PN ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - FirstVNF_Mem ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( Max( ( MUR / CS ),Max( RMSe,MLU ) ) / ( CS * DS ) ),( ( CS - MUR ) + ( CS * RRSe ) ) ) / ( CS / RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MLU ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.478, "obj2": 0.2696451877590995}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( FirstVNF_RAM - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) - ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - MUC ) ) ) / ( RCSe * MUM ) ) * Max( ( MUR / ( CS * DS ) ),( ( CS - RRSe ) - ( MUR * RRSe ) ) ) )", "obj1": 0.24, "obj2": 0.501737254858206}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( Min( BR ,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( Const / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( Min( MUR ,( CS - DS ) ),( ( CS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.5814784496431918}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR + ( DDR * ( FirstVNF_RAM * ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MLU + RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.606, "obj2": 0.17931778578360047}, {"determining": "Min( ( ( ( Const / BR ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( ARS / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RRSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.436, "obj2": 0.3024903360452524}, {"determining": "( ( FirstVNF_RAM * Min( Min( Min( Max( DDR,( Const - AMS ) ) ,( ( Min( PN ,FirstVNF_Mem ) - ( MDR - ACS ) ) - CRS ) ) ,FirstVNF_Mem_Server ) ,RRS ) ) + ( Max( PN,AMS ) * ( PN - CRS ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / RMSe ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - ( RMSe - MUC ) ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( Min( ( ( DS + MLU ) / ( CS + RCSe ) ) ,RCSe ),RCSe ) / Max( RCSe,MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.068, "obj2": 0.6951665248661076}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( Min( ( FirstVNF_RAM_Server / ( ( ( BR / Const ) / ( CRS * FirstVNF_CPU_Server ) ) - ( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MUM / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.956, "obj2": 0.015083170110789445}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,CRS ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * ( MUM + MLU ) ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.13, "obj2": 0.6232913169859782}, {"determining": "Min( ( ( ( Const / CRS ) * ( ACS * FirstVNF_CPU_Server ) ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( Const / Min( ( Max( BR,BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.228, "obj2": 0.5163992437804339}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUR ) ,( MUM / RRSe ) ) ,( ( MUC / MLU ) * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.69, "obj2": 0.11944535441270843}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( RRSe * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.5578972328511639}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - Max( PN,AMS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * Min( Min( ( MLU / MUC ) ,( MUM / RRSe ) ) ,( CS * Min( MUM ,CS ) ) ) ) ) * Max( ( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.21, "obj2": 0.5244173861591277}, {"determining": "( ( ( DDR - PN ) / ( ( Const / ACS ) - FirstVNF_RAM ) ) + ( Max( ARS,AMS ) * ( PN - BR ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) - Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.676, "obj2": 0.1303043039947528}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - DDR ) ) - ( MDR - PN ) ) )", "choosing": "( ( Max( ( ( DS + MUM ) / Min( CS ,RCSe ) ),Max( MLU,Max( RMSe,MLU ) ) ) / Max( RMSe,RCSe ) ) / Min( Min( ( MLU / MUR ) ,( CS * DS ) ) ,( ( MUC / MLU ) * Min( MLU ,MUC ) ) ) )", "obj1": 0.188, "obj2": 0.548011546975328}, {"determining": "Min( Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / Min( ( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( MUR / MUR ) ,( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) ) ,( MLU / ( Min( RRSe ,RMSe ) + Min( MUR ,DS ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( MUM ,CS ) ) ) + ( ( DS + MUM ) / Min( CS ,RCSe ) ) ) * Max( ( Max( DS,MUM ) / Min( CS ,DS ) ),( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - MUR ) + ( MUR * RRSe ) ) ) ) ) )", "obj1": 0.538, "obj2": 0.22325866288341006}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( FirstVNF_Mem_Server / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,Min( PN ,FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "( ( ( ( ( RMSe * DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,( ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - Min( ( DS / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) ) / ( CS * DS ) )", "obj1": 0.824, "obj2": 0.05582890649919637}, {"determining": "Min( ( ( FirstVNF_Mem_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( ( ARS - ACS ) - ( BR + Max( PN,FirstVNF_CPU ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe - RCSe ) / ( RCSe * MUM ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( CS - ( ( ( ( MUM * RMSe ) / Max( RRSe,RRSe ) ) - Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ) - CS ) ) + ( MUR * RRSe ) ) ) )", "obj1": 0.152, "obj2": 0.590138903237666}, {"determining": "Min( ( ( FirstVNF_RAM_Server / Min( ( ( PN / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) / Min( PN ,FirstVNF_CPU ) ) ,( ( RRS / ( PN - Max( PN,AMS ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( DS + MLU ) / ( CS + RCSe ) ) * Max( ( MUR / CS ),Max( RMSe,( Max( MUR,Max( RMSe,MUC ) ) / MUR ) ) ) ) + Min( ( ( ( ( MUM + MLU ) / Max( RRSe,MUC ) ) - RCSe ) - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( MUM - ( ( Min( MLU ,MLU ) - ( Min( RMSe ,RMSe ) + Min( MUR ,DS ) ) ) * RRSe ) ) ) )", "obj1": 0.204, "obj2": 0.5428736692337575}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,( Min( ( FirstVNF_RAM_Server / Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( ( PN / FirstVNF_CPU ) - ( MDR - PN ) ) ) ) ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( DS + MUM ) / Min( CS ,RCSe ) ) / Max( DS,Max( RMSe,MLU ) ) ) / ( Min( ( MLU / Max( ( RMSe - MUC ),( MLU / DS ) ) ) ,( MUM / RRSe ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) / Min( Min( ( MLU / CS ) ,( MUM / MUC ) ) ,( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.472, "obj2": 0.28015742865530097}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( Min( ( ( BR / BR ) / ( CRS * DDR ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) ),( MDR - DDR ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / Min( Min( ( MUR / MUR ) ,Min( MUM ,DS ) ) ,( MUM / RMSe ) ) ) * Max( ( ( ( ( Max( ( CS * DS ),DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.622, "obj2": 0.16900698388406662}, {"determining": "Min( MDR ,( Min( PN ,FirstVNF_CPU ) - ( MDR - ( BR / ( ( Min( Const ,FirstVNF_CPU ) - ( MDR - PN ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( MUR,DS ) + ( MUR * DS ) ) / Min( CS ,RCSe ) ) * Max( DS,Max( RMSe,MLU ) ) ) * Max( ( MUR / ( CS * DS ) ),Max( RMSe,MLU ) ) )", "obj1": 0.664, "obj2": 0.14428479374778377}]}