{"1": [{"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_RAM ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7663366336633664, "obj2": 0.1744937238054545}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe + RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * MUC ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6831683168316832, "obj2": 0.2635679065581331}, {"determining": "Min( Min( AMS ,ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.21003984383345806}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( MDR * MRS ) ) ) )", "choosing": "( Min( CS ,Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( DS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( ARS,Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem ),Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( ( ( RMSe - DS ) - ( MUR * MUR ) ) - Min( ( RCSe + DS ) ,( CS * MUM ) ) ) * ( ( Min( MLU ,RMSe ) + ( RCSe - RCSe ) ) * Min( ( MLU / DS ) ,( MUC / MUM ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.23527857456557888}, {"determining": "( Max( PN,( MRS * Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,MUM ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( RRS / ( FirstVNF_CPU / DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( MUM,Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( DDR + Const ) )", "choosing": "( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) )", "obj1": 0.8198019801980198, "obj2": 0.12236460150838155}, {"determining": "( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe + RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( CRS,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.019132782727836434}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( DS - RMSe ),( RRSe / DS ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.18092930175894642}, {"determining": "( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe + RMSe ) )", "obj1": 0.9207920792079208, "obj2": 0.06523199418017062}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - ( ACS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.801980198019802, "obj2": 0.15971366126618802}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "Min( ( Const * MRS ) ,( AMS - Const ) )", "choosing": "( ( MUM * MUM ) - MLU )", "obj1": 0.6811881188118812, "obj2": 0.24112410406467008}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 0.7683168316831683, "obj2": 0.16889320309065806}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "Min( Min( AMS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_RAM ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7663366336633664, "obj2": 0.1744937238054545}, {"determining": "Max( Min( Max( ARS,Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem ),Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( ( ( RMSe - DS ) - ( MUR * MUR ) ) - Min( ( RCSe + DS ) ,( CS * MUM ) ) ) * ( ( Min( MLU ,RMSe ) + ( RCSe - RCSe ) ) * Min( ( MLU / DS ) ,( MUC / MUM ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.23527857456557888}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - Min( RCSe ,MUR ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,Max( DDR,ACS ) ) ),Min( Const ,AMS ) )", "choosing": "Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + RRSe ) )", "obj1": 0.6851485148514852, "obj2": 0.23949052727531445}, {"determining": "Min( Min( AMS ,FirstVNF_CPU_Server ) ,( BR + FirstVNF_RAM ) )", "choosing": "( ( DS * MLU ) / Max( RRSe,MLU ) )", "obj1": 0.7663366336633664, "obj2": 0.1744937238054545}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( MDR * MRS ) ) ) )", "choosing": "( Min( CS ,Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( DS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MRS * Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,MUM ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( MRS ,AMS ) ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MUR / RMSe ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( MRS ,ARS ) ) )", "choosing": "Min( ( MUR / CS ) ,( ( RMSe + MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( FirstVNF_RAM,MRS ) )", "choosing": "( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN + ( MRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,( Min( AMS ,FirstVNF_Mem_Server ) / ( ARS * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC / MUC ) + ( ( RMSe - MUM ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / ( ACS / MRS ) ) + ( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / ( Max( ( DS - RMSe ),( RCSe / DS ) ) + ( ( DS - MUM ) - ( CS + CS ) ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + DDR ) ,( Min( DDR ,AMS ) / ( Const - ACS ) ) )", "choosing": "( ( MUM + RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,ARS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + ( Min( MLU ,MUM ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( ( DS * RRSe ) + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * Min( ( Const * MRS ) ,Max( FirstVNF_CPU_Server,AMS ) ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( ( ( MUM * MUM ) - Min( RMSe ,MLU ) ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( MUM * MUM ) - Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server - ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( MRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( CRS * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Min( RCSe ,RRSe ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( Min( RCSe ,RCSe ),( RMSe + MUR ) ) - Max( Max( MLU,RCSe ),( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * MLU ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * MLU ) / Min( RRSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( RMSe ,CS ) - ( ( RRSe - RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * MLU ) * Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( FirstVNF_CPU / DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( MUM,Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( DDR + Const ) )", "choosing": "( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) )", "obj1": 0.8198019801980198, "obj2": 0.12236460150838155}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS - CRS ) ),( ( FirstVNF_Mem * CRS ) + ACS ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / ( Min( MLU ,( ( MUC + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) ) ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 0.8633663366336634, "obj2": 0.09629954404069116}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 0.7742574257425743, "obj2": 0.15943214043783788}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.23545402056619533}, {"determining": "( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe + RMSe ) )", "obj1": 0.9207920792079208, "obj2": 0.06523199418017062}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( MUM - Max( ( Max( RRSe,Max( ( MUR - CS ),MUM ) ) * RCSe ),DS ) ),( MUR + MUR ) )", "obj1": 0.6772277227722773, "obj2": 0.20743331568312529}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe + RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( CRS,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.022584918408581407}, {"determining": "( FirstVNF_RAM_Server * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * ( MUR - DS ) ) / Min( RRSe ,MLU ) )", "obj1": 0.7287128712871287, "obj2": 0.19868632725208007}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 0.7524752475247525, "obj2": 0.16767570730284134}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( DS - RMSe ),( RRSe / DS ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.18092930175894642}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - ( RRS + DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( DS + RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9742574257425742, "obj2": 0.010588515366017178}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( CRS,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.019132782727836434}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * ( DS * MLU ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0026738193872165414}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MLU ) - Min( RCSe ,MUR ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( MDR * MRS ) ) ) )", "choosing": "( Min( CS ,Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( DS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MRS * Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,MUM ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( MRS ,AMS ) ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MUR / RMSe ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( MRS ,ARS ) ) )", "choosing": "Min( ( MUR / CS ) ,( ( RMSe + MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( FirstVNF_RAM,MRS ) )", "choosing": "( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN + ( MRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,( Min( AMS ,FirstVNF_Mem_Server ) / ( ARS * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC / MUC ) + ( ( RMSe - MUM ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / ( ACS / MRS ) ) + ( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / ( Max( ( DS - RMSe ),( RCSe / DS ) ) + ( ( DS - MUM ) - ( CS + CS ) ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + DDR ) ,( Min( DDR ,AMS ) / ( Const - ACS ) ) )", "choosing": "( ( MUM + RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,ARS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + ( Min( MLU ,MUM ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( ( DS * RRSe ) + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * Min( ( Const * MRS ) ,Max( FirstVNF_CPU_Server,AMS ) ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( ( ( MUM * MUM ) - Min( RMSe ,MLU ) ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( MUM * MUM ) - Min( RMSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server - ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MLU - Min( MUM ,( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( MRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( CRS * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Min( RCSe ,RRSe ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( Min( RCSe ,RCSe ),( RMSe + MUR ) ) - Max( Max( MLU,RCSe ),( DS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( CRS - ( FirstVNF_RAM + MRS ) )", "choosing": "Min( ( DS * MLU ) ,( ( RRSe + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * MLU ) * Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( DDR + Const ) )", "choosing": "( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) )", "obj1": 0.8198019801980198, "obj2": 0.12236460150838155}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - Max( ( FirstVNF_RAM_Server - ARS ),Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( MUR * DS ) )", "obj1": 0.7683168316831683, "obj2": 0.1265099816528567}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( MUM - Max( ( Max( RRSe,Max( ( MUR - CS ),MUM ) ) * RCSe ),DS ) ),( MUR + MUR ) )", "obj1": 0.6772277227722773, "obj2": 0.20743331568312529}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) ) ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + RMSe ) )", "obj1": 0.9227722772277228, "obj2": 0.0630214792579507}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( CRS,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.022584918408581407}, {"determining": "( FirstVNF_RAM_Server * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * ( MUR - DS ) ) / Min( RRSe ,MLU ) )", "obj1": 0.7287128712871287, "obj2": 0.19868632725208007}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) ) )", "obj1": 0.8613861386138614, "obj2": 0.10299204294618455}, {"determining": "( FirstVNF_Mem - ( Min( FirstVNF_Mem ,BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) ,( ( MUC / MUC ) + ( ( RMSe - MUM ) - RCSe ) ) )", "obj1": 0.7623762376237624, "obj2": 0.166984802009698}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS - CRS ) ),( ( FirstVNF_Mem * CRS ) + ACS ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / ( Min( MLU ,( ( MUC + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) ) ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 0.8633663366336634, "obj2": 0.09629954404069116}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( DS - RMSe ),( RRSe / DS ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.18092930175894642}, {"determining": "( Max( FirstVNF_CPU,Max( MRS,Const ) ) / ( ( FirstVNF_Mem - ACS ) * BR ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( ( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ) * RRSe ) + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( CS,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.904950495049505, "obj2": 0.08198583992639781}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( ( FirstVNF_Mem_Server * Min( ACS ,Max( MRS,Const ) ) ) / ( Const + BR ) )", "choosing": "( ( MLU + ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6435643564356436, "obj2": 0.2525857614771836}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( RRSe * MLU ) * MLU ) ) * RCSe )", "obj1": 0.6653465346534654, "obj2": 0.2317420474552371}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 0.7524752475247525, "obj2": 0.16767570730284134}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.018284081396054086}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - ( RRS + DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( DS + RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9742574257425742, "obj2": 0.010588515366017178}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( Max( FirstVNF_RAM,MRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( Max( MLU,CS ) - RRSe ) * ( CS + ( Max( MUR,( RCSe + RMSe ) ) / MUM ) ) )", "obj1": 0.9128712871287129, "obj2": 0.06484089652606578}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( ( DS * RRSe ) + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6554455445544555, "obj2": 0.23712804552015462}, {"determining": "( Max( FirstVNF_RAM,MRS ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe + RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( ( MDR + FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.9821782178217822, "obj2": 0.007427542630306877}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * ( DS * MLU ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0026738193872165414}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.23545402056619533}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( Min( ACS ,DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / Max( ( Max( RRSe,Max( ( MUR - RCSe ),MUM ) ) * RCSe ),DS ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9801980198019802, "obj2": 0.008217352993749233}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( MUC / RMSe ) )", "obj1": 0.994059405940594, "obj2": 0.0024865061089785517}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MLU ) - Min( RCSe ,MUR ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( RRS / ( FirstVNF_CPU / DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( MUM,Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( MDR * MRS ) ) ) )", "choosing": "( Min( CS ,Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( DS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MRS * Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,MUM ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( MRS ,AMS ) ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MUR / RMSe ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( MRS ,ARS ) ) )", "choosing": "Min( ( MUR / CS ) ,( ( RMSe + MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( FirstVNF_RAM,MRS ) )", "choosing": "( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN + ( MRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,( Min( AMS ,FirstVNF_Mem_Server ) / ( ARS * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC / MUC ) + ( ( RMSe - MUM ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / ( ACS / MRS ) ) + ( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / ( Max( ( DS - RMSe ),( RCSe / DS ) ) + ( ( DS - MUM ) - ( CS + CS ) ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + DDR ) ,( Min( DDR ,AMS ) / ( Const - ACS ) ) )", "choosing": "( ( MUM + RRSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,ARS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + ( Min( MLU ,MUM ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( PN + ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,RCSe ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - ( FirstVNF_RAM + MRS ) )", "choosing": "Min( ( DS * MLU ) ,( ( RRSe + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( DDR + Const ) )", "choosing": "( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) )", "obj1": 0.8198019801980198, "obj2": 0.12236460150838155}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( MUM - Max( ( Max( RRSe,Max( ( MUR - CS ),MUM ) ) * RCSe ),DS ) ),( MUR + MUR ) )", "obj1": 0.6772277227722773, "obj2": 0.20743331568312529}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( RRS,DDR ) ) * BR ) - ( ARS - CRS ) )", "choosing": "( ( DS - MLU ) / Max( CS,( CS * ( DS * MLU ) ) ) )", "obj1": 0.8732673267326733, "obj2": 0.069951324262499}, {"determining": "( FirstVNF_RAM_Server * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * ( MUR - DS ) ) / Min( RRSe ,MLU ) )", "obj1": 0.7287128712871287, "obj2": 0.19868632725208007}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + ( ( FirstVNF_RAM - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( MUC - MLU ) - Max( MLU,MUR ) )", "obj1": 0.9366336633663367, "obj2": 0.029538931669398923}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) ) )", "obj1": 0.8613861386138614, "obj2": 0.10299204294618455}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),Min( ( ACS / ( MRS * Const ) ) ,( FirstVNF_CPU_Server * ACS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / ( MUM / ( ( MUC + MUC ) - ( RCSe / RRSe ) ) ) ) ) )", "obj1": 0.9168316831683169, "obj2": 0.05942578959259116}, {"determining": "( FirstVNF_Mem - ( Min( FirstVNF_Mem ,BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) ,( ( MUC / MUC ) + ( ( RMSe - MUM ) - RCSe ) ) )", "obj1": 0.7623762376237624, "obj2": 0.166984802009698}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( DS - RMSe ),( RRSe / DS ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.18092930175894642}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.7643564356435644, "obj2": 0.12772050718091532}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - Max( ( FirstVNF_RAM_Server - ARS ),Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( MUR * DS ) )", "obj1": 0.7683168316831683, "obj2": 0.1265099816528567}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS - CRS ) ),( ( FirstVNF_Mem * CRS ) + ACS ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / ( Min( MLU ,( ( MUC + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) ) ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 0.8633663366336634, "obj2": 0.09629954404069116}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( Max( FirstVNF_RAM,MRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( Max( MLU,CS ) - RRSe ) * ( CS + ( Max( MUR,( RCSe + RMSe ) ) / MUM ) ) )", "obj1": 0.9128712871287129, "obj2": 0.06484089652606578}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( RRSe * MLU ) * MLU ) ) * RCSe )", "obj1": 0.6653465346534654, "obj2": 0.2317420474552371}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 0.7524752475247525, "obj2": 0.16767570730284134}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS + Max( Const,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( MUC - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6475247524752475, "obj2": 0.24727812216826148}, {"determining": "( ( FirstVNF_Mem_Server * Min( ACS ,Max( MRS,Const ) ) ) / ( Const + BR ) )", "choosing": "( ( MLU + ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6435643564356436, "obj2": 0.2525857614771836}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ) * RCSe )", "obj1": 0.6554455445544555, "obj2": 0.23212398799105222}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( AMS,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( CS,Min( ( MLU * CS ) ,RCSe ) ) ) * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.0132190953931317}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.018284081396054086}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_Mem ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( ( MUM + MLU ) * MLU ) ) * MUC )", "obj1": 0.9485148514851485, "obj2": 0.02406525747916394}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - ( RRS + DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( DS + RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9742574257425742, "obj2": 0.010588515366017178}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.9841584158415841, "obj2": 0.006693248363822684}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * ( DS * MLU ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0026738193872165414}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( CRS,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.022584918408581407}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ( ( ACS / FirstVNF_CPU ) + ( Min( ACS ,DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / AMS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUR ) ) )", "obj1": 0.9762376237623762, "obj2": 0.00846020200376794}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( MUC / RMSe ) )", "obj1": 0.994059405940594, "obj2": 0.0024865061089785517}, {"determining": "( ( ( ( ARS - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) ) ) ) ) * ( RMSe + RCSe ) )", "obj1": 0.9801980198019802, "obj2": 0.007562199218762603}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( ( MDR + FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.9821782178217822, "obj2": 0.007398429395795019}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,MUM ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( DS * MLU ) * Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( FirstVNF_CPU / DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( MUM,Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( MDR * MRS ) ) ) )", "choosing": "( Min( CS ,Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( DS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MRS * Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,MUM ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( MRS ,AMS ) ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( Min( ( MUR / RMSe ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,Max( MRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( MRS ,ARS ) ) )", "choosing": "Min( ( MUR / CS ) ,( ( RMSe + MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( FirstVNF_RAM,MRS ) )", "choosing": "( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN + ( MRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN + ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,RCSe ) ) ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( RRS,DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / MUM ) ) )", "obj1": 0.8475247524752475, "obj2": 0.07525109246304976}, {"determining": "( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7940594059405941, "obj2": 0.10776591366655018}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ) ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( ( MDR + FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) / RMSe ) )", "obj1": 0.7207920792079208, "obj2": 0.19225637011604294}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( MUM - Max( ( Max( RRSe,Max( ( MUR - CS ),MUM ) ) * RCSe ),DS ) ),( MUR + MUR ) )", "obj1": 0.6772277227722773, "obj2": 0.20743331568312529}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.7405940594059406, "obj2": 0.14013634818876888}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( RRS,DDR ) ) * BR ) - ( ARS - CRS ) )", "choosing": "( ( DS - MLU ) / Max( CS,( CS * ( DS * MLU ) ) ) )", "obj1": 0.8732673267326733, "obj2": 0.069951324262499}, {"determining": "( Max( PN,Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) ) ) / ( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) ) )", "choosing": "( Min( ( MUR / CS ) ,RMSe ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7267326732673267, "obj2": 0.15090205417868569}, {"determining": "( FirstVNF_Mem - ( Min( FirstVNF_Mem ,BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( DS * Min( ( DS * MLU ) ,( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * ( ( MUC / MUC ) + ( ( RMSe - MUM ) - RCSe ) ) )", "obj1": 0.7188118811881188, "obj2": 0.20360260885897347}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) - Max( FirstVNF_RAM,MRS ) )", "choosing": "( ( Max( RRSe,( RCSe * MUM ) ) + ( MUC / RMSe ) ) - Min( RCSe ,MUR ) )", "obj1": 0.9247524752475248, "obj2": 0.04539864986872566}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Min( ( DDR + CRS ) ,( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.7782178217821782, "obj2": 0.1194068987590879}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.7643564356435644, "obj2": 0.12772050718091532}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,ACS ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,Max( MLU,MUR ) ) ) ) * MLU ) ) * RCSe )", "obj1": 0.6732673267326733, "obj2": 0.22610214972288126}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ) / CRS ) ),( Max( FirstVNF_RAM,MRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) ) / MUM ) ) )", "obj1": 0.906930693069307, "obj2": 0.06953358577361206}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + ( ( FirstVNF_RAM - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( MUC - MLU ) - Max( MLU,MUR ) )", "obj1": 0.9366336633663367, "obj2": 0.029538931669398923}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS + Max( Const,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( MUC - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6475247524752475, "obj2": 0.24727812216826148}, {"determining": "( ( FirstVNF_Mem_Server * Min( ACS ,Max( MRS,Const ) ) ) / ( Const + BR ) )", "choosing": "( ( MLU + ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6435643564356436, "obj2": 0.2525857614771836}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ) * RCSe )", "obj1": 0.6554455445544555, "obj2": 0.23212398799105222}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),Min( ( ACS / ( MRS * Const ) ) ,( FirstVNF_CPU_Server * ACS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / ( MUM / ( ( MUC + MUC ) - ( RCSe / RRSe ) ) ) ) ) )", "obj1": 0.9168316831683169, "obj2": 0.05942578959259116}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RRSe + MLU ) * MLU ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6198019801980198, "obj2": 0.26850980487498477}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.018284081396054086}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7287128712871287, "obj2": 0.15026999743274233}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( RRSe * MLU ) * MLU ) ) * RCSe )", "obj1": 0.6653465346534654, "obj2": 0.2317420474552371}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - Max( ( FirstVNF_RAM_Server - ARS ),Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( MUR * DS ) )", "obj1": 0.7683168316831683, "obj2": 0.1265099816528567}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( AMS,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( CS,Min( ( MLU * CS ) ,RCSe ) ) ) * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.0132190953931317}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( Max( FirstVNF_RAM,MRS ) + ( RRS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( Max( MLU,CS ) - RRSe ) * ( CS + ( Max( MUR,( RCSe + RMSe ) ) / MUM ) ) )", "obj1": 0.9128712871287129, "obj2": 0.06484089652606578}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( CRS,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.022584918408581407}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.9485148514851485, "obj2": 0.023906649643627435}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( ( MDR + FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) / ( MUR - DS ) )", "obj1": 0.9900990099009901, "obj2": 0.004629953272502389}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - ( RRS + DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( DS + RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9742574257425742, "obj2": 0.010588515366017178}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( Max( FirstVNF_RAM,MRS ) + ( RRS + MRS ) ) ) - ( ( Max( ( FirstVNF_RAM_Server * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ),Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( MUR - DS ) ) ) / MUM ) ) )", "obj1": 0.9108910891089109, "obj2": 0.06562512498672653}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Const ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( RMSe,MUR ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9445544554455445, "obj2": 0.02809485058649435}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,( Max( RRSe,MLU ) * MLU ) ),MUC ) )", "obj1": 0.9683168316831683, "obj2": 0.012191130003776734}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.9841584158415841, "obj2": 0.006693248363822684}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( MUC / RMSe ) )", "obj1": 0.9425742574257425, "obj2": 0.028347464044264685}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + FirstVNF_Mem_Server ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / MDR ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Min( RRSe ,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUC ) ) )", "obj1": 0.996039603960396, "obj2": 0.0012590915702677425}, {"determining": "( ( ( ( ARS - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) ) ) ) ) * ( RMSe + RCSe ) )", "obj1": 0.9801980198019802, "obj2": 0.007562199218762603}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( Min( ACS ,DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "Min( ( MUR / MUR ) ,( ( RMSe + MUM ) + MUR ) )", "obj1": 0.9782178217821782, "obj2": 0.008205819269377223}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * MLU ) * Max( RRSe,MUR ) )", "obj1": 0.9821782178217822, "obj2": 0.00701880496725927}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( ( ACS / DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( CS,Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MLU ,( ( RCSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.9762376237623762, "obj2": 0.00846020200376794}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * ( DS * MLU ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0026738193872165414}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( MUC / RMSe ) )", "obj1": 0.994059405940594, "obj2": 0.0024865061089785517}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,MUM ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ( ( ACS / FirstVNF_CPU ) + ( Min( ACS ,DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / AMS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUR ) ) )", "obj1": 0.9762376237623762, "obj2": 0.00846020200376794}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( MUC / RMSe ) )", "obj1": 0.994059405940594, "obj2": 0.0024865061089785517}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * ( DS * MLU ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0026738193872165414}, {"determining": "( CRS - ( FirstVNF_RAM + MRS ) )", "choosing": "Min( ( DS * MLU ) ,( ( RRSe + MUC ) - ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ( ( ACS / FirstVNF_CPU ) + ( Min( ACS ,DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / ( ACS - MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8415841584158416, "obj2": 0.07221559755649712}, {"determining": "( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7940594059405941, "obj2": 0.10776591366655018}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8772277227722772, "obj2": 0.04981849568922963}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) ) ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( ( MDR + FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( ( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) ) / RMSe ) )", "obj1": 0.7207920792079208, "obj2": 0.19225637011604294}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_CPU * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) - Max( FirstVNF_RAM,MRS ) )", "choosing": "( ( Max( RRSe,( RCSe * MUM ) ) + ( MUC / RMSe ) ) - Min( RCSe ,MUR ) )", "obj1": 0.9247524752475248, "obj2": 0.04539864986872566}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( RRS,DDR ) ) * BR ) - ( ARS - CRS ) )", "choosing": "( ( DS - MLU ) / Max( CS,( CS * ( DS * MLU ) ) ) )", "obj1": 0.8732673267326733, "obj2": 0.069951324262499}, {"determining": "( Max( PN,Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) ) ) / ( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) ) )", "choosing": "( Min( ( MUR / CS ) ,RMSe ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7267326732673267, "obj2": 0.15090205417868569}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.7405940594059406, "obj2": 0.14013634818876888}, {"determining": "( PN + ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,RCSe ) ) ),RCSe ) ) )", "obj1": 0.700990099009901, "obj2": 0.20542236084096446}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Min( ( DDR + CRS ) ,( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.7782178217821782, "obj2": 0.1194068987590879}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( MUM - Max( ( Max( RRSe,Max( ( MUR - CS ),MUM ) ) * RCSe ),DS ) ),( MUR + MUR ) )", "obj1": 0.6772277227722773, "obj2": 0.20743331568312529}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.7643564356435644, "obj2": 0.12772050718091532}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS + Max( Const,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( MUC - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6475247524752475, "obj2": 0.24727812216826148}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ) * RCSe )", "obj1": 0.6554455445544555, "obj2": 0.23212398799105222}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1976057715320529}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RRSe + MLU ) * MLU ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6198019801980198, "obj2": 0.26850980487498477}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( ( Max( ( ACS / FirstVNF_Mem_Server ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) - Max( FirstVNF_RAM,MRS ) )", "choosing": "( ( Max( RRSe,( RCSe * Max( RRSe,( RCSe * MUM ) ) ) ) + ( MUC / RMSe ) ) - Min( RCSe ,MUR ) )", "obj1": 0.9346534653465347, "obj2": 0.03992441987932786}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS / ( ( FirstVNF_Mem_Server * ( ACS - Max( MRS,Const ) ) ) / ( Const + AMS ) ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( MLU + CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( DS - DS ) ) ) / MUM ) ) )", "obj1": 0.6732673267326733, "obj2": 0.2208751246359004}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2567130666929184}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.7326732673267327, "obj2": 0.14645549773075034}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - Max( ( FirstVNF_RAM_Server - ARS ),Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( MUR * DS ) )", "obj1": 0.7683168316831683, "obj2": 0.1265099816528567}, {"determining": "( ( FirstVNF_Mem_Server * Min( ACS ,Max( MRS,Const ) ) ) / ( Const + BR ) )", "choosing": "( ( MLU + ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6435643564356436, "obj2": 0.2525857614771836}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + ( ( FirstVNF_RAM - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( MUC - MLU ) - Max( MLU,MUR ) )", "obj1": 0.9366336633663367, "obj2": 0.029538931669398923}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( AMS,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( CS,Min( ( MLU * CS ) ,RCSe ) ) ) * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.0132190953931317}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / ( MUM / ( ( MUC + MUC ) - ( RCSe / RRSe ) ) ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.017481276059263483}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( RRSe * MLU ) * MLU ) ) * RCSe )", "obj1": 0.6653465346534654, "obj2": 0.2317420474552371}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.9485148514851485, "obj2": 0.023906649643627435}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Const ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( RMSe,MUR ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9445544554455445, "obj2": 0.02809485058649435}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006382414174257536}, {"determining": "( ( FirstVNF_Mem_Server * Max( ACS,Max( ( MRS - ACS ),Const ) ) ) / ( RRS + ARS ) )", "choosing": "( ( MUM - RRSe ) * ( ( ( ( RCSe / RRSe ) / ( DS - MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6673267326732674, "obj2": 0.22746442787410992}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem * ( ACS * Max( MRS,Const ) ) ) / Min( Const ,ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Max( ( MLU * DS ),RCSe ) ) ) * MLU ) ,( Min( MUM ,RMSe ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6693069306930693, "obj2": 0.22361915644821775}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( FirstVNF_CPU,( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,Max( RRSe,( RCSe * MUM ) ) ) ) )", "obj1": 0.9900990099009901, "obj2": 0.0033451094281390205}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) ) / MUM ) ) )", "obj1": 0.9504950495049505, "obj2": 0.02002779001749953}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) * Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.9742574257425742, "obj2": 0.010585363934377848}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7287128712871287, "obj2": 0.15026999743274233}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,( Max( RRSe,MLU ) * MLU ) ),MUC ) )", "obj1": 0.9683168316831683, "obj2": 0.012191130003776734}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( ARS,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( ( MLU - CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.9386138613861386, "obj2": 0.02829575482027667}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.018284081396054086}, {"determining": "( ( MRS - MDR ) + Min( ( ACS / Const ) ,( Max( MRS,Const ) * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( CS,MUR ) ) )", "obj1": 0.994059405940594, "obj2": 0.0022572818137852014}, {"determining": "( ( ( ( ARS - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) ) ) ) ) * ( RMSe + RCSe ) )", "obj1": 0.9801980198019802, "obj2": 0.007562199218762603}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( MUR - DS ) ) ) / MUM ) ) )", "obj1": 0.9782178217821782, "obj2": 0.007709098090148024}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ( ( ACS / FirstVNF_CPU ) + ( Min( ACS ,DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / AMS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUR ) ) )", "obj1": 0.9762376237623762, "obj2": 0.00846020200376794}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_Mem_Server,MRS ) ) * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Max( CS,DS ) ) ) - Min( RCSe ,MUR ) ) )", "obj1": 0.996039603960396, "obj2": 0.0012590915702677425}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( ( ACS / DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( CS,Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MLU ,( ( RCSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.9762376237623762, "obj2": 0.00846020200376794}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + FirstVNF_Mem_Server ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / MDR ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Min( RRSe ,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUC ) ) )", "obj1": 0.996039603960396, "obj2": 0.0012590915702677425}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( Max( Max( RRSe,MLU ),( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * ( DS * MLU ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0026738193872165414}], "8": [{"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - CRS )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( Max( RRSe,Max( ( MUR - RCSe ),MUM ) ) + Min( CS ,RRSe ) ) ) - Min( RCSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ( ( ACS / FirstVNF_CPU ) + ( Min( ACS ,DDR ) * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / ( ACS - MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( ( MRS - MDR ) + Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * ( Max( MUR,( DS * ( MUR - DS ) ) ) / MUM ) ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.805940594059406, "obj2": 0.0935869162866881}, {"determining": "( ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.7108910891089109, "obj2": 0.20499703100135458}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * RRS ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( RRSe * MUC ) ) )", "obj1": 0.906930693069307, "obj2": 0.0377495917258537}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8415841584158416, "obj2": 0.07221559755649712}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,MUR ) / DS )", "obj1": 0.7188118811881188, "obj2": 0.15896293934782735}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,ACS ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - ( ( MUC + MUC ) - ( DS - RCSe ) ) ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8514851485148515, "obj2": 0.06846835630846679}, {"determining": "( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7940594059405941, "obj2": 0.10776591366655018}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.7405940594059406, "obj2": 0.14013634818876888}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8772277227722772, "obj2": 0.04981849568922963}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( MUM - Max( ( Max( RRSe,Max( ( MUR - CS ),MUM ) ) * RCSe ),DS ) ),( MUR + MUR ) )", "obj1": 0.6772277227722773, "obj2": 0.20743331568312529}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + ( ( FirstVNF_RAM - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( MUC - MLU ) - Max( MLU,MUR ) )", "obj1": 0.9366336633663367, "obj2": 0.029538931669398923}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Min( ( DDR + CRS ) ,( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.7782178217821782, "obj2": 0.1194068987590879}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.7643564356435644, "obj2": 0.12772050718091532}, {"determining": "( Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( Max( Min( MLU ,( ( RRSe + MLU ) * MLU ) ),MUC ) ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8792079207920792, "obj2": 0.04766259983361586}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RRSe + MLU ) * MLU ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6198019801980198, "obj2": 0.26850980487498477}, {"determining": "( PN + ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,RCSe ) ) ),RCSe ) ) )", "obj1": 0.700990099009901, "obj2": 0.20542236084096446}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS / ( ( FirstVNF_Mem_Server * ( ACS - Max( MRS,Const ) ) ) / ( Const + AMS ) ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( MLU + CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( DS - DS ) ) ) / MUM ) ) )", "obj1": 0.6732673267326733, "obj2": 0.2208751246359004}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS / ( ( FirstVNF_Mem_Server * ( ACS - Max( MRS,Const ) ) ) / ( Const + AMS ) ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( MLU + CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( DS - DS ) ) ) / MUM ) ) )", "obj1": 0.6475247524752475, "obj2": 0.24526048544878115}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2567130666929184}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * PN ) ) / ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM / ( ( MUC + MUC ) - ( RCSe / RRSe ) ) ) * ( ( ( ( RRSe + MLU ) * MLU ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6534653465346535, "obj2": 0.239133372137148}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.7326732673267327, "obj2": 0.14645549773075034}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6574257425742575, "obj2": 0.22667351164477362}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Const ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUR ) ) )", "obj1": 0.9386138613861386, "obj2": 0.02512595411429535}, {"determining": "( ( FirstVNF_Mem_Server * Min( ACS ,Max( MRS,Const ) ) ) / ( Const + BR ) )", "choosing": "( ( MLU + ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) * Max( RRSe,RCSe ) )", "obj1": 0.6435643564356436, "obj2": 0.2525857614771836}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem * ( ACS * Max( MRS,Const ) ) ) / Min( Const ,ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Max( ( MLU * DS ),RCSe ) ) ) * MLU ) ,( Min( MUM ,RMSe ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6693069306930693, "obj2": 0.22361915644821775}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ) * RCSe )", "obj1": 0.6554455445544555, "obj2": 0.23212398799105222}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7722772277227723, "obj2": 0.12646758896721805}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / MUM ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.7227722772277227, "obj2": 0.15651003087519252}, {"determining": "( ( ( ( ARS - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) ) ) ) ) * ( RMSe + RCSe ) )", "obj1": 0.9485148514851485, "obj2": 0.02020653053975623}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,( ( RRSe + MLU ) * MLU ) ),MUC ) )", "obj1": 0.9623762376237623, "obj2": 0.014874352210962677}, {"determining": "( Max( PN,Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) ) ) / ( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) ) )", "choosing": "( Min( ( MUR / CS ) ,RMSe ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7267326732673267, "obj2": 0.15090205417868569}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,( Max( RRSe,MLU ) * MLU ) ),MUC ) )", "obj1": 0.9683168316831683, "obj2": 0.012191130003776734}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUC ) ) )", "obj1": 0.9742574257425742, "obj2": 0.009486578164370721}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / ( MUM / ( ( MUC + MUC ) - ( RCSe / RRSe ) ) ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.017481276059263483}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7287128712871287, "obj2": 0.15026999743274233}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.9841584158415841, "obj2": 0.0056872222980102385}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( AMS,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( CS,Min( ( MLU * CS ) ,RCSe ) ) ) * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.0132190953931317}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - Max( ( FirstVNF_RAM_Server - ARS ),Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( MUR * DS ) )", "obj1": 0.7683168316831683, "obj2": 0.1265099816528567}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.018284081396054086}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) ) / MUM ) ) )", "obj1": 0.9504950495049505, "obj2": 0.02002779001749953}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( FirstVNF_CPU,( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,Max( RRSe,( RCSe * MUM ) ) ) ) )", "obj1": 0.9900990099009901, "obj2": 0.0033451094281390205}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006382414174257536}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUR ) / ( MUR - DS ) )", "obj1": 0.9801980198019802, "obj2": 0.007533269581061555}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.994059405940594, "obj2": 0.0022570574948850997}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUR ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0025523199178907655}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( FirstVNF_CPU,( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / Min( FirstVNF_CPU_Server ,ARS ) ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * MUC ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,Max( RRSe,( RCSe * MUM ) ) ) ) )", "obj1": 0.9900990099009901, "obj2": 0.0033451094281390205}], "9": [{"determining": "( ( ( MRS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / MUM ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RRSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - CRS )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( Max( RRSe,Max( ( MUR - RCSe ),MUM ) ) + Min( CS ,RRSe ) ) ) - Min( RCSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7148514851485148, "obj2": 0.17210302218062845}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.13143397240418667}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,ACS ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - ( ( MUC + MUC ) - ( DS - RCSe ) ) ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8514851485148515, "obj2": 0.06846835630846679}, {"determining": "( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7940594059405941, "obj2": 0.10776591366655018}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.7584158415841584, "obj2": 0.12565536302480715}, {"determining": "( ( ( Min( MDR ,FirstVNF_Mem ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server * AMS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( MUM / ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.7108910891089109, "obj2": 0.20499703100135458}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Min( ( DDR + CRS ) ,( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.7782178217821782, "obj2": 0.1194068987590879}, {"determining": "( ( MRS - MDR ) + Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * ( Max( MUR,( DS * ( MUR - DS ) ) ) / MUM ) ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.805940594059406, "obj2": 0.0935869162866881}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( ACS * Max( MRS,Const ) ) - Max( RRS,DDR ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / ( DS - DS ) ) - RRSe ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8297029702970297, "obj2": 0.09005088031312822}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.7207920792079208, "obj2": 0.14789963787163923}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8752475247524752, "obj2": 0.04996186504480154}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( MUM - Max( ( Max( RRSe,Max( ( MUR - CS ),MUM ) ) * RCSe ),DS ) ),( MUR + MUR ) )", "obj1": 0.6772277227722773, "obj2": 0.20743331568312529}, {"determining": "( Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( RRSe - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9287128712871288, "obj2": 0.027285461132618354}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,MUR ) / DS )", "obj1": 0.7188118811881188, "obj2": 0.15896293934782735}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * RRS ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( RRSe * MUC ) ) )", "obj1": 0.906930693069307, "obj2": 0.0377495917258537}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RRSe + MLU ) * MLU ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6198019801980198, "obj2": 0.26850980487498477}, {"determining": "( PN + ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,RCSe ) ) ),RCSe ) ) )", "obj1": 0.700990099009901, "obj2": 0.20542236084096446}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,( ACS * Max( MRS,Const ) ) ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * CS )", "obj1": 0.8376237623762376, "obj2": 0.07818626112873214}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2567130666929184}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS / ( ( FirstVNF_Mem_Server * ( ACS - Max( MRS,Const ) ) ) / ( Const + AMS ) ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( MLU + CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( DS - DS ) ) ) / MUM ) ) )", "obj1": 0.6732673267326733, "obj2": 0.2208751246359004}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8415841584158416, "obj2": 0.07221559755649712}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * PN ) ) / ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM / ( ( MUC + MUC ) - ( RCSe / RRSe ) ) ) * ( ( ( ( RRSe + MLU ) * MLU ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6534653465346535, "obj2": 0.239133372137148}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6574257425742575, "obj2": 0.22667351164477362}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + MRS ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( ( MLU / RRSe ) - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6435643564356436, "obj2": 0.24624668019714574}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem * ( ACS * Max( MRS,Const ) ) ) / Min( Const ,ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Max( ( MLU * DS ),RCSe ) ) ) * MLU ) ,( Min( MUM ,RMSe ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6693069306930693, "obj2": 0.22361915644821775}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ) * RCSe )", "obj1": 0.6554455445544555, "obj2": 0.23212398799105222}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,RRS ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * CS ) ) )", "obj1": 0.8930693069306931, "obj2": 0.04226174281142621}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.904950495049505, "obj2": 0.03850751433803285}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Const ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUR ) ) )", "obj1": 0.9386138613861386, "obj2": 0.02512595411429535}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS / ( ( FirstVNF_Mem_Server * ( ACS - Max( MRS,Const ) ) ) / ( Const + AMS ) ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( MLU + CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( DS - DS ) ) ) / MUM ) ) )", "obj1": 0.6475247524752475, "obj2": 0.24526048544878115}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,FirstVNF_CPU ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.8891089108910891, "obj2": 0.04577198992731273}, {"determining": "( Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( Max( Min( MLU ,( ( RRSe + MLU ) * MLU ) ),MUC ) ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8792079207920792, "obj2": 0.04766259983361586}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,Max( ( RRSe + MLU ),MLU ) ),MUC ) )", "obj1": 0.9623762376237623, "obj2": 0.014688398936618946}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUC ) ) )", "obj1": 0.9742574257425742, "obj2": 0.009486578164370721}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) ) ,ARS ) ) ) - Max( ( DDR + FirstVNF_Mem ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) * Max( RRSe,MUR ) ) + ( MUC / RMSe ) )", "obj1": 0.9425742574257425, "obj2": 0.02294353295681405}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,( Max( RRSe,MLU ) * MLU ) ),MUC ) )", "obj1": 0.9683168316831683, "obj2": 0.012191130003776734}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * ( CS + ( Max( MUR,MUR ) / ( MUM / ( ( MUC + MUC ) - ( RCSe / RRSe ) ) ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.017481276059263483}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,( CS - Min( ( MLU * DS ) ,RCSe ) ) ) ) )", "obj1": 0.9782178217821782, "obj2": 0.008257242199314856}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.9841584158415841, "obj2": 0.0056872222980102385}, {"determining": "( ( ( ( ARS - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) ) ) ) ) * ( RRSe + RCSe ) )", "obj1": 0.9465346534653465, "obj2": 0.020977870037723827}, {"determining": "( ( PN / Const ) - ( FirstVNF_RAM + ( ( FirstVNF_RAM - Const ) - Min( FirstVNF_CPU_Server ,( ( ARS - BR ) - Max( RRS,DDR ) ) ) ) ) )", "choosing": "( ( MUC + MUC ) - Max( MLU,MUR ) )", "obj1": 0.9801980198019802, "obj2": 0.00573890334757585}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( AMS,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - Max( CS,Min( ( MLU * CS ) ,RCSe ) ) ) * MLU ) ,( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ) )", "obj1": 0.9663366336633663, "obj2": 0.0132190953931317}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Min( FirstVNF_CPU ,( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / Min( FirstVNF_CPU_Server ,ARS ) ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( MUC / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.9881188118811881, "obj2": 0.003961306905426261}, {"determining": "( ( FirstVNF_RAM * Const ) - ( AMS + MRS ) )", "choosing": "( ( MUC - DS ) - Min( RCSe ,RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * MUC ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,Max( RRSe,( RCSe * MUM ) ) ) ) )", "obj1": 0.8910891089108911, "obj2": 0.04388728993792534}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / ARS ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.994059405940594, "obj2": 0.0022570574948850997}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8772277227722772, "obj2": 0.04947823441066251}], "10": [{"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) ) ,ARS ) ) ) - Max( ( DDR + FirstVNF_Mem ),( PN * CRS ) ) )", "choosing": "Min( ( ( DS * MLU ) * Max( RRSe,MUR ) ) ,( MUC / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / MUM ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RRSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6099009900990099, "obj2": 0.27580874563783586}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( MRS / FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + ( DS + MUM ) )", "obj1": 0.7069306930693069, "obj2": 0.1992585098080099}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + FirstVNF_RAM ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( ( MUC - RRSe ),CS ) * Max( MUM,MUM ) ) ) )", "obj1": 0.7128712871287128, "obj2": 0.17014836783465734}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + ( Min( Max( RMSe,MLU ) ,( ( MLU / CS ) - ( ( MUC + MUC ) - ( DS - RCSe ) ) ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.1999453464318433}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.7584158415841584, "obj2": 0.12565536302480715}, {"determining": "( ( MRS - MDR ) + Min( FirstVNF_Mem ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * ( Max( MUR,( DS * ( MUR - DS ) ) ) / MUM ) ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.805940594059406, "obj2": 0.0935869162866881}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.13143397240418667}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_RAM_Server ,Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Min( ( DDR + CRS ) ,( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.7782178217821782, "obj2": 0.1194068987590879}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS / ( ( FirstVNF_Mem_Server * ( ACS - Max( MRS,Const ) ) ) / ( Const + AMS ) ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( MLU + CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( DS - DS ) ) ) / MUM ) ) )", "obj1": 0.6732673267326733, "obj2": 0.2208751246359004}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RMSe,MUR ) / DS )", "obj1": 0.7188118811881188, "obj2": 0.15896293934782735}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RRSe + MLU ) * MLU ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6198019801980198, "obj2": 0.26850980487498477}, {"determining": "( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( ( DS * MLU ) * Max( RRSe,MUR ) ) )", "obj1": 0.7940594059405941, "obj2": 0.10776591366655018}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,FirstVNF_RAM_Server ) ) ) / ( RRS + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Max( RCSe,MUC ) / ( DS / DS ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.6217821782178218, "obj2": 0.2573130078441794}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.7306930693069307, "obj2": 0.1459297281148237}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + MRS ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + Max( MUR,( DS * ( DS - DS ) ) ) )", "obj1": 0.8594059405940594, "obj2": 0.06675850368414359}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( ACS * Max( MRS,Const ) ) - Max( RRS,DDR ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / ( DS - DS ) ) - RRSe ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8297029702970297, "obj2": 0.09005088031312822}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "( ( Min( ( ( MLU / RRSe ) * ( CS - DS ) ) ,( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) + ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MLU,MUM ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2567130666929184}, {"determining": "Min( ( ( Max( ( ( Min( Max( AMS,CRS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Max( ( PN / PN ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) - ( ( Max( FirstVNF_Mem,AMS ) / Max( MDR,Const ) ) + ( ( CRS + ARS ) + ( MRS / Const ) ) ) ),( ( Min( Min( ACS ,PN ) ,( BR - ACS ) ) - Min( Max( FirstVNF_RAM,MDR ) ,Min( BR ,ARS ) ) ) * ( Max( ( DDR * AMS ),( DDR / FirstVNF_RAM ) ) + ( ( RRS / FirstVNF_CPU ) - ( MDR * ACS ) ) ) ) ) * ( ( ( Max( Min( FirstVNF_Mem ,MDR ),( FirstVNF_RAM - BR ) ) * ( ( FirstVNF_Mem * RRS ) + ( ACS - PN ) ) ) * ( ( ( FirstVNF_Mem / PN ) - Min( FirstVNF_Mem_Server ,RRS ) ) * ( Min( ARS ,FirstVNF_RAM ) - ( BR * FirstVNF_CPU_Server ) ) ) ) + Min( Min( ( Min( BR ,FirstVNF_CPU_Server ) * ( DDR + FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server + AMS ) * ( MDR - FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / AMS ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( ( AMS + FirstVNF_RAM_Server ) / ( DDR * ACS ) ) ) ) ) ) / ( ( ( Min( ( ( CRS - ACS ) + ( FirstVNF_RAM / AMS ) ) ,( ( PN - FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,CRS ) ) ) / Min( ( Min( ACS ,FirstVNF_RAM ) * ( RRS / FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_RAM ,BR ) - ( AMS - PN ) ) ) ) + ( ( ( ( DDR / Const ) * Min( MDR ,AMS ) ) / Max( ( ACS / AMS ),( RRS * BR ) ) ) / ( ( ( MDR + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + PN ) ) * ( ( MDR * DDR ) - ( PN - CRS ) ) ) ) ) / Max( ( ( Max( Min( FirstVNF_Mem ,FirstVNF_Mem ),( ARS - CRS ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,Min( BR ,Const ) ) ) * ( ( Max( Const,BR ) * ( FirstVNF_RAM_Server + MRS ) ) - ( ( RRS * FirstVNF_RAM ) - ( MDR + FirstVNF_RAM ) ) ) ),( Min( Max( ( PN - PN ),( PN / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + Min( Const ,FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) + Min( ARS ,ARS ) ),Max( Max( FirstVNF_RAM_Server,ACS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,Max( ( ( Max( Max( ( ( FirstVNF_Mem / DDR ) / ( ARS - RRS ) ),( Max( RRS,FirstVNF_Mem ) * ( FirstVNF_CPU_Server / PN ) ) ),Max( ( ( BR / ACS ) + Max( MRS,FirstVNF_CPU_Server ) ),( Min( ARS ,RRS ) - ( AMS - FirstVNF_CPU ) ) ) ) + ( ( ( Min( FirstVNF_Mem ,PN ) + Max( FirstVNF_Mem_Server,MDR ) ) / ( ( FirstVNF_RAM_Server / ARS ) - Min( DDR ,FirstVNF_RAM_Server ) ) ) - Max( ( ( ARS / RRS ) / Min( FirstVNF_RAM ,BR ) ),( ( ARS + FirstVNF_Mem_Server ) - ( PN * FirstVNF_Mem ) ) ) ) ) / ( ( ( ( ( ARS - FirstVNF_Mem ) + ( CRS + FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU_Server,BR ) - ( BR - FirstVNF_CPU_Server ) ) ) * Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( ARS + FirstVNF_Mem ) ) ,Min( ( MRS + MDR ) ,( BR + BR ) ) ) ) * Max( Max( Max( ( MRS + ACS ),Max( FirstVNF_RAM_Server,MRS ) ),( ( PN + PN ) * Max( CRS,FirstVNF_RAM ) ) ),( ( ( ARS - FirstVNF_Mem ) + ( MRS - FirstVNF_RAM ) ) / Max( ( BR / FirstVNF_RAM_Server ),( AMS * FirstVNF_Mem_Server ) ) ) ) ) ),Max( Max( Max( ( ( ( DDR - DDR ) - Min( Const ,Const ) ) / ( ( FirstVNF_RAM_Server + AMS ) * ( PN * DDR ) ) ),Max( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + Const ) ),Min( ( ARS + ARS ) ,( FirstVNF_RAM_Server * ACS ) ) ) ),( ( ( Max( FirstVNF_Mem,AMS ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( Min( RRS ,Const ) * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) * ( ( ( ARS - DDR ) - ( Const / MRS ) ) - ( ( FirstVNF_RAM_Server - MRS ) * ( RRS * CRS ) ) ) ) ),( ( ( Max( Max( AMS,DDR ),( ACS + FirstVNF_RAM_Server ) ) - Max( ( RRS - CRS ),Min( FirstVNF_RAM ,DDR ) ) ) / Min( ( ( FirstVNF_RAM_Server / AMS ) + ( Const * FirstVNF_CPU ) ) ,( Min( RRS ,DDR ) + ( AMS * MRS ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * Min( RRS ,FirstVNF_CPU_Server ) ) + ( ( BR / FirstVNF_Mem ) - ( BR + MDR ) ) ) ,( Max( ( CRS * FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + ARS ) * Min( DDR ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( Max( ( ( ( ( ( MUM * MLU ) * ( RMSe * RMSe ) ) / ( Min( CS ,MUR ) * ( MUM * MUR ) ) ) + ( ( ( RRSe / RMSe ) + ( MUM + CS ) ) + ( ( DS / RMSe ) + ( RRSe / MUR ) ) ) ) * Max( ( ( ( DS * MUC ) * Min( MUM ,MUM ) ) - ( Min( CS ,MUR ) - Max( MLU,MUC ) ) ),( ( Min( CS ,MLU ) / Min( MLU ,MUC ) ) / Max( Max( MUM,RMSe ),( MUR + MUR ) ) ) ) ),( Min( ( ( Min( MUC ,MUC ) * ( MUM * MUR ) ) - ( ( RCSe - CS ) * ( RCSe - MUM ) ) ) ,Min( ( ( MUM + MUR ) / ( RCSe + RCSe ) ) ,( Max( CS,RRSe ) * Min( MUM ,MUM ) ) ) ) / Min( Max( Max( Max( RMSe,RMSe ),( RRSe * MLU ) ),( ( MUC + MUM ) + ( MUR * MUM ) ) ) ,( ( ( DS - RMSe ) * ( RCSe + CS ) ) / Min( ( DS + RCSe ) ,Min( RCSe ,CS ) ) ) ) ) ) - ( ( ( Max( ( ( DS / RMSe ) * ( RCSe * DS ) ),( Max( RMSe,MUC ) + Min( MUR ,MUC ) ) ) + ( Max( Max( MUR,CS ),( RCSe - RCSe ) ) + ( Min( RMSe ,RMSe ) - ( MUC / CS ) ) ) ) + ( Min( Min( Min( MUM ,RMSe ) ,( MUM / MLU ) ) ,( ( RCSe - RCSe ) / ( MUR * MUR ) ) ) * ( Min( ( RMSe - RRSe ) ,( MUC * MUC ) ) * ( Min( CS ,MLU ) * ( MUR - RCSe ) ) ) ) ) * ( ( ( ( ( MUC - DS ) * Max( MUR,RRSe ) ) - ( ( RRSe + CS ) - ( MLU / RMSe ) ) ) - ( ( Max( MUM,DS ) / Max( DS,CS ) ) * Max( Min( RMSe ,RMSe ),( DS * RCSe ) ) ) ) * Max( ( ( ( DS / MUC ) / ( DS - CS ) ) + Min( ( MUM * RCSe ) ,Min( MUC ,RCSe ) ) ),( ( ( DS - MUM ) - ( CS / MUR ) ) / ( ( RRSe / RCSe ) / ( MUC + RCSe ) ) ) ) ) ) ) / ( Min( Max( ( ( Max( Max( RMSe,CS ),Min( MUM ,RCSe ) ) - Min( ( CS - CS ) ,( MUM / MLU ) ) ) - ( ( ( RMSe / MUM ) + ( CS / RMSe ) ) / ( ( RRSe * RCSe ) - ( RRSe - CS ) ) ) ),Max( ( Max( ( DS + MLU ),Max( MUC,MUR ) ) - Max( Max( MUM,MLU ),( MLU * DS ) ) ),( ( Max( MUM,MLU ) + Max( RMSe,RRSe ) ) * ( ( CS - RCSe ) + Min( RRSe ,RMSe ) ) ) ) ) ,( ( ( Min( ( CS / RMSe ) ,( MLU * MLU ) ) - Max( Max( MUR,MUR ),Min( MLU ,RRSe ) ) ) * ( ( Min( MUR ,MUC ) + Min( MUR ,RMSe ) ) / ( Min( RMSe ,MUM ) / ( RMSe * MLU ) ) ) ) * Min( Min( Min( ( RMSe * MLU ) ,Min( RRSe ,MUM ) ) ,( ( CS + RMSe ) / Max( DS,MLU ) ) ) ,( Min( Min( MLU ,MUC ) ,( MUC - RRSe ) ) / ( ( DS - MUR ) - ( RMSe / RMSe ) ) ) ) ) ) + Max( ( ( ( ( ( RRSe * CS ) - ( MUC / RMSe ) ) - Min( Min( MUC ,DS ) ,( DS / MUM ) ) ) - ( ( ( MUR / DS ) * ( MUM / RCSe ) ) - ( ( MUC * MUR ) + Min( RMSe ,MUC ) ) ) ) - ( Max( ( Max( RMSe,MLU ) / Min( MLU ,MUR ) ),Max( Min( DS ,MUR ),( RMSe * MLU ) ) ) * Min( ( ( RMSe + RMSe ) * ( RMSe * CS ) ) ,( ( DS * DS ) / Max( MLU,CS ) ) ) ) ),Min( ( ( Min( Max( MUR,RMSe ) ,Max( RRSe,RMSe ) ) / Min( ( CS + MUM ) ,Min( RMSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / Max( MUR,DS ) ),( Min( RRSe ,CS ) + Min( MUC ,MUM ) ) ) ) ,( ( ( Min( RCSe ,CS ) - Min( MUR ,DS ) ) - ( ( RRSe / MUC ) - ( CS + MUR ) ) ) + Max( Min( ( MLU / DS ) ,( RRSe - RRSe ) ),( ( MUR / MLU ) / Min( RRSe ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7900990099009901, "obj2": 0.10847092920089763}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - Max( ( DDR + MDR ),( PN * CRS ) ) ) - Max( RRS,DDR ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - Min( Max( RRSe,MLU ) ,( RMSe + MUM ) ) ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8356435643564356, "obj2": 0.0767423220529796}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( RRSe,( MUC * ( DS - MLU ) ) ) + ( MUC / RMSe ) )", "obj1": 0.7207920792079208, "obj2": 0.14789963787163923}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( FirstVNF_RAM * CRS ) ) )", "choosing": "( ( ( ( Min( DS ,MUM ) + CS ) * MLU ) * Max( RRSe,MUR ) ) + ( MUC / RMSe ) )", "obj1": 0.9207920792079208, "obj2": 0.03258594042091412}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - RRSe ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8415841584158416, "obj2": 0.07221559755649712}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / MUM ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.8653465346534653, "obj2": 0.05354248872110383}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( ( Min( MLU ,( ( RRSe + MLU ) * MUC ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,Max( RRSe,( RCSe * MUM ) ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.23884403361878245}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM + Max( MRS,Const ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6574257425742575, "obj2": 0.22667351164477362}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,ACS ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( ( MLU / CS ) - ( ( MUC + MUC ) - ( DS - RCSe ) ) ) * Min( MLU ,( ( RRSe + MLU ) * MLU ) ) )", "obj1": 0.8514851485148515, "obj2": 0.06846835630846679}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem_Server * ( ACS * Max( MRS,Const ) ) ) / ( Const + ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "( Min( MLU ,( ( ( RRSe * ( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) ) * MLU ) ) * RCSe )", "obj1": 0.6554455445544555, "obj2": 0.23212398799105222}, {"determining": "( ( ( ( BR + FirstVNF_RAM ) - Max( ( ( FirstVNF_Mem - BR ) - Max( RRS,ACS ) ),DDR ) ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( MLU + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8336633663366336, "obj2": 0.08907948302838302}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem * ( ACS * Max( MRS,Const ) ) ) / Min( Const ,ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Max( ( MLU * DS ),RCSe ) ) ) * MLU ) ,( Min( MUM ,RMSe ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6693069306930693, "obj2": 0.22361915644821775}, {"determining": "( Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Max( ( MLU * DS ),RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.906930693069307, "obj2": 0.03729511477080189}, {"determining": "( Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) ) + ( RRSe - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.9287128712871288, "obj2": 0.027285461132618354}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Const ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUR ) ) )", "obj1": 0.9386138613861386, "obj2": 0.02512595411429535}, {"determining": "( Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Min( ( MUR / CS ) ,( Min( Max( Min( MLU ,( ( RRSe + MLU ) * MLU ) ),MUC ) ,MUM ) + MUR ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8792079207920792, "obj2": 0.04766259983361586}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,FirstVNF_CPU ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.8891089108910891, "obj2": 0.045005055586093065}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS / ( ( FirstVNF_Mem_Server * ( ACS - Max( MRS,Const ) ) ) / ( Const + AMS ) ) ) ) / ( Const + ARS ) )", "choosing": "( ( ( MLU + CS ) - RRSe ) * ( CS + ( Max( MUR,( DS * ( DS - DS ) ) ) / MUM ) ) )", "obj1": 0.6475247524752475, "obj2": 0.24526048544878115}, {"determining": "( ( ( ( ARS - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) ) ) ) ) * ( RRSe + RCSe ) )", "obj1": 0.9465346534653465, "obj2": 0.020977870037723827}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Min( FirstVNF_CPU ,( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( ( ( CRS - Max( FirstVNF_RAM,MRS ) ) * AMS ) + ( BR / Min( FirstVNF_CPU_Server ,ARS ) ) ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / Max( RRS,DDR ) ) ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( MUC / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.9881188118811881, "obj2": 0.003961306905426261}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,RRS ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * CS ) ) )", "obj1": 0.9227722772277228, "obj2": 0.028752608921470853}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - ACS ) ),FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( MLU + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 0.8752475247524752, "obj2": 0.04996186504480154}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( ( ( ( RCSe / RRSe ) / ( DS + MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( ( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * MLU ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) ) )", "obj1": 0.8673267326732673, "obj2": 0.05333816366058403}, {"determining": "( ( ( ( ARS - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) )", "choosing": "( ( MUM - ( MUM / ( ( MUC + MUC ) - ( ( Min( DS ,MUM ) + CS ) * ( RCSe / RMSe ) ) ) ) ) * ( RRSe + RCSe ) )", "obj1": 0.9524752475247524, "obj2": 0.018459026812313973}, {"determining": "( ( PN / Max( ACS,MRS ) ) - ( FirstVNF_RAM + ( ( FirstVNF_RAM - Const ) - Min( FirstVNF_CPU_Server ,( ( ARS - BR ) - Max( RRS,DDR ) ) ) ) ) )", "choosing": "( ( MUC + MUC ) - RCSe )", "obj1": 0.994059405940594, "obj2": 0.0017315944970990108}, {"determining": "( ( FirstVNF_Mem_Server * ( ACS * ( ( FirstVNF_Mem * ( ACS * Max( MRS,Const ) ) ) / Min( Const ,ARS ) ) ) ) / ( Const + ARS ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Max( ( MLU * DS ),RCSe ) ) ) * MLU ) ,( Min( MUM ,RMSe ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.6415841584158416, "obj2": 0.24781073086576405}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( MRS - MDR ) + Min( ( ACS / Const ) ,( FirstVNF_CPU_Server * ACS ) ) ) ,ARS ) ) ) - Max( ( DDR + FirstVNF_Mem ),( PN * CRS ) ) )", "choosing": "( ( ( DS * MLU ) * Max( RRSe,MUR ) ) + ( MUC / RMSe ) )", "obj1": 0.9425742574257425, "obj2": 0.02294353295681405}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_CPU_Server ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( ( PN + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,( Max( RRSe,MLU ) * MLU ) ),MUC ) )", "obj1": 0.9683168316831683, "obj2": 0.012191130003776734}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( DDR ,AMS ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( FirstVNF_RAM,FirstVNF_Mem ) ) )", "choosing": "( Max( RRSe,( RCSe * MUM ) ) + ( ( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) / ( CS + Min( CS ,DS ) ) ) - Min( RCSe ,MUC ) ) )", "obj1": 0.9742574257425742, "obj2": 0.009486578164370721}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM_Server - Const ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( ( Min( MLU ,( ( RRSe + MLU ) * MLU ) ) * MUC ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 0.9841584158415841, "obj2": 0.0056872222980102385}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,Max( Min( MLU ,Max( ( RRSe + MLU ),MLU ) ),MUC ) )", "obj1": 0.9623762376237623, "obj2": 0.014688398936618946}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( ( Const + ( ( ( FirstVNF_CPU_Server * MRS ) / ( Max( PN,FirstVNF_RAM ) + Max( BR,MRS ) ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) ) ) - Min( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) ,ARS ) ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "Min( ( ( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) ) * MLU ) ,( Min( MUM ,MUM ) / Max( ( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe * MLU ),Max( RRSe,DS ) ) ),RCSe ) ) )", "obj1": 0.902970297029703, "obj2": 0.040006790127787024}]}