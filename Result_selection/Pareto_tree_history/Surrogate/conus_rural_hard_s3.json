{"1": [{"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - Min( MRS ,PN ) ) )", "choosing": "( ( RCSe / MLU ) - ( ( RCSe / RMSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - BR ) ,( RRS * FirstVNF_CPU ) )", "choosing": "( ( MUR * RRSe ) / ( RRSe + DS ) )", "obj1": 0.7227722772277227, "obj2": 0.1985404808361048}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS - ACS ),( BR + Max( Const,ACS ) ) )", "choosing": "Min( ( ( MUM + RRSe ) + CS ) ,( DS * ( MUM / MUR ) ) )", "obj1": 0.7683168316831683, "obj2": 0.1777426416750072}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) )", "obj1": 0.7207920792079208, "obj2": 0.21309213076301906}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Const ) * ( FirstVNF_RAM - ( BR - Const ) ) )", "choosing": "( ( RCSe / RRSe ) + ( Min( MUM ,CS ) / Min( ( ( RCSe * DS ) / CS ) ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "( ( FirstVNF_Mem + MDR ) / ( FirstVNF_Mem * PN ) )", "choosing": "( ( CS * ( DS - ( DS - ( ( ( Min( DS ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( ( ACS / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( ( MUR + DS ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( ( MUM * RCSe ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - ( ACS + Max( MRS,( FirstVNF_CPU + Const ) ) ) ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( Min( ( RCSe + ( Max( Min( RRSe ,Max( RMSe,RCSe ) ),RMSe ) * ( MUR + ( RRSe - ( ( MLU - CS ) * DS ) ) ) ) ) ,Min( RRSe ,RRSe ) ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( BR / RRS ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / Min( MUM ,Max( RCSe,RCSe ) ) ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - Max( Const,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( ( MLU + ( RCSe - ( CS + ( MLU * RMSe ) ) ) ) - ( MUR * Min( ( ( DS / MLU ) + MUM ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ACS * ARS ) / ACS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - RRSe ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( Max( ( Min( CRS ,CRS ) / CRS ),MRS ),Const ) ) ) + ( ( ( DDR + RRS ) / Max( ACS,Min( PN ,( FirstVNF_CPU_Server + ARS ) ) ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( ( RCSe * ( ( ( ( RMSe - RRSe ) * RCSe ) * MLU ) - RCSe ) ) * ( DS - ( Min( CS ,RRSe ) / ( ( Max( CS,MUR ) + MUM ) - ( ( CS + ( MUC + RCSe ) ) * DS ) ) ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}], "2": [{"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - Min( MRS ,PN ) ) )", "choosing": "( ( RCSe / MLU ) - ( ( RCSe / RMSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + MDR ) / ( FirstVNF_Mem * PN ) )", "choosing": "( ( CS * ( DS - ( DS - ( ( ( Min( DS ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( ( ACS / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( ( MUR + DS ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( ( MUM * RCSe ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( BR / RRS ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / Min( MUM ,Max( RCSe,RCSe ) ) ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - Max( Const,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( ( MLU + ( RCSe - ( CS + ( MLU * RMSe ) ) ) ) - ( MUR * Min( ( ( DS / MLU ) + MUM ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ACS * ARS ) / ACS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - RRSe ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( Max( ( Min( CRS ,CRS ) / CRS ),MRS ),Const ) ) ) + ( ( ( DDR + RRS ) / Max( ACS,Min( PN ,( FirstVNF_CPU_Server + ARS ) ) ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( ( RCSe * ( ( ( ( RMSe - RRSe ) * RCSe ) * MLU ) - RCSe ) ) * ( DS - ( Min( CS ,RRSe ) / ( ( Max( CS,MUR ) + MUM ) - ( ( CS + ( MUC + RCSe ) ) * DS ) ) ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}, {"determining": "( Max( BR,PN ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( ( ( MUR - CS ) * DS ) - Min( MLU ,RMSe ) )", "obj1": 0.8178217821782178, "obj2": 0.1542865487732329}, {"determining": "( ( CRS - ACS ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( ( MUM - MUR ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * AMS ) ,ARS ) )", "choosing": "( ( CS + MUC ) + Min( ( RCSe - MUR ) ,( ( RRSe * RRSe ) + Max( MUR,DS ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.22716602311540599}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / CRS ) ) / ( ( Const / FirstVNF_RAM ) * ( RRS / Max( Max( MDR,MRS ),MRS ) ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / ( Max( ( Max( ( ( Max( DS,RRSe ) / ( RRSe / MUR ) ) - RMSe ),CS ) + MLU ),Max( MLU,MLU ) ) - ( MUR - MLU ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1743161518645699}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( ( MUM * RCSe ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,ACS ) * Max( ( ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) )", "choosing": "( ( RCSe * MUR ) - Max( RMSe,Max( MLU,CS ) ) )", "obj1": 0.6554455445544555, "obj2": 0.25214944483150714}, {"determining": "( ( ( Max( AMS,PN ) * BR ) / ( CRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ACS * Max( ( BR - AMS ),AMS ) ) )", "choosing": "Min( Max( ( MUR + MUM ),( RMSe * ( Max( ( RMSe * ( ( RCSe - RMSe ) / ( DS - CS ) ) ),RMSe ) / MLU ) ) ) ,( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( Const - ARS ) ) / ( Max( CRS,BR ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( DS - Max( Max( DS,Min( CS ,( MLU / ( MUR / CS ) ) ) ),RRSe ) ),RCSe ),Min( MUC ,DS ) )", "obj1": 0.9128712871287129, "obj2": 0.07029619361344695}, {"determining": "( ( ( CRS * Const ) * ( ACS * FirstVNF_Mem ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( MLU / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6673267326732674, "obj2": 0.23139207534906425}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,DDR ) ) - ( RRS - Max( MRS,( ACS - AMS ) ) ) )", "choosing": "( Max( DS,MUR ) / ( MUM + ( RMSe + ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ( CRS / Const ) + Max( ARS,MDR ) ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( MUM / CS ) - Min( RCSe ,DS ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - FirstVNF_RAM_Server ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * ( ( ( ACS * PN ) * FirstVNF_RAM ) - FirstVNF_RAM ) ) ,ARS ) )", "choosing": "( ( CS + MUC ) + Min( ( RCSe - MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + BR ) ,Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( DS + RCSe ) + ( MUC - RRSe ) )", "obj1": 0.80990099009901, "obj2": 0.1563895284558826}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( ( MUR * RMSe ) / Max( DS,MUR ) ) )", "obj1": 0.900990099009901, "obj2": 0.0876669535656088}, {"determining": "Max( ( FirstVNF_Mem_Server / CRS ),( FirstVNF_Mem + ARS ) )", "choosing": "Min( DS ,( Max( DS,MUM ) * ( CS + MUM ) ) )", "obj1": 0.7762376237623763, "obj2": 0.1692950749002131}, {"determining": "( Min( Max( ARS,MRS ) ,MDR ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( ( CS - ( RRSe - MUM ) ) + ( DS * MUR ) ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,ARS ) - AMS ) / CRS ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( ( DS + MUC ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / ( ( ( CS * ( RMSe / MLU ) ) - RRSe ) * RMSe ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.9089108910891089, "obj2": 0.07316256596994966}, {"determining": "( ( PN - Min( AMS ,PN ) ) - ACS )", "choosing": "( ( MUR / CS ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - MDR ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server + ( MDR - BR ) ) )", "choosing": "( ( RRSe * Min( Min( CS ,( ( ( Max( CS,MLU ) - RCSe ) - ( ( RCSe + CS ) * ( RRSe / RRSe ) ) ) - RCSe ) ) ,RMSe ) ) + ( ( DS * CS ) - Max( CS,( MUM - Max( DS,( MUR + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - Min( MRS ,PN ) ) )", "choosing": "( ( RCSe / MLU ) - ( ( RCSe / RMSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + MDR ) / ( FirstVNF_Mem * PN ) )", "choosing": "( ( CS * ( DS - ( DS - ( ( ( Min( DS ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( ( ACS / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( ( MUR + DS ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( ( MUM * RCSe ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( BR / RRS ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / Min( MUM ,Max( RCSe,RCSe ) ) ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - Max( Const,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( ( MLU + ( RCSe - ( CS + ( MLU * RMSe ) ) ) ) - ( MUR * Min( ( ( DS / MLU ) + MUM ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ACS * ARS ) / ACS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - RRSe ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( Max( ( Min( CRS ,CRS ) / CRS ),MRS ),Const ) ) ) + ( ( ( DDR + RRS ) / Max( ACS,Min( PN ,( FirstVNF_CPU_Server + ARS ) ) ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( ( RCSe * ( ( ( ( RMSe - RRSe ) * RCSe ) * MLU ) - RCSe ) ) * ( DS - ( Min( CS ,RRSe ) / ( ( Max( CS,MUR ) + MUM ) - ( ( CS + ( MUC + RCSe ) ) * DS ) ) ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}, {"determining": "( ( CRS - ACS ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( ( MUM - MUR ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * AMS ) ,ARS ) )", "choosing": "( ( CS + MUC ) + Min( ( RCSe - MUR ) ,( ( RRSe * RRSe ) + Max( MUR,DS ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.22716602311540599}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / CRS ) ) / ( ( Const / FirstVNF_RAM ) * ( RRS / Max( Max( MDR,MRS ),MRS ) ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / ( Max( ( Max( ( ( Max( DS,RRSe ) / ( RRSe / MUR ) ) - RMSe ),CS ) + MLU ),Max( MLU,MLU ) ) - ( MUR - MLU ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1743161518645699}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( ( MUM * RCSe ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,ACS ) * Max( ( ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) )", "choosing": "( ( RCSe * MUR ) - Max( RMSe,Max( MLU,CS ) ) )", "obj1": 0.6554455445544555, "obj2": 0.25214944483150714}, {"determining": "( ( ( Max( AMS,PN ) * BR ) / ( CRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ACS * Max( ( BR - AMS ),AMS ) ) )", "choosing": "Min( Max( ( MUR + MUM ),( RMSe * ( Max( ( RMSe * ( ( RCSe - RMSe ) / ( DS - CS ) ) ),RMSe ) / MLU ) ) ) ,( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( Const - ARS ) ) / ( Max( CRS,BR ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( DS - Max( Max( DS,Min( CS ,( MLU / ( MUR / CS ) ) ) ),RRSe ) ),RCSe ),Min( MUC ,DS ) )", "obj1": 0.9128712871287129, "obj2": 0.07029619361344695}, {"determining": "( ( ( CRS * Const ) * ( ACS * FirstVNF_Mem ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( MLU / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6673267326732674, "obj2": 0.23139207534906425}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,DDR ) ) - ( RRS - Max( MRS,( ACS - AMS ) ) ) )", "choosing": "( Max( DS,MUR ) / ( MUM + ( RMSe + ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ( CRS / Const ) + Max( ARS,MDR ) ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( MUM / CS ) - Min( RCSe ,DS ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - FirstVNF_RAM_Server ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * ( ( ( ACS * PN ) * FirstVNF_RAM ) - FirstVNF_RAM ) ) ,ARS ) )", "choosing": "( ( CS + MUC ) + Min( ( RCSe - MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( ( MUR * RMSe ) / Max( DS,MUR ) ) )", "obj1": 0.900990099009901, "obj2": 0.0876669535656088}, {"determining": "( Min( Max( ARS,MRS ) ,MDR ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( ( CS - ( RRSe - MUM ) ) + ( DS * MUR ) ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,ARS ) - AMS ) / CRS ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( ( DS + MUC ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / ( ( ( CS * ( RMSe / MLU ) ) - RRSe ) * RMSe ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.9089108910891089, "obj2": 0.07316256596994966}, {"determining": "( ( PN - Min( AMS ,PN ) ) - ACS )", "choosing": "( ( MUR / CS ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - MDR ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server + ( MDR - BR ) ) )", "choosing": "( ( RRSe * Min( Min( CS ,( ( ( Max( CS,MLU ) - RCSe ) - ( ( RCSe + CS ) * ( RRSe / RRSe ) ) ) - RCSe ) ) ,RMSe ) ) + ( ( DS * CS ) - Max( CS,( MUM - Max( DS,( MUR + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - FirstVNF_RAM_Server ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( BR - ( ACS + Max( MRS,( FirstVNF_CPU + Const ) ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( Min( DS ,( RCSe / RRSe ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,FirstVNF_RAM ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( MUM / CS ) - Min( RCSe ,DS ) ) / ( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + FirstVNF_CPU ) ,( Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_Mem ) - Min( ( ( AMS + AMS ) * BR ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,Max( MUM,( ( Min( MUM ,MUC ) / MUM ) / MLU ) ) ) ) ,Min( Max( MLU,MUM ) ,( Min( ( RMSe * DS ) ,( ( MUR * RMSe ) / Max( DS,MUR ) ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / Min( Min( RRSe ,CS ) ,Max( MLU,RCSe ) ) ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) / ( ARS - ( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( ( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) ) - ( AMS + ACS ) ) ) ) )", "choosing": "( ( CS - ( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( RCSe ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) ) ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( Const - ARS ) ) / ( Max( CRS,BR ) / ( ( ( ACS * PN ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server + MDR ) ) ) ) )", "choosing": "Max( Max( ( DS - Min( ( RCSe - MUR ) ,RMSe ) ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) + Max( ( BR - ARS ),Max( AMS,BR ) ) ) ,( ( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU + BR ) ) + Max( ( AMS * RRS ),( DDR - DDR ) ) ) ) * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( Max( ( MLU * MUC ),( DS / MUM ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ACS * PN ) ) )", "choosing": "( ( RMSe * MUR ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ( Const / PN ) ) - AMS ) - ACS )", "choosing": "( MUR + ( DS - ( DS - ( ( ( Min( MUM ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * PN ) * FirstVNF_RAM ) - ( ( FirstVNF_Mem - ( FirstVNF_CPU_Server - ACS ) ) + ( CRS - RRS ) ) )", "choosing": "( ( RRSe * Min( ( RCSe - MUR ) ,( ( MUC + ( DS / RRSe ) ) - ( CS * MUR ) ) ) ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - AMS ) - ACS )", "choosing": "( MUR + Max( ( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU * Min( ( Max( DDR,RRS ) * Max( MDR,BR ) ) ,CRS ) ) ,Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( DS + RCSe ) + ( ( RCSe / MLU ) - ( ( RCSe / Max( Min( RRSe ,( CS / Min( MUR ,RRSe ) ) ),MUM ) ) * MUC ) ) )", "obj1": 0.8178217821782178, "obj2": 0.13731878677595497}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + DDR ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUM ) / ( MUM + ( RMSe + ( RCSe * ( Min( RRSe ,MUC ) + ( MUR / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( Const - MRS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( CS ,RCSe ) + MLU ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) - ( Min( Min( ( CRS * FirstVNF_Mem_Server ) ,AMS ) ,Min( Const ,ARS ) ) * RRS ) )", "choosing": "Max( Min( RMSe ,MUC ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,PN ) * BR ) / ( CRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ACS * Max( ( BR - AMS ),AMS ) ) )", "choosing": "Min( Max( ( MUR + MUM ),( RMSe * ( Max( ( RMSe * ( ( RCSe - RMSe ) / ( DS - CS ) ) ),RMSe ) / MLU ) ) ) ,( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "Min( ( Max( MUR,( RCSe / DS ) ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( Max( DDR,ARS ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( MUM - MUR ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,ACS ) * Max( ( ( FirstVNF_RAM_Server * Min( MDR ,BR ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) )", "choosing": "( Min( RMSe ,RCSe ) - Max( RMSe,Max( MLU,CS ) ) )", "obj1": 0.6811881188118812, "obj2": 0.2205131192610627}, {"determining": "( Max( FirstVNF_Mem,ACS ) * Max( ( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) - ( MRS - BR ) ) ) * Min( MDR ,FirstVNF_Mem ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) - Max( RMSe,Max( MLU,CS ) ) )", "obj1": 0.7544554455445545, "obj2": 0.1649333495154408}, {"determining": "Min( Min( ( ARS / MDR ) ,FirstVNF_RAM ) ,( ( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * ( ( ( ACS * PN ) * FirstVNF_RAM ) - FirstVNF_RAM ) ) ,ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RMSe ) - ( Min( ( MLU * ( CS + MUC ) ) ,( MUC - MUR ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) )", "choosing": "Max( ( RCSe + MLU ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Const ) / ( ARS * FirstVNF_Mem ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),( ( DS - Max( CS,CS ) ) - ( MUC + MUC ) ) ),Min( MUC ,DS ) )", "obj1": 0.9920792079207921, "obj2": 0.0025268667284840123}, {"determining": "( DDR - ( MDR - ( AMS * Min( ARS ,( ( ACS - FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( RCSe * MUM ),Min( DS ,RCSe ) )", "obj1": 0.7900990099009901, "obj2": 0.15269016363860063}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,MRS ) ) ,Min( MDR ,FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( MLU + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,( RCSe / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( AMS + ACS ) ) + ( ( ( DDR + RRS ) / ( ( MDR / MDR ) / Min( MRS ,FirstVNF_Mem ) ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( ( MUR - Max( ( Max( MUR,CS ) - ( CS - RCSe ) ),( RRSe * DS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( Max( Max( ( Min( CRS ,CRS ) / CRS ),MRS ),Const ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Max( MLU,RRSe ) * ( MUC - RRSe ) ) )", "obj1": 0.902970297029703, "obj2": 0.08531157172914376}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem ) ) - CRS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,CS ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Max( ( Max( CRS,Min( Const ,FirstVNF_Mem_Server ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,( ( RCSe * MUR ) - Max( RMSe,( ( MLU - MUR ) - MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) + Max( ( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) ),DDR ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) )", "choosing": "( Max( ( RMSe / MUC ),( MUM * MUR ) ) * Min( ( DS * MLU ) ,( ( RCSe - DS ) * RCSe ) ) )", "obj1": 0.7089108910891089, "obj2": 0.20368608206871483}, {"determining": "( ( ARS - MRS ) - Min( AMS ,( Min( ( Max( ( ARS - FirstVNF_CPU_Server ),FirstVNF_RAM ) * ACS ) ,FirstVNF_Mem_Server ) - ( MRS - BR ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) / ( ( Max( RMSe,( MUR - MUC ) ) / DS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( ( MUM - ( RCSe + MLU ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( Const / ARS ) ) * ( Const / FirstVNF_RAM ) )", "choosing": "( ( RCSe / RRSe ) + ( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( RCSe ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Min( ARS ,( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) ) ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( Max( MUC,MUC ) + Min( DS ,CS ) ) + Max( ( MUM * MUR ),( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ( AMS * Min( ARS ,ARS ) ) - ( ( ACS / DDR ) - BR ) ) * PN ) )", "choosing": "( ( CS * ( DS - ( DS - ( ( ( Min( MUM ,MLU ) / ( RCSe * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 0.9326732673267327, "obj2": 0.06736186717685301}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ACS / FirstVNF_Mem ) )", "choosing": "Min( ( MLU * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( RMSe - Max( ( DS - ( ( ( Min( MUM ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ),RRSe ) ) / Min( ( RMSe * DS ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ARS ) * Min( ARS ,( ( FirstVNF_CPU - MDR ) / FirstVNF_RAM ) ) ) - ( ( ACS / DDR ) - BR ) )", "choosing": "( ( Min( DS ,RCSe ) + Min( ( Min( CS ,RCSe ) + MLU ) ,CS ) ) + ( ( DS * ( MUC * DS ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( ( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( BR - ( AMS + ACS ) ) ) / ( Const / PN ) ) - AMS ) - ACS )", "choosing": "( MUR + ( ( MUC - CS ) - ( DS - ( ( ( Min( MUM ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( DDR + RRS ) ,( ACS * Const ) ) ,Max( Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_Mem ),( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MLU,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( ( RMSe * DS ) ,( ( MUR * RMSe ) / Max( DS,MUR ) ) ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 0.6396039603960396, "obj2": 0.26442788354858043}, {"determining": "( ( ( FirstVNF_Mem / CRS ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( Max( ( DS + MUC ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) + ( MUR / MUR ) ) + Max( MUR,DS ) )", "obj1": 0.9425742574257425, "obj2": 0.04447879295580189}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Const ) / ( ARS * FirstVNF_Mem ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),( ( DS - Max( CS,CS ) ) - ( MUC + MUC ) ) ),Min( MUC ,DS ) )", "obj1": 0.9920792079207921, "obj2": 0.0025268667284840123}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server / CRS ) ) / ( ( Const / FirstVNF_RAM ) * ( RRS / Max( Max( MDR,MRS ),MRS ) ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / ( Max( ( Max( ( ( Max( DS,RRSe ) / ( RRSe / MUR ) ) - RMSe ),CS ) + MLU ),Max( MLU,MLU ) ) - ( MUR - MLU ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1743161518645699}, {"determining": "Min( ( FirstVNF_CPU * Min( ( Max( DDR,RRS ) * Max( MDR,BR ) ) ,CRS ) ) ,Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( DS + RCSe ) + ( ( RCSe / MLU ) - ( ( RCSe / Max( Min( RRSe ,( CS / Min( MUR ,RRSe ) ) ),MUM ) ) * MUC ) ) )", "obj1": 0.8178217821782178, "obj2": 0.13731878677595497}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( ( ACS / FirstVNF_Mem ) - CRS ) ) )", "choosing": "( ( MUR + DS ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * BR )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - CS ) ,( Max( RMSe,( MUR - MUC ) ) / DS ) ) )", "obj1": 0.693069306930693, "obj2": 0.20255211890259325}, {"determining": "( Max( FirstVNF_Mem,ACS ) * Max( ( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) - ( MRS - BR ) ) ) * Min( MDR ,FirstVNF_Mem ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) - Max( RMSe,Max( MLU,CS ) ) )", "obj1": 0.7544554455445545, "obj2": 0.1649333495154408}, {"determining": "Min( ( MRS + FirstVNF_CPU ) ,( Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_Mem ) - ( ( Max( FirstVNF_CPU,MDR ) / ( Const - ARS ) ) / ( Max( CRS,BR ) / Max( DDR,FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( Min( ( RMSe * DS ) ,( ( MUR * RMSe ) / Max( DS,RCSe ) ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / Min( Min( RRSe ,CS ) ,Max( MLU,RCSe ) ) ) - Min( RCSe ,DS ) ) ) )", "obj1": 0.9227722772277228, "obj2": 0.056532914292605325}, {"determining": "Min( Min( ( DDR + RRS ) ,( ACS * Const ) ) ,Min( ARS ,FirstVNF_CPU ) )", "choosing": "( ( ( Max( MLU,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - ( MUR * Min( ( ( DS / MLU ) + MUM ) ,RCSe ) ) ) )", "obj1": 0.6475247524752475, "obj2": 0.2444017041555367}, {"determining": "( DDR - ( MDR - ( AMS * Min( ARS ,( ( ACS - FirstVNF_RAM_Server ) / FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( RCSe * MUM ),Min( DS ,RCSe ) )", "obj1": 0.7900990099009901, "obj2": 0.15269016363860063}, {"determining": "( ( ( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) ) * FirstVNF_Mem ) - ( Min( PN ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) ) - ( AMS + ACS ) ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( ( ( RRSe * RRSe ) - RCSe ) * MLU ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * RMSe ) ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) )", "obj1": 0.7584158415841584, "obj2": 0.15478312035592603}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( Max( ( Min( CRS ,CRS ) / CRS ),MRS ),Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - ( ARS - AMS ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( MUR + Max( ( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) ),DS ) ) )", "obj1": 0.80990099009901, "obj2": 0.14901829438072312}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "( ( FirstVNF_Mem / CRS ) / ( ( ( ( FirstVNF_RAM_Server + MDR ) / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( ( DS + MUC ),( ( ( MUR / MUR ) * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / ( ( ( RCSe + ( MUR + MUR ) ) - RRSe ) * RMSe ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.9108910891089109, "obj2": 0.06827930664214271}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) + Max( ( BR - ARS ),Max( AMS,BR ) ) ) ,( ( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU + BR ) ) + Max( ( AMS * RRS ),( DDR - DDR ) ) ) ) )", "choosing": "( ( RRSe / RMSe ) / MUC )", "obj1": 0.6831683168316832, "obj2": 0.20776088464565107}, {"determining": "( Max( FirstVNF_Mem,ACS ) * Max( ( ( FirstVNF_RAM_Server * Min( MDR ,BR ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) )", "choosing": "( Min( RMSe ,RCSe ) - Max( RMSe,Max( MLU,CS ) ) )", "obj1": 0.6811881188118812, "obj2": 0.2205131192610627}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( ( MUR * RMSe ) / Max( DS,MUR ) ) )", "obj1": 0.900990099009901, "obj2": 0.0876669535656088}, {"determining": "( ( ( Max( BR,ARS ) - AMS ) / CRS ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( ( DS + MUC ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / ( ( ( CS * ( RMSe / MLU ) ) - RRSe ) * RMSe ) ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.9089108910891089, "obj2": 0.07316256596994966}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( Max( Max( ( Min( CRS ,CRS ) / CRS ),MRS ),Const ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Max( MLU,RRSe ) * ( MUC - RRSe ) ) )", "obj1": 0.902970297029703, "obj2": 0.08531157172914376}, {"determining": "( ( ( CRS * Const ) * ( ACS * FirstVNF_Mem ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( MLU / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6673267326732674, "obj2": 0.23139207534906425}, {"determining": "( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * AMS ) ,ARS ) )", "choosing": "( ( CS + MUC ) + Min( ( RCSe - MUR ) ,( ( RRSe * RRSe ) + Max( MUR,DS ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.22716602311540599}, {"determining": "( ( MDR / MDR ) / ARS )", "choosing": "( ( CS + MUC ) + Min( ( RCSe - MUR ) ,( ( RRSe * RRSe ) + Max( Max( ( RCSe * RRSe ),( DS + MUC ) ),DS ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.22716602311540599}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - Min( MRS ,PN ) ) )", "choosing": "( ( RCSe / MLU ) - ( ( RCSe / RMSe ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( MLU * MLU ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + MDR ) / ( FirstVNF_Mem * PN ) )", "choosing": "( ( CS * ( DS - ( DS - ( ( ( Min( DS ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( ( MUM * RCSe ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - Max( Const,DDR ) )", "choosing": "( ( RMSe - MUM ) - ( ( MLU + ( RCSe - ( CS + ( MLU * RMSe ) ) ) ) - ( MUR * Min( ( ( DS / MLU ) + MUM ) ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ACS * ARS ) / ACS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - RRSe ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ACS ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( ( MUM - MUR ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( ( MUM * RCSe ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,PN ) * BR ) / ( CRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ACS * Max( ( BR - AMS ),AMS ) ) )", "choosing": "Min( Max( ( MUR + MUM ),( RMSe * ( Max( ( RMSe * ( ( RCSe - RMSe ) / ( DS - CS ) ) ),RMSe ) / MLU ) ) ) ,( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,DDR ) ) - ( RRS - Max( MRS,( ACS - AMS ) ) ) )", "choosing": "( Max( DS,MUR ) / ( MUM + ( RMSe + ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ( CRS / Const ) + Max( ARS,MDR ) ) ) )", "choosing": "( ( RMSe - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( MUM / CS ) - Min( RCSe ,DS ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - FirstVNF_RAM_Server ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * ( ( ( ACS * PN ) * FirstVNF_RAM ) - FirstVNF_RAM ) ) ,ARS ) )", "choosing": "( ( CS + MUC ) + Min( ( RCSe - MUR ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ARS,MRS ) ,MDR ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( ( CS - ( RRSe - MUM ) ) + ( DS * MUR ) ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( AMS ,PN ) ) - ACS )", "choosing": "( ( MUR / CS ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - MDR ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server + ( MDR - BR ) ) )", "choosing": "( ( RRSe * Min( Min( CS ,( ( ( Max( CS,MLU ) - RCSe ) - ( ( RCSe + CS ) * ( RRSe / RRSe ) ) ) - RCSe ) ) ,RMSe ) ) + ( ( DS * CS ) - Max( CS,( MUM - Max( DS,( MUR + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - FirstVNF_RAM_Server ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( BR - ( ACS + Max( MRS,( FirstVNF_CPU + Const ) ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( Min( DS ,( RCSe / RRSe ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,FirstVNF_RAM ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( MUM / CS ) - Min( RCSe ,DS ) ) / ( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + FirstVNF_CPU ) ,( Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_Mem ) - Min( ( ( AMS + AMS ) * BR ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,Max( MUM,( ( Min( MUM ,MUC ) / MUM ) / MLU ) ) ) ) ,Min( Max( MLU,MUM ) ,( Min( ( RMSe * DS ) ,( ( MUR * RMSe ) / Max( DS,MUR ) ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / Min( Min( RRSe ,CS ) ,Max( MLU,RCSe ) ) ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) / ( ARS - ( ( ( CRS * ACS ) * FirstVNF_Mem ) - ( ( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) ) - ( AMS + ACS ) ) ) ) )", "choosing": "( ( CS - ( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( RCSe ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) ) ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( Const - ARS ) ) / ( Max( CRS,BR ) / ( ( ( ACS * PN ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server + MDR ) ) ) ) )", "choosing": "Max( Max( ( DS - Min( ( RCSe - MUR ) ,RMSe ) ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) + Max( ( BR - ARS ),Max( AMS,BR ) ) ) ,( ( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU + BR ) ) + Max( ( AMS * RRS ),( DDR - DDR ) ) ) ) * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( Max( ( MLU * MUC ),( DS / MUM ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ACS * PN ) ) )", "choosing": "( ( RMSe * MUR ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ( Const / PN ) ) - AMS ) - ACS )", "choosing": "( MUR + ( DS - ( DS - ( ( ( Min( MUM ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * PN ) * FirstVNF_RAM ) - ( ( FirstVNF_Mem - ( FirstVNF_CPU_Server - ACS ) ) + ( CRS - RRS ) ) )", "choosing": "( ( RRSe * Min( ( RCSe - MUR ) ,( ( MUC + ( DS / RRSe ) ) - ( CS * MUR ) ) ) ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - AMS ) - ACS )", "choosing": "( MUR + Max( ( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + DDR ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUM ) / ( MUM + ( RMSe + ( RCSe * ( Min( RRSe ,MUC ) + ( MUR / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( Const - MRS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( CS ,RCSe ) + MLU ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) - ( Min( Min( ( CRS * FirstVNF_Mem_Server ) ,AMS ) ,Min( Const ,ARS ) ) * RRS ) )", "choosing": "Max( Min( RMSe ,MUC ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,PN ) * BR ) / ( CRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ) - ( ACS * Max( ( BR - AMS ),AMS ) ) )", "choosing": "Min( Max( ( MUR + MUM ),( RMSe * ( Max( ( RMSe * ( ( RCSe - RMSe ) / ( DS - CS ) ) ),RMSe ) / MLU ) ) ) ,( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "Min( ( Max( MUR,( RCSe / DS ) ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( Max( DDR,ARS ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( MUM - MUR ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS / MDR ) ,FirstVNF_RAM ) ,( ( ( MDR / MDR ) / Min( ( FirstVNF_Mem_Server * ( ( ( ACS * PN ) * FirstVNF_RAM ) - FirstVNF_RAM ) ) ,ARS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RMSe ) - ( Min( ( MLU * ( CS + MUC ) ) ,( MUC - MUR ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) )", "choosing": "Max( ( RCSe + MLU ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,MRS ) ) ,Min( MDR ,FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( MLU + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,( RCSe / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( AMS + ACS ) ) + ( ( ( DDR + RRS ) / ( ( MDR / MDR ) / Min( MRS ,FirstVNF_Mem ) ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( ( MUR - Max( ( Max( MUR,CS ) - ( CS - RCSe ) ),( RRSe * DS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem ) ) - CRS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,CS ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Max( ( Max( CRS,Min( Const ,FirstVNF_Mem_Server ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,( ( RCSe * MUR ) - Max( RMSe,( ( MLU - MUR ) - MUC ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Min( AMS ,( Min( ( Max( ( ARS - FirstVNF_CPU_Server ),FirstVNF_RAM ) * ACS ) ,FirstVNF_Mem_Server ) - ( MRS - BR ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) / ( ( Max( RMSe,( MUR - MUC ) ) / DS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ACS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( ( MUM - ( RCSe + MLU ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( Const / ARS ) ) * ( Const / FirstVNF_RAM ) )", "choosing": "( ( RCSe / RRSe ) + ( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( RCSe ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Min( ARS ,( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) ) ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( Max( MUC,MUC ) + Min( DS ,CS ) ) + Max( ( MUM * MUR ),( RCSe / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ACS / FirstVNF_Mem ) )", "choosing": "Min( ( MLU * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( RMSe - Max( ( DS - ( ( ( Min( MUM ,MLU ) / ( MUR * RRSe ) ) * RCSe ) * ( ( RCSe - DS ) * RRSe ) ) ),RRSe ) ) / Min( ( RMSe * DS ) ,( RMSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,ARS ) * Min( ARS ,( ( FirstVNF_CPU - MDR ) / FirstVNF_RAM ) ) ) - ( ( ACS / DDR ) - BR ) )", "choosing": "( ( Min( DS ,RCSe ) + Min( ( Min( CS ,RCSe ) + MLU ) ,CS ) ) + ( ( DS * ( MUC * DS ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) ,( ACS - FirstVNF_Mem ) ) ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( DS,MUR ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( BR - ( ACS + Max( MRS,( FirstVNF_CPU + Const ) ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( Min( DS ,( Max( ( MUM * MUR ),( RCSe / MLU ) ) / RRSe ) ) - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( ( ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem ) ) - CRS ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * Max( MLU,( ( RCSe * MUR ) - Max( RMSe,Max( MLU,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * AMS ) / ( ARS - ( Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) - ( ( ( Min( MRS ,FirstVNF_RAM ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) ) - ( AMS + ACS ) ) ) ) )", "choosing": "( ( CS - ( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / ( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,MUC ) ) - MUR ) ) ) ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) )", "choosing": "Max( ( RCSe + ( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) ) ),RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "( CS / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( ( Max( ( ARS - FirstVNF_RAM_Server ),FirstVNF_Mem ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ),Max( ( BR * DDR ),DDR ) ) ) ,FirstVNF_Mem ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( Max( MUM,RCSe ) ,RRSe ) * ( MUM * ( Min( ( RMSe * DS ) ,( ( MUR * RMSe ) / Max( DS,MUR ) ) ) + MUC ) ) ) / MUR ) + ( MUM - Min( ( MUR + MUM ) ,( RRSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,MRS ) ) ,Min( MDR ,( ACS - FirstVNF_RAM_Server ) ) ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( MLU + ( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( Const - MRS ) ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( CS ,RCSe ) + MLU ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( Const / ARS ) ) * ( FirstVNF_RAM - ( PN - Const ) ) )", "choosing": "( ( RCSe / RRSe ) + ( Min( MUM ,CS ) / Min( DS ,( RMSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( Max( DDR,ARS ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( MUM - MUR ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) - Max( CRS,FirstVNF_RAM_Server ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( ( MUM / CS ) - Min( RCSe ,DS ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( RMSe * Min( RCSe ,MLU ) ),MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,( ( RCSe * MUR ) - Max( RMSe,Max( MLU,CS ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( Max( ( MDR / FirstVNF_CPU ),( Const / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * BR ) ) ) ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) + Max( ( BR - ARS ),Max( AMS,BR ) ) ) ,( ( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU + BR ) ) + Max( ( AMS * RRS ),( DDR - DDR ) ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * MUM ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,( ( RCSe * MUR ) - Max( RMSe,Max( MLU,CS ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM_Server + Max( ( ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem ) ) - CRS ),( ( FirstVNF_RAM_Server * ACS ) + ( PN - ACS ) ) ) ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + MUM ) / Max( MLU,Max( MLU,( ( RCSe * MUR ) - Max( RMSe,Max( MLU,CS ) ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( Const,( ( FirstVNF_RAM_Server + ARS ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( ( RMSe + Max( Min( RCSe ,( RCSe * MUC ) ),( ( MUR - MLU ) / Max( MUC,MLU ) ) ) ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * PN ) * BR ) - Min( FirstVNF_Mem ,DDR ) )", "choosing": "( ( RRSe * Min( ( RCSe - MUR ) ,Max( ( RMSe / MUC ),( MUM * MUR ) ) ) ) + ( ( DS + RCSe ) + ( ( RCSe / MLU ) - ( ( RCSe / RMSe ) * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}