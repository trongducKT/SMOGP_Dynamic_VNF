{"1": [{"determining": "( ( Const * FirstVNF_RAM ) / Min( RRS ,RRS ) )", "choosing": "( Min( RRSe ,CS ) / ( CS * ( RCSe + ( MUR * ( ( MUC * ( MLU - ( RRSe - MUM ) ) ) + MUR ) ) ) ) )", "obj1": 0.7386138613861386, "obj2": 0.18221576851365628}, {"determining": "( ( FirstVNF_RAM_Server * MDR ) + ( Const * Const ) )", "choosing": "Min( ( MUR + MLU ) ,( MUM - RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.2345743375147011}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MUR + CS ) + ( ( ( ( Max( Max( MUR,MUC ),MLU ) + ( MUM - RMSe ) ) / RCSe ) - ( ( MUM / ( MUR + DS ) ) / RMSe ) ) * MUM ) )", "obj1": 0.6811881188118812, "obj2": 0.2464220802874649}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Max( Min( RRSe ,DS ),Max( CS,MLU ) )", "obj1": 0.7069306930693069, "obj2": 0.20979772762713333}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ACS ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUR,MUC ),( CS * RRSe ) ) / ( ( RRSe * MUR ) + ( RCSe / CS ) ) )", "obj1": 0.8950495049504951, "obj2": 0.10076777008113041}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( ( CRS * Max( ( ( AMS + ACS ) * ( BR * Max( RRS,FirstVNF_Mem_Server ) ) ),AMS ) ) + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,MRS ) ,Max( Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ),( MRS - ARS ) ) )", "choosing": "( ( Max( MUC,( RRSe - ( ( MUR + ( RCSe + Max( MLU,RMSe ) ) ) * MLU ) ) ) / ( MUR - CS ) ) + ( Min( CS ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 0.7504950495049505, "obj2": 0.16951038159958245}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( ( CRS - FirstVNF_RAM_Server ) / ARS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( Max( Min( ( CS + RMSe ) ,Max( RCSe,( Max( MUM,MUC ) + MLU ) ) ),MLU ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * ( ACS + ( FirstVNF_Mem - Min( Max( Const,ARS ) ,Max( RRS,MRS ) ) ) ) ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Min( ( CS + RMSe ) ,DS ) * Max( ( MUC - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( MDR * BR ) * ( ( Const / ARS ) - Max( ( ARS / ( CRS / Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) * ( Min( RCSe ,DS ) * CS ) ) * Max( Max( MUM,RCSe ),( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Const - ACS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUR,MUC ),( CS * RRSe ) ) / Min( RCSe ,MLU ) )", "obj1": 0.8950495049504951, "obj2": 0.09091126703989952}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( ( MDR + FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RCSe / Min( RRSe ,MLU ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 0.9683168316831683, "obj2": 0.014667583811517807}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( ( CRS - FirstVNF_RAM_Server ) / ARS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( Max( Min( ( CS + RMSe ) ,Max( RCSe,( Max( MUM,MUC ) + MLU ) ) ),MLU ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + DS ),Max( CS,MLU ) )", "obj1": 0.7346534653465346, "obj2": 0.1783458019032065}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7148514851485148, "obj2": 0.18237889176705807}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Max( Min( RRSe ,DS ),Max( CS,MLU ) )", "obj1": 0.7069306930693069, "obj2": 0.20979772762713333}, {"determining": "Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / MRS ) ),( CRS / Const ) )", "choosing": "Max( Max( RRSe,RMSe ),( ( RRSe / MUR ) / Max( RCSe,RRSe ) ) )", "obj1": 0.6594059405940594, "obj2": 0.25136696238806894}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - Max( Max( RCSe,RCSe ),( CS * RRSe ) ) ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0015214461771362836}, {"determining": "( Max( DDR,FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,MLU ) ,( RMSe * MUR ) )", "obj1": 0.6653465346534654, "obj2": 0.23411457167840788}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) - ( ARS + DDR ) )", "choosing": "Max( ( CS - RRSe ),( RCSe / Min( RRSe ,( Min( RCSe ,( MUM - RMSe ) ) - ( ( ( Min( MUM ,MUM ) * ( RRSe * RRSe ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.699009900990099, "obj2": 0.21499107949169607}, {"determining": "( ( Min( ( CRS - DDR ) ,( FirstVNF_CPU_Server * RRS ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( RRS - MDR ) ) * ( Max( DDR,FirstVNF_CPU ) * ( DDR - DDR ) ) ) )", "choosing": "Max( RMSe,Min( Min( ( RMSe / RRSe ) ,Max( RCSe,MLU ) ) ,Max( ( CS + DS ),( CS / MLU ) ) ) )", "obj1": 0.6752475247524753, "obj2": 0.23038367730404566}, {"determining": "Max( ( Min( RRS ,Const ) / MDR ),( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( ( ( ( DS * RCSe ) * Max( MUM,MUR ) ) - ( ( RCSe + RCSe ) / ( MUR - CS ) ) ) * Max( ( Min( RMSe ,RRSe ) + ( RMSe + RMSe ) ),Min( ( MUR - MUC ) ,Min( RCSe ,RMSe ) ) ) ),Min( RCSe ,Max( CS,MLU ) ) )", "obj1": 0.689108910891089, "obj2": 0.22936140137865565}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MUR + CS ) + ( ( ( ( Max( Max( MUR,MUC ),MLU ) + ( MUM - RMSe ) ) / RCSe ) - ( ( MUM / ( MUR + DS ) ) / RMSe ) ) * MUM ) )", "obj1": 0.691089108910891, "obj2": 0.22755116195036906}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MUR + CS ) + ( ( ( ( Max( Max( MUR,MUC ),MLU ) + ( MUM - RMSe ) ) / RCSe ) - ( ( MUM / ( MUR + DS ) ) / RMSe ) ) * MUM ) )", "obj1": 0.691089108910891, "obj2": 0.22755116195036906}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( ( CRS * Max( ( ( AMS + ACS ) * ( BR * Max( RRS,FirstVNF_Mem_Server ) ) ),AMS ) ) + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,MRS ) ,Max( Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ),( MRS - ARS ) ) )", "choosing": "( ( Max( MUC,( RRSe - ( ( MUR + ( RCSe + Max( MLU,RMSe ) ) ) * MLU ) ) ) / ( MUR - CS ) ) + ( Min( CS ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * ( ACS + ( FirstVNF_Mem - Min( Max( Const,ARS ) ,Max( RRS,MRS ) ) ) ) ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Min( ( CS + RMSe ) ,DS ) * Max( ( MUC - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( FirstVNF_Mem_Server * ACS ) ,FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Min( Min( ( ( Max( DS,MUM ) * CS ) / RRSe ) ,Max( DS,MLU ) ) ,MUC ) + ( MLU * CS ) ) * Max( Min( ( ( DS + CS ) / CS ) ,Min( DS ,( RMSe + RCSe ) ) ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) * FirstVNF_Mem ) - Max( ACS,AMS ) )", "choosing": "( Max( MUC,RMSe ) - Min( ( ( MUM / ( ( MUR - MUC ) * ( MUC - ( CS * MLU ) ) ) ) - Max( MUM,RMSe ) ) ,( MUM / ( DS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * MDR ) - ( MRS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Min( ( RMSe * ( ( ( CS - RCSe ) + RMSe ) / RCSe ) ) ,( ( ( MUC * MUC ) * DS ) - Max( RRSe,Max( ( MLU - DS ),MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( MUR,MUC ) * ( MUM * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * Max( MRS,ACS ) ) - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN - ( AMS - FirstVNF_RAM_Server ) ) ) * ( ( Const * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( PN * ACS ) ) )", "choosing": "( ( Min( MUC ,DS ) + ( MLU * CS ) ) * ( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * ( ( MUM / Min( ( MUC - MUC ) ,MUC ) ) * CS ) ) * Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * ( ( MUM / Min( ( MUC - MUC ) ,MUC ) ) * CS ) ) * Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ) * ( ( CRS - FirstVNF_Mem ) * ( AMS + ACS ) ) ),( ( ( FirstVNF_CPU - MRS ) + Min( DDR ,FirstVNF_CPU_Server ) ) / ( Max( DDR,RRS ) - ACS ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - Min( MRS ,CRS ) )", "choosing": "( ( Max( CS,RCSe ) / ( RRSe + Max( MUM,DS ) ) ) + ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / CRS ) + ( AMS / FirstVNF_CPU ) ) + MDR ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RMSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) * RCSe ) ) ) ) / ( CS + Min( Max( RMSe,MLU ) ,Max( RRSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) * ( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) / AMS ) )", "choosing": "Min( ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) / ( MUR / ( RMSe - ( ( ( Min( RMSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) * RCSe ) ) ) ) ,( Max( Min( MUM ,RRSe ),Max( RCSe,DS ) ) + ( ( CS * RMSe ) - Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) / Min( Max( RMSe,MLU ) ,Max( RRSe,DS ) ) ) ,( Max( Min( MUM ,RRSe ),Max( RCSe,DS ) ) + ( ( CS * RMSe ) - Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "Min( ( CS / ( MUR + CS ) ) ,Min( DS ,( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) / Max( AMS,ARS ) ) * ( ( Const - FirstVNF_Mem ) + ( FirstVNF_RAM_Server * CRS ) ) )", "choosing": "( ( MUR + CS ) + ( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( DS * MUC ) + Max( RMSe,CS ) ) - ( ( MUC + MLU ) - ( RRSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( Max( ( ( ( Min( MLU ,RMSe ) + RRSe ) / DS ) - Min( MUC ,RCSe ) ),( Min( RCSe ,CS ) * ( MUM * MUC ) ) ) ,( Max( Max( RCSe,RCSe ),( CS * RRSe ) ) / ( ( DS / CS ) * ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( ( AMS + ( CRS + PN ) ) * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - Max( ( MUM - MUM ),MLU ) ) ) ) / ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ( PN + CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) * ( ( Const / ARS ) - Max( ( ARS / ( CRS / Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) * ( Min( RCSe ,DS ) * CS ) ) * Max( Max( MUM,RCSe ),( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ACS ) ) ) )", "choosing": "Min( ( ( RCSe * Min( RRSe ,MLU ) ) * Max( ( MUC - ( RMSe - MUC ) ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 0.9683168316831683, "obj2": 0.014662586129000845}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( ( CRS - FirstVNF_RAM_Server ) / ARS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( Max( Min( ( CS + RMSe ) ,Max( RCSe,( Max( MUM,MUC ) + MLU ) ) ),MLU ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * PN ) ) )", "choosing": "Max( ( CS - RRSe ),( RCSe / Min( RRSe ,Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) ) ) )", "obj1": 0.9168316831683169, "obj2": 0.06768432574606821}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + DS ),Max( CS,MLU ) )", "obj1": 0.7346534653465346, "obj2": 0.1783458019032065}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( CRS - FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( Const - ACS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( MUR,MUC ),( CS * RRSe ) ) / Min( RCSe ,MLU ) )", "obj1": 0.8950495049504951, "obj2": 0.09091126703989952}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7148514851485148, "obj2": 0.18237889176705807}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Max( Min( RRSe ,DS ),Max( CS,MLU ) )", "obj1": 0.7069306930693069, "obj2": 0.20979772762713333}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + DS ),Max( CS,MLU ) )", "obj1": 0.8653465346534653, "obj2": 0.10711731116483447}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( CS - RRSe ),( Max( ( RMSe + DS ),Max( CS,MLU ) ) / Min( RRSe ,MLU ) ) )", "obj1": 0.9148514851485149, "obj2": 0.06910382334088734}, {"determining": "Max( ( Min( RRS ,Const ) / MDR ),( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( ( ( ( DS * RCSe ) * Max( MUM,MUR ) ) - ( ( RCSe + RCSe ) / ( MUR - CS ) ) ) * Max( ( Min( RMSe ,RRSe ) + ( RMSe + RMSe ) ),Min( ( MUR - MUC ) ,Min( RCSe ,RMSe ) ) ) ),Min( RCSe ,Max( CS,MLU ) ) )", "obj1": 0.6594059405940594, "obj2": 0.23956038102297716}, {"determining": "( ( Min( PN ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( Max( MUM,( MUR / ( ( MUR - Min( ( CS / MLU ) ,RRSe ) ) - ( ( DS - RRSe ) - RCSe ) ) ) ) / ( ( MUR * MUM ) + ( MUC + RMSe ) ) )", "obj1": 0.8712871287128713, "obj2": 0.09494962495966083}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( FirstVNF_RAM + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( Max( ( ( ( Min( MLU ,( RMSe - RCSe ) ) + RRSe ) / DS ) - Min( MUC ,RCSe ) ),( Min( RCSe ,CS ) * ( MUM * MUC ) ) ) ,( Max( Max( RCSe,RCSe ),( CS * RRSe ) ) / ( ( DS / CS ) * ( RCSe / MUC ) ) ) )", "obj1": 0.9821782178217822, "obj2": 0.013233566376884663}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) - ( ARS + DDR ) )", "choosing": "Max( ( CS - RRSe ),( RCSe / Min( RRSe ,( Min( RCSe ,( MUM - RMSe ) ) - ( ( ( Min( MUM ,MUM ) * ( RRSe * RRSe ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.699009900990099, "obj2": 0.21499107949169607}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * Max( MUR,RRSe ) ) ) )", "obj1": 0.996039603960396, "obj2": 0.002644106163354053}, {"determining": "( ( Min( ( CRS - DDR ) ,( FirstVNF_CPU_Server * RRS ) ) - ( ( FirstVNF_RAM / FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( RRS - MDR ) ) * ( Max( DDR,FirstVNF_CPU ) * ( DDR - DDR ) ) ) )", "choosing": "Max( RMSe,Min( Min( ( RMSe / RRSe ) ,Max( RCSe,MLU ) ) ,Max( ( CS + DS ),( CS / MLU ) ) ) )", "obj1": 0.6752475247524753, "obj2": 0.23038367730404566}, {"determining": "( Max( DDR,FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,MLU ) ,( RMSe * MUR ) )", "obj1": 0.6653465346534654, "obj2": 0.23411457167840788}, {"determining": "Max( ( Min( RRS ,Const ) / MDR ),( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( ( ( ( DS * RCSe ) * Max( MUM,MUR ) ) - ( ( RCSe + RCSe ) / ( MUR - CS ) ) ) * Max( ( Min( RMSe ,RRSe ) + ( RMSe + RMSe ) ),Min( ( MUR - MUC ) ,Min( RCSe ,RMSe ) ) ) ),Min( RCSe ,Max( CS,MLU ) ) )", "obj1": 0.689108910891089, "obj2": 0.22936140137865565}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MUR + CS ) + ( ( ( ( Max( Max( MUR,MUC ),MLU ) + ( MUM - RMSe ) ) / RCSe ) - ( ( MUM / ( MUR + DS ) ) / RMSe ) ) * MUM ) )", "obj1": 0.691089108910891, "obj2": 0.22755116195036906}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Max( MDR,FirstVNF_CPU ) )", "choosing": "( ( MUR + CS ) + ( ( ( ( Max( Max( MUR,MUC ),MLU ) + ( MUM - RMSe ) ) / RCSe ) - ( ( MUM / ( MUR + DS ) ) / RMSe ) ) * MUM ) )", "obj1": 0.691089108910891, "obj2": 0.22755116195036906}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - Max( Max( RCSe,RCSe ),( CS * RRSe ) ) ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0015214461771362836}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( ( CRS * Max( ( ( AMS + ACS ) * ( BR * Max( RRS,FirstVNF_Mem_Server ) ) ),AMS ) ) + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,MRS ) ,Max( Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ),( MRS - ARS ) ) )", "choosing": "( ( Max( MUC,( RRSe - ( ( MUR + ( RCSe + Max( MLU,RMSe ) ) ) * MLU ) ) ) / ( MUR - CS ) ) + ( Min( CS ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * ( ACS + ( FirstVNF_Mem - Min( Max( Const,ARS ) ,Max( RRS,MRS ) ) ) ) ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Min( ( CS + RMSe ) ,DS ) * Max( ( MUC - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( FirstVNF_Mem_Server * ACS ) ,FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Min( Min( ( ( Max( DS,MUM ) * CS ) / RRSe ) ,Max( DS,MLU ) ) ,MUC ) + ( MLU * CS ) ) * Max( Min( ( ( DS + CS ) / CS ) ,Min( DS ,( RMSe + RCSe ) ) ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) * FirstVNF_Mem ) - Max( ACS,AMS ) )", "choosing": "( Max( MUC,RMSe ) - Min( ( ( MUM / ( ( MUR - MUC ) * ( MUC - ( CS * MLU ) ) ) ) - Max( MUM,RMSe ) ) ,( MUM / ( DS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * MDR ) - ( MRS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Min( ( RMSe * ( ( ( CS - RCSe ) + RMSe ) / RCSe ) ) ,( ( ( MUC * MUC ) * DS ) - Max( RRSe,Max( ( MLU - DS ),MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( MUR,MUC ) * ( MUM * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * Max( MRS,ACS ) ) - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN - ( AMS - FirstVNF_RAM_Server ) ) ) * ( ( Const * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( PN * ACS ) ) )", "choosing": "( ( Min( MUC ,DS ) + ( MLU * CS ) ) * ( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * ( ( MUM / Min( ( MUC - MUC ) ,MUC ) ) * CS ) ) * Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * ( ( MUM / Min( ( MUC - MUC ) ,MUC ) ) * CS ) ) * Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ) * ( ( CRS - FirstVNF_Mem ) * ( AMS + ACS ) ) ),( ( ( FirstVNF_CPU - MRS ) + Min( DDR ,FirstVNF_CPU_Server ) ) / ( Max( DDR,RRS ) - ACS ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - Min( MRS ,CRS ) )", "choosing": "( ( Max( CS,RCSe ) / ( RRSe + Max( MUM,DS ) ) ) + ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / CRS ) + ( AMS / FirstVNF_CPU ) ) + MDR ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RMSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) * RCSe ) ) ) ) / ( CS + Min( Max( RMSe,MLU ) ,Max( RRSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) * ( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) / AMS ) )", "choosing": "Min( ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) / ( MUR / ( RMSe - ( ( ( Min( RMSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) * RCSe ) ) ) ) ,( Max( Min( MUM ,RRSe ),Max( RCSe,DS ) ) + ( ( CS * RMSe ) - Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM_Server / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( ( MUR + RCSe ) ,( RRSe + MUC ) ) / Min( Max( RMSe,MLU ) ,Max( RRSe,DS ) ) ) ,( Max( Min( MUM ,RRSe ),Max( RCSe,DS ) ) + ( ( CS * RMSe ) - Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( ACS ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) * ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( ( DS + ( Min( Max( Min( MUM ,DS ),( MLU / CS ) ) ,Max( Max( MLU,MUC ),Min( MUC ,RCSe ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( Min( Max( MUR,CS ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.04232567692583389}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( ( CRS - FirstVNF_RAM_Server ) / ARS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( Max( Min( ( CS + RMSe ) ,Max( RCSe,( Max( MUM,MUC ) + MLU ) ) ),MLU ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ACS ) ) ) )", "choosing": "Min( ( ( RCSe * Min( RRSe ,MLU ) ) * Max( ( MUC - ( RMSe - MUC ) ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 0.9683168316831683, "obj2": 0.014662586129000845}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_RAM_Server,CRS ) - BR ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe + Min( CS ,( ( ( CS + ( RRSe / RCSe ) ) / ( MUC * RCSe ) ) * RMSe ) ) ),Max( ( DS + ( ( CS + Max( Min( MUM ,DS ),( CS / MLU ) ) ) - DS ) ),( ( Max( RRSe,RRSe ) + Max( RCSe,( RRSe + RRSe ) ) ) - MLU ) ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.8950495049504951, "obj2": 0.08482184909372972}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7148514851485148, "obj2": 0.18237889176705807}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MUC - RMSe ) ) / ( MUC / MUC ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7366336633663366, "obj2": 0.15565438996524542}, {"determining": "( ( Min( PN ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( Max( MUM,( MUR / ( ( MUR - Min( ( CS / MLU ) ,RRSe ) ) - ( ( DS - RRSe ) - RCSe ) ) ) ) / ( ( MUR * MUM ) + ( MUC + RMSe ) ) )", "obj1": 0.8712871287128713, "obj2": 0.09494962495966083}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "Max( Min( RRSe ,DS ),Max( CS,MLU ) )", "obj1": 0.7069306930693069, "obj2": 0.20979772762713333}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RMSe + DS ),Max( CS,MLU ) )", "obj1": 0.7346534653465346, "obj2": 0.1783458019032065}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * PN ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RMSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) * RCSe ) ) ) ) / ( CS + Min( Max( RMSe,MLU ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.10247843299745345}, {"determining": "Max( ( Min( RRS ,Const ) / MDR ),( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( ( ( ( DS * RCSe ) * Max( MUM,MUR ) ) - ( ( RCSe + RCSe ) / ( MUR - CS ) ) ) * Max( ( Min( RMSe ,RRSe ) + ( RMSe + RMSe ) ),Min( ( MUR - MUC ) ,Min( RCSe ,RMSe ) ) ) ),Min( RCSe ,Max( CS,MLU ) ) )", "obj1": 0.6594059405940594, "obj2": 0.23956038102297716}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( FirstVNF_RAM + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( Max( ( ( ( Min( MLU ,( RMSe - RCSe ) ) + RRSe ) / DS ) - Min( MUC ,RCSe ) ),( Min( RCSe ,CS ) * ( MUM * MUC ) ) ) ,( Max( Max( RCSe,RCSe ),( CS * RRSe ) ) / ( ( DS / CS ) * ( RCSe / MUC ) ) ) )", "obj1": 0.9821782178217822, "obj2": 0.013233566376884663}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * Max( MUR,RRSe ) ) ) )", "obj1": 0.996039603960396, "obj2": 0.002644106163354053}, {"determining": "( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) * ( AMS / ( Max( FirstVNF_RAM,AMS ) * BR ) ) )", "choosing": "( Min( MUC ,MLU ) / ( CS + Min( MLU ,Max( RRSe,MUR ) ) ) )", "obj1": 0.6673267326732674, "obj2": 0.23399272244611938}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) - ( ARS + DDR ) )", "choosing": "Max( ( CS - RRSe ),( RCSe / Min( RRSe ,( Min( RCSe ,( MUM - RMSe ) ) - ( ( ( Min( MUM ,MUM ) * ( RRSe * RRSe ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.699009900990099, "obj2": 0.21499107949169607}, {"determining": "Max( Max( ( ( Min( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ,DDR ) + DDR ) - Min( BR ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU * FirstVNF_RAM ),( Const / RRS ) ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( RRSe / ( ( RCSe - MUM ) - DS ) )", "obj1": 0.695049504950495, "obj2": 0.21881405096747633}, {"determining": "( Max( DDR,FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,MLU ) ,( RMSe * MUR ) )", "obj1": 0.6653465346534654, "obj2": 0.23411457167840788}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Max( MDR,( ( FirstVNF_CPU - MRS ) * ( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( BR / FirstVNF_RAM ) ) ) / AMS ) ) ) )", "choosing": "( ( MUR + CS ) + ( ( ( CS * RMSe ) - ( ( MUM / ( MUR + DS ) ) / RMSe ) ) * MUM ) )", "obj1": 0.697029702970297, "obj2": 0.21572019860062958}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.998019801980198, "obj2": 0.0013983672189912938}, {"determining": "Max( Max( ( ( ( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( MRS / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( Max( MRS,MRS ),ARS ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( RRSe - ( ( MUM / RMSe ) / ( RCSe / MUC ) ) ) ) * Max( RCSe,MUR ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) - MUM ) - CS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( ( MDR * BR ) * ( ( Const / ARS ) - Max( ( ARS / ( CRS / Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) * ( Min( RCSe ,DS ) * CS ) ) * Max( Max( MUM,RCSe ),( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( ( CRS * Max( ( ( AMS + ACS ) * ( BR * Max( RRS,FirstVNF_Mem_Server ) ) ),AMS ) ) + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,MRS ) ,Max( Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ),( MRS - ARS ) ) )", "choosing": "( ( Max( MUC,( RRSe - ( ( MUR + ( RCSe + Max( MLU,RMSe ) ) ) * MLU ) ) ) / ( MUR - CS ) ) + ( Min( CS ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * ( ACS + ( FirstVNF_Mem - Min( Max( Const,ARS ) ,Max( RRS,MRS ) ) ) ) ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Min( ( CS + RMSe ) ,DS ) * Max( ( MUC - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( FirstVNF_Mem_Server * ACS ) ,FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Min( Min( ( ( Max( DS,MUM ) * CS ) / RRSe ) ,Max( DS,MLU ) ) ,MUC ) + ( MLU * CS ) ) * Max( Min( ( ( DS + CS ) / CS ) ,Min( DS ,( RMSe + RCSe ) ) ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) * FirstVNF_Mem ) - Max( ACS,AMS ) )", "choosing": "( Max( MUC,RMSe ) - Min( ( ( MUM / ( ( MUR - MUC ) * ( MUC - ( CS * MLU ) ) ) ) - Max( MUM,RMSe ) ) ,( MUM / ( DS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * MDR ) - ( MRS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Min( ( RMSe * ( ( ( CS - RCSe ) + RMSe ) / RCSe ) ) ,( ( ( MUC * MUC ) * DS ) - Max( RRSe,Max( ( MLU - DS ),MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( MUR,MUC ) * ( MUM * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * Max( MRS,ACS ) ) - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN - ( AMS - FirstVNF_RAM_Server ) ) ) * ( ( Const * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( PN * ACS ) ) )", "choosing": "( ( Min( MUC ,DS ) + ( MLU * CS ) ) * ( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * ( ( MUM / Min( ( MUC - MUC ) ,MUC ) ) * CS ) ) * Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * ( ( MUM / Min( ( MUC - MUC ) ,MUC ) ) * CS ) ) * Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ) * ( ( CRS - FirstVNF_Mem ) * ( AMS + ACS ) ) ),( ( ( FirstVNF_CPU - MRS ) + Min( DDR ,FirstVNF_CPU_Server ) ) / ( Max( DDR,RRS ) - ACS ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * AMS ) - Min( MRS ,CRS ) )", "choosing": "( ( Max( CS,RCSe ) / ( RRSe + Max( MUM,DS ) ) ) + ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( MRS + ACS ) - Min( ACS ,BR ) ) - ( Max( Max( Const,BR ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - MLU ) ) + ( Max( DS,RCSe ) - ( MLU - MUR ) ) ) ) * RRSe ) ,MLU ),Max( ( DS + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) * ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( ( DS + ( Min( Max( Min( MUM ,DS ),( MLU / CS ) ) ,Max( Max( MLU,MUC ),Min( MUC ,RCSe ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server - ACS ) ) ) )", "choosing": "Min( ( ( RCSe * Min( RRSe ,MLU ) ) * Max( ( MUC - ( RMSe - MUC ) ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 0.9683168316831683, "obj2": 0.014662586129000845}, {"determining": "( ( ( ACS - ARS ) - Max( RRS,DDR ) ) - ( PN / AMS ) )", "choosing": "( Max( ( RCSe * Max( ( DS / MUR ),CS ) ),Max( ( DS - MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7980198019801981, "obj2": 0.1125890558523816}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.902970297029703, "obj2": 0.04151190982780166}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_RAM_Server,CRS ) - BR ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe + Min( CS ,( ( ( CS + ( RRSe / RCSe ) ) / ( MUC * RCSe ) ) * RMSe ) ) ),Max( ( DS + ( ( CS + Max( Min( MUM ,DS ),( CS / MLU ) ) ) - DS ) ),( ( Max( RRSe,RRSe ) + Max( RCSe,( RRSe + RRSe ) ) ) - MLU ) ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.8950495049504951, "obj2": 0.08482184909372972}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "Max( Max( ( ( Min( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ,DDR ) + DDR ) - Min( BR ,FirstVNF_CPU ) ),Max( ( FirstVNF_CPU * FirstVNF_RAM ),( Const / RRS ) ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( RRSe / ( ( RCSe - MUM ) - DS ) )", "obj1": 0.695049504950495, "obj2": 0.21881405096747633}, {"determining": "Min( ( MRS / ( ( ACS + MRS ) - ( ( CRS - FirstVNF_RAM_Server ) / ARS ) ) ) ,Max( Max( Max( RRS,FirstVNF_RAM ),BR ),FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe * ( Max( Min( ( CS + RMSe ) ,Max( RCSe,( Max( MUM,MUC ) + MLU ) ) ),MLU ) / RCSe ) ) + Min( RRSe ,MUM ) )", "obj1": 0.8396039603960396, "obj2": 0.11233461513923604}, {"determining": "( ( ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( Min( Max( MUR,CS ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.04232567692583389}, {"determining": "( ( Min( PN ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( Max( MUM,( MUR / ( ( MUR - Min( ( CS / MLU ) ,RRSe ) ) - ( ( DS - RRSe ) - RCSe ) ) ) ) / ( ( MUR * MUM ) + ( MUC + RMSe ) ) )", "obj1": 0.8712871287128713, "obj2": 0.09494962495966083}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * PN ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RMSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) * RCSe ) ) ) ) / ( CS + Min( Max( RMSe,MLU ) ,Max( RRSe,DS ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.10247843299745345}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MUC - RMSe ) ) / ( MUC / MUC ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7366336633663366, "obj2": 0.15565438996524542}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ),FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,( RRSe + MUM ) ) ,( RMSe * MUR ) )", "obj1": 0.6435643564356436, "obj2": 0.2414056466827348}, {"determining": "( ( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( FirstVNF_RAM + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( Max( ( ( ( Min( MLU ,( MUC - DS ) ) + RRSe ) / DS ) - Min( MUC ,RCSe ) ),( Min( RCSe ,CS ) * ( MUM * MUC ) ) ) ,( Max( Max( RCSe,RCSe ),( CS * RRSe ) ) / ( ( DS / CS ) * ( RCSe / MUC ) ) ) )", "obj1": 0.9861386138613861, "obj2": 0.012417157537350591}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( MUM * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.16061808108034775}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / MRS ) + ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),Max( RCSe,MLU ) )", "obj1": 0.6574257425742575, "obj2": 0.23400655195343686}, {"determining": "( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) * ( AMS / ( Max( FirstVNF_RAM,AMS ) * BR ) ) )", "choosing": "( Min( MUC ,MLU ) / ( CS + Min( MLU ,Max( RRSe,MUR ) ) ) )", "obj1": 0.6673267326732674, "obj2": 0.23399272244611938}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_Mem / Max( AMS,DDR ) ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * Max( ( Max( Max( RCSe,RCSe ),( CS * RRSe ) ) / ( ( DS / CS ) * ( RCSe / MUC ) ) ),RRSe ) ) ) )", "obj1": 0.996039603960396, "obj2": 0.0022204290287778108}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU * CS ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9702970297029703, "obj2": 0.012990516944214636}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "Max( Max( ( ( ( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( MRS / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( Max( MRS,MRS ),ARS ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( RRSe - ( ( MUM / RMSe ) / ( RCSe / MUC ) ) ) ) * Max( RCSe,MUR ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) - MUM ) - CS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( Max( ( ( Const / ( ( ARS / ( ( AMS / CRS ) + FirstVNF_CPU ) ) * DDR ) ) / ARS ),PN ) - ( Const + DDR ) )", "choosing": "Max( RRSe,( ( ( RRSe * ( RRSe * Min( MUM ,Max( ( MUC - MUM ),RMSe ) ) ) ) + RCSe ) / Min( RRSe ,( Min( RCSe ,( MUM - RCSe ) ) - ( ( ( ( RRSe * DS ) * Min( MUM ,MUM ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ( PN + CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) * ( ( Const / ARS ) - Max( ( ARS / ( CRS / Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) * ( Min( RCSe ,DS ) * CS ) ) * Max( Max( MUM,RCSe ),( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( ( CRS * Max( ( ( AMS + ACS ) * ( BR * Max( RRS,FirstVNF_Mem_Server ) ) ),AMS ) ) + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,MRS ) ,Max( Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ),( MRS - ARS ) ) )", "choosing": "( ( Max( MUC,( RRSe - ( ( MUR + ( RCSe + Max( MLU,RMSe ) ) ) * MLU ) ) ) / ( MUR - CS ) ) + ( Min( CS ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * ( ACS + ( FirstVNF_Mem - Min( Max( Const,ARS ) ,Max( RRS,MRS ) ) ) ) ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Min( ( CS + RMSe ) ,DS ) * Max( ( MUC - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( FirstVNF_Mem_Server * ACS ) ,FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Min( Min( ( ( Max( DS,MUM ) * CS ) / RRSe ) ,Max( DS,MLU ) ) ,MUC ) + ( MLU * CS ) ) * Max( Min( ( ( DS + CS ) / CS ) ,Min( DS ,( RMSe + RCSe ) ) ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) * FirstVNF_Mem ) - Max( ACS,AMS ) )", "choosing": "( Max( MUC,RMSe ) - Min( ( ( MUM / ( ( MUR - MUC ) * ( MUC - ( CS * MLU ) ) ) ) - Max( MUM,RMSe ) ) ,( MUM / ( DS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * MDR ) - ( MRS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Min( ( RMSe * ( ( ( CS - RCSe ) + RMSe ) / RCSe ) ) ,( ( ( MUC * MUC ) * DS ) - Max( RRSe,Max( ( MLU - DS ),MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( MUR,MUC ) * ( MUM * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * Max( MRS,ACS ) ) - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN - ( AMS - FirstVNF_RAM_Server ) ) ) * ( ( Const * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) / ( PN * ACS ) ) )", "choosing": "( ( Min( MUC ,DS ) + ( MLU * CS ) ) * ( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ACS ) * ( PN + ACS ) ) * ( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) * ( ( MUM / Min( ( MUC - MUC ) ,MUC ) ) * CS ) ) * Max( ( MUC * RRSe ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( ( RCSe * Min( RRSe ,MLU ) ) * Max( ( MUC - ( Min( MLU ,Max( RRSe,MUR ) ) - MUC ) ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + ACS ) - Min( ACS ,BR ) ) - ( Max( Max( Const,BR ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - MLU ) ) + ( Max( DS,RCSe ) - ( MLU - MUR ) ) ) ) * RRSe ) ,MLU ),Max( ( DS + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( Min( PN ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( Max( MUM,( MUR / ( ( MUR - Min( ( CS / MLU ) ,RRSe ) ) - ( ( DS - RRSe ) - RCSe ) ) ) ) / ( ( MUR * MUM ) + ( MUC + RMSe ) ) )", "obj1": 0.8712871287128713, "obj2": 0.09494962495966083}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_RAM_Server,CRS ) - BR ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe + Min( CS ,( ( ( CS + ( RRSe / RCSe ) ) / ( MUC * RCSe ) ) * RMSe ) ) ),Max( ( DS + ( ( CS + Max( Min( MUM ,DS ),( CS / MLU ) ) ) - DS ) ),( ( Max( RRSe,RRSe ) + Max( RCSe,( RRSe + RRSe ) ) ) - MLU ) ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.8950495049504951, "obj2": 0.08482184909372972}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.80990099009901, "obj2": 0.10189474383237965}, {"determining": "( ( Max( ( ( Min( MRS ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9346534653465347, "obj2": 0.02731394138621564}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.693069306930693, "obj2": 0.2171224350641429}, {"determining": "( ( ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( Min( Max( MUR,CS ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.04232567692583389}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - DDR ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( Min( MLU ,Max( RRSe,DS ) ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.11468418209483154}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.902970297029703, "obj2": 0.04151190982780166}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MUC - RMSe ) ) / ( MUC / MUC ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7366336633663366, "obj2": 0.15565438996524542}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22900700294573714}, {"determining": "( ( Min( Const ,Max( PN,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - BR ) / Min( PN ,MDR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( RRS / Max( AMS,DDR ) ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * ( ( Max( Max( RCSe,RCSe ),( CS * MUC ) ) / ( Max( RMSe,( MUC - RCSe ) ) * ( DS / CS ) ) ) * RRSe ) ) ) )", "obj1": 0.9663366336633663, "obj2": 0.021121359353199472}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ),FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,( RRSe + MUM ) ) ,( RMSe * MUR ) )", "obj1": 0.6435643564356436, "obj2": 0.2414056466827348}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( ( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + ( BR - ( ( ACS - FirstVNF_CPU ) * FirstVNF_Mem ) ) ) ) - ( Min( PN ,MDR ) / Max( FirstVNF_RAM_Server,BR ) ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( FirstVNF_RAM + Max( ( ( ACS * Min( BR ,RRS ) ) / RRS ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( Max( ( ( Min( CS ,Max( MLU,RMSe ) ) / DS ) - Min( MUC ,RCSe ) ),( Min( RCSe ,CS ) * ( MUM * MUC ) ) ) ,( Max( ( RMSe / MUC ),( CS * RRSe ) ) / ( ( DS / CS ) * ( RCSe / MUC ) ) ) )", "obj1": 0.9881188118811881, "obj2": 0.010003894799028565}, {"determining": "( ( ( ACS - ARS ) - Max( RRS,DDR ) ) - ( PN / AMS ) )", "choosing": "( Max( ( RCSe * Max( ( DS / MUR ),CS ) ),Max( ( DS - MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7980198019801981, "obj2": 0.1125890558523816}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( MUM * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.16061808108034775}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ARS ) ) )", "choosing": "( ( ( MUC - MUR ) / ( MUR - CS ) ) + ( Min( RCSe ,CS ) - ( CS + RRSe ) ) )", "obj1": 0.994059405940594, "obj2": 0.0018428231304282298}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.9702970297029703, "obj2": 0.012112325925210244}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - RCSe ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ),Max( ( DS + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.7227722772277227, "obj2": 0.16780664720893193}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( Min( Min( ( RCSe * CS ) ,RRSe ) ,( RMSe + RCSe ) ) ,Max( ( MUC * DS ),( Max( MUM,CS ) - ( ( CS + DS ) - RMSe ) ) ) )", "obj1": 0.9683168316831683, "obj2": 0.013990845595971609}, {"determining": "( Max( ( ( Const / ( ( ARS / ( ( AMS / CRS ) + FirstVNF_CPU ) ) * DDR ) ) / ARS ),PN ) - ( Const + DDR ) )", "choosing": "Max( RRSe,( ( ( RRSe * ( RRSe * Min( MUM ,Max( ( MUC - MUM ),RMSe ) ) ) ) + RCSe ) / Min( RRSe ,( Min( RCSe ,( MUM - RCSe ) ) - ( ( ( ( RRSe * DS ) * Min( MUM ,MUM ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "Max( Max( ( ( BR * FirstVNF_CPU ) - ( Min( Max( FirstVNF_Mem_Server,MRS ) ,FirstVNF_RAM_Server ) + DDR ) ),Max( ARS,FirstVNF_RAM_Server ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( Min( ( ( MLU / RRSe ) - Min( CS ,RMSe ) ) ,RMSe ) / MUC ) ) * Max( RCSe,MUR ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - RMSe ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.9702970297029703, "obj2": 0.012112325925210244}, {"determining": "( ( Min( ACS ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) * ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( ( DS + ( Min( Max( Min( MUM ,DS ),( MLU / CS ) ) ,Max( Max( MLU,MUC ),Min( MUC ,RCSe ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) * ( ( Const / ARS ) - Max( ( ARS / ( CRS / Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) * ( Min( RCSe ,DS ) * CS ) ) * Max( Max( MUM,RCSe ),( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( ( CRS * Max( ( ( AMS + ACS ) * ( BR * Max( RRS,FirstVNF_Mem_Server ) ) ),AMS ) ) + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,MRS ) ,Max( Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ),( MRS - ARS ) ) )", "choosing": "( ( Max( MUC,( RRSe - ( ( MUR + ( RCSe + Max( MLU,RMSe ) ) ) * MLU ) ) ) / ( MUR - CS ) ) + ( Min( CS ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * ( ACS + ( FirstVNF_Mem - Min( Max( Const,ARS ) ,Max( RRS,MRS ) ) ) ) ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Min( ( CS + RMSe ) ,DS ) * Max( ( MUC - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( FirstVNF_Mem_Server * ACS ) ,FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Min( Min( ( ( Max( DS,MUM ) * CS ) / RRSe ) ,Max( DS,MLU ) ) ,MUC ) + ( MLU * CS ) ) * Max( Min( ( ( DS + CS ) / CS ) ,Min( DS ,( RMSe + RCSe ) ) ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) * FirstVNF_Mem ) - Max( ACS,AMS ) )", "choosing": "( Max( MUC,RMSe ) - Min( ( ( MUM / ( ( MUR - MUC ) * ( MUC - ( CS * MLU ) ) ) ) - Max( MUM,RMSe ) ) ,( MUM / ( DS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * MDR ) - ( MRS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Min( ( RMSe * ( ( ( CS - RCSe ) + RMSe ) / RCSe ) ) ,( ( ( MUC * MUC ) * DS ) - Max( RRSe,Max( ( MLU - DS ),MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( CRS + FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( Min( MUR ,RRSe ),Min( RCSe ,RRSe ) ) * Max( ( MUC - DS ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( MUR,MUC ) * ( MUM * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * Max( MRS,ACS ) ) - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Min( Const ,Max( PN,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - BR ) / Min( PN ,MDR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( RRS / Max( AMS,DDR ) ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( Max( ( RCSe * Max( ( DS / MUR ),CS ) ),Max( ( DS - MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( ( RCSe * Min( RRSe ,MLU ) ) * Max( ( MUC - ( Min( MLU ,Max( RRSe,MUR ) ) - MUC ) ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( ( Max( FirstVNF_RAM_Server,CRS ) - BR ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RCSe + Min( CS ,( ( ( CS + ( RRSe / RCSe ) ) / ( MUC * RCSe ) ) * RMSe ) ) ),Max( ( DS + ( ( CS + Max( Min( MUM ,DS ),( CS / MLU ) ) ) - DS ) ),( ( Max( RRSe,RRSe ) + Max( RCSe,( RRSe + RRSe ) ) ) - MLU ) ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.8950495049504951, "obj2": 0.08482184909372972}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ARS - RRS ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * ( CS + RRSe ) ) ) )", "obj1": 0.8217821782178217, "obj2": 0.087541130434158}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.10638013877373731}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.693069306930693, "obj2": 0.2171224350641429}, {"determining": "( ( ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( Min( Max( MUR,CS ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.04232567692583389}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.80990099009901, "obj2": 0.10189474383237965}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MUC - RMSe ) ) / ( MUC / MUC ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7366336633663366, "obj2": 0.15565438996524542}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22900700294573714}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ),FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,( RRSe + MUM ) ) ,( RMSe * MUR ) )", "obj1": 0.6435643564356436, "obj2": 0.2414056466827348}, {"determining": "( ( ( Max( Max( ( ( Min( RRS ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( FirstVNF_Mem / Max( AMS,DDR ) ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( MUM * ( ( ( CS + ( MUC - DS ) ) / ( MUC / RCSe ) ) * RMSe ) ) / ( MLU + ( CS * Max( ( Max( Max( RCSe,RCSe ),( CS * MUC ) ) / ( ( DS / CS ) * ( RCSe / MUC ) ) ),( ( Max( MUC,( RRSe - MUM ) ) / ( MUR - CS ) ) + ( Min( RCSe ,CS ) - Min( RMSe ,RCSe ) ) ) ) ) ) )", "obj1": 0.9584158415841584, "obj2": 0.026818903593852243}, {"determining": "( ( Max( ( ( Min( MRS ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9346534653465347, "obj2": 0.02731394138621564}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.6415841584158416, "obj2": 0.25507531768080494}, {"determining": "( ( ( ( ( Const - FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( RCSe - MUR ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ),Max( ( RMSe + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.9267326732673268, "obj2": 0.03388935689646191}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9108910891089109, "obj2": 0.03785615238790841}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ACS ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( Max( MUR,MUC ) * ( MUM * RRSe ) ) ,Max( ( MUC * DS ),( Max( MUM,CS ) - ( ( CS + DS ) - RMSe ) ) ) )", "obj1": 0.9762376237623762, "obj2": 0.008959297447494859}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( MUR - CS ) ,CS ) ) )", "obj1": 0.9623762376237623, "obj2": 0.016097645851656763}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ARS ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9881188118811881, "obj2": 0.0034447080077710983}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( MUM * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.16061808108034775}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7227722772277227, "obj2": 0.1641134930175972}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.902970297029703, "obj2": 0.04151190982780166}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR + ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9702970297029703, "obj2": 0.01206176040801466}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( Const * RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUC,MUR ) * ( Min( RCSe ,MUR ) * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9683168316831683, "obj2": 0.013319636402403304}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) ) ) ) )", "choosing": "( ( ( MUC - MUR ) / Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - RCSe ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ) ) + ( Min( RCSe ,CS ) - ( CS + RRSe ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0018031280754940088}, {"determining": "( Max( ( ( Const / ( ( ARS / ( ( AMS / CRS ) + FirstVNF_CPU ) ) * DDR ) ) / ARS ),PN ) - ( Const + DDR ) )", "choosing": "Max( RRSe,( ( ( RRSe * ( RRSe * Min( MUM ,Max( ( MUC - MUM ),RMSe ) ) ) ) + RCSe ) / Min( RRSe ,( Min( RCSe ,( MUM - RCSe ) ) - ( ( ( ( RRSe * DS ) * Min( MUM ,MUM ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( Min( Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ARS ) ) ) ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.994059405940594, "obj2": 0.0014223698173989748}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "Max( Max( ( ( BR * FirstVNF_CPU ) - ( Min( Max( FirstVNF_Mem_Server,MRS ) ,FirstVNF_RAM_Server ) + DDR ) ),Max( ARS,FirstVNF_RAM_Server ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( Min( ( ( MLU / RRSe ) - Min( CS ,RMSe ) ) ,RMSe ) / MUC ) ) * Max( RCSe,MUR ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - RMSe ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( ( ( MRS + ACS ) - Min( ACS ,BR ) ) - ( Max( Max( Const,BR ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - MLU ) ) + ( Max( DS,RCSe ) - ( MLU - MUR ) ) ) ) * RRSe ) ,MLU ),Max( ( DS + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) * ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( ( DS + ( Min( Max( Min( MUM ,DS ),( MLU / CS ) ) ,Max( Max( MLU,MUC ),Min( MUC ,RCSe ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) * ( ( Const / ARS ) - Max( ( ARS / ( CRS / Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) * ( Min( RCSe ,DS ) * CS ) ) * Max( Max( MUM,RCSe ),( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) - ( AMS + ( ( CRS * Max( ( ( AMS + ACS ) * ( BR * Max( RRS,FirstVNF_Mem_Server ) ) ),AMS ) ) + PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,MRS ) ,Max( Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ),( MRS - ARS ) ) )", "choosing": "( ( Max( MUC,( RRSe - ( ( MUR + ( RCSe + Max( MLU,RMSe ) ) ) * MLU ) ) ) / ( MUR - CS ) ) + ( Min( CS ,RCSe ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + DDR ) / ( FirstVNF_RAM + BR ) ) - ( Min( PN ,MDR ) / ( FirstVNF_RAM_Server - BR ) ) ) - ( Max( ( Const * ( ACS + ( FirstVNF_Mem - Min( Max( Const,ARS ) ,Max( RRS,MRS ) ) ) ) ),( DDR + MRS ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( ( Min( ( CS + RMSe ) ,DS ) * Max( ( MUC - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + Min( ( FirstVNF_Mem_Server * ACS ) ,FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Min( Min( ( ( Max( DS,MUM ) * CS ) / RRSe ) ,Max( DS,MLU ) ) ,MUC ) + ( MLU * CS ) ) * Max( Min( ( ( DS + CS ) / CS ) ,Min( DS ,( RMSe + RCSe ) ) ),Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) * FirstVNF_Mem ) - Max( ACS,AMS ) )", "choosing": "( Max( MUC,RMSe ) - Min( ( ( MUM / ( ( MUR - MUC ) * ( MUC - ( CS * MLU ) ) ) ) - Max( MUM,RMSe ) ) ,( MUM / ( DS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * MDR ) - ( MRS + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Min( ( RMSe * ( ( ( CS - RCSe ) + RMSe ) / RCSe ) ) ,( ( ( MUC * MUC ) * DS ) - Max( RRSe,Max( ( MLU - DS ),MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) * Min( CRS ,Const ) )", "choosing": "( ( RMSe + ( MUR + RRSe ) ) / ( ( ( ( ( MUM * RCSe ) / ( ( DS * MUC ) - Max( CS,( MUC * DS ) ) ) ) / ( ( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) - Max( RCSe,RMSe ) ) ) * MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( FirstVNF_RAM * CRS ) - Min( MDR ,FirstVNF_CPU ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,MRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - RCSe ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ),Max( ( DS + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - MUC ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,Max( PN,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_RAM_Server - BR ) / Min( PN ,MDR ) ) ) - ( Max( ( Const * CRS ),Max( Min( MRS ,FirstVNF_CPU ),( RRS / Max( AMS,DDR ) ) ) ) + Max( Max( AMS,DDR ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "( Max( ( RCSe * Max( ( DS / MUR ),CS ) ),Max( ( DS - MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ARS - RRS ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * ( CS + RRSe ) ) ) )", "obj1": 0.8217821782178217, "obj2": 0.087541130434158}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ),FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.691089108910891, "obj2": 0.2139390857510719}, {"determining": "( ( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( FirstVNF_Mem - PN ) ) ) / Max( ( ( Min( MRS ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) ) + ( ( ( ( DDR + AMS ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * ( ( ( ( RMSe - MUC ) * MUM ) - Max( RCSe,MUC ) ) * RCSe ) ),MUC ) * Min( ( MUR / RCSe ) ,DS ) ) )", "obj1": 0.8871287128712871, "obj2": 0.05076247600168131}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( Const * RRS ) ) + ( Min( ( ARS - RRS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Max( Min( ( Min( CS ,( MUM * MLU ) ) - RMSe ) ,CS ),RRSe ) ) ) )", "obj1": 0.8475247524752475, "obj2": 0.06983716955850487}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7881188118811882, "obj2": 0.11773899350636066}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 0.8514851485148515, "obj2": 0.05884150771707277}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( AMS - ARS ) * Max( ( ( AMS - FirstVNF_Mem ) + ( ( Const + Max( ( FirstVNF_Mem_Server / DDR ),DDR ) ) - ( FirstVNF_RAM_Server + BR ) ) ),PN ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MLU * Min( DS ,RMSe ) ) ,( RMSe - CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.15059600048421318}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.80990099009901, "obj2": 0.10189474383237965}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22900700294573714}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Max( ( ( DDR * MRS ) * FirstVNF_Mem ),( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,( ( MUM + MUC ) * Min( ( MUM + MUC ) ,CS ) ) ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.10638013877373731}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2425128418954791}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9108910891089109, "obj2": 0.03785615238790841}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7227722772277227, "obj2": 0.1641134930175972}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ),FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,( RRSe + MUM ) ) ,( RMSe * MUR ) )", "obj1": 0.6435643564356436, "obj2": 0.2414056466827348}, {"determining": "( ( ( ( ( Const - FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( RCSe - MUR ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ),Max( ( RMSe + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.9267326732673268, "obj2": 0.03388935689646191}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9524752475247524, "obj2": 0.02435318785737995}, {"determining": "( ( ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( Min( Max( MUR,CS ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.04232567692583389}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Min( Min( ( BR * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,FirstVNF_CPU ) ,BR ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * AMS ) ) ,( ( BR / AMS ) / ( BR - BR ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( MUC / ( ( ( MLU * CS ) + CS ) * Min( ( MUM / MLU ) ,RRSe ) ) ) ) * Max( RCSe,( RMSe / Max( DS,RRSe ) ) ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,Min( MUM ,CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - MUM ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9326732673267327, "obj2": 0.027190447089853458}, {"determining": "( ( Min( ARS ,ACS ) - Max( RRS,( MDR / ( AMS * ( ( FirstVNF_RAM + AMS ) / ACS ) ) ) ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_CPU_Server ) - Max( ( FirstVNF_Mem * CRS ),FirstVNF_Mem ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( ( DS * MUM ) - MUC ),MUR ) * RRSe ) * ( RRSe + Min( ( MUR + CS ) ,CS ) ) )", "obj1": 0.9623762376237623, "obj2": 0.015337386247876667}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 0.9762376237623762, "obj2": 0.00864903676452617}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.902970297029703, "obj2": 0.04151190982780166}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9306930693069307, "obj2": 0.028586726001781977}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ARS ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9881188118811881, "obj2": 0.0034447080077710983}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9524752475247524, "obj2": 0.02435318785737995}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ARS ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9881188118811881, "obj2": 0.0034447080077710983}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9722772277227723, "obj2": 0.011202352813436598}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) ) ) ) )", "choosing": "( ( ( MUC - MUR ) / Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - RCSe ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ) ) + ( Min( RCSe ,CS ) - ( CS + RRSe ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0018031280754940088}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * ( ( ( ARS * ( DDR + ( CRS / ACS ) ) ) - PN ) + ( MDR - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) + Min( ( DS + RRSe ) ,( ( ( DS - Max( CS,RRSe ) ) * MUR ) + MLU ) ) ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 0.9663366336633663, "obj2": 0.015018372431558206}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( Const * RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUC,MUR ) * ( Min( RCSe ,MUR ) * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9683168316831683, "obj2": 0.013319636402403304}, {"determining": "( Max( ( ( Const / ( ( ARS / ( ( AMS / CRS ) + FirstVNF_CPU ) ) * DDR ) ) / ARS ),PN ) - ( Const + DDR ) )", "choosing": "Max( RRSe,( ( ( RRSe * ( RRSe * Min( MUM ,Max( ( MUC - MUM ),RMSe ) ) ) ) + RCSe ) / Min( RRSe ,( Min( RCSe ,( MUM - RCSe ) ) - ( ( ( ( RRSe * DS ) * Min( MUM ,MUM ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( Min( Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ARS ) ) ) ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.994059405940594, "obj2": 0.0014223698173989748}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR + ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9702970297029703, "obj2": 0.01206176040801466}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "Max( Max( ( ( BR * FirstVNF_CPU ) - ( Min( Max( FirstVNF_Mem_Server,MRS ) ,FirstVNF_RAM_Server ) + DDR ) ),Max( ARS,FirstVNF_RAM_Server ) ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * AMS ) ) ,( ( BR - BR ) / ( BR / AMS ) ) ) )", "choosing": "( ( MLU / ( Min( RRSe ,( Min( ( ( MLU / RRSe ) - Min( CS ,RMSe ) ) ,RMSe ) / MUC ) ) * Max( RCSe,MUR ) ) ) / ( ( ( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,RCSe ) ) ) - RMSe ) - DS ) )", "obj1": 0.689108910891089, "obj2": 0.22158364250583676}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) )", "choosing": "Min( ( ( RCSe * Min( RRSe ,MLU ) ) * Max( ( MUC - ( Min( MLU ,Max( RRSe,MUR ) ) - MUC ) ),Max( DS,CS ) ) ) ,( Min( Min( RMSe ,MUM ) ,( RRSe * MUM ) ) / ( ( DS * MUM ) / ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + ACS ) - Min( ACS ,BR ) ) - ( Max( Max( Const,BR ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - MLU ) ) + ( Max( DS,RCSe ) - ( MLU - MUR ) ) ) ) * RRSe ) ,MLU ),Max( ( DS + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) * ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( ( DS + ( Min( Max( Min( MUM ,DS ),( MLU / CS ) ) ,Max( Max( MLU,MUC ),Min( MUC ,RCSe ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + CRS ) + ( AMS / FirstVNF_CPU ) ) + Min( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) ,( PN + CRS ) ) ) * Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * ( ( RRS * DDR ) + FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * BR ) * ( ( Const / ARS ) - Max( ( ARS / ( CRS / Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),AMS ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) * ( Min( RCSe ,DS ) * CS ) ) * Max( Max( MUM,RCSe ),( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * Min( ( Min( Min( FirstVNF_RAM_Server ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Max( MRS,ARS ) ) * CRS ) ,( ARS - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ) + MUC ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Min( ACS ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) * ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( ( DS + ( Min( Max( Min( MUM ,DS ),( MLU / CS ) ) ,Max( Max( MLU,MUC ),Min( MUC ,RCSe ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * CRS ) - Min( MDR ,FirstVNF_CPU ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,MRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - RCSe ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ),Max( ( DS + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - MUC ) * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ARS - RRS ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * ( CS + RRSe ) ) ) )", "obj1": 0.8217821782178217, "obj2": 0.087541130434158}, {"determining": "( ( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( FirstVNF_Mem - PN ) ) ) / Max( ( ( Min( MRS ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) ) + ( ( ( ( DDR + AMS ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * ( ( ( ( RMSe - MUC ) * MUM ) - Max( RCSe,MUC ) ) * RCSe ) ),MUC ) * Min( ( MUR / RCSe ) ,DS ) ) )", "obj1": 0.8871287128712871, "obj2": 0.05076247600168131}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,( ( ( RRS * BR ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.689108910891089, "obj2": 0.20856890814346682}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 0.8514851485148515, "obj2": 0.05884150771707277}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ARS,( Min( FirstVNF_Mem_Server ,ACS ) * FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Const ,FirstVNF_Mem ) ) - ( Min( ACS ,( MDR * FirstVNF_Mem_Server ) ) - ( RRS / DDR ) ) )", "choosing": "( Max( ( RCSe * ( RRSe * ( MUM + ( ( CS - DS ) / ( ( MUM * DS ) - ( MLU + MLU ) ) ) ) ) ),MUM ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7742574257425743, "obj2": 0.11811797361070492}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( AMS - ARS ) * Max( ( ( AMS - FirstVNF_Mem ) + ( ( Const + Max( ( FirstVNF_Mem_Server / DDR ),DDR ) ) - ( FirstVNF_RAM_Server + BR ) ) ),PN ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MLU * Min( DS ,RMSe ) ) ,( RMSe - CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.15059600048421318}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.09396127748166781}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.1872062781921261}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22900700294573714}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Min( ( ( DDR * MRS ) * FirstVNF_Mem ) ,( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Max( ( PN * ACS ),BR ) ,( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + DS ),MUM ) ) * ( ( Min( ( RCSe - RCSe ) ,( Max( DS,( MUM * RMSe ) ) - ( RCSe + RCSe ) ) ) * Max( ( ( ( RMSe * Min( MLU ,DS ) ) * RRSe ) - MLU ),RRSe ) ) * RRSe ) )", "obj1": 0.7801980198019802, "obj2": 0.10163990449563969}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ARS - RRS ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * ( CS + RRSe ) ) ) )", "obj1": 0.8435643564356435, "obj2": 0.07315571075591272}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2425128418954791}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( ( Max( ( DS + MLU ),Min( RMSe ,MUR ) ) * Max( ( RMSe - RCSe ),( MUM * MUR ) ) ) - Min( ( Min( DS ,RMSe ) / ( DS / MLU ) ) ,( ( MUM / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7227722772277227, "obj2": 0.1641134930175972}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ),FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,( RRSe + MUM ) ) ,( RMSe * MUR ) )", "obj1": 0.6435643564356436, "obj2": 0.2414056466827348}, {"determining": "( ( ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( Min( Max( MUR,CS ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.04232567692583389}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( Const * RRS ) ) + ( Min( ( ARS - RRS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Max( Min( ( Min( CS ,( MUM * MLU ) ) - RMSe ) ,CS ),RRSe ) ) ) )", "obj1": 0.8475247524752475, "obj2": 0.06983716955850487}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9326732673267327, "obj2": 0.027190447089853458}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9524752475247524, "obj2": 0.02435318785737995}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 0.9762376237623762, "obj2": 0.00864903676452617}, {"determining": "( ( ( ( ( Const - FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( RCSe - MUR ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ),Max( ( RMSe + ( Min( CS ,Max( Min( MUM ,MUR ),( MLU / CS ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 0.9267326732673268, "obj2": 0.03388935689646191}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9148514851485149, "obj2": 0.03399040447840676}, {"determining": "( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - RMSe ) ) * ( ( Min( Min( ( MUM / Max( DS,CS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9861386138613861, "obj2": 0.0040936773731020904}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9108910891089109, "obj2": 0.03785615238790841}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9306930693069307, "obj2": 0.028586726001781977}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( MUR - CS ) ,CS ) ) )", "obj1": 0.9564356435643564, "obj2": 0.018221575629104873}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( FirstVNF_Mem_Server + MRS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( FirstVNF_Mem ,RRS ) ) ) ) )", "choosing": "Min( ( CS + MLU ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( MUC * MUC ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.904950495049505, "obj2": 0.039799631402567405}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( FirstVNF_CPU_Server - Min( ( FirstVNF_Mem_Server - RRS ) ,( ( FirstVNF_Mem_Server * BR ) - MDR ) ) ) )", "choosing": "( RCSe + ( Min( RCSe ,( RCSe / ( RMSe / MUC ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.9544554455445544, "obj2": 0.02128063992310886}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9722772277227723, "obj2": 0.011198159026397467}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,CS ) ) )", "obj1": 0.9603960396039604, "obj2": 0.01534365726135448}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MDR ) - ARS ) * ( ( ( ARS * ( DDR + ( CRS / ACS ) ) ) - PN ) + ( MDR - FirstVNF_Mem ) ) )", "choosing": "Min( ( CS / ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) + Min( ( DS + RRSe ) ,( ( ( DS - Max( CS,RRSe ) ) * MUR ) + MLU ) ) ) ) ,Min( DS ,( CS + RCSe ) ) )", "obj1": 0.9663366336633663, "obj2": 0.015018372431558206}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( Const * RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUC,MUR ) * ( Min( RCSe ,MUR ) * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9683168316831683, "obj2": 0.013319636402403304}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.902970297029703, "obj2": 0.04151190982780166}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR + ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9702970297029703, "obj2": 0.01206176040801466}, {"determining": "Max( ( AMS + FirstVNF_RAM ),( ARS * ( ( PN - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( DS * MUC ),( Max( MUM,MLU ) - ( ( CS + MUC ) - ( MUC - ( Max( Min( RMSe ,MUC ),RMSe ) * MUC ) ) ) ) ) ,( RMSe + MLU ) )", "obj1": 0.7207920792079208, "obj2": 0.17172486397430373}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ACS + Min( ( BR - ( RRS / FirstVNF_CPU_Server ) ) ,BR ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( RMSe / MUM ) )", "obj1": 0.9623762376237623, "obj2": 0.015035698922688747}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9524752475247524, "obj2": 0.02435318785737995}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) ) )", "choosing": "Min( ( Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9881188118811881, "obj2": 0.0034447080077710983}, {"determining": "( Max( ( ( Const / ( ( ARS / ( ( AMS / CRS ) + FirstVNF_CPU ) ) * DDR ) ) / ARS ),PN ) - ( Const + DDR ) )", "choosing": "Max( RRSe,( ( ( RRSe * ( RRSe * Min( MUM ,Max( ( MUC - MUM ),RMSe ) ) ) ) + RCSe ) / Min( RRSe ,( Min( RCSe ,( MUM - RCSe ) ) - ( ( ( ( RRSe * DS ) * Min( MUM ,MUM ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( Min( Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,( FirstVNF_RAM / ( DDR - CRS ) ) ) ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM / RRS ) )", "choosing": "( Min( ( MUM / Max( MUM,RMSe ) ) ,CS ) * ( Min( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) ,RMSe ) + Min( CS ,DS ) ) )", "obj1": 0.994059405940594, "obj2": 0.0014223698173989748}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) ) ) ) )", "choosing": "( ( ( MUC - MUR ) / Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - RCSe ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ) ) + ( Min( RCSe ,CS ) - ( CS + RRSe ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0018031280754940088}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) ) ) ) )", "choosing": "( ( ( MUC - MUR ) / Min( ( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * ( ( CS / ( CS - RCSe ) ) + ( ( MLU - DS ) - Max( DS,RCSe ) ) ) ) * RRSe ) ,MLU ) ) + ( Min( RCSe ,CS ) - ( CS + RRSe ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0018031280754940088}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ARS ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9881188118811881, "obj2": 0.0034447080077710983}], "10": [{"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),( ( Min( BR ,RRS ) * ACS ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( Max( MDR,Min( FirstVNF_Mem ,CRS ) ) ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,Max( Min( FirstVNF_RAM_Server ,PN ),AMS ) ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) + ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) )", "choosing": "Max( ( Max( RMSe,Min( DS ,MUC ) ) / Min( ( RMSe + MUM ) ,( ( Min( DS ,DS ) + MUR ) * CS ) ) ),( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) * ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ACS * Min( BR ,RRS ) ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) )", "choosing": "( Min( ( DS * RCSe ) ,Max( ( DS + ( Min( Max( Min( MUM ,DS ),( MLU / CS ) ) ,Max( Max( MLU,MUC ),Min( MUC ,RCSe ) ) ) - DS ) ),MUM ) ) * ( Min( CS ,Max( MLU,MUM ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 0.8514851485148515, "obj2": 0.05884150771707277}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ARS - RRS ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * ( CS + RRSe ) ) ) )", "obj1": 0.8217821782178217, "obj2": 0.087541130434158}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1558303473111843}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ARS,( Min( FirstVNF_Mem_Server ,ACS ) * FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Const ,FirstVNF_Mem ) ) - ( Min( ACS ,( MDR * FirstVNF_Mem_Server ) ) - ( RRS / DDR ) ) )", "choosing": "( Max( ( RCSe * ( RRSe * ( MUM + ( ( CS - DS ) / ( ( MUM * DS ) - ( MLU + MLU ) ) ) ) ) ),MUM ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7742574257425743, "obj2": 0.11811797361070492}, {"determining": "( ( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( FirstVNF_Mem - PN ) ) ) / Max( ( ( Min( MRS ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) ) + ( ( ( ( DDR + AMS ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * ( ( ( ( RMSe - MUC ) * MUM ) - Max( RCSe,MUC ) ) * RCSe ) ),MUC ) * Min( ( MUR / RCSe ) ,DS ) ) )", "obj1": 0.8871287128712871, "obj2": 0.05076247600168131}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.1872062781921261}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22900700294573714}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( AMS - ARS ) * Max( ( ( AMS - FirstVNF_Mem ) + ( ( Const + Max( ( FirstVNF_Mem_Server / DDR ),DDR ) ) - ( FirstVNF_RAM_Server + BR ) ) ),PN ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MLU * Min( DS ,RMSe ) ) ,( RMSe - CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.15059600048421318}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Min( ( ( DDR * MRS ) * FirstVNF_Mem ) ,( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Max( ( PN * ACS ),BR ) ,( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + DS ),MUM ) ) * ( ( Min( ( RCSe - RCSe ) ,( Max( DS,( MUM * RMSe ) ) - ( RCSe + RCSe ) ) ) * Max( ( ( ( RMSe * Min( MLU ,DS ) ) * RRSe ) - MLU ),RRSe ) ) * RRSe ) )", "obj1": 0.7801980198019802, "obj2": 0.10163990449563969}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ARS - RRS ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * ( CS + RRSe ) ) ) )", "obj1": 0.8435643564356435, "obj2": 0.07315571075591272}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,( ( ( RRS * BR ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.689108910891089, "obj2": 0.20856890814346682}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2425128418954791}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.09396127748166781}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.803960396039604, "obj2": 0.09043256825551894}, {"determining": "( ( ( Max( MDR,MRS ) / ( CRS + FirstVNF_Mem ) ) + ( Min( PN ,( ( Const / ARS ) - ( ( ( ACS * PN ) / PN ) + FirstVNF_RAM ) ) ) * Min( ( ( ( PN / CRS ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Min( ARS ,( FirstVNF_RAM / ( MRS * BR ) ) ) )", "choosing": "( Min( ( MUM - MLU ) ,RRSe ) + ( Min( RCSe ,( ( MUC / ( CS - Min( MLU ,MUR ) ) ) * MUM ) ) - Max( CS,MLU ) ) )", "obj1": 0.6811881188118812, "obj2": 0.21195626574770962}, {"determining": "( Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ),FirstVNF_CPU ) * ( DDR - DDR ) )", "choosing": "Min( Min( MUM ,( RRSe + MUM ) ) ,( RMSe * MUR ) )", "obj1": 0.6435643564356436, "obj2": 0.2414056466827348}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( Const * RRS ) ) + ( Min( ( ARS - RRS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( Max( Max( CS,MUR ),RMSe ) + Min( ( RRSe * MUM ) ,( MLU / Max( Min( ( Min( CS ,( MUM * MLU ) ) - RMSe ) ,CS ),RRSe ) ) ) )", "obj1": 0.8475247524752475, "obj2": 0.06983716955850487}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( Min( RCSe ,CS ) - Max( CS,RRSe ) ) )", "obj1": 0.8930693069306931, "obj2": 0.04741311297085386}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 0.9762376237623762, "obj2": 0.00864903676452617}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9326732673267327, "obj2": 0.027190447089853458}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9465346534653465, "obj2": 0.02368906408766096}, {"determining": "( ( ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( Min( Max( MUR,CS ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.900990099009901, "obj2": 0.04232567692583389}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + ( MLU - DS ) ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.018855545357524723}, {"determining": "( ( Max( ( ( Min( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.906930693069307, "obj2": 0.03744437083971351}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9306930693069307, "obj2": 0.028586726001781977}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MUM * Min( RMSe ,DS ) ) ,( RCSe + MUC ) ) )", "obj1": 0.9128712871287129, "obj2": 0.03401268144440234}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR + ( CRS / ACS ) ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( ( CS / ( CS - RCSe ) ),MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9683168316831683, "obj2": 0.013128114069320188}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUM ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( RMSe * RRSe ) ) )", "obj1": 0.9623762376237623, "obj2": 0.014921766851570886}, {"determining": "( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - RMSe ) ) * ( ( Min( Min( ( MUM / Max( DS,CS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9861386138613861, "obj2": 0.0040936773731020904}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9722772277227723, "obj2": 0.011198159026397467}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( FirstVNF_Mem_Server + MRS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( FirstVNF_Mem ,RRS ) ) ) ) )", "choosing": "Min( ( CS + MLU ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( MUC * MUC ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.904950495049505, "obj2": 0.039799631402567405}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,Min( DS ,( RRSe + RRSe ) ) ) ) )", "obj1": 0.9584158415841584, "obj2": 0.01656143438307943}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9148514851485149, "obj2": 0.03399040447840676}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9465346534653465, "obj2": 0.02368906408766096}, {"determining": "( ( ( Const / ( DDR * FirstVNF_RAM ) ) / ARS ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU - MDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) - ( ( Max( RMSe,( Max( MLU,Min( RMSe ,DS ) ) * CS ) ) / MUR ) * RRSe ) ),( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.9861386138613861, "obj2": 0.0040936773731020904}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ACS - ARS ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ARS * ( DDR - ( CRS / ACS ) ) ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS - RRSe ) ,( Max( ( Min( Min( DS ,( Max( MUC,DS ) + RRSe ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( RMSe / RCSe ) ,DS ) ) )", "obj1": 0.902970297029703, "obj2": 0.04151190982780166}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,CS ) ) )", "obj1": 0.9603960396039604, "obj2": 0.01534365726135448}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9544554455445544, "obj2": 0.0176523565159394}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( AMS,FirstVNF_Mem_Server ) * ( Max( ACS,MRS ) - ACS ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ( FirstVNF_RAM_Server + Const ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) - ( ( DS * ( Min( RRSe ,Max( MLU,CS ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( MUR + CS ) )", "obj1": 0.9544554455445544, "obj2": 0.0176523565159394}, {"determining": "( Max( ( ( Const / ( ( ARS / ( ( AMS / CRS ) + FirstVNF_CPU ) ) * DDR ) ) / ARS ),PN ) - ( Const + DDR ) )", "choosing": "Max( RRSe,( ( ( RRSe * ( RRSe * Min( MUM ,Max( ( MUC - MUM ),RMSe ) ) ) ) + RCSe ) / Min( RRSe ,( Min( RCSe ,( MUM - RCSe ) ) - ( ( ( ( RRSe * DS ) * Min( MUM ,MUM ) ) * ( RCSe + MUM ) ) / Min( RMSe ,Min( RCSe ,MUM ) ) ) ) ) ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),( MRS * ( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( FirstVNF_CPU * CRS ) + ( AMS - FirstVNF_Mem ) ),PN ) ) ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,CS ) ) )", "obj1": 0.994059405940594, "obj2": 0.001331180344228284}, {"determining": "( ( Min( Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,Max( Max( FirstVNF_Mem,BR ),Min( ACS ,ARS ) ) ) ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( ( ( RMSe + DS ) * MUM ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.996039603960396, "obj2": 0.0009786430359895468}], "11": [{"determining": "( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( ( MUM * Min( RMSe ,DS ) ) - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( Const,FirstVNF_RAM_Server ),( ( Min( BR ,RRS ) * ACS ) / RRS ) ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) - ( Min( Max( MDR,Min( FirstVNF_Mem ,CRS ) ) ,BR ) - Max( ( Min( FirstVNF_CPU_Server ,Max( Min( FirstVNF_RAM_Server ,PN ),AMS ) ) + ( ( ( DDR + ( FirstVNF_CPU * FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) + ( ( MDR + MDR ) + ( ( CRS + FirstVNF_Mem ) / Max( Const,MRS ) ) ) ) ),CRS ) ) )", "choosing": "Max( ( Max( RMSe,Min( DS ,MUC ) ) / Min( ( RMSe + MUM ) ,( ( Min( DS ,DS ) + MUR ) * CS ) ) ),( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 0.8514851485148515, "obj2": 0.05884150771707277}, {"determining": "( ( ( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ) * ( Max( ( Max( ( FirstVNF_CPU_Server - MRS ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( ( Const + FirstVNF_Mem ) - ( RRS / MDR ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Min( ( ( CS - ( RCSe - ( MUM / MUM ) ) ) / CS ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) * ( MUM * RRSe ) ) )", "obj1": 0.8871287128712871, "obj2": 0.044443562285736864}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( ARS + CRS ) * ( ( ( FirstVNF_RAM_Server * MDR ) * Min( BR ,MRS ) ) / RRS ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( Min( ( DS + RRSe ) ,( ( ( Max( ( DS + MUC ),MUR ) - Max( CS,RRSe ) ) * ( ( MUC * RCSe ) - Max( MLU,Max( RMSe,MUR ) ) ) ) + MLU ) ),Max( ( DS + DS ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.8376237623762376, "obj2": 0.0688604519622177}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1558303473111843}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ARS,( Min( FirstVNF_Mem_Server ,ACS ) * FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Const ,FirstVNF_Mem ) ) - ( Min( ACS ,( MDR * FirstVNF_Mem_Server ) ) - ( RRS / DDR ) ) )", "choosing": "( Max( ( RCSe * ( RRSe * ( MUM + ( ( CS - DS ) / ( ( MUM * DS ) - ( MLU + MLU ) ) ) ) ) ),MUM ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7742574257425743, "obj2": 0.11811797361070492}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.1872062781921261}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( AMS - ARS ) * Max( ( ( AMS - FirstVNF_Mem ) + ( ( Const + Max( ( FirstVNF_Mem_Server / DDR ),DDR ) ) - ( FirstVNF_RAM_Server + BR ) ) ),PN ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MLU * Min( DS ,RMSe ) ) ,( RMSe - CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.15059600048421318}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6495049504950495, "obj2": 0.22900700294573714}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( FirstVNF_Mem + Const ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ARS - RRS ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + Max( MUC,DS ) ) ) ,MUR ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - DS ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * ( CS + RRSe ) ) ) )", "obj1": 0.8217821782178217, "obj2": 0.087541130434158}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,( ( ( RRS * BR ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.689108910891089, "obj2": 0.20856890814346682}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2425128418954791}, {"determining": "( ( ( Max( MDR,MRS ) / ( CRS + FirstVNF_Mem ) ) + ( Min( PN ,( ( Const / ARS ) - ( ( ( ACS * PN ) / PN ) + FirstVNF_RAM ) ) ) * Min( ( ( ( PN / CRS ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Min( ARS ,( FirstVNF_RAM / ( MRS * BR ) ) ) )", "choosing": "( Min( ( MUM - MLU ) ,RRSe ) + ( Min( RCSe ,( ( MUC / ( CS - Min( MLU ,MUR ) ) ) * MUM ) ) - Max( CS,MLU ) ) )", "obj1": 0.6811881188118812, "obj2": 0.21195626574770962}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Min( ( ( DDR * MRS ) * FirstVNF_Mem ) ,( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Max( ( PN * ACS ),BR ) ,( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + DS ),MUM ) ) * ( ( Min( ( RCSe - RCSe ) ,( Max( DS,( MUM * RMSe ) ) - ( RCSe + RCSe ) ) ) * Max( ( ( ( RMSe * Min( MLU ,DS ) ) * RRSe ) - MLU ),RRSe ) ) * RRSe ) )", "obj1": 0.7801980198019802, "obj2": 0.10163990449563969}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - ( FirstVNF_RAM / ( ARS / DDR ) ) ) ) * Min( MRS ,( AMS * CRS ) ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * MUC ),( Min( ( ( ( CS / ( CS - RCSe ) ) + RMSe ) / MUC ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.23531341561563565}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9326732673267327, "obj2": 0.027190447089853458}, {"determining": "( ( ( MDR - MDR ) / ( ( ( Const + FirstVNF_Mem ) - ( AMS * ACS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( AMS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - MUM ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( ( ( MUC - MUC ) / ( RCSe * CS ) ),MUR ) ) - Max( DS,RCSe ) ) ) ) )", "obj1": 0.900990099009901, "obj2": 0.03979979598070162}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( MUM,( MUR / ( RMSe - ( ( ( Min( RRSe ,RCSe ) / ( RCSe - MUM ) ) - MUC ) - RCSe ) ) ) ) / ( CS + RRSe ) )", "obj1": 0.9762376237623762, "obj2": 0.00864903676452617}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) )", "obj1": 0.9425742574257425, "obj2": 0.023432443826980152}, {"determining": "( ( ( FirstVNF_RAM_Server * Max( AMS,MRS ) ) * FirstVNF_Mem ) - ( Const - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),( ( ( Min( DS ,( Max( CS,RMSe ) + RMSe ) ) - Max( DS,MUM ) ) / MUR ) / MUM ) ) * ( RRSe + Min( Max( Min( RMSe ,MUC ),MUM ) ,MUR ) ) )", "obj1": 0.7881188118811882, "obj2": 0.10145080397936776}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.803960396039604, "obj2": 0.09043256825551894}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * ARS ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( Min( ( DS + RRSe ) ,( ( ( Max( MLU,MUR ) - Max( CS,RRSe ) ) * ( ( MUR / RCSe ) * MLU ) ) + MLU ) ),Max( MUC,MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.8198019801980198, "obj2": 0.08997790889691906}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9227722772277228, "obj2": 0.02801885614688709}, {"determining": "( ( Max( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ARS ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( RRSe,RMSe ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + RCSe ) ) )", "obj1": 0.9108910891089109, "obj2": 0.032720145166055536}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.09396127748166781}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MUM * Min( RMSe ,DS ) ) ,( RCSe + MUC ) ) )", "obj1": 0.906930693069307, "obj2": 0.0368066014822351}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) ,Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( Min( DS ,( RRSe + RRSe ) ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUM ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( RMSe * RRSe ) ) )", "obj1": 0.9663366336633663, "obj2": 0.01250805113015193}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( ( FirstVNF_Mem - PN ) * Max( AMS,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ARS + PN ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) * ( ( DS * ( ( ( MLU * DS ) + ( RRSe / RRSe ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( RRSe - ( ( CS * RCSe ) + RMSe ) ) )", "obj1": 0.9465346534653465, "obj2": 0.020198444102045847}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.801980198019802, "obj2": 0.0931494295078135}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( Max( ( ( ( Min( Max( AMS,BR ) ,( CRS / CRS ) ) + FirstVNF_Mem ) - ( ( ACS * Min( BR ,FirstVNF_Mem_Server ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS / MUM ) * MLU ),Max( ( ( MUM / DS ) / MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7940594059405941, "obj2": 0.09358699693932594}, {"determining": "( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - RMSe ) ) * ( ( Min( Min( ( MUM / Max( DS,CS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9861386138613861, "obj2": 0.0040936773731020904}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( FirstVNF_Mem_Server + MRS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( FirstVNF_Mem ,RRS ) ) ) ) )", "choosing": "Min( ( CS + MLU ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( MUC * MUC ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.904950495049505, "obj2": 0.039799631402567405}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUM ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( RMSe * RRSe ) ) )", "obj1": 0.9623762376237623, "obj2": 0.014921766851570886}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9722772277227723, "obj2": 0.011198159026397467}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( ( RMSe + DS ) * MUM ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( ( Const / ( DDR * FirstVNF_RAM ) ) / ARS ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU - MDR ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9881188118811881, "obj2": 0.0034447080077710983}, {"determining": "( ( ( Const / ( DDR * FirstVNF_RAM ) ) / ARS ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU - MDR ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.9861386138613861, "obj2": 0.0040936773731020904}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,CS ) ) )", "obj1": 0.9603960396039604, "obj2": 0.01534365726135448}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,Min( DS ,( RRSe + RRSe ) ) ) ) )", "obj1": 0.9584158415841584, "obj2": 0.01656143438307943}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9504950495049505, "obj2": 0.018855545357524723}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + ( MLU - DS ) ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9722772277227723, "obj2": 0.011198159026397467}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + ( MLU - DS ) ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( MUM * RRSe ) ) )", "obj1": 0.9504950495049505, "obj2": 0.018855545357524723}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) - ( ( Max( RMSe,( Max( MLU,Min( RMSe ,DS ) ) * CS ) ) / MUR ) * RRSe ) ),( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.9564356435643564, "obj2": 0.016710252317169265}], "12": [{"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,( Const / ( DDR * FirstVNF_RAM ) ) ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( ( MUM * CS ) + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( ( MUM * Min( RMSe ,DS ) ) - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,( Min( ACS ,ARS ) - Max( RRS,RRS ) ) ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6079207920792079, "obj2": 0.28785179148899664}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 0.8514851485148515, "obj2": 0.05884150771707277}, {"determining": "( ( ( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ) * ( Max( ( Max( ( FirstVNF_CPU_Server - MRS ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( ( Const + FirstVNF_Mem ) - ( RRS / MDR ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Min( ( ( CS - ( RCSe - ( MUM / MUM ) ) ) / CS ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) * ( MUM * RRSe ) ) )", "obj1": 0.8871287128712871, "obj2": 0.044443562285736864}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.803960396039604, "obj2": 0.08316542976308865}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ARS,( Min( FirstVNF_Mem_Server ,ACS ) * FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Const ,FirstVNF_Mem ) ) - ( Min( ACS ,( MDR * FirstVNF_Mem_Server ) ) - ( RRS / DDR ) ) )", "choosing": "( Max( ( RCSe * ( RRSe * ( MUM + ( ( CS - DS ) / ( ( MUM * DS ) - ( MLU + MLU ) ) ) ) ) ),MUM ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7742574257425743, "obj2": 0.11811797361070492}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1558303473111843}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( ARS + CRS ) * ( ( ( FirstVNF_RAM_Server * MDR ) * Min( BR ,MRS ) ) / RRS ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( Min( ( DS + RRSe ) ,( ( ( Max( ( DS + MUC ),MUR ) - Max( CS,RRSe ) ) * ( ( MUC * RCSe ) - Max( MLU,Max( RMSe,MUR ) ) ) ) + MLU ) ),Max( ( DS + DS ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.8376237623762376, "obj2": 0.0688604519622177}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.1872062781921261}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( AMS - ARS ) * Max( ( ( AMS - FirstVNF_Mem ) + ( ( Const + Max( ( FirstVNF_Mem_Server / DDR ),DDR ) ) - ( FirstVNF_RAM_Server + BR ) ) ),PN ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MLU * Min( DS ,RMSe ) ) ,( RMSe - CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.15059600048421318}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ( Const + FirstVNF_Mem ) / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),Min( ( MUM - MUM ) ,DS ) )", "obj1": 0.6495049504950495, "obj2": 0.22325355916292966}, {"determining": "( ( Const + FirstVNF_CPU ) - ( ( ( ( FirstVNF_CPU / ( FirstVNF_CPU + ACS ) ) + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,PN ) * Min( MRS ,Const ) ) ) )", "choosing": "Max( ( MUR - Min( ( RMSe - ( ( Max( MUR,( RMSe / MLU ) ) * Max( CS,( DS / RRSe ) ) ) / ( ( MUM + ( MUR / MUC ) ) - ( RMSe + RCSe ) ) ) ) ,MUC ) ),Max( CS,MLU ) )", "obj1": 0.6712871287128713, "obj2": 0.2227127072383473}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) - ( Min( PN ,( ( ( RRS * BR ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.689108910891089, "obj2": 0.20856890814346682}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2425128418954791}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - ( FirstVNF_RAM / ( ARS / DDR ) ) ) ) * Min( MRS ,( AMS * CRS ) ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * MUC ),( Min( ( ( ( CS / ( CS - RCSe ) ) + RMSe ) / MUC ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.23531341561563565}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( ( ( Const / ARS ) - Max( FirstVNF_CPU,Min( AMS ,FirstVNF_CPU_Server ) ) ) ,PN ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,Min( ( RRSe * Min( RCSe ,( MUR - MUR ) ) ) ,MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.20892682154589629}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Min( ( ( DDR * MRS ) * FirstVNF_Mem ) ,( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Max( ( PN * ACS ),BR ) ,( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + DS ),MUM ) ) * ( ( Min( ( RCSe - RCSe ) ,( Max( DS,( MUM * RMSe ) ) - ( RCSe + RCSe ) ) ) * Max( ( ( ( RMSe * Min( MLU ,DS ) ) * RRSe ) - MLU ),RRSe ) ) * RRSe ) )", "obj1": 0.7801980198019802, "obj2": 0.10163990449563969}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( ( PN + CRS ) * Max( ( ACS * Min( BR ,( ACS * Min( MRS ,FirstVNF_Mem_Server ) ) ) ),RRS ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,Max( PN,CRS ) ) ) )", "choosing": "( Max( Min( ( ( ( CS / ( Min( RCSe ,MLU ) + ( MUM - RCSe ) ) ) * ( ( Min( MLU ,MLU ) / RCSe ) * MLU ) ) + MLU ) ,( DS + RRSe ) ),( ( MLU - Max( RCSe,MUR ) ) - Max( DS,CS ) ) ) * ( RRSe + Min( CS ,DS ) ) )", "obj1": 0.8415841584158416, "obj2": 0.06647157869224449}, {"determining": "( ( ( MDR - MDR ) / ( ( ( Const + FirstVNF_Mem ) - ( AMS * ACS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( AMS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - MUM ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( ( ( MUC - MUC ) / ( RCSe * CS ) ),MUR ) ) - Max( DS,RCSe ) ) ) ) )", "obj1": 0.900990099009901, "obj2": 0.03979979598070162}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Min( ( ( ACS + AMS ) * ( ACS - FirstVNF_CPU ) ) ,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) - ( ( Max( RMSe,( Max( MLU,Min( CS ,DS ) ) * CS ) ) / MUR ) * RRSe ) ),( RRSe + RCSe ) )", "obj1": 0.9386138613861386, "obj2": 0.022721128773847}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.801980198019802, "obj2": 0.0931494295078135}, {"determining": "( ( ( FirstVNF_RAM_Server * Max( AMS,MRS ) ) * FirstVNF_Mem ) - ( Const - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),( ( ( Min( DS ,( Max( CS,RMSe ) + RMSe ) ) - Max( DS,MUM ) ) / MUR ) / MUM ) ) * ( RRSe + Min( Max( Min( RMSe ,MUC ),MUM ) ,MUR ) ) )", "obj1": 0.7881188118811882, "obj2": 0.10145080397936776}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( Min( Const ,( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( ( PN / Min( MDR ,FirstVNF_RAM_Server ) ) ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( ( DS + ( MUC + MUR ) ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9762376237623762, "obj2": 0.008194711084159267}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) ) ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,MUC ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9287128712871288, "obj2": 0.026246483512567975}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( ( FirstVNF_Mem - PN ) * Max( AMS,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ARS + PN ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) * ( ( DS * ( ( ( MLU * DS ) + ( RRSe / RRSe ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( RRSe - ( ( CS * RCSe ) + RMSe ) ) )", "obj1": 0.9465346534653465, "obj2": 0.020198444102045847}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.09396127748166781}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9227722772277228, "obj2": 0.02793641823928992}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_Mem_Server * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9663366336633663, "obj2": 0.01239242080164515}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Max( ( Min( Min( DS ,( RRSe + RRSe ) ) ,MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( RCSe,MUM ) ) - Max( DS,RCSe ) ) ) ),MUC ) * ( RMSe * RRSe ) ) )", "obj1": 0.904950495049505, "obj2": 0.038176455802368926}, {"determining": "( ( FirstVNF_CPU * PN ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - RMSe ) ) * ( ( Min( Min( ( MUM / Max( DS,CS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9861386138613861, "obj2": 0.0040936773731020904}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( Max( ( ( ( Min( Max( AMS,BR ) ,( CRS / CRS ) ) + FirstVNF_Mem ) - ( ( ACS * Min( BR ,FirstVNF_Mem_Server ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS / MUM ) * MLU ),Max( ( ( MUM / DS ) / MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7940594059405941, "obj2": 0.09358699693932594}, {"determining": "( ( Min( Min( ( ( ( Const / ( FirstVNF_RAM * DDR ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,ACS ) ,ARS ) - Max( ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + Min( ACS ,Max( CRS,MRS ) ) ) * Min( BR ,MRS ) ) ),RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MLU ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - MUC ) ) * ( ( Min( Min( ( Min( MUR ,( MUR / MUM ) ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9881188118811881, "obj2": 0.003280431046342401}, {"determining": "( ( Max( ( ( Min( Max( RRS,DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RMSe / CS ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + MUC ) ) )", "obj1": 0.906930693069307, "obj2": 0.03589562952475717}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9722772277227723, "obj2": 0.011198159026397467}, {"determining": "( ( ( Const / ( DDR * FirstVNF_RAM ) ) / ARS ) - Max( FirstVNF_RAM_Server,( FirstVNF_CPU - MDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) - ( ( Max( RMSe,( Max( MLU,Min( RMSe ,DS ) ) * CS ) ) / MUR ) * RRSe ) ),( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.9920792079207921, "obj2": 0.0017890176005658602}, {"determining": "( ( Max( ( ( Min( MRS ,Min( FirstVNF_Mem ,( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MUM * Min( RMSe ,DS ) ) ,( ( RCSe * MUR ) + RMSe ) ) )", "obj1": 0.9089108910891089, "obj2": 0.03471112633960621}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - MRS ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RRSe ) ,MUM ) - ( MUC / DS ) ) ,( ( RMSe + DS ) * MUM ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem_Server ) - ( ACS + AMS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / Min( MLU ,RRSe ) ) ,CS ) * ( ( ( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) + RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9267326732673268, "obj2": 0.02675027073104246}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) - ( ( Max( RMSe,( Max( MLU,Min( RMSe ,DS ) ) * CS ) ) / MUR ) * RRSe ) ),( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.9742574257425742, "obj2": 0.009210634562226368}, {"determining": "( ( Max( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ARS ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( RRSe,RMSe ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + RCSe ) ) )", "obj1": 0.9108910891089109, "obj2": 0.032720145166055536}, {"determining": "( ( ( Const / ( DDR * FirstVNF_RAM ) ) / ARS ) - ( Max( Max( Const,FirstVNF_RAM_Server ),( ( ( ACS + Min( ACS ,Max( CRS,MRS ) ) ) * Min( BR ,MRS ) ) * RRS ) ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,MLU ) ) )", "obj1": 0.9861386138613861, "obj2": 0.0040936773731020904}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( ( RMSe + DS ) * MUM ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( ( Const + FirstVNF_Mem ) * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( MUM * Min( RMSe ,DS ) ) )", "obj1": 0.9643564356435643, "obj2": 0.013844086062192994}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MUM * Min( RMSe ,DS ) ) ,( RCSe + MUC ) ) )", "obj1": 0.9603960396039604, "obj2": 0.015029033977268095}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) * ( ACS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RRSe - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,Min( DS ,( RRSe + RRSe ) ) ) ) )", "obj1": 0.9584158415841584, "obj2": 0.01656143438307943}], "13": [{"determining": "( ( Max( ( ( FirstVNF_CPU - RRS ) * ( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + CRS ) ) + Min( ACS ,Max( CRS,MRS ) ) ) * Min( BR ,MRS ) ) ),RRS ) - Min( Min( ( ( ( Const / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,ACS ) ,ARS ) ) - ( RRS * FirstVNF_RAM ) )", "choosing": "( Min( ( MUM / RCSe ) ,( ( MUR / ( MUM - RCSe ) ) - MUC ) ) * ( ( Min( Min( ( Min( MUR ,( RRSe / MUM ) ) - ( MUC / MLU ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( ( ( MUM * MUC ) * CS ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,( Const / ( DDR * FirstVNF_RAM ) ) ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( ( MUM * CS ) + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,( Min( ACS ,ARS ) - Max( RRS,RRS ) ) ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6079207920792079, "obj2": 0.28785179148899664}, {"determining": "( ( ( ( DDR / BR ) * CRS ) + Min( MDR ,FirstVNF_CPU ) ) - ( ( ( ( FirstVNF_CPU / Const ) + MDR ) * FirstVNF_Mem ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( Max( ( ( Max( CS,( RCSe - DS ) ) + ( ( DS - MLU ) - Max( DS,RCSe ) ) ) * Max( CS,( MUM * RMSe ) ) ),RRSe ) ,MLU ),Max( ( DS + ( Min( ( RCSe - CS ) ,Max( Min( MUM ,MUR ),Max( MLU,CS ) ) ) - ( ( RCSe - DS ) + RCSe ) ) ),MUM ) ) * ( ( RCSe / MUM ) - Max( MLU,( ( CS - RMSe ) * CS ) ) ) )", "obj1": 0.6316831683168317, "obj2": 0.26120720568432615}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 0.8514851485148515, "obj2": 0.05884150771707277}, {"determining": "( ( ( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ) * ( Max( ( Max( ( FirstVNF_CPU_Server - MRS ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( ( Const + FirstVNF_Mem ) - ( RRS / MDR ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Min( ( ( CS - ( RCSe - ( MUM / MUM ) ) ) / CS ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) * ( MUM * RRSe ) ) )", "obj1": 0.8871287128712871, "obj2": 0.044443562285736864}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.7188118811881188, "obj2": 0.1558303473111843}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * ( ( ACS * Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS * Min( FirstVNF_CPU ,Const ) ) ) ) / RRS ) ) + Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / Const ) / ARS ) ,Max( PN,CRS ) ) ) )", "choosing": "( Max( Min( ( ( ( RRSe / CS ) * ( ( Min( RMSe ,DS ) / RCSe ) * RCSe ) ) + MLU ) ,( DS + RRSe ) ),( ( RRSe * ( CS * MUR ) ) * Max( RRSe,DS ) ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.8336633663366336, "obj2": 0.08095335387087509}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( ( ( Const / ARS ) - Max( FirstVNF_CPU,Min( AMS ,FirstVNF_CPU_Server ) ) ) ,PN ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,Min( ( RRSe * Min( RCSe ,( MUR - MUR ) ) ) ,MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.20892682154589629}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.1872062781921261}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.803960396039604, "obj2": 0.08316542976308865}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Min( ( ( CS - ( RCSe - ( MUM / MUM ) ) ) / CS ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) * ( MUM * RRSe ) ) )", "obj1": 0.6594059405940594, "obj2": 0.22238999510393231}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.689108910891089, "obj2": 0.2066707503704129}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2425128418954791}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - ( RRS / DDR ) ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( RRSe - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7366336633663366, "obj2": 0.1480620912766999}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ARS,( Min( FirstVNF_Mem_Server ,ACS ) * FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Const ,FirstVNF_Mem ) ) - ( Min( ACS ,( MDR * FirstVNF_Mem_Server ) ) - ( RRS / DDR ) ) )", "choosing": "( Max( ( RCSe * ( RRSe * ( MUM + ( ( CS - DS ) / ( ( MUM * DS ) - ( MLU + MLU ) ) ) ) ) ),MUM ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7742574257425743, "obj2": 0.11811797361070492}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Min( ( ( DDR * MRS ) * FirstVNF_Mem ) ,( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Max( ( PN * ACS ),BR ) ,( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + DS ),MUM ) ) * ( ( Min( ( RCSe - RCSe ) ,( Max( DS,( MUM * RMSe ) ) - ( RCSe + RCSe ) ) ) * Max( ( ( ( RMSe * Min( MLU ,DS ) ) * RRSe ) - MLU ),RRSe ) ) * RRSe ) )", "obj1": 0.7801980198019802, "obj2": 0.10163990449563969}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ( Const + FirstVNF_Mem ) / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),Min( ( MUM - MUM ) ,DS ) )", "obj1": 0.6495049504950495, "obj2": 0.22325355916292966}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( AMS - ARS ) * Max( ( ( AMS - FirstVNF_Mem ) + ( ( Const + Max( ( FirstVNF_Mem_Server / DDR ),DDR ) ) - ( FirstVNF_RAM_Server + BR ) ) ),PN ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MLU * Min( DS ,RMSe ) ) ,( RMSe - CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.15059600048421318}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( FirstVNF_CPU_Server / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( ( CS / ( CS - RCSe ) ) + RMSe ) ) - CS ) ,CS ) ) )", "obj1": 0.7782178217821782, "obj2": 0.11714183313525607}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( ARS + CRS ) * ( ( ( FirstVNF_RAM_Server * MDR ) * Min( BR ,MRS ) ) / RRS ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( Min( ( DS + RRSe ) ,( ( ( Max( ( DS + MUC ),MUR ) - Max( CS,RRSe ) ) * ( ( MUC * RCSe ) - Max( MLU,Max( RMSe,MUR ) ) ) ) + MLU ) ),Max( ( DS + DS ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.8376237623762376, "obj2": 0.0688604519622177}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( ( PN + CRS ) * Max( ( ACS * Min( BR ,( ACS * Min( MRS ,FirstVNF_Mem_Server ) ) ) ),RRS ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,Max( PN,CRS ) ) ) )", "choosing": "( Max( Min( ( ( ( CS / ( Min( RCSe ,MLU ) + ( MUM - RCSe ) ) ) * ( ( Min( MLU ,MLU ) / RCSe ) * MLU ) ) + MLU ) ,( DS + RRSe ) ),( ( MLU - Max( RCSe,MUR ) ) - Max( DS,CS ) ) ) * ( RRSe + Min( CS ,DS ) ) )", "obj1": 0.8415841584158416, "obj2": 0.06647157869224449}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( MRS ,Const ) * Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( Min( FirstVNF_Mem_Server ,PN ),( ARS / DDR ) ) ) ) ) ) - Max( FirstVNF_RAM_Server,( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) ) )", "choosing": "Max( ( MUR - MUC ),( ( RMSe + RRSe ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6455445544554456, "obj2": 0.23387592105893026}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.801980198019802, "obj2": 0.0931494295078135}, {"determining": "( ( ( FirstVNF_RAM_Server * Max( AMS,MRS ) ) * FirstVNF_Mem ) - ( Const - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),( ( ( Min( DS ,( Max( CS,RMSe ) + RMSe ) ) - Max( DS,MUM ) ) / MUR ) / MUM ) ) * ( RRSe + Min( Max( Min( RMSe ,MUC ),MUM ) ,MUR ) ) )", "obj1": 0.7881188118811882, "obj2": 0.10145080397936776}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - ( FirstVNF_RAM / ( ARS / DDR ) ) ) ) * Min( MRS ,( AMS * CRS ) ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * MUC ),( Min( ( ( ( CS / ( CS - RCSe ) ) + RMSe ) / MUC ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.23531341561563565}, {"determining": "( ( Max( ( ( Min( Max( RRS,DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( Const * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RMSe / CS ) + Min( ( MUM * Min( ( MUM - MUM ) ,MUM ) ) ,( RCSe + MUC ) ) )", "obj1": 0.897029702970297, "obj2": 0.04040171471176661}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_Mem_Server * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MLU ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - MUC ) ) * ( ( Min( Min( ( Min( MUR ,( MUR / MUM ) ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9584158415841584, "obj2": 0.014785578413576944}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.09396127748166781}, {"determining": "( ( ( ( CRS + ACS ) - ( FirstVNF_RAM / RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( Max( ( MRS - FirstVNF_CPU_Server ),FirstVNF_Mem ) * ( ACS - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( ( ( Max( DS,( Max( MLU,Min( RMSe ,DS ) ) * CS ) ) / MUR ) - ( ( RCSe * RCSe ) + RMSe ) ) + ( RRSe + Min( ( MUR - CS ) ,Min( DS ,( RCSe + ( RRSe - DS ) ) ) ) ) )", "obj1": 0.9524752475247524, "obj2": 0.018478861381688406}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( ( ACS + AMS ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) - ( ( Max( RMSe,( Max( MLU,Min( CS ,DS ) ) * CS ) ) / MUR ) * RRSe ) ),( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.9366336633663367, "obj2": 0.023354939541167408}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) ) ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,MUC ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9287128712871288, "obj2": 0.026246483512567975}, {"determining": "( ( Max( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ARS ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( RRSe,RMSe ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + RCSe ) ) )", "obj1": 0.9108910891089109, "obj2": 0.032720145166055536}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ( FirstVNF_Mem * MDR ) ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( ARS - AMS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( Min( ( MLU / Min( MLU ,RRSe ) ) ,CS ) * ( ( ( ( ( ( MUC + ( RCSe / RMSe ) ) * ( Min( MUC ,RRSe ) / ( RRSe * MUC ) ) ) + MUM ) + RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006103980039337116}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Max( MUR,MUC ) * ( MUM * RRSe ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9722772277227723, "obj2": 0.011198159026397467}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( Min( Const ,( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( ( PN / Min( MDR ,FirstVNF_RAM_Server ) ) ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( ( DS + ( MUC + MUR ) ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9762376237623762, "obj2": 0.008194711084159267}, {"determining": "( ( ( MDR - MDR ) / ( ( ( Const + FirstVNF_Mem ) - ( AMS * ACS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( AMS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) + RRSe ) ,( Max( ( DS * Min( ( CS / ( CS - MUM ) ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) ),MUC ) * Min( ( CS / ( CS - RCSe ) ) ,( ( MLU - Max( ( ( MUC - MUC ) / ( RCSe * CS ) ),MUR ) ) - Max( DS,RCSe ) ) ) ) )", "obj1": 0.900990099009901, "obj2": 0.03979979598070162}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_Mem_Server * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ),( ( RRSe + MUM ) + Max( MUM,CS ) ) )", "obj1": 0.9663366336633663, "obj2": 0.01239242080164515}, {"determining": "( ( Max( ( ( Min( Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM - MDR ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( FirstVNF_Mem - RRS ) ,( AMS * MDR ) ) - ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( ( RMSe / CS ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( ( ( RCSe + ( MLU - ( RCSe - CS ) ) ) + ( Min( ( ( MUM + MLU ) * MLU ) ,RRSe ) / ( ( MUC - RMSe ) / RCSe ) ) ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + MUC ) ) ) ) )", "obj1": 0.9425742574257425, "obj2": 0.02169193142803394}, {"determining": "( ( Max( ( ( Min( Max( RRS,DDR ) ,Max( FirstVNF_CPU_Server,MDR ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM - MUM ) ,DS ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + MUC ) ) )", "obj1": 0.904950495049505, "obj2": 0.037599496039863976}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( ( Const + FirstVNF_Mem ) * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( MUM * Min( RMSe ,DS ) ) )", "obj1": 0.9643564356435643, "obj2": 0.013844086062192994}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( Max( ( ( ( Min( Max( AMS,BR ) ,( CRS / CRS ) ) + FirstVNF_Mem ) - ( ( ACS * Min( BR ,FirstVNF_Mem_Server ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS / MUM ) * MLU ),Max( ( ( MUM / DS ) / MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7940594059405941, "obj2": 0.09358699693932594}, {"determining": "( ( ( ( CRS + ACS ) - Min( RRS ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( ( FirstVNF_Mem - PN ) * Max( AMS,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ARS + PN ) )", "choosing": "( ( ( ( Max( RMSe,DS ) * RRSe ) * ( ( DS * ( ( ( MLU * DS ) + ( RRSe / RRSe ) ) - CS ) ) / RRSe ) ) - Max( CS,RRSe ) ) + ( RRSe - ( ( CS * RCSe ) + RMSe ) ) )", "obj1": 0.9465346534653465, "obj2": 0.020198444102045847}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - MRS ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RRSe ) ,MUM ) - ( MUC / DS ) ) ,( ( RMSe + DS ) * MUM ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( ( RMSe + DS ) * MUM ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,Min( ACS ,Min( Const ,BR ) ) ) ) / ( ( ( Const + FirstVNF_CPU_Server ) - ( ACS + AMS ) ) - ( Max( ( ( ACS + AMS ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( RRS ,BR ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( CS ,( MUM - MUM ) ) * ( ( Min( Min( ( Min( MUR ,MUC ) + RMSe ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9485148514851485, "obj2": 0.018730510739947213}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem_Server ) - ( ACS + AMS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / Min( MLU ,RRSe ) ) ,CS ) * ( ( ( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) + RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9267326732673268, "obj2": 0.02675027073104246}], "14": [{"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * ( Min( ACS ,ARS ) - Max( RRS,( Min( ACS ,ARS ) - Max( RRS,RRS ) ) ) ) ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( DS,Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( FirstVNF_CPU - RRS ) * ( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + CRS ) ) + Min( ACS ,Max( CRS,MRS ) ) ) * Min( BR ,MRS ) ) ),RRS ) - Min( Min( ( ( ( Const / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ARS ) - ( FirstVNF_Mem_Server + PN ) ) ,ACS ) ,ARS ) ) - ( RRS * FirstVNF_RAM ) )", "choosing": "( Min( ( MUM / RCSe ) ,( ( MUR / ( MUM - RCSe ) ) - MUC ) ) * ( ( Min( Min( ( Min( MUR ,( RRSe / MUM ) ) - ( MUC / MLU ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( ( ( MUM * MUC ) * CS ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,( Min( ACS ,ARS ) - Max( RRS,RRS ) ) ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.6079207920792079, "obj2": 0.28785179148899664}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( CS / MUM ) * MLU ),Max( ( ( MUM / DS ) / MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.6277227722772277, "obj2": 0.24593419087134769}, {"determining": "( ( Min( ( DDR - FirstVNF_Mem ) ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - Min( MRS ,FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - Max( PN,FirstVNF_Mem_Server ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * Max( MUR,MLU ) )", "obj1": 0.8514851485148515, "obj2": 0.05884150771707277}, {"determining": "( ( ( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ) * ( Max( ( Max( ( FirstVNF_CPU_Server - MRS ),FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) / ( ( ( Const + FirstVNF_Mem ) - ( RRS / MDR ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Min( ( ( CS - ( RCSe - ( MUM / MUM ) ) ) / CS ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) * ( MUM * RRSe ) ) )", "obj1": 0.8871287128712871, "obj2": 0.044443562285736864}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - ( Const * Const ) ) ),AMS ) ) )", "choosing": "( ( ( Max( ( ( CS / RRSe ) + MUC ),Max( MUM,( ( ( MUM - RRSe ) - DS ) / MUR ) ) ) - MUM ) + ( MUM / MUC ) ) + ( DS / MUC ) )", "obj1": 0.697029702970297, "obj2": 0.17509291326180765}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( Min( RRSe ,RMSe ) + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.7148514851485148, "obj2": 0.15505824143884625}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( MLU - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.12184021774367204}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * ( ( ACS * Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS * Min( FirstVNF_CPU ,Const ) ) ) ) / RRS ) ) + Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU ) / Const ) / ARS ) ,Max( PN,CRS ) ) ) )", "choosing": "( Max( Min( ( ( ( RRSe / CS ) * ( ( Min( RMSe ,DS ) / RCSe ) * RCSe ) ) + MLU ) ,( DS + RRSe ) ),( ( RRSe * ( CS * MUR ) ) * Max( RRSe,DS ) ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.8336633663366336, "obj2": 0.08095335387087509}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( MUM - MUM ),MLU ) + Min( ( ( RMSe + DS ) * MUM ) ,( RCSe + MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.1872062781921261}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.803960396039604, "obj2": 0.08316542976308865}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.7386138613861386, "obj2": 0.13159752640976632}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( ( Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( RMSe * MLU ) ,( ( RRSe * Min( RCSe ,( RMSe - MUC ) ) ) / MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6831683168316832, "obj2": 0.20346301032079145}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( PN - ( RRS / DDR ) ) * Max( ( FirstVNF_Mem_Server * ACS ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( ( ( ( CS + ( RRSe - MUC ) ) / ( MUC / RCSe ) ) * RMSe ),CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7366336633663366, "obj2": 0.1480620912766999}, {"determining": "( ( ( ( PN + CRS ) * Min( ( Max( ARS,( Min( FirstVNF_Mem_Server ,ACS ) * FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Const ,FirstVNF_Mem ) ) - ( Min( ACS ,( MDR * FirstVNF_Mem_Server ) ) - ( RRS / DDR ) ) )", "choosing": "( Max( ( RCSe * ( RRSe * ( MUM + ( ( CS - DS ) / ( ( MUM * DS ) - ( MLU + MLU ) ) ) ) ) ),MUM ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.7742574257425743, "obj2": 0.11811797361070492}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ( Const + FirstVNF_Mem ) / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),Min( ( MUM / Min( MLU ,RRSe ) ) ,CS ) )", "obj1": 0.6732673267326733, "obj2": 0.21822995538782058}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( AMS - ARS ) * Max( ( ( AMS - FirstVNF_Mem ) + ( ( Const + Max( ( FirstVNF_Mem_Server / DDR ),DDR ) ) - ( FirstVNF_RAM_Server + BR ) ) ),PN ) ) )", "choosing": "( ( MLU / CS ) + Min( ( MLU * Min( DS ,RMSe ) ) ,( RMSe - CS ) ) )", "obj1": 0.7247524752475247, "obj2": 0.15059600048421318}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( PN + CRS ) * Min( ( Min( ( ( DDR * MRS ) * FirstVNF_Mem ) ,( Min( FirstVNF_Mem_Server ,ACS ) + FirstVNF_Mem_Server ) ) / AMS ) ,( BR * CRS ) ) ) + Min( Max( ( PN * ACS ),BR ) ,( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + DS ),MUM ) ) * ( ( Min( ( RCSe - RCSe ) ,( Max( DS,( MUM * RMSe ) ) - ( RCSe + RCSe ) ) ) * Max( ( ( ( RMSe * Min( MLU ,DS ) ) * RRSe ) - MLU ),RRSe ) ) * RRSe ) )", "obj1": 0.7801980198019802, "obj2": 0.10163990449563969}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS + RRSe ) ,( Min( ( ( CS - ( RCSe - ( MUM / MUM ) ) ) / CS ) ,( ( MLU - Max( RCSe,MUR ) ) - Max( DS,RCSe ) ) ) * ( MUM * RRSe ) ) )", "obj1": 0.6594059405940594, "obj2": 0.22238999510393231}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( ( ( Const / ARS ) - Max( FirstVNF_CPU,Min( AMS ,FirstVNF_CPU_Server ) ) ) ,PN ) * Min( ( ( ( PN / CRS ) + Min( AMS ,FirstVNF_CPU ) ) + MDR ) ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( Min( ( ( RMSe + DS ) * MLU ) ,Min( ( RRSe * Min( RCSe ,( MUR - MUR ) ) ) ,MUM ) ) ,( MUM * CS ) ) / Max( RMSe,Min( RMSe ,MUC ) ) ) )", "obj1": 0.6772277227722773, "obj2": 0.20892682154589629}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Const / ARS ) - Max( FirstVNF_CPU,( ( Const + FirstVNF_Mem ) / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),Min( ( MUM - MUM ) ,DS ) )", "obj1": 0.6495049504950495, "obj2": 0.22325355916292966}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( FirstVNF_CPU_Server / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( ( CS / ( CS - RCSe ) ) + RMSe ) ) - CS ) ,CS ) ) )", "obj1": 0.7782178217821782, "obj2": 0.11714183313525607}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( ( ARS + CRS ) * ( ( ( FirstVNF_RAM_Server * MDR ) * Min( BR ,MRS ) ) / RRS ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,( CRS + PN ) ) ) )", "choosing": "( Max( Min( ( DS + RRSe ) ,( ( ( Max( ( DS + MUC ),MUR ) - Max( CS,RRSe ) ) * ( ( MUC * RCSe ) - Max( MLU,Max( RMSe,MUR ) ) ) ) + MLU ) ),Max( ( DS + DS ),MUM ) ) * ( RRSe + Min( DS ,CS ) ) )", "obj1": 0.8376237623762376, "obj2": 0.0688604519622177}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( ( PN + CRS ) * Max( ( ACS * Min( BR ,( ACS * Min( MRS ,FirstVNF_Mem_Server ) ) ) ),RRS ) ) + Min( ( ( ( FirstVNF_RAM * DDR ) / Const ) / ARS ) ,Max( PN,CRS ) ) ) )", "choosing": "( Max( Min( ( ( ( CS / ( Min( RCSe ,MLU ) + ( MUM - RCSe ) ) ) * ( ( Min( MLU ,MLU ) / RCSe ) * MLU ) ) + MLU ) ,( DS + RRSe ) ),( ( MLU - Max( RCSe,MUR ) ) - Max( DS,CS ) ) ) * ( RRSe + Min( CS ,DS ) ) )", "obj1": 0.8415841584158416, "obj2": 0.06647157869224449}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( FirstVNF_CPU,( ARS / DDR ) ) ) ) * Min( MRS ,Const ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUR - MUC ),( Min( ( MUC / ( MLU + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6356435643564357, "obj2": 0.2425128418954791}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( MRS ,Const ) * Min( PN ,( ( Max( RRS,RRS ) / ARS ) - Max( Min( FirstVNF_Mem_Server ,PN ),( ARS / DDR ) ) ) ) ) ) - Max( FirstVNF_RAM_Server,( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) ) )", "choosing": "Max( ( MUR - MUC ),( ( RMSe + RRSe ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6455445544554456, "obj2": 0.23387592105893026}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.801980198019802, "obj2": 0.0931494295078135}, {"determining": "( ( ( FirstVNF_RAM_Server * Max( AMS,MRS ) ) * FirstVNF_Mem ) - ( Const - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),( ( ( Min( DS ,( Max( CS,RMSe ) + RMSe ) ) - Max( DS,MUM ) ) / MUR ) / MUM ) ) * ( RRSe + Min( Max( Min( RMSe ,MUC ),MUM ) ,MUR ) ) )", "obj1": 0.7881188118811882, "obj2": 0.10145080397936776}, {"determining": "( ( ( ( CRS + FirstVNF_Mem ) / Max( MDR,MRS ) ) + ( Min( PN ,( ( Max( RRS,RRS ) / ARS ) - ( FirstVNF_RAM / ( ARS / DDR ) ) ) ) * Min( MRS ,( AMS * CRS ) ) ) ) - Max( FirstVNF_RAM_Server,( MDR * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * MUC ),( Min( ( ( ( CS / ( CS - RCSe ) ) + RMSe ) / MUC ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.23531341561563565}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_Mem_Server * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MLU ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - MUC ) ) * ( ( Min( Min( ( Min( MUR ,( MUR / MUM ) ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9584158415841584, "obj2": 0.014785578413576944}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( ( CRS + ACS ) ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / Min( MLU ,RRSe ) ) ,CS ) * ( ( ( Min( ( Min( Min( MLU ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) + RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006103980039337116}, {"determining": "( ( Max( ( ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + ARS ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Max( RRSe,RMSe ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + RCSe ) ) )", "obj1": 0.9108910891089109, "obj2": 0.032720145166055536}, {"determining": "( ( Max( ( ( Min( Max( RRS,DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( Const * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( ( RMSe / CS ) + Min( ( MUM * Min( ( MUM - MUM ) ,MUM ) ) ,( RCSe + MUC ) ) )", "obj1": 0.897029702970297, "obj2": 0.04040171471176661}, {"determining": "( ( Max( ( ( Min( Max( ( FirstVNF_Mem - PN ),DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9485148514851485, "obj2": 0.017463259178008114}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( ( MDR - ( MRS - FirstVNF_CPU_Server ) ) * Max( ( ( ( Const + FirstVNF_Mem ) - ( ( ACS * Min( BR ,MRS ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) ) )", "choosing": "( Max( ( RCSe * Max( RCSe,CS ) ),Max( ( DS + MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7920792079207921, "obj2": 0.09396127748166781}, {"determining": "( ( Max( ( ( Min( Max( ( FirstVNF_Mem - PN ),( FirstVNF_RAM - MDR ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( FirstVNF_Mem - RRS ) ,( AMS * MDR ) ) - ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( ( RMSe / CS ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( ( ( RCSe + ( MLU - ( RCSe - CS ) ) ) + ( Min( ( ( MUM + MLU ) * MLU ) ,RRSe ) / ( ( MUC - RMSe ) / RCSe ) ) ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + MUC ) ) ) ) )", "obj1": 0.9425742574257425, "obj2": 0.02169193142803394}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - ( FirstVNF_RAM * RRS ) ) ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,MUC ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9247524752475248, "obj2": 0.02745252740439581}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + ( FirstVNF_Mem_Server * ( FirstVNF_Mem * MDR ) ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( Min( ( ARS - AMS ) ,( AMS * MDR ) ) - ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) ) )", "choosing": "( Min( ( MLU / Min( MLU ,RRSe ) ) ,CS ) * ( ( ( ( ( ( MUC + ( RCSe / RMSe ) ) * ( Min( MUC ,RRSe ) / ( RRSe * MUC ) ) ) + MUM ) + RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9821782178217822, "obj2": 0.006103980039337116}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( ( ACS + AMS ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Max( ( ( MUM / MUM ) - ( ( Max( RMSe,( Max( MLU,Min( CS ,DS ) ) * CS ) ) / MUR ) * RRSe ) ),( Min( ( MUC / ( CS + RMSe ) ) ,( MUM * CS ) ) / Max( RMSe,Min( ( MUC / DS ) ,MUC ) ) ) )", "obj1": 0.9366336633663367, "obj2": 0.023354939541167408}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( Min( Const ,( FirstVNF_Mem_Server * ACS ) ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( ( PN / Min( MDR ,FirstVNF_RAM_Server ) ) ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( ( DS + ( MUC + MUR ) ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9762376237623762, "obj2": 0.008194711084159267}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( Max( FirstVNF_CPU,( ( Const + FirstVNF_Mem ) / DDR ) ) - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * Min( ( MUM - MUM ) ,DS ) )", "obj1": 0.906930693069307, "obj2": 0.03715059448081476}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( ( RMSe + DS ) * MUM ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9346534653465347, "obj2": 0.025634189703319866}, {"determining": "( ( Max( ( ( Min( MRS ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( ( ( Const / ( FirstVNF_Mem_Server * DDR ) ) / ARS ) - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MLU ) ,( ( Min( RRSe ,RCSe ) / ( MUM - RCSe ) ) - MUC ) ) * ( ( Min( Min( ( Min( MUR ,( MUR / MUM ) ) - ( MUC / DS ) ) ,( MUR - CS ) ) ,RCSe ) - RMSe ) + ( DS - CS ) ) )", "obj1": 0.9702970297029703, "obj2": 0.010667700392724862}, {"determining": "( ( Max( ( ( Min( ( ACS * Min( BR ,MRS ) ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( CS ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,( ( RMSe + DS ) * MUM ) ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.899009900990099, "obj2": 0.03919808860437863}, {"determining": "( ( ( ( CRS + ACS ) - Min( FirstVNF_RAM ,RRS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( ( ( ACS + AMS ) * ( ACS - FirstVNF_CPU ) ),FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( FirstVNF_Mem_Server - ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( Min( DS ,CS ) / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9465346534653465, "obj2": 0.019538932093738467}, {"determining": "( ( Max( ( ( Min( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) + DDR ) - ( ( Const + FirstVNF_Mem ) * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( Min( ACS ,ARS ) - Max( RRS,RRS ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( MUM * Min( RMSe ,DS ) ) )", "obj1": 0.9643564356435643, "obj2": 0.013844086062192994}, {"determining": "( ( Max( ( ( Min( ( ( CRS + ACS ) - MRS ) ,DDR ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( DDR * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM / MUM ) ,CS ) * ( ( Min( Min( ( Min( Min( RRSe ,RMSe ) ,MUM ) - ( MUC / DS ) ) ,MUC ) ,RCSe ) - RMSe ) + Min( DS ,CS ) ) )", "obj1": 0.9168316831683169, "obj2": 0.03036832490340271}, {"determining": "( ( Min( ACS ,ARS ) - Max( RRS,DDR ) ) - ( Max( ( ( ( Min( Max( AMS,BR ) ,( CRS / CRS ) ) + FirstVNF_Mem ) - ( ( ACS * Min( BR ,FirstVNF_Mem_Server ) ) / RRS ) ) + ( AMS - FirstVNF_Mem ) ),PN ) * ( MDR - ( MRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS / MUM ) * MLU ),Max( ( ( MUM / DS ) / MUC ),MUM ) ) * ( RRSe + Min( ( Max( Min( MUM ,MUR ),( MLU / CS ) ) - CS ) ,CS ) ) )", "obj1": 0.7940594059405941, "obj2": 0.09358699693932594}, {"determining": "( ( Max( ( ( Min( Max( RRS,DDR ) ,Max( FirstVNF_CPU_Server,MDR ) ) + DDR ) - ( BR * FirstVNF_CPU ) ),Max( ARS,ARS ) ) / ( ( ( Const + FirstVNF_Mem ) - ( ACS + AMS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ( FirstVNF_Mem - PN ) ) ) ) + ( ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_Mem ) / ( ACS * Min( BR ,RRS ) ) ) - Min( ( ARS - RRS ) ,( AMS * MDR ) ) ) )", "choosing": "( Min( ( MUM - MUM ) ,DS ) + Min( ( MUM * Min( ( MUM - MUM ) ,DS ) ) ,( RCSe + MUC ) ) )", "obj1": 0.904950495049505, "obj2": 0.037599496039863976}]}