{"1": [{"determining": "Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( DS * RCSe ) / Min( CS ,RRSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5128224882542715}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / Max( RMSe,DS ) )", "obj1": 0.4251012145748988, "obj2": 0.5077250861057228}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MLU - ( Max( RRSe,MUC ) + ( ( MLU - RCSe ) * RRSe ) ) ) + Min( CS ,CS ) )", "obj1": 0.08906882591093117, "obj2": 0.7876144869497492}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_CPU_Server ) ) ,( ( ARS - ( ACS - MDR ) ) * MDR ) )", "choosing": "Max( ( Min( ( MUR - MUM ) ,( MLU - CS ) ) + MUC ),( MUR + ( MUM + ( RRSe / MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / AMS ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( RCSe / DS ) + ( RRSe + MUM ) )", "obj1": 0.09716599190283401, "obj2": 0.7794606631542517}, {"determining": "Min( Min( PN ,PN ) ,( Const * FirstVNF_Mem ) )", "choosing": "( Min( MUM ,RMSe ) + ( RCSe * DS ) )", "obj1": 0.354251012145749, "obj2": 0.5673930337640878}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( CS - RMSe ) + ( MUM / DS ) )", "obj1": 0.08704453441295547, "obj2": 0.7960394532128413}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.3805668016194332, "obj2": 0.5239077166715586}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + CRS ) - Max( Const,MRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RRSe - Min( RMSe ,MUM ) ) / ( MUM * ( MUR - ( DS * ( DS - ( MUC * ( MLU + ( RRSe + RCSe ) ) ) ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.07925806379548132}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "Max( ( ( Max( ACS,Max( Min( ( ( MDR + BR ) * Min( MDR ,FirstVNF_RAM_Server ) ) ,RRS ),ACS ) ) / FirstVNF_RAM ) * ARS ),Min( CRS ,Const ) )", "choosing": "( Max( RRSe,( MUM * CS ) ) + ( RCSe * MLU ) )", "obj1": 0.37044534412955465, "obj2": 0.5564006567470489}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( AMS + ( Const + BR ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS * CRS ),MDR ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - Min( RRSe ,MUC ) ) - ( MUM - ( MUM * RCSe ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "( ( DDR + ( ( FirstVNF_Mem * FirstVNF_CPU ) + DDR ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe - ( ( RCSe - ( ( Min( RRSe ,MUR ) - RRSe ) / RMSe ) ) * Max( RCSe,Min( RMSe ,RCSe ) ) ) ) / Min( Min( RCSe ,MUR ) ,Max( MUR,DS ) ) )", "obj1": 0.402834008097166, "obj2": 0.511176306431869}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( Max( Max( DDR,BR ),( PN / CRS ) ) / ( ( MRS - BR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * Min( ( RRS + CRS ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RRSe,( DS * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.6700404858299596, "obj2": 0.3046338228423978}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM_Server ) + ( Const + BR ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * ARS ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),Min( Max( MUR,Min( MUR ,MUC ) ) ,MUC ) )", "obj1": 0.9008097165991903, "obj2": 0.0980620122233608}, {"determining": "Max( ( FirstVNF_RAM_Server - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.7040282695513016}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( MLU - DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ( ( ( Max( BR,RRS ) * BR ) - FirstVNF_RAM ) + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - RCSe ) ,( ( RRSe + RRSe ) / DS ) ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * ( ( ( RRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) * PN ) )", "choosing": "Max( ( ( RRSe + MUC ) * ( Min( RMSe ,RCSe ) * ( RRSe / MUC ) ) ),( Max( Min( MUM ,RMSe ),( MUR - RMSe ) ) / ( ( RMSe / MLU ) * ( MUR / DS ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.423843854227582}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RMSe ) + MLU ) - Min( Max( Min( MUC ,CS ),( RMSe * MUR ) ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( AMS - FirstVNF_CPU_Server ) ) ) - ( ( ( RRS * FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + ( MLU * RRSe ) ) - ( ( MUM - MUC ) - Max( MUM,RCSe ) ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}], "2": [{"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * RRS ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + MDR ) + ( ( PN * ACS ) / ( Const / RRS ) ) )", "choosing": "( Min( RRSe ,Max( ( ( MUM / MUC ) * MUR ),( MUM * MUC ) ) ) + ( MUM / MLU ) )", "obj1": 0.07489878542510121, "obj2": 0.8005208954894366}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( CRS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN * BR ) ) ) - ( FirstVNF_CPU_Server - ( ( ( Const + FirstVNF_RAM_Server ) + ( ACS * PN ) ) + MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) - ( ( MUR - RMSe ) + Max( MUC,MUC ) ) ) + Max( CS,Max( Min( MUR ,RMSe ),Min( Min( MUC ,MUC ) ,RMSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.36063872050382484}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU )", "choosing": "Min( Min( MUM ,RRSe ) ,( ( MLU / RCSe ) * ( RCSe * RCSe ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3172172876316819}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_CPU_Server ) ) ,( ( ARS - ( ACS - MDR ) ) * MDR ) )", "choosing": "Max( ( Min( ( MUR - MUM ) ,( MLU - CS ) ) + MUC ),( MUR + ( MUM + ( RRSe / MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) * ( BR + BR ) ) + ( Max( RRS,AMS ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( Max( Max( DDR,BR ),( PN / CRS ) ) / Min( ( MRS - BR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS * MUR ) + Max( MUR,( MUM * CS ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2373776510035082}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) + ( RRS * MDR ) )", "choosing": "( Max( ( Min( RRSe ,( RMSe + MUR ) ) - RCSe ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.16985797740373143}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.8522267206477733, "obj2": 0.14249756321267015}, {"determining": "( ( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5583563522962821}, {"determining": "( Max( PN,FirstVNF_CPU ) - ( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - RMSe ),MLU ) ) / ( RRSe - Min( RMSe ,MUM ) ) )", "obj1": 0.7793522267206477, "obj2": 0.21635739691503744}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( AMS,AMS ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( MUC / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( ( Max( RMSe,MUR ) - MLU ) - RCSe ) )", "obj1": 0.6842105263157895, "obj2": 0.2745571523866602}, {"determining": "Min( Min( Min( ( MDR * AMS ) ,( AMS + FirstVNF_RAM_Server ) ) ,( Min( MDR ,FirstVNF_Mem_Server ) * ( RRS + Const ) ) ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( ( ( DS / RCSe ) - Min( MUR ,( MLU + DS ) ) ),Min( DS ,MUC ) )", "obj1": 0.4331983805668016, "obj2": 0.5013499664867043}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MLU - ( Max( RRSe,MUC ) + ( ( MLU - RCSe ) * RRSe ) ) ) + Min( CS ,CS ) )", "obj1": 0.08906882591093117, "obj2": 0.7876144869497492}, {"determining": "( Min( ( ACS - BR ) ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) )", "choosing": "( Max( RMSe,RCSe ) - Max( ( CS * DS ),MUC ) )", "obj1": 0.18421052631578946, "obj2": 0.6957368031816616}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_CPU_Server ) ) ,( ( ARS - ( ACS - MDR ) ) * MDR ) )", "choosing": "Max( ( Min( ( MUR - MUM ) ,( MLU - CS ) ) + MUC ),( MUR + ( MUM + ( RRSe / MUR ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4230381772156249}, {"determining": "Max( ( FirstVNF_RAM_Server * ( Max( MRS,FirstVNF_Mem ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( Min( Min( RCSe ,MUR ) ,( MUR * DS ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7108859142787793}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) * ( BR + BR ) ) + ( Max( RRS,AMS ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( Max( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) ),( PN / CRS ) ) / Min( ( MRS - BR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * RMSe )", "obj1": 0.659919028340081, "obj2": 0.3140674355382494}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * ( ( ( RRS / FirstVNF_Mem ) + FirstVNF_CPU_Server ) * PN ) )", "choosing": "Max( ( ( RRSe + MUC ) * ( Min( RMSe ,RCSe ) * ( RRSe / MUC ) ) ),( Max( Min( MUM ,RMSe ),( MUR - RMSe ) ) / ( ( RMSe / MLU ) * ( MUR / DS ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.423843854227582}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "Max( ( ( Max( ACS,Max( Min( ( ( MDR + BR ) * Min( MDR ,FirstVNF_RAM_Server ) ) ,RRS ),ACS ) ) / FirstVNF_RAM ) * ARS ),Min( CRS ,Const ) )", "choosing": "( Max( RRSe,( MUM * CS ) ) + ( RCSe * MLU ) )", "obj1": 0.37044534412955465, "obj2": 0.5564006567470489}, {"determining": "( Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM ),( MRS + AMS ) ),( Max( FirstVNF_CPU,Const ) - Max( MRS,MDR ) ) ) + ( ( ( ARS / Const ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) * ( ( DDR / FirstVNF_Mem_Server ) / Min( PN ,Const ) ) ) )", "choosing": "( ( RCSe + RMSe ) - Min( Max( RRSe,RRSe ) ,( RCSe * CS ) ) )", "obj1": 0.23684210526315788, "obj2": 0.6268452423796473}, {"determining": "( ( FirstVNF_Mem_Server * DDR ) + Min( RRS ,ARS ) )", "choosing": "Min( ( MLU - MUC ) ,Min( CS ,( ( Max( RCSe,( RCSe / ( MUC + MUC ) ) ) / RCSe ) / ( Max( MUC,RCSe ) * ( RCSe / ( RRSe + RCSe ) ) ) ) ) )", "obj1": 0.19838056680161945, "obj2": 0.6831478342811241}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / Max( RMSe,Min( MLU ,RCSe ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.8785425101214575, "obj2": 0.11226667151623404}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6468462342472836}, {"determining": "Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.3805668016194332, "obj2": 0.5239077166715586}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Max( Max( DDR,BR ),( PN / CRS ) ) / ( ( MRS - BR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * Min( ( RRS + CRS ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RRSe,( DS * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.6700404858299596, "obj2": 0.3046338228423978}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( FirstVNF_Mem - ( AMS - FirstVNF_CPU_Server ) ),ACS ) )", "choosing": "( ( Min( Min( Min( MLU ,RMSe ) ,( CS - MLU ) ) ,( ( RRSe * RMSe ) + ( MUR + RRSe ) ) ) + Max( ( ( MUM + MLU ) - ( CS - MUR ) ),( ( RRSe + MUC ) * Min( MUC ,MUM ) ) ) ) / ( RRSe - Min( RMSe ,MUM ) ) )", "obj1": 0.9291497975708503, "obj2": 0.0693671366661856}, {"determining": "( Max( ( ( ( BR / PN ) / ( PN + DDR ) ) / FirstVNF_CPU_Server ),Const ) - ( DDR - AMS ) )", "choosing": "( ( Min( DS ,MUM ) * CS ) - ( Max( MUC,RCSe ) / ( CS - MUM ) ) )", "obj1": 0.22874493927125505, "obj2": 0.6449521101651315}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,( RRSe / CS ) ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( ( DDR + ( ( FirstVNF_Mem * FirstVNF_CPU ) + DDR ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe - ( ( RCSe - ( ( Min( RRSe ,MUR ) - RRSe ) / RMSe ) ) * Max( RCSe,Min( RMSe ,RCSe ) ) ) ) / Min( Min( RCSe ,MUR ) ,Max( MUR,DS ) ) )", "obj1": 0.402834008097166, "obj2": 0.511176306431869}, {"determining": "( Max( FirstVNF_CPU,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RRSe - Min( RMSe ,MUM ) ) / ( MUM * ( MUR - ( DS * ( DS - ( MUC * ( MLU + ( RRSe + RCSe ) ) ) ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.07925806379548132}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / Max( RMSe,DS ) )", "obj1": 0.4251012145748988, "obj2": 0.5077250861057228}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9554655870445344, "obj2": 0.045393325519777705}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( ARS / ( ACS + ( ( PN - ACS ) - Min( Const ,Const ) ) ) ) ) )", "choosing": "( ( Min( RCSe ,( MUR - MUC ) ) * ( DS + Max( Max( RMSe,RCSe ),CS ) ) ) - ( RMSe + ( ( RMSe / ( MUC - MUM ) ) + MUM ) ) )", "obj1": 0.8805668016194332, "obj2": 0.10328683699668764}, {"determining": "Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( DS * RCSe ) / Min( CS ,RRSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5128224882542715}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM_Server ) + ( Const + BR ) ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * ARS ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),Min( Max( MUR,Min( MUR ,MUC ) ) ,MUC ) )", "obj1": 0.9008097165991903, "obj2": 0.0980620122233608}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9554655870445344, "obj2": 0.045393325519777705}, {"determining": "( ( Const * MDR ) * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03220646311615421}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( CS - RMSe ) + ( MUM / DS ) )", "obj1": 0.08704453441295547, "obj2": 0.7960394532128413}, {"determining": "( ( MRS - Const ) + ( ARS + Min( BR ,FirstVNF_CPU ) ) )", "choosing": "( ( MUC - RMSe ) + Max( Min( MUR ,Min( Min( ( RCSe - DS ) ,( Min( MUM ,MUC ) - ( MUM / ( MLU - CS ) ) ) ) ,( MUM + MUM ) ) ),MUR ) )", "obj1": 0.23279352226720648, "obj2": 0.62908798711485}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUC ) * ( Min( RMSe ,RCSe ) * ( RRSe / ( ( ( MUC - MUR ) - MLU ) - RCSe ) ) ) ),( Max( Min( MUM ,RMSe ),( MUR - RMSe ) ) / ( ( RMSe / MLU ) * ( MUR / DS ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.03144687747037166}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.09677165670729557}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( FirstVNF_Mem - FirstVNF_RAM ),ACS ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - RMSe ),MLU ) )", "obj1": 0.9251012145748988, "obj2": 0.07403089461525733}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( AMS - FirstVNF_CPU_Server ) ) ) - ( ( ( RRS * FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MRS * MRS ) * Max( MRS,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + ( MLU * RRSe ) ) - ( ( MUM - MUC ) * ( Min( MUC ,RCSe ) * Min( ( ( RMSe + RMSe ) / ( MLU / DS ) ) ,Min( ( MLU / MUM ) ,Min( CS ,Min( RMSe ,RCSe ) ) ) ) ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7100049226825865}, {"determining": "Max( ( FirstVNF_RAM_Server - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.7040282695513016}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.09677165670729557}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) + ( FirstVNF_RAM / RRS ) ) / ( MDR / BR ) )", "choosing": "( Max( Max( MUC,MUM ),RCSe ) / ( RRSe + ( MUM * CS ) ) )", "obj1": 0.10526315789473684, "obj2": 0.7049086290932506}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( Min( CRS ,FirstVNF_Mem ) + ( FirstVNF_RAM / RRS ) ) / ( MDR / BR ) )", "choosing": "( Max( Max( MUC,MUM ),RCSe ) / ( RRSe + ( MUM * CS ) ) )", "obj1": 0.10526315789473684, "obj2": 0.7049086290932506}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ACS,( ( ( ARS - ( FirstVNF_CPU * Max( Min( BR ,BR ),BR ) ) ) - BR ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUC * RRSe ) / ( Min( RMSe ,( ( MUM / Min( DS ,RCSe ) ) + MUR ) ) - RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.07077013502370436}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6468462342472836}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + CRS ) - Max( Const,MRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( AMS + ( Const + BR ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( MLU - DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ( ( ( Max( BR,RRS ) * BR ) - FirstVNF_RAM ) + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - RCSe ) ,( ( RRSe + RRSe ) / DS ) ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RMSe ) + MLU ) - Min( Max( Min( MUC ,CS ),( RMSe * MUR ) ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( Min( DS ,MLU ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( ( PN / CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MLU ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MUM / RCSe ) ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) - Max( ( BR - ( FirstVNF_Mem + AMS ) ),Const ) ) )", "choosing": "Min( ( ( MUM * Min( RRSe ,DS ) ) * ( CS * DS ) ) ,( ( RCSe / RRSe ) / Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM * AMS ) / Const ) - ARS ),( ACS * RRS ) ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( BR ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( ( ( DS / MUR ) + Min( ( RCSe * ( MUM + Min( MUM ,RCSe ) ) ) ,RMSe ) ) / DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( MUR ,( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - FirstVNF_Mem )", "choosing": "Min( Max( DS,CS ) ,( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - Const ) + ( ARS + MDR ) ) - ( ACS + AMS ) )", "choosing": "Min( ( ( CS - RMSe ) + ( MUM / DS ) ) ,( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) )", "choosing": "( ( CS - RMSe ) + ( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * ( Max( ( CRS + ACS ),( AMS + RRS ) ) - ( ( FirstVNF_RAM_Server + MRS ) * Min( FirstVNF_Mem ,MRS ) ) ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),MLU ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( RMSe ,( Min( MLU ,MUM ) + ( MLU * MUC ) ) ) - Max( MUM,RMSe ) ),RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( FirstVNF_RAM,Max( Const,AMS ) ) ) * Min( ARS ,( DDR * PN ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) * RMSe ) ,( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server / Min( Max( FirstVNF_RAM,MDR ) ,MRS ) ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + Max( DS,RCSe ) ),CS ) ,( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU * BR ) + ( AMS + FirstVNF_CPU_Server ) ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,Max( ( AMS * FirstVNF_RAM_Server ),DDR ) ) )", "choosing": "( ( DS + MUM ) / Min( MUR ,( MUR / ( CS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( FirstVNF_RAM + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( Min( BR ,FirstVNF_CPU_Server ) - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( ( MUM / Min( ( DS * RRSe ) ,Min( MUM ,Max( RRSe,RMSe ) ) ) ) / MLU ) ) + RCSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( ( CRS * MDR ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,Min( Max( MUR,Min( MUR ,MUC ) ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( MRS / ( ARS + DDR ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe - DS ) ,( ( CS * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ( ( Max( AMS,FirstVNF_Mem ) + ( MRS / FirstVNF_CPU_Server ) ) * ( ( AMS - FirstVNF_CPU ) + ( DDR / Const ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( CS / RMSe ) ) - ( ( DS * RCSe ) * Max( MUR,RMSe ) ) ) - ( ( ( RMSe * MUM ) / Min( RMSe ,DS ) ) - ( ( MUC / RRSe ) / ( ( MUM * RCSe ) + Max( DS,RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * MDR ) * ( ( ACS / PN ) * ( MRS / ( ( Max( DDR,RRS ) - MDR ) * Max( RRS,ACS ) ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS + RMSe ) ) ),Min( ( RCSe - DS ) ,Min( ( RCSe - ( CS * Max( CS,MUR ) ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) * ( MRS / ( ARS + DDR ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + CS ) + ( RCSe - RCSe ) ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - Min( MDR ,( CRS + AMS ) ) )", "choosing": "Min( Min( Min( MUM ,RMSe ) ,RRSe ) ,Min( CS ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * RRS ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + MDR ) + ( ( PN * ACS ) / ( Const / RRS ) ) )", "choosing": "( Min( RRSe ,Max( ( ( MUM / MUC ) * MUR ),( MUM * MUC ) ) ) + ( MUM / MLU ) )", "obj1": 0.07489878542510121, "obj2": 0.8005208954894366}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.4011755723012437}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_CPU_Server ) ) ,( ( ARS - ( ACS - MDR ) ) * MDR ) )", "choosing": "Max( ( Min( ( MUR - MUM ) ,( MLU - CS ) ) + MUC ),( MUR + ( MUM + ( RRSe / MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5583563522962821}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ) + Min( BR ,PN ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - ( ( RMSe + RRSe ) * ( CS * DS ) ) ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7773279352226721, "obj2": 0.19159982777133475}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - Min( Const ,Const ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( ( MUM / Min( ( DS * RRSe ) ,Min( MUM ,Max( RRSe,RMSe ) ) ) ) ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.486851948257307}, {"determining": "( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_CPU_Server ,PN ) ) * ( ( PN - Const ) / ( PN + FirstVNF_Mem ) ) )", "choosing": "( CS * ( ( RCSe + ( MUR * RCSe ) ) - Max( DS,RCSe ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6738968547659}, {"determining": "( ( Max( Max( DDR,BR ),( PN / CRS ) ) / ( ( MRS - BR ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) * Min( ( RRS + CRS ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( RRSe,( DS * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.6700404858299596, "obj2": 0.3046338228423978}, {"determining": "Min( ( MRS * ACS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( Max( CS,RRSe ) - MLU ) - RCSe ) )", "obj1": 0.7206477732793523, "obj2": 0.23160908091750398}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( MLU - ( Max( RRSe,MUC ) + ( ( MLU - RCSe ) * RRSe ) ) ) + Min( CS ,CS ) )", "obj1": 0.08906882591093117, "obj2": 0.7876144869497492}, {"determining": "Min( ( Max( ( FirstVNF_CPU * AMS ),Max( CRS,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM_Server * ( BR - DDR ) ) )", "choosing": "( ( ( MUM + ( MUM + ( MLU - ( MUR - CS ) ) ) ) + ( ( RMSe - CS ) - ( DS / Max( CS,DS ) ) ) ) + Min( MUM ,MLU ) )", "obj1": 0.3825910931174089, "obj2": 0.4989921994044205}, {"determining": "Max( ( FirstVNF_RAM_Server * ( Max( MRS,FirstVNF_Mem ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( Min( Min( RCSe ,MUR ) ,( MUR * DS ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7108859142787793}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( CRS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN * BR ) ) ) - ( FirstVNF_CPU_Server - ( ( ( Const + FirstVNF_RAM_Server ) + ( ACS * PN ) ) + MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) - ( ( MUR - RMSe ) + Max( MUC,MUC ) ) ) + Max( CS,Max( Min( MUR ,RMSe ),Min( Min( MUC ,MUC ) ,RMSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.36063872050382484}, {"determining": "( ACS - ( ( ( RRS * FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MRS * MRS ) - Max( ( FirstVNF_Mem * ( ( FirstVNF_RAM_Server + CRS ) + MRS ) ),CRS ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + ( MLU * RRSe ) ) - ( ( MUM - Min( RRSe ,CS ) ) - Max( DS,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( CS / MUM ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6932029546939971}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,PN ) ) / ( ( ( ARS - Min( Const ,AMS ) ) + Const ) * ( BR - FirstVNF_Mem_Server ) ) ) ,( DDR - BR ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) + ( CS * RMSe ) ),MUR ) - ( ( Min( Max( ( RMSe / Max( RMSe,DS ) ),MUR ) ,( CS * ( MUR * ( DS + Min( MUR ,MUC ) ) ) ) ) - ( MUC - MUR ) ) - RCSe ) )", "obj1": 0.6052631578947368, "obj2": 0.3087895552857007}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.819838056680162, "obj2": 0.16098301635212486}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * MRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / Min( Max( DS,CS ) ,( RRSe + MUC ) ) ) / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.3562753036437247, "obj2": 0.5257742687268928}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) + ( RRS * MDR ) )", "choosing": "( Max( ( Min( RRSe ,( RMSe + MUR ) ) - RCSe ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.16985797740373143}, {"determining": "( Max( ( MDR * ( ARS * MRS ) ),ARS ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( ( ( ( MUM * ( ( MUM + MUC ) - MUM ) ) / RMSe ) / Min( DS ,( RRSe - ( ( ( ( RRSe - RMSe ) / MUR ) * ( Min( MUM ,MUC ) / RMSe ) ) / ( MUR + Max( MUC,DS ) ) ) ) ) ) ,( RRSe + MUC ) )", "obj1": 0.242914979757085, "obj2": 0.6113765317231756}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 0.5748987854251012, "obj2": 0.3456013159490791}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( Max( CS,Min( ( RCSe + ( ( RCSe / Max( RMSe,( MUR / RMSe ) ) ) * MLU ) ) ,( MUC / MUM ) ) ) + ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) + ( ( MUM - RMSe ) + Max( MUC,MUC ) ) ) )", "obj1": 0.8582995951417004, "obj2": 0.13701216542535716}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.8522267206477733, "obj2": 0.14249756321267015}, {"determining": "( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MUR ) + Min( MUR ,RMSe ) ) ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6164542234519443}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( ARS / ( ACS + ( DDR - ( FirstVNF_Mem * Const ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,( RMSe + RCSe ) ) ) * Min( RCSe ,( MUR - MUC ) ) ) - ( ( RMSe + CS ) - Max( ( MUR * RCSe ),MLU ) ) )", "obj1": 0.8785425101214575, "obj2": 0.10495481098859026}, {"determining": "Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.3805668016194332, "obj2": 0.5239077166715586}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + Max( RRS,Min( MRS ,RRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + ( ( DS / MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3504540698659305}, {"determining": "Max( ( ( RRS * ( BR + DDR ) ) - ARS ),( ACS * RRS ) )", "choosing": "( ( DS / MUR ) + ( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6402704128108468}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5931174089068826, "obj2": 0.3241005110280148}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.09199001933442054}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) + Min( BR ,PN ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24803700416599225}, {"determining": "Min( ( ( ACS + Min( PN ,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Min( MUR ,RCSe ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06529785003648574}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) )", "obj1": 0.10931174089068826, "obj2": 0.699053347397756}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6468462342472836}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( ( Const * MDR ) * ( ( PN - ACS ) * ( MRS / ( ARS + DDR ) ) ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( Min( ( RRSe - DS ) ,( ( CS * DS ) / MLU ) ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.017876509860538896}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6468462342472836}, {"determining": "Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_Mem_Server - Max( AMS,( ( ( ( DDR + AMS ) - FirstVNF_CPU ) * ACS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_Mem_Server + Const ) ) / PN ) * FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( ( CS * ( Max( ( MLU - RCSe ),Min( CS ,Min( MLU ,( MUC / MUC ) ) ) ) - ( Max( Max( ( RMSe + MUR ),MUC ),( CS + DS ) ) + Min( RCSe ,RCSe ) ) ) ) + ( MUM + ( MUM * Min( RCSe ,( MLU * MUR ) ) ) ) ),( DS + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.05086199006613069}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,( RRSe / CS ) ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( ARS / ( ACS + ( ( PN - ACS ) - Min( Const ,Const ) ) ) ) ) )", "choosing": "( ( Min( RCSe ,( MUR - MUC ) ) * ( DS + Max( Max( RMSe,RCSe ),CS ) ) ) - ( RMSe + ( ( RMSe / ( MUC - MUM ) ) + MUM ) ) )", "obj1": 0.8805668016194332, "obj2": 0.10328683699668764}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7046086190079279}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU )", "choosing": "Min( Min( MUM ,RRSe ) ,( ( MLU / RCSe ) * ( RCSe * RCSe ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3172172876316819}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( CS - RMSe ) + ( MUM / DS ) )", "obj1": 0.08704453441295547, "obj2": 0.7960394532128413}, {"determining": "( Max( FirstVNF_CPU,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RRSe - Min( RMSe ,MUM ) ) / ( MUM * ( MUR - ( DS * ( DS - ( MUC * ( MLU + ( RRSe + RCSe ) ) ) ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.07925806379548132}, {"determining": "( ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( Min( RCSe ,MUC ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6902834008097166, "obj2": 0.260032583613353}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( Max( RRS,Min( MRS ,RRS ) ) - FirstVNF_RAM ),ACS ) )", "choosing": "( ( MLU / MUC ) / ( RRSe - Min( RMSe ,MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.08628031841750515}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.6983805668016194, "obj2": 0.25712242367508364}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) - ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9534412955465587, "obj2": 0.044586121195909406}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6882591093117408, "obj2": 0.27265207341326714}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) - ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.03764616444324461}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7186234817813765, "obj2": 0.23423912576417513}, {"determining": "( Max( FirstVNF_CPU,PN ) - Max( ( FirstVNF_Mem - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUM * ( MUR - ( DS * ( RMSe * MUR ) ) ) ) / ( RRSe - Min( RMSe ,MUM ) ) )", "obj1": 0.9251012145748988, "obj2": 0.07115125024551673}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( BR / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe + DS ) ,( ( CS * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,Max( MUR,MUR ) ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.029432958345023966}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7186234817813765, "obj2": 0.23423912576417513}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / PN ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ,( Max( FirstVNF_CPU,( FirstVNF_Mem - AMS ) ) * Min( FirstVNF_RAM_Server ,DDR ) ) ) - Max( Const,MRS ) ) )", "choosing": "Min( ( Min( RRSe ,RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe * MUR ) ) )", "obj1": 0.9777327935222672, "obj2": 0.02241997944717594}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUC ) * ( Min( RMSe ,RCSe ) * ( RRSe / ( ( ( MUC - MUR ) - MLU ) - RCSe ) ) ) ),( Max( Min( MUM ,RMSe ),( MUR - RMSe ) ) / ( ( RMSe / MLU ) * ( MUR / DS ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.03144687747037166}, {"determining": "( ( Const * MDR ) * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - Min( ( MRS - Const ) ,Max( AMS,ARS ) ) ) )", "choosing": "Max( Min( ( Max( RRSe,MUR ) + ( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( RMSe + ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( Max( MUR,MLU ) * MUC ) ) ) ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03220646311615421}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( AMS,AMS ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( MUC / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( ( Max( RMSe,MUR ) - MLU ) - RCSe ) )", "obj1": 0.6842105263157895, "obj2": 0.2745571523866602}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ) )", "choosing": "Max( ( ( RRSe + MUC ) * ( Min( RMSe ,RCSe ) * ( RRSe / ( ( ( MUC - MUR ) - MLU ) - RCSe ) ) ) ),( ( ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / ( ( RMSe / MLU ) * ( MUR / DS ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.08496273936520193}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( ( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9493927125506073, "obj2": 0.05083230607913525}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.020332108356858093}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ACS,( ( ( ARS - ( FirstVNF_CPU * Max( Min( BR ,BR ),BR ) ) ) - BR ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUC * RRSe ) / ( Min( RMSe ,( ( MUM / Min( DS ,RCSe ) ) + MUR ) ) - RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.07077013502370436}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( Const * MDR ) * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.03220646311615421}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) )", "choosing": "Min( ( RRSe - Max( ( MUC / RMSe ),RMSe ) ) ,Max( ( MUR * Min( DS ,RRSe ) ),( MLU * ( MUM - CS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + CRS ) - Max( Const,MRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( AMS + ( Const + BR ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( MLU - DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ( ( ( Max( BR,RRS ) * BR ) - FirstVNF_RAM ) + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - RCSe ) ,( ( RRSe + RRSe ) / DS ) ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RMSe ) + MLU ) - Min( Max( Min( MUC ,CS ),( RMSe * MUR ) ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( Min( DS ,MLU ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( ( PN / CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MLU ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MUM / RCSe ) ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) - Max( ( BR - ( FirstVNF_Mem + AMS ) ),Const ) ) )", "choosing": "Min( ( ( MUM * Min( RRSe ,DS ) ) * ( CS * DS ) ) ,( ( RCSe / RRSe ) / Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM * AMS ) / Const ) - ARS ),( ACS * RRS ) ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( BR ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( ( ( DS / MUR ) + Min( ( RCSe * ( MUM + Min( MUM ,RCSe ) ) ) ,RMSe ) ) / DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) )", "choosing": "( ( RCSe / MUR ) + Min( MUR ,( DS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - FirstVNF_Mem )", "choosing": "Min( Max( DS,CS ) ,( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - Const ) + ( ARS + MDR ) ) - ( ACS + AMS ) )", "choosing": "Min( ( ( CS - RMSe ) + ( MUM / DS ) ) ,( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) )", "choosing": "( ( CS - RMSe ) + ( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * ( Max( ( CRS + ACS ),( AMS + RRS ) ) - ( ( FirstVNF_RAM_Server + MRS ) * Min( FirstVNF_Mem ,MRS ) ) ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),MLU ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( RMSe ,( Min( MLU ,MUM ) + ( MLU * MUC ) ) ) - Max( MUM,RMSe ) ),RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS * ( BR + DDR ) ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Max( FirstVNF_RAM,Max( Const,AMS ) ) ) * Min( ARS ,( DDR * PN ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) * RMSe ) ,( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server / Min( Max( FirstVNF_RAM,MDR ) ,MRS ) ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + Max( DS,RCSe ) ),CS ) ,( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_RAM / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( BR / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe + DS ) ,( ( ( RCSe + RRSe ) * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Max( Min( CS ,RRSe ),Min( RCSe ,Max( MUR,MUR ) ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),Min( ARS ,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( RRSe + ( ( RMSe - MUR ) + RRSe ) ) * MLU ),MUR ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7763112547698949}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( AMS + FirstVNF_CPU_Server ) ) ,( ( ARS - ( ACS - MDR ) ) * MDR ) )", "choosing": "Max( ( Min( ( MUR - MUM ) ,( MLU - CS ) ) + MUC ),( MUR + ( MUM + ( RRSe / MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) * FirstVNF_CPU ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( RMSe ,( Min( MLU ,MUM ) + ( MLU * MUC ) ) ) - Max( MUM,RMSe ) ),RRSe ) ,Max( RMSe,Max( RMSe,RCSe ) ) )", "obj1": 0.3259109311740891, "obj2": 0.577386223768974}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Min( FirstVNF_CPU ,CRS ) ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7085951340151497}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( CRS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN * BR ) ) ) - ( FirstVNF_CPU_Server - ( ( ( Const + FirstVNF_RAM_Server ) + ( ACS * PN ) ) + MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) - ( ( MUR - RMSe ) + Max( MUC,MUC ) ) ) + Max( CS,Max( Min( MUR ,RMSe ),Min( Min( MUC ,MUC ) ,RMSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.36063872050382484}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.402834008097166, "obj2": 0.4669699581517766}, {"determining": "Min( ( PN * PN ) ,( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) * ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( ( DS - Min( CS ,RRSe ) ) * MLU ) ) - ( ( ( MUC - MUR ) - MLU ) + RCSe ) )", "obj1": 0.6558704453441295, "obj2": 0.2819729643914718}, {"determining": "( ( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5583563522962821}, {"determining": "Min( ( Max( ( FirstVNF_CPU * AMS ),Max( CRS,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM_Server * ( BR - DDR ) ) )", "choosing": "( ( ( MUM + ( MUM + ( MLU - ( MUR - CS ) ) ) ) + ( ( RMSe - CS ) - ( DS / Max( CS,DS ) ) ) ) + Min( MUM ,MLU ) )", "obj1": 0.3825910931174089, "obj2": 0.4989921994044205}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.4011755723012437}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.4011755723012437}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ARS / Max( FirstVNF_RAM_Server,Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / ( Min( MUC ,( ( MUC / MUR ) / RCSe ) ) / DS ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.4433198380566802, "obj2": 0.4659391210533262}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * MRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / Min( Max( DS,CS ) ,( RRSe + MUC ) ) ) / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.3562753036437247, "obj2": 0.5257742687268928}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Const ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( Min( DS ,MUM ) * RCSe ) - ( Max( MUC,RCSe ) / ( CS - MUM ) ) ) - RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 0.611336032388664, "obj2": 0.29524749319093635}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6605632753488714}, {"determining": "Min( ( FirstVNF_RAM_Server - ARS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Min( MUR ,RMSe ) )", "obj1": 0.7449392712550608, "obj2": 0.2076311918858933}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 0.5748987854251012, "obj2": 0.3456013159490791}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6619433198380567, "obj2": 0.25877026566407485}, {"determining": "( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MDR + DDR ) - PN ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6796119050536389}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * ( ARS + AMS ) ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( DS,( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.8299595141700404, "obj2": 0.14200928452737085}, {"determining": "( Max( ( MDR * ( ARS * MRS ) ),ARS ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( ( ( ( MUM * ( ( MUM + MUC ) - MUM ) ) / RMSe ) / Min( DS ,( RRSe - ( ( ( ( RRSe - RMSe ) / MUR ) * ( Min( MUM ,MUC ) / RMSe ) ) / ( MUR + Max( MUC,DS ) ) ) ) ) ) ,( RRSe + MUC ) )", "obj1": 0.242914979757085, "obj2": 0.6113765317231756}, {"determining": "( Max( ( CRS * FirstVNF_RAM ),FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( Max( Min( DS ,RCSe ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.09189094372515262}, {"determining": "Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.3805668016194332, "obj2": 0.5239077166715586}, {"determining": "Min( ( MRS * ACS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( Max( CS,RRSe ) - MLU ) - RCSe ) )", "obj1": 0.7206477732793523, "obj2": 0.23160908091750398}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ) + Min( BR ,PN ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - ( ( RMSe + RRSe ) * ( CS * DS ) ) ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7773279352226721, "obj2": 0.19159982777133475}, {"determining": "( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MUR ) + Min( MUR ,RMSe ) ) ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6164542234519443}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20647773279352227, "obj2": 0.6274960326934322}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + Max( RRS,Min( MRS ,RRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + ( ( DS / MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3504540698659305}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5931174089068826, "obj2": 0.3241005110280148}, {"determining": "Min( ( ( ( CRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / FirstVNF_RAM ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( AMS ,FirstVNF_CPU ) ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( Min( ( RMSe + RCSe ) ,( DS / MLU ) ) / Min( Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ,MUC ) ) / ( RMSe / DS ) ),MUR ) - MUM )", "obj1": 0.7611336032388664, "obj2": 0.2024578688271565}, {"determining": "Min( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( ( ARS * RRS ) / ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_Mem_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) + ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( Max( RRSe,CS ) / MUC ) ),MUR ) - ( ( Max( CS,RRSe ) - MLU ) - RCSe ) )", "obj1": 0.6862348178137652, "obj2": 0.24880349305225224}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( ( MRS / RRS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 0.9858299595141701, "obj2": 0.006823309424822858}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,( Min( MLU ,MUM ) + ( MLU * MUC ) ) ) - Max( MUM,RMSe ) ),RRSe ) ,Max( RMSe,MUR ) )", "obj1": 0.8643724696356275, "obj2": 0.12450535708259693}, {"determining": "( ACS - ( ( ( RRS * FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MRS * MRS ) - Max( ( FirstVNF_Mem * ( ( FirstVNF_RAM_Server + CRS ) + MRS ) ),CRS ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + ( MLU * RRSe ) ) - ( ( MUM - Min( RRSe ,CS ) ) - Max( DS,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( CS / MUM ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6932029546939971}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( DS / MUR ) + ( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 0.7874493927125507, "obj2": 0.17644698618887225}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( ( DS * CS ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9230769230769231, "obj2": 0.06023529928122628}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.017004828159457357}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.819838056680162, "obj2": 0.16098301635212486}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,MDR ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) + ( RRS * MDR ) )", "choosing": "( Max( ( Min( RRSe ,( RMSe + MUR ) ) - RCSe ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.16985797740373143}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6468462342472836}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) + Min( BR ,PN ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.8724696356275303, "obj2": 0.1093885260594272}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + Max( RRS,Min( MRS ,RRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - CS )", "obj1": 0.18016194331983806, "obj2": 0.6549597188787634}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( ( MUM / Min( ( DS * RRSe ) ,RCSe ) ) ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.05165973551157995}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) + Min( BR ,PN ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24803700416599225}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( ( DS * RCSe ) / ( Min( Min( RCSe ,MUR ) ,( MUR * DS ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.079815868555181}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( ( MUR - RMSe ) * Max( RRSe,CS ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23606160873194307}, {"determining": "( Max( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ),FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.8562753036437247, "obj2": 0.1392715924412678}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( ARS / ( ACS + ( ( PN - ACS ) - Min( Const ,Const ) ) ) ) ) )", "choosing": "( ( Min( RCSe ,( MUR - MUC ) ) * ( DS + Max( Max( RMSe,RCSe ),CS ) ) ) - ( RMSe + ( ( RMSe / ( MUC - MUM ) ) + MUM ) ) )", "obj1": 0.8805668016194332, "obj2": 0.10328683699668764}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( RRSe,( DS * CS ) ) * Max( MLU,RCSe ) )", "obj1": 0.8137651821862348, "obj2": 0.16352406828490204}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe / MUC ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "( ( Const * MDR ) * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9574898785425101, "obj2": 0.03597914969190985}, {"determining": "( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MUR ) + Min( MUR ,RMSe ) ) ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.6548809435160579}, {"determining": "Min( ( ( ( FirstVNF_CPU * ( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( MLU - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9210526315789473, "obj2": 0.07814340137701037}, {"determining": "( ( Const * MDR ) * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( RCSe,DS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.024156633892325443}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU )", "choosing": "Min( Min( MUM ,RRSe ) ,( ( MLU / RCSe ) * ( RCSe * RCSe ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3172172876316819}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) - ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9534412955465587, "obj2": 0.044586121195909406}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( Max( CS,Min( ( RCSe + ( ( RCSe / Max( RMSe,( MUR / RMSe ) ) ) * MLU ) ) ,( MUC / MUM ) ) ) + ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) + ( ( MUM - RMSe ) + Max( MUC,MUC ) ) ) )", "obj1": 0.8582995951417004, "obj2": 0.13701216542535716}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,PN ) ) / ( ( ( ARS - Min( Const ,AMS ) ) + Const ) * ( BR - FirstVNF_Mem_Server ) ) ) ,( DDR - BR ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) + ( CS * RMSe ) ),MUR ) - ( ( Min( Max( ( RMSe / Max( RMSe,DS ) ),MUR ) ,( CS * ( MUR * ( DS + Min( MUR ,MUC ) ) ) ) ) - ( MUC - MUR ) ) - RCSe ) )", "obj1": 0.6052631578947368, "obj2": 0.3087895552857007}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU )", "choosing": "Min( Min( MUM ,RRSe ) ,( ( MLU / RCSe ) * ( RCSe * RCSe ) ) )", "obj1": 0.6032388663967612, "obj2": 0.3097651508458649}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( ARS / ( ACS + ( DDR - ( FirstVNF_Mem * Const ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,( RMSe + RCSe ) ) ) * Min( RCSe ,( MUR - MUC ) ) ) - ( ( RMSe + CS ) - Max( ( MUR * RCSe ),MLU ) ) )", "obj1": 0.8785425101214575, "obj2": 0.10495481098859026}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7186234817813765, "obj2": 0.23423912576417513}, {"determining": "Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_Mem_Server - Max( AMS,( ( ( ( DDR + AMS ) - FirstVNF_CPU ) * ACS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_Mem_Server + Const ) ) / PN ) * FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( ( CS * ( Max( ( MLU - RCSe ),Min( CS ,Min( MLU ,( MUC / MUC ) ) ) ) - ( Max( Max( ( RMSe + MUR ),MUC ),( CS + DS ) ) + Min( RCSe ,RCSe ) ) ) ) + ( MUM + ( MUM * Min( RCSe ,( MLU * MUR ) ) ) ) ),( DS + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.05086199006613069}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7046086190079279}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6468462342472836}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( ( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9493927125506073, "obj2": 0.05083230607913525}, {"determining": "( Max( ( MDR * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),ARS ) - ( FirstVNF_CPU - Min( Const ,Const ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.242914979757085, "obj2": 0.6113765317231756}, {"determining": "( Max( FirstVNF_CPU,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RRSe - Min( RMSe ,MUM ) ) / ( MUM * ( MUR - ( DS * ( DS - ( MUC * ( MLU + ( RRSe + RCSe ) ) ) ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.07925806379548132}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,( RRSe / CS ) ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( Min( ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) / FirstVNF_RAM ) ,( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server / Min( Max( FirstVNF_RAM,MDR ) ,MRS ) ) ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ),DS ) ) )", "obj1": 0.09919028340080972, "obj2": 0.7019586720343128}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,( RRSe / CS ) ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) ) ) - BR ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.701935638414763}, {"determining": "Min( ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RRSe * RMSe ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7186234817813765, "obj2": 0.23423912576417513}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) )", "choosing": "Min( ( RRSe - Max( ( MUC / RMSe ),RMSe ) ) ,Max( ( MUR * Min( DS ,RRSe ) ),( MLU * ( MUM - CS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( PN - FirstVNF_RAM ) * ( ( ARS / ( RRS * ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) ) / MRS ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.701935638414763}, {"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * RRS ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + CRS ) - Max( Const,MRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( AMS + ( Const + BR ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( MLU - DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ( ( ( Max( BR,RRS ) * BR ) - FirstVNF_RAM ) + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - RCSe ) ,( ( RRSe + RRSe ) / DS ) ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RMSe ) + MLU ) - Min( Max( Min( MUC ,CS ),( RMSe * MUR ) ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( Min( DS ,MLU ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( ( PN / CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MLU ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MUM / RCSe ) ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) - Max( ( BR - ( FirstVNF_Mem + AMS ) ),Const ) ) )", "choosing": "Min( ( ( MUM * Min( RRSe ,DS ) ) * ( CS * DS ) ) ,( ( RCSe / RRSe ) / Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM * AMS ) / Const ) - ARS ),( ACS * RRS ) ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( BR ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( ( ( DS / MUR ) + Min( ( RCSe * ( MUM + Min( MUM ,RCSe ) ) ) ,RMSe ) ) / DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Max( ( FirstVNF_Mem_Server - MDR ),MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( MUM - RMSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_RAM / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( BR / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe + DS ) ,( ( ( RCSe + RRSe ) * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Max( Min( CS ,RRSe ),Min( RCSe ,Max( MUR,MUR ) ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7789050718487461}, {"determining": "( ( PN - MDR ) - ( ( Const + FirstVNF_RAM ) * ( CRS - ( MDR / AMS ) ) ) )", "choosing": "Min( ( RRSe * RMSe ) ,( MUC - ( MUM * MLU ) ) )", "obj1": 0.8178137651821862, "obj2": 0.07748979556800495}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( DDR + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - DS )", "obj1": 0.7975708502024291, "obj2": 0.1526239442370014}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.31781376518218624, "obj2": 0.5568881554270815}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.4676113360323887, "obj2": 0.4017224211926347}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.709627173497336}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),Min( ARS ,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( RRSe + ( ( RMSe - MUR ) + RRSe ) ) * MLU ),MUR ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7763112547698949}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) / ( RRS * ( BR + DDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUR + MUR ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.45546558704453444, "obj2": 0.4626612671699668}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.402834008097166, "obj2": 0.4669699581517766}, {"determining": "Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_Mem_Server - Max( AMS,( ( ( ( DDR + AMS ) - FirstVNF_CPU ) * ACS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_Mem_Server + Const ) ) / PN ) * FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( ( CS * ( Max( ( MLU - RCSe ),Min( CS ,Min( MLU ,( MUC / MUC ) ) ) ) - ( Max( Max( ( RMSe + MUR ),MUC ),( CS + DS ) ) + Min( RCSe ,RCSe ) ) ) ) + ( MUM + ( MUM * Min( RCSe ,( MLU * MUR ) ) ) ) ),( DS + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.07542082865276424}, {"determining": "Min( ( Max( ( FirstVNF_CPU * AMS ),Max( CRS,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM_Server * ( BR - DDR ) ) )", "choosing": "( ( ( MUM + ( MUM + ( MLU - ( MUR - CS ) ) ) ) + ( ( RMSe - CS ) - ( DS / Max( CS,DS ) ) ) ) + Min( MUM ,MLU ) )", "obj1": 0.3825910931174089, "obj2": 0.4989921994044205}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 0.5748987854251012, "obj2": 0.3456013159490791}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5910931174089069, "obj2": 0.30344069045761374}, {"determining": "( ( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_RAM ) ) / ( Max( CRS,CRS ) / Max( BR,ACS ) ) )", "choosing": "( ( ( ( RMSe * Min( DS ,Max( DS,( ( MUC / MUR ) - ( DS * RRSe ) ) ) ) ) - Min( MLU ,( Max( MUR,RRSe ) / Min( RMSe ,MUM ) ) ) ) / RCSe ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5425339541939341}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,Min( BR ,PN ) ) ) )", "choosing": "( RCSe / ( Min( Min( RCSe ,MUR ) ,( MUR * DS ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.3796686126011193}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.4011755723012437}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6619433198380567, "obj2": 0.25877026566407485}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( DS / MUR ) + ( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 0.7874493927125507, "obj2": 0.17644698618887225}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6605632753488714}, {"determining": "( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MDR + DDR ) - PN ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6796119050536389}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.043502504367377695}, {"determining": "Min( ( PN * PN ) ,( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) * ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( ( DS - Min( CS ,RRSe ) ) * MLU ) ) - ( ( ( MUC - MUR ) - MLU ) + RCSe ) )", "obj1": 0.6558704453441295, "obj2": 0.2819729643914718}, {"determining": "( Max( ( MDR * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),ARS ) - ( FirstVNF_CPU - Min( Const ,Const ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.6108259150345675}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ARS / Max( FirstVNF_RAM_Server,Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / ( Min( MUC ,( ( MUC / MUR ) / RCSe ) ) / DS ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.4433198380566802, "obj2": 0.4659391210533262}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( CRS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN * BR ) ) ) - ( FirstVNF_CPU_Server - ( ( ( Const + FirstVNF_RAM_Server ) + ( ACS * PN ) ) + MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) - ( ( MUR - RMSe ) + Max( MUC,MUC ) ) ) + Max( CS,Max( Min( MUR ,RMSe ),Min( Min( MUC ,MUC ) ,RMSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.36063872050382484}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + Max( RRS,Min( MRS ,RRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + ( ( DS / MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3504540698659305}, {"determining": "Min( Min( ( FirstVNF_CPU + FirstVNF_CPU_Server ) ,( ( ARS * RRS ) / ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_Mem_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) + ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( Max( RRSe,CS ) / MUC ) ),MUR ) - ( ( Max( CS,RRSe ) - MLU ) - RCSe ) )", "obj1": 0.6862348178137652, "obj2": 0.24880349305225224}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6524493569115509}, {"determining": "( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( CRS - PN ) ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.37449392712550605, "obj2": 0.5233896362522664}, {"determining": "( ( Const * MDR ) * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RRSe * RMSe ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9554655870445344, "obj2": 0.034720021846403895}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( MRS * FirstVNF_RAM ),Min( PN ,FirstVNF_CPU_Server ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ACS * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( AMS * ( CRS / DDR ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS * DS ) / RCSe ),CS ) * RCSe ) - ( Max( MUC,RCSe ) / ( CS - MUM ) ) ) - Max( CS,( MUR - RMSe ) ) ) + MUR ) - Min( MLU ,RCSe ) )", "obj1": 0.6093117408906883, "obj2": 0.29396318715410363}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) ) + Min( BR ,PN ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - ( ( RMSe + RRSe ) * ( CS * DS ) ) ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7773279352226721, "obj2": 0.19159982777133475}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( ARS / ( ACS + ( DDR - ( FirstVNF_Mem * Const ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,( RMSe + RCSe ) ) ) * Min( RCSe ,( MUR - MUC ) ) ) - ( ( RMSe + CS ) - Max( ( MUR * RCSe ),MLU ) ) )", "obj1": 0.6417004048582996, "obj2": 0.292424229934027}, {"determining": "Min( ( CRS - DDR ) ,( ( Max( FirstVNF_CPU,BR ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Max( MUR,DS ) )", "obj1": 0.728744939271255, "obj2": 0.20734947329976994}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,Const ) ) * Min( ( ACS * ( FirstVNF_CPU / Const ) ) ,( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Min( RMSe ,RRSe ) + RRSe ) * ( DS * CS ) ) ,Min( Max( ( ( MUC - RCSe ) - MLU ),DS ) ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.22286659932831945}, {"determining": "( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) )", "choosing": "Min( ( RRSe - ( ( DS / MUR ) + Min( MUR ,RMSe ) ) ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6164542234519443}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20647773279352227, "obj2": 0.6274960326934322}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * MRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / Min( Max( DS,CS ) ,( RRSe + MUC ) ) ) / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.3562753036437247, "obj2": 0.5257742687268928}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( ( MUM / Min( ( DS * RRSe ) ,RCSe ) ) ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 0.9230769230769231, "obj2": 0.05949231824499632}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.742914979757085, "obj2": 0.20417709888159535}, {"determining": "( Min( ( ACS * ( ARS + Min( ( PN / CRS ) ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( MUR ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20040485829959515, "obj2": 0.6361235538373052}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6418520859199873}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) + Min( BR ,PN ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24803700416599225}, {"determining": "Min( ( ( ( ( Const * MDR ) * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RRSe * RMSe ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( CS * CS ) + ( CS * RMSe ) ) - MLU ) - RCSe ) )", "obj1": 0.9736842105263158, "obj2": 0.016693996297564503}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( FirstVNF_Mem / FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( ( MUR - RMSe ) * Max( RRSe,CS ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23606160873194307}, {"determining": "Min( ( ( ( CRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / FirstVNF_RAM ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( AMS ,FirstVNF_CPU ) ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( Min( ( RMSe + RCSe ) ,( DS / MLU ) ) / Min( Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ,MUC ) ) / ( RMSe / DS ) ),MUR ) - MUM )", "obj1": 0.7611336032388664, "obj2": 0.2024578688271565}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( ( MRS / RRS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 0.9858299595141701, "obj2": 0.006823309424822858}, {"determining": "Min( ( FirstVNF_RAM_Server - ARS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Min( MUR ,RMSe ) )", "obj1": 0.7105263157894737, "obj2": 0.22907470868067883}, {"determining": "Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,( Min( Max( BR,FirstVNF_CPU ) ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS / ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) + RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 0.6052631578947368, "obj2": 0.29990920995127524}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7692307692307693, "obj2": 0.19873328649314795}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - ( ARS / ( RRS * ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6413828863302575}, {"determining": "( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( CRS - PN ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.23481781376518218, "obj2": 0.6143187984682631}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - ( ( DDR / BR ) * ( ( MDR * MRS ) - ARS ) ) ),( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - Max( ( DDR * FirstVNF_Mem ),( FirstVNF_Mem - BR ) ) ) ) ) - BR ) )", "choosing": "( ( RMSe - ( MUM + ( ( MUM * RRSe ) * RRSe ) ) ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6947260232100012}, {"determining": "( FirstVNF_CPU_Server * ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( RCSe + ( RMSe * RCSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9595141700404858, "obj2": 0.03372475796261807}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.019266279392277378}, {"determining": "Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_Mem_Server - Max( Max( MDR,DDR ),AMS ) ) )", "choosing": "Max( ( ( CS * ( Max( ( MLU - RCSe ),DS ) - ( Max( Max( ( RMSe + MUR ),MUC ),( CS + DS ) ) + ( Max( RCSe,Max( RCSe,RMSe ) ) - ( Min( MLU ,MUC ) * Min( RMSe ,MLU ) ) ) ) ) ) + ( MUM + ( MUM + Min( RCSe ,( MLU * MUR ) ) ) ) ),( DS + RRSe ) )", "obj1": 0.9190283400809717, "obj2": 0.0707279106421534}, {"determining": "( MDR - ( ( Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ),FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MRS * MRS ) - Max( MRS,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + ( MLU * RRSe ) ) - ( ( MUM - Min( Max( RCSe,( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6906331933096798}, {"determining": "Max( ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.4011755723012437}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7039298614814571}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) * ( ARS + MRS ) )", "choosing": "Min( ( ( ( ( MUC - Max( RRSe,MUM ) ) / RRSe ) - ( RMSe / DS ) ) * ( CS / MUC ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * Min( RCSe ,MUR ) ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "( Max( CRS,PN ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) )", "choosing": "( ( RRSe - Min( RMSe ,RMSe ) ) / ( MUM * ( MUR - ( DS * ( DS - ( MUC * ( MLU + ( RRSe + RCSe ) ) ) ) ) ) ) )", "obj1": 0.9919028340080972, "obj2": 0.006188551916704137}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( ARS / ( ACS + ( DDR - ( FirstVNF_Mem * Const ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,( RMSe + RCSe ) ) ) * Min( RCSe ,( MUR - MUC ) ) ) - ( ( RMSe + CS ) - Max( ( MUR * RCSe ),MLU ) ) )", "obj1": 0.6417004048582996, "obj2": 0.292424229934027}, {"determining": "( ACS - ( ( ( RRS * FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MRS * MRS ) - Max( ( FirstVNF_Mem * ( ( FirstVNF_RAM_Server + CRS ) + MRS ) ),CRS ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + ( MLU * RRSe ) ) - ( ( MUM - Min( RRSe ,CS ) ) - Max( DS,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( CS / MUM ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6932029546939971}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.017004828159457357}, {"determining": "Min( ( PN * PN ) ,( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) * ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( ( DS - Min( CS ,RRSe ) ) * MLU ) ) - ( ( ( MUC - MUR ) - MLU ) + RCSe ) )", "obj1": 0.36639676113360325, "obj2": 0.5252356008708765}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ),DS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012284483421307966}, {"determining": "Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_Mem_Server - Max( Max( MRS,DDR ),AMS ) ) )", "choosing": "Max( ( ( CS * ( Max( ( MLU - RCSe ),DS ) - ( Max( Max( ( RMSe + MUR ),MUC ),( CS + DS ) ) + ( Max( RCSe,Max( RCSe,RMSe ) ) - ( Min( RCSe ,MUC ) * Min( RMSe ,MLU ) ) ) ) ) ) + ( MUM + ( MUM + Min( RCSe ,( MLU * MUR ) ) ) ) ),( DS + RRSe ) )", "obj1": 0.917004048582996, "obj2": 0.07335287913653446}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe / MUC ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "Min( ( PN * PN ) ,( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) * ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( ( DS - Min( CS ,RRSe ) ) * MLU ) ) - ( ( ( MUC - MUR ) - MLU ) + RCSe ) )", "obj1": 0.36639676113360325, "obj2": 0.5252356008708765}, {"determining": "Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_Mem_Server - Max( AMS,( ( ( ( DDR + AMS ) - FirstVNF_CPU ) * ACS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) + ( FirstVNF_Mem_Server + Const ) ) / PN ) * FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( ( CS * ( Max( ( MLU - RCSe ),Min( CS ,Min( MLU ,( MUC / MUC ) ) ) ) - ( Max( Max( ( RMSe + MUR ),MUC ),( CS + DS ) ) + Min( RCSe ,RCSe ) ) ) ) + ( MUM + ( MUM * Min( RCSe ,( MLU * MUR ) ) ) ) ),( DS + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.07542082865276424}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) )", "choosing": "Min( ( RRSe - Max( ( MUC / RMSe ),RMSe ) ) ,Max( ( MUR * Min( DS ,RRSe ) ),( MLU * ( MUM - CS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.017004828159457357}, {"determining": "( ( PN - FirstVNF_RAM ) * ( ( MRS / RRS ) / MRS ) )", "choosing": "( ( ( RRSe + ( ( Min( RCSe ,( MUR - MUC ) ) * ( DS - ( ( RRSe - RMSe ) * ( DS * DS ) ) ) ) / MLU ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * RRS ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + CRS ) - Max( Const,MRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( AMS + ( Const + BR ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( MLU - DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ( ( ( Max( BR,RRS ) * BR ) - FirstVNF_RAM ) + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - RCSe ) ,( ( RRSe + RRSe ) / DS ) ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RMSe ) + MLU ) - Min( Max( Min( MUC ,CS ),( RMSe * MUR ) ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( Min( DS ,MLU ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( ( PN / CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MLU ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MUM / RCSe ) ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) - Max( ( BR - ( FirstVNF_Mem + AMS ) ),Const ) ) )", "choosing": "Min( ( ( MUM * Min( RRSe ,DS ) ) * ( CS * DS ) ) ,( ( RCSe / RRSe ) / Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM * AMS ) / Const ) - ARS ),( ACS * RRS ) ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( BR ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( ( ( DS / MUR ) + Min( ( RCSe * ( MUM + Min( MUM ,RCSe ) ) ) ,RMSe ) ) / DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( ( MRS / RRS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server - MDR ),MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( MUM - RMSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7903343913631018}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( DDR + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - DS )", "obj1": 0.7692307692307693, "obj2": 0.17648230977233037}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MUC ) ) ,( ( MUM * ( RCSe + RCSe ) ) - MUC ) )", "obj1": 0.7834008097165992, "obj2": 0.09442020483569766}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( RRS + BR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( MDR,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Min( MRS ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.39913589633668034}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Min( BR ,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( DDR / FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( MDR + ARS ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + Min( RMSe ,CS ) ) ) * ( Min( CS ,DS ) * Max( ( ( ( MUM / ( MUR + RMSe ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04484852315349642}, {"determining": "( ( PN - MDR ) - ( ( Const + FirstVNF_RAM ) * ( CRS - ( MDR / AMS ) ) ) )", "choosing": "Min( ( RRSe * RMSe ) ,( MUC - ( MUM * MLU ) ) )", "obj1": 0.8178137651821862, "obj2": 0.07748979556800495}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.49190283400809715, "obj2": 0.3792120045013835}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ARS / Max( FirstVNF_RAM_Server,Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / ( Min( MUC ,( ( MUC / MUR ) / RCSe ) ) / DS ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.4433198380566802, "obj2": 0.4659391210533262}, {"determining": "Min( ( Max( ( FirstVNF_CPU * AMS ),Max( CRS,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ) ,( FirstVNF_RAM_Server * ( BR - DDR ) ) )", "choosing": "( ( ( MUM + ( MUM + ( MLU - ( MUR - CS ) ) ) ) + ( ( RMSe - CS ) - ( DS / Max( CS,DS ) ) ) ) + Min( MUM ,MLU ) )", "obj1": 0.3825910931174089, "obj2": 0.4989921994044205}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.709627173497336}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),Min( ARS ,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( RRSe + ( ( RMSe - MUR ) + RRSe ) ) * MLU ),MUR ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7763112547698949}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.402834008097166, "obj2": 0.4669699581517766}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( CRS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN * BR ) ) ) - ( FirstVNF_CPU_Server - ( ( ( Const + FirstVNF_RAM_Server ) + ( ACS * PN ) ) + MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) - ( ( MUR - RMSe ) + Max( MUC,MUC ) ) ) + Max( CS,Max( Min( MUR ,RMSe ),Min( Min( MUC ,MUC ) ,RMSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.36063872050382484}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5728744939271255, "obj2": 0.32163012413022796}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( ( MDR * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),ARS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.2834008097165992, "obj2": 0.5705230947536095}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6740890688259109, "obj2": 0.23233769018675965}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + Max( RRS,Min( MRS ,RRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + ( ( DS / MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3504540698659305}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) + RMSe ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.043502504367377695}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / ( MUM + MUR ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.31781376518218624, "obj2": 0.5534547947022785}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6619433198380567, "obj2": 0.25877026566407485}, {"determining": "( ( Const * ( FirstVNF_Mem - MDR ) ) * ( Min( ( ( FirstVNF_Mem - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( ARS + MDR ) + ( MRS - Const ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( Max( RMSe,( ( DS + MUR ) * ( ( DS * ( ( MUC - RRSe ) / MUR ) ) - Min( DS ,CS ) ) ) ) - Min( MUC ,DS ) ) )", "obj1": 0.9534412955465587, "obj2": 0.016640110285740133}, {"determining": "( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MDR + DDR ) - PN ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6796119050536389}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6605632753488714}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM_Server - DDR ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.622212205778706}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5910931174089069, "obj2": 0.30344069045761374}, {"determining": "( Max( ( MDR * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),ARS ) - ( FirstVNF_CPU - Min( Const ,Const ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.6108259150345675}, {"determining": "Min( ( PN * PN ) ,( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) * ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( ( DS - Min( CS ,RRSe ) ) * MLU ) ) - ( ( ( MUC - MUR ) - MLU ) + RCSe ) )", "obj1": 0.6558704453441295, "obj2": 0.2819729643914718}, {"determining": "( Min( MRS ,( DDR - ( ( ( ( Max( CRS,FirstVNF_CPU ) * FirstVNF_RAM ) - ( BR / CRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( DDR + MRS ) ) ) ) * ( ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ( AMS / ARS ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem ) ) ) ) * ( ACS + Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MLU + RCSe ) ,( Max( Max( ( RMSe * ( MLU * RMSe ) ),( DS / MUM ) ),DS ) - DS ) )", "obj1": 0.3117408906882591, "obj2": 0.5549430827513718}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MUC ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.8117408906882592, "obj2": 0.08363891598398832}, {"determining": "Min( ( FirstVNF_RAM_Server - ARS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Min( MUR ,RMSe ) )", "obj1": 0.7105263157894737, "obj2": 0.22907470868067883}, {"determining": "( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - ( ARS / ( ACS + ( DDR - ( FirstVNF_Mem * Const ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,( RMSe + RRSe ) ) ) * Min( RCSe ,( MUR - MUC ) ) ) - ( ( RMSe + CS ) - Max( ( MUR * RCSe ),MLU ) ) )", "obj1": 0.6437246963562753, "obj2": 0.28976056147189977}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - ( ARS / ( RRS * ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.21862348178137653, "obj2": 0.6163367456902591}, {"determining": "Min( ( CRS - DDR ) ,( ( Max( FirstVNF_CPU,BR ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Max( MUR,DS ) )", "obj1": 0.728744939271255, "obj2": 0.20734947329976994}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6860822510878547}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - ( ARS / ( RRS * ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6413828863302575}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6153846153846154, "obj2": 0.2916854522443888}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.7489878542510121, "obj2": 0.20009609704795864}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,Const ) ) * Min( ( ACS * ( FirstVNF_CPU / Const ) ) ,( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Min( RMSe ,RRSe ) + RRSe ) * ( DS * CS ) ) ,Min( Max( ( ( MUC - RCSe ) - MLU ),DS ) ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.22286659932831945}, {"determining": "Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,( Min( Max( BR,FirstVNF_CPU ) ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS / ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) + RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 0.6052631578947368, "obj2": 0.29990920995127524}, {"determining": "Min( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) )", "obj1": 0.742914979757085, "obj2": 0.20352753679782815}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * MUR ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6939473165627543}, {"determining": "( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( CRS - PN ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.23481781376518218, "obj2": 0.6143187984682631}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_Mem_Server ) ) ) ) - BR ),( Min( ( Const + ACS ) ,( FirstVNF_RAM / Min( RRS ,FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUR,RRSe ) ,MUM ) / RCSe ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + RRSe ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6475075536309267}, {"determining": "( ( FirstVNF_RAM + BR ) * ( Min( ( ( DDR - FirstVNF_RAM_Server ) * FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.9757085020242915, "obj2": 0.0108231555545055}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.7489878542510121, "obj2": 0.20009609704795864}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6524493569115509}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6418520859199873}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( MRS * FirstVNF_RAM ),Min( PN ,FirstVNF_CPU_Server ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ACS * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( AMS * ( CRS / DDR ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS * DS ) / RCSe ),CS ) * RCSe ) - ( Max( MUC,RCSe ) / ( CS - MUM ) ) ) - Max( CS,( MUR - RMSe ) ) ) + MUR ) - Min( MLU ,RCSe ) )", "obj1": 0.6093117408906883, "obj2": 0.29396318715410363}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,( CRS * FirstVNF_RAM ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7789050718487461}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7039298614814571}, {"determining": "Min( ( FirstVNF_CPU - ACS ) ,( FirstVNF_Mem_Server - Max( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ),Max( ( ( ( DDR + AMS ) - FirstVNF_CPU ) * ACS ),DDR ) ) ) )", "choosing": "Max( ( MUM + ( MUM + ( MUM + Min( RCSe ,( MLU * MUR ) ) ) ) ),( DS + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.015611011583772033}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RMSe + RRSe ) * ( DS * CS ) ) ,Min( Max( ( ( MUC - ( RMSe + CS ) ) - MLU ),DS ) ,MUR ) )", "obj1": 0.7165991902834008, "obj2": 0.22420879317238418}, {"determining": "( ( ( Const * MDR ) * ( ( MDR / AMS ) - ( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( DDR - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) - ( Const * PN ) )", "choosing": "Min( ( Min( DS ,RMSe ) / Min( Max( RRSe,( MUR / ( ( ( MLU - MUC ) / RCSe ) - ( ( CS * MUR ) - RMSe ) ) ) ) ,MUC ) ) ,( ( MUM * Max( MUR,( DS * CS ) ) ) - MUC ) )", "obj1": 0.9919028340080972, "obj2": 0.0038761417042626175}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6511388858541703}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( ( MRS / RRS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 0.9858299595141701, "obj2": 0.006823309424822858}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9635627530364372, "obj2": 0.015911387724791105}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9595141700404858, "obj2": 0.01609296522467225}, {"determining": "( ( ( MDR - Const ) * FirstVNF_RAM ) - Min( ( Const * MDR ) ,( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( DS ,RCSe ) / Min( RCSe ,( RMSe - MUM ) ) ) ,( ( MUM * MLU ) / MUC ) )", "obj1": 0.9858299595141701, "obj2": 0.006823309424822858}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6993117436847758}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) * ( ARS + MRS ) )", "choosing": "Min( ( ( ( ( MUC - Max( RRSe,MUM ) ) / RRSe ) - ( RMSe / DS ) ) * ( CS / MUC ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * Min( RCSe ,MUR ) ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ),DS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012284483421307966}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7789050718487461}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( FirstVNF_RAM + DDR ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ),DS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012284483421307966}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) )", "choosing": "Min( ( RRSe - Max( ( MUC / RMSe ),RMSe ) ) ,Max( ( MUR * Min( DS ,RRSe ) ),( MLU * ( MUM - CS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) )", "choosing": "Min( ( RRSe - Max( ( MUC / RMSe ),RMSe ) ) ,Max( ( MUR * Min( DS ,RRSe ) ),( MLU * ( MUM - CS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_RAM / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( BR / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe + DS ) ,( ( ( RCSe + RRSe ) * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Max( Min( CS ,RRSe ),Min( RCSe ,Max( MUR,MUR ) ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * RRS ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + CRS ) - Max( Const,MRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( AMS + ( Const + BR ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( MLU - DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ( ( ( Max( BR,RRS ) * BR ) - FirstVNF_RAM ) + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - RCSe ) ,( ( RRSe + RRSe ) / DS ) ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RMSe ) + MLU ) - Min( Max( Min( MUC ,CS ),( RMSe * MUR ) ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( Min( DS ,MLU ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( ( PN / CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MLU ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - BR ) ) ) ) )", "choosing": "( Min( ( RMSe + RRSe ) ,( MUM / RCSe ) ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) - Max( ( BR - ( FirstVNF_Mem + AMS ) ),Const ) ) )", "choosing": "Min( ( ( MUM * Min( RRSe ,DS ) ) * ( CS * DS ) ) ,( ( RCSe / RRSe ) / Min( DS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( ( FirstVNF_RAM * AMS ) / Const ) - ARS ),( ACS * RRS ) ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( BR ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( ( ( DS / MUR ) + Min( ( RCSe * ( MUM + Min( MUM ,RCSe ) ) ) ,RMSe ) ) / DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( ( DDR + ( Max( ACS,Min( Const ,FirstVNF_RAM_Server ) ) - ( ARS * CRS ) ) ) * ACS ) )", "choosing": "Min( ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( ( ( ( MUC / MUC ) + MUM ) + ( ( MUM * MUR ) / MUR ) ) ,( MUC + RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * FirstVNF_RAM_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MRS * MRS ) - Max( MRS,CRS ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Const ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( ( Min( DS ,MUM ) * RCSe ) - ( Max( MUC,RCSe ) / ( MLU * RMSe ) ) ) - RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( Min( DS ,Max( ( MUM * MLU ),MUR ) ) / ( RMSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * ( Const + ACS ) ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( ( FirstVNF_CPU_Server + ACS ),FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( ( MRS / RRS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.781626249268393}, {"determining": "( ( PN - MDR ) - ( ( Const + FirstVNF_RAM ) * ( CRS - ( MDR / AMS ) ) ) )", "choosing": "Min( ( RRSe * RMSe ) ,( MUC - ( MUM * MLU ) ) )", "obj1": 0.8178137651821862, "obj2": 0.07748979556800495}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Min( BR ,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( DDR / FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( MDR + ARS ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + Min( RMSe ,CS ) ) ) * ( Min( CS ,DS ) * Max( ( ( ( MUM / ( MUR + RMSe ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04484852315349642}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,PN ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ( MDR * BR ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,CS ) - ( RRSe - MLU ) ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.37559204478140845}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.402834008097166, "obj2": 0.4669699581517766}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( DDR + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - DS )", "obj1": 0.7692307692307693, "obj2": 0.17648230977233037}, {"determining": "Min( ( ( ( CRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ACS + AMS ) - ( MDR / BR ) ) ) )", "choosing": "( Max( ( ( Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) / MLU ) / ( MUC / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( MUM + MLU ) )", "obj1": 0.43724696356275305, "obj2": 0.4560109016364856}, {"determining": "( ( MDR - AMS ) - ( MRS - Const ) )", "choosing": "( CS * ( ( DS / ( Max( MLU,Max( RCSe,RMSe ) ) / RRSe ) ) * Min( MUC ,( MUM / ( RRSe * RCSe ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4961037833242265}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MUC ) ) ,( ( MUM * ( RCSe + RCSe ) ) - MUC ) )", "obj1": 0.7773279352226721, "obj2": 0.09690219205064364}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6619433198380567, "obj2": 0.25877026566407485}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5728744939271255, "obj2": 0.32163012413022796}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( CRS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN * BR ) ) ) - ( FirstVNF_CPU_Server - ( ( ( Const + FirstVNF_RAM_Server ) + ( ACS * PN ) ) + MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) - ( ( MUR - RMSe ) + Max( MUC,MUC ) ) ) + Max( CS,Max( Min( MUR ,RMSe ),Min( Min( MUC ,MUC ) ,RMSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.36063872050382484}, {"determining": "Min( ( Min( ACS ,MRS ) / ( ( FirstVNF_Mem_Server - BR ) * ( DDR * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) * ( PN + ( FirstVNF_CPU_Server + Max( BR,FirstVNF_CPU ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS + Max( ( ( ( RRSe / ( MUM - RMSe ) ) + ( CS * DS ) ) - MLU ),RMSe ) ) * Max( Max( MUC,RRSe ),MUM ) ) - ( ( ( MUC / ( MUM + RMSe ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6153846153846154, "obj2": 0.272968153760965}, {"determining": "( Max( ( MDR * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),ARS ) - ( AMS * FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.2834008097165992, "obj2": 0.5698839048178965}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6720647773279352, "obj2": 0.2295983417870779}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + Max( RRS,Min( MRS ,RRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + ( ( DS / MUR ) + Min( MUR ,RMSe ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3504540698659305}, {"determining": "Min( ( FirstVNF_RAM_Server - ARS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Min( MUR ,RMSe ) )", "obj1": 0.7105263157894737, "obj2": 0.22907470868067883}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.39962120140751134}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( ( ( RMSe + CS ) - Min( MUC ,DS ) ) / ( MUM + MUR ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5475771277704474}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( RRS + BR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( MDR,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Min( MRS ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.39913589633668034}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / ( MUM + MUR ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19941352400249424}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6605632753488714}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ),FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( DS * RCSe ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022517609825608926}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.917004048582996, "obj2": 0.04309351023705249}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - ( ARS / ( RRS * ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.21862348178137653, "obj2": 0.6163367456902591}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5910931174089069, "obj2": 0.30344069045761374}, {"determining": "( Min( MRS ,( DDR - ( ( ( ( Max( CRS,FirstVNF_CPU ) * FirstVNF_RAM ) - ( BR / CRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( DDR + MRS ) ) ) ) * ( ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ( AMS / ARS ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem ) ) ) ) * ( ACS + Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MLU + RCSe ) ,( Max( Max( ( RMSe * ( MLU * RMSe ) ),( DS / MUM ) ),DS ) - DS ) )", "obj1": 0.3117408906882591, "obj2": 0.5549430827513718}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) ),PN ) ) ) * ( Max( AMS,FirstVNF_Mem ) * MDR ) )", "choosing": "( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * MUR ) ),MUR ) ) * ( ( DS / RCSe ) - ( RCSe - DS ) ) )", "obj1": 0.07894736842105263, "obj2": 0.73133008231529}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6194523868825194}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,( CRS * FirstVNF_RAM ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + MRS ) ) ) ) ) - MRS ) ),( Max( ( ( FirstVNF_RAM + DDR ) / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * MUR ) / Max( ( MLU / RMSe ),( ( MUR * DS ) - MUR ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7766509485423514}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( FirstVNF_RAM + DDR ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.23279352226720648, "obj2": 0.6023951550088603}, {"determining": "( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( MDR + DDR ) - PN ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6796119050536389}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MUC ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.8117408906882592, "obj2": 0.08363891598398832}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MUM * MUR ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.24696356275303644, "obj2": 0.5981566237869445}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( MRS * FirstVNF_RAM ),Min( PN ,FirstVNF_CPU_Server ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ACS * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( AMS * ( CRS / DDR ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS * DS ) / RCSe ),CS ) * RCSe ) - ( Max( MUC,RCSe ) / ( CS - MUM ) ) ) - Max( CS,( MUR - RMSe ) ) ) + MUR ) - Min( MLU ,RCSe ) )", "obj1": 0.6093117408906883, "obj2": 0.29396318715410363}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7388663967611336, "obj2": 0.19675994689745901}, {"determining": "( ( PN - MDR ) - ( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) ) )", "choosing": "Min( ( ( RMSe * Min( ( RCSe / MLU ) ,RMSe ) ) + Max( RCSe,MUC ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.7894736842105263, "obj2": 0.09281350585507214}, {"determining": "Min( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) )", "obj1": 0.7651821862348178, "obj2": 0.19276271372369405}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM ) * Max( Min( Min( RRS ,RRS ) ,ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + MUC ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( ( RMSe * CS ) ,DS ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6365791858093788}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( MUR + CS ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7123561017111526}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6860822510878547}, {"determining": "Min( Max( FirstVNF_CPU,FirstVNF_RAM ) ,( Min( Max( BR,FirstVNF_CPU ) ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) * ARS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS / ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) + RCSe ),MUR ) - ( MLU / RCSe ) )", "obj1": 0.6052631578947368, "obj2": 0.29990920995127524}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM_Server ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MLU ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6394600918418885}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_Mem_Server ) ) ) ) - BR ),( Min( ( Const + ACS ) ,( FirstVNF_RAM / Min( RRS ,FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUR,RRSe ) ,MUM ) / RCSe ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + RRSe ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6475075536309267}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * MUR ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6939473165627543}, {"determining": "( ( FirstVNF_RAM + BR ) * ( Min( ( ( DDR - FirstVNF_RAM_Server ) * FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.9757085020242915, "obj2": 0.0108231555545055}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6524493569115509}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.7550607287449392, "obj2": 0.19672807266938236}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7039298614814571}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.709627173497336}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6827435631636166}, {"determining": "( ( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( Min( Min( DS ,MLU ) ,( RMSe + RRSe ) ) / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.951417004048583, "obj2": 0.018203685839843293}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6511388858541703}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - DDR ) - Max( ( ACS / FirstVNF_CPU_Server ),MRS ) ) ,Max( BR,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( CRS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( Min( ( CS * MUR ) ,RRSe ) + ( ( MUR + RCSe ) - MUR ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9696356275303644, "obj2": 0.013200633149785293}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( ( MRS / RRS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 0.9858299595141701, "obj2": 0.006823309424822858}, {"determining": "Max( ACS,( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * Max( RMSe,MUR ) ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.700363322803212}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9595141700404858, "obj2": 0.01609296522467225}, {"determining": "( ( ( MDR - Const ) * FirstVNF_RAM ) - Min( ( Const * MDR ) ,( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( DS ,RCSe ) / Min( RCSe ,( RMSe - MUM ) ) ) ,( ( MUM * MLU ) / MUC ) )", "obj1": 0.9858299595141701, "obj2": 0.006823309424822858}, {"determining": "( ( Const * ( FirstVNF_Mem - MDR ) ) * ( Min( ( ( FirstVNF_Mem - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( ARS + MDR ) + ( MRS - Const ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( Max( RMSe,( ( DS + MUR ) * ( ( DS * ( ( MUC - RRSe ) / MUR ) ) - Min( DS ,CS ) ) ) ) - Min( MUC ,DS ) ) )", "obj1": 0.9534412955465587, "obj2": 0.016640110285740133}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.7550607287449392, "obj2": 0.19672807266938236}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6993117436847758}, {"determining": "( ( ( Const * MDR ) * ( ( MDR / AMS ) - ( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( DDR - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) - ( Const * PN ) )", "choosing": "Min( ( Min( DS ,RMSe ) / Min( Max( RRSe,( MUR / ( ( ( MLU - MUC ) / RCSe ) - ( ( CS * MUR ) - RMSe ) ) ) ) ,MUC ) ) ,( ( MUM * Max( MUR,( DS * CS ) ) ) - MUC ) )", "obj1": 0.9919028340080972, "obj2": 0.0038761417042626175}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013929542118923399}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / Max( ( Const / FirstVNF_CPU_Server ),Const ) ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( Max( MUC,RCSe ),MUC ) ) ,( ( MUM * ( RCSe + RCSe ) ) - MUC ) )", "obj1": 0.7834008097165992, "obj2": 0.09442020483569766}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe + DS ) ,( ( CS * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,Max( MUR,MUR ) ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 0.9635627530364372, "obj2": 0.01573574880902268}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MUC ) ) ,( ( MUM * ( RCSe + RCSe ) ) - MUC ) )", "obj1": 0.7834008097165992, "obj2": 0.09442020483569766}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6801267310604623}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) * ( ARS + MRS ) )", "choosing": "Min( ( ( ( ( MUC - Max( RRSe,MUM ) ) / RRSe ) - ( RMSe / DS ) ) * ( CS / MUC ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * Min( RCSe ,MUR ) ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - ( MRS * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( DS ,RCSe ) / Min( RCSe ,MUC ) ) ,( ( MUM * Max( MUR,Max( MUM,DS ) ) ) - MUC ) )", "obj1": 0.9919028340080972, "obj2": 0.0038761417042626175}, {"determining": "( ( ( Const + ( ACS + ( Max( Min( MDR ,Min( FirstVNF_RAM_Server ,CRS ) ),FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) - FirstVNF_RAM ) * ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ) )", "choosing": "Min( ( Min( RRSe ,DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) ,Max( ( MUR * Min( DS ,RRSe ) ),( MLU * ( ( Max( MUR,RCSe ) + DS ) - CS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0008218413305561094}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ),DS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012284483421307966}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( FirstVNF_RAM + DDR ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ),DS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012284483421307966}, {"determining": "( Max( ( FirstVNF_Mem_Server - MDR ),MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( MUM - RMSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_RAM / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( BR / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe + DS ) ,( ( ( RCSe + RRSe ) * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Max( Min( CS ,RRSe ),Min( RCSe ,Max( MUR,MUR ) ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * RRS ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,( CRS + FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + CRS ) - Max( Const,MRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS + CRS ) ,( FirstVNF_Mem + ( AMS + ( Const + BR ) ) ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) / Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / RRS ) ) / Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,Min( ( PN / Const ) ,Min( ACS ,CRS ) ) ) )", "choosing": "Max( ( Max( ( CS * ( Max( ( ( MLU - RRSe ) - CS ),DS ) * MUM ) ),RRSe ) + CS ),( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( MRS ,RRS ) ) ) )", "choosing": "Min( Max( MUR,( MUC / ( MLU / MUC ) ) ) ,( ( MLU - DS ) / ( ( RCSe / MLU ) / ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ( ( ( Max( BR,RRS ) * BR ) - FirstVNF_RAM ) + FirstVNF_Mem ) + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - RCSe ) ,( ( RRSe + RRSe ) / DS ) ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) )", "choosing": "( ( Min( ( RCSe / MLU ) ,RMSe ) + MLU ) - Min( Max( Min( MUC ,CS ),( RMSe * MUR ) ) ,( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( Min( DS ,MLU ) ,( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM * BR ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) * ( ( FirstVNF_Mem + AMS ) * MDR ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( ( PN / CRS ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MLU ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,( ( BR * FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( Min( ( FirstVNF_Mem_Server / Min( PN ,BR ) ) ,DDR ) + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MUR / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUC + MUC ) * ( RMSe / MUM ) ) ) ) ) / ( Max( MUC,CS ) / DS ) ),MUR ) - ( ( ( MUR - Max( DS,CS ) ) - MLU ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( ( FirstVNF_CPU_Server + ACS ),FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.781626249268393}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7408906882591093, "obj2": 0.10029070303261163}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.06787974813029438}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7388663967611336, "obj2": 0.19675994689745901}, {"determining": "Min( ( Min( ACS ,MRS ) / ( ( FirstVNF_Mem_Server - BR ) * ( DDR * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) * ( PN + ( FirstVNF_CPU_Server + Max( BR,FirstVNF_CPU ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS + Max( ( ( ( RRSe / ( MUM - RMSe ) ) + ( CS * DS ) ) - MLU ),RMSe ) ) * Max( Max( MUC,RRSe ),MUM ) ) - ( ( ( MUC / ( MUM + RMSe ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6153846153846154, "obj2": 0.272968153760965}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,PN ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ( MDR * BR ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,CS ) - ( RRSe - MLU ) ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.37559204478140845}, {"determining": "( ( MDR - AMS ) - ( MRS - Const ) )", "choosing": "( CS * ( ( DS / ( Max( MLU,Max( RCSe,RMSe ) ) / RRSe ) ) * Min( MUC ,( MUM / ( RRSe * RCSe ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4961037833242265}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Min( BR ,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( DDR / FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( MDR + ARS ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + Min( RMSe ,CS ) ) ) * ( Min( CS ,DS ) * Max( ( ( ( MUM / ( MUR + RMSe ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.04484852315349642}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3199178410662827}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( CRS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN * BR ) ) ) - ( FirstVNF_CPU_Server - ( ( ( Const + FirstVNF_RAM_Server ) + ( ACS * PN ) ) + MDR ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) - ( ( MUR - RMSe ) + Max( MUC,MUC ) ) ) + Max( CS,Max( Min( MUR ,RMSe ),Min( Min( MUC ,MUC ) ,RMSe ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.36063872050382484}, {"determining": "Max( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.4742568849521724}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5870445344129555, "obj2": 0.2883960977696491}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.6417004048582996, "obj2": 0.2409095362542338}, {"determining": "Min( ( FirstVNF_RAM_Server - ARS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - CRS ) ) ) ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - Min( MUR ,RMSe ) )", "obj1": 0.7105263157894737, "obj2": 0.22907470868067883}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( ( ( RMSe + CS ) - Min( MUC ,DS ) ) / ( MUM + MUR ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5475771277704474}, {"determining": "( ( CRS * FirstVNF_RAM ) - Min( ( DDR - FirstVNF_Mem ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) )", "choosing": "Min( ( Min( DS ,RCSe ) / Min( RCSe ,MUC ) ) ,( Min( RRSe ,( ( CS * ( MUC - ( ( MUC + MUR ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) ) )", "obj1": 0.4392712550607287, "obj2": 0.4335996953564574}, {"determining": "Min( ( ( ( CRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ACS + AMS ) - ( MDR / BR ) ) ) )", "choosing": "( Max( ( ( Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) / MLU ) / ( MUC / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( MUM + MLU ) )", "obj1": 0.43724696356275305, "obj2": 0.4560109016364856}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5769230769230769, "obj2": 0.3129866120711222}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( RRS + BR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( MDR,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Min( MRS ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.39913589633668034}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( FirstVNF_CPU - Min( Const ,Const ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / DS ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5242914979757085, "obj2": 0.37016934509649463}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( Max( MUR,MLU ) + DS ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5597095351767983}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.402834008097166, "obj2": 0.4669699581517766}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.917004048582996, "obj2": 0.04309351023705249}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / ( MUM + MUR ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7165991902834008, "obj2": 0.19941352400249424}, {"determining": "( ( ( ( Max( ACS,BR ) - ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( DDR / FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,MRS ) ) ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( RRS / FirstVNF_Mem ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ),MLU ) + DS ) + MUR ) ) - Max( Max( RMSe,( MLU - RMSe ) ),RRSe ) )", "obj1": 0.2165991902834008, "obj2": 0.6116645230701407}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( FirstVNF_RAM + DDR ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.23279352226720648, "obj2": 0.6023951550088603}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ),FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( DS * RCSe ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022517609825608926}, {"determining": "( ( PN - MDR ) - ( ( Const + FirstVNF_RAM ) * ( CRS - ( MDR / AMS ) ) ) )", "choosing": "Min( ( RRSe * RMSe ) ,( MUC - ( MUM * MLU ) ) )", "obj1": 0.8178137651821862, "obj2": 0.07748979556800495}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,( CRS * FirstVNF_RAM ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + MRS ) ) ) ) ) - MRS ) ),( Max( ( ( FirstVNF_RAM + DDR ) / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * MUR ) / Max( ( MLU / RMSe ),( ( MUR * DS ) - MUR ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7766509485423514}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.39962120140751134}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.629834473251415}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7550607287449392, "obj2": 0.09388995498394435}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6720647773279352, "obj2": 0.2295983417870779}, {"determining": "( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6767196310657804}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5879811641399355}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) + Max( ( FirstVNF_RAM_Server - ( CRS * PN ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( ( Max( ( DS / RMSe ),MLU ) * MUM ),MLU ) + RRSe ) + Min( ( Min( Min( Min( DS ,MLU ) ,Max( RMSe,RRSe ) ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5558733713648051}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6605632753488714}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_Mem_Server ) ) ) ) - BR ),( Min( ( Const + ACS ) ,( FirstVNF_RAM / Min( RRS ,FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUR,RRSe ) ,MUM ) / RCSe ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + RRSe ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6475075536309267}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MUC ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.8117408906882592, "obj2": 0.08363891598398832}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6194523868825194}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) / ( Max( RCSe,DS ) / ( ( RMSe * MUC ) - MUC ) ) )", "obj1": 0.7834008097165992, "obj2": 0.09377021243500895}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) ),PN ) ) ) * ( Max( AMS,FirstVNF_Mem ) * Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( DS ,Max( ( MUM * ( ( MUC / DS ) * MUR ) ),MUR ) ) * ( ( DS / RCSe ) - ( RCSe - DS ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7304353966878991}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / DS ) ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.23986631312129703}, {"determining": "( Min( MRS ,( DDR - ( ( ( ( Max( CRS,FirstVNF_CPU ) * FirstVNF_RAM ) - ( BR / CRS ) ) + ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / ( DDR + MRS ) ) ) ) * ( ( ( PN + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( ( MDR - ( AMS / ARS ) ) + ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem ) ) ) ) * ( ACS + Min( AMS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MLU + RCSe ) ,( Max( Max( ( RMSe * ( MLU * RMSe ) ),( DS / MUM ) ),DS ) - DS ) )", "obj1": 0.3117408906882591, "obj2": 0.5549430827513718}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / Max( ( Const / Min( MRS ,RRS ) ),Const ) ) - CRS ) ) )", "choosing": "Min( ( Min( MUR ,RMSe ) + Max( Max( MUC,RCSe ),MUC ) ) ,( ( MUM * ( RCSe + RCSe ) ) - MUC ) )", "obj1": 0.7935222672064778, "obj2": 0.08973235873916137}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( MUR + CS ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7123561017111526}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.6217370959032912}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( Min( ACS ,FirstVNF_CPU_Server ) / RRS ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( Min( ( MUR / Min( MUM ,CS ) ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) / MLU ) * ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - RMSe ) - MLU ) - RCSe ) )", "obj1": 0.7327935222672065, "obj2": 0.198317782445477}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) / ( FirstVNF_CPU * PN ) ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Min( RCSe ,MUC ) / Min( DS ,( MUM + MUR ) ) )", "obj1": 0.9757085020242915, "obj2": 0.010823155554505498}, {"determining": "( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ACS ) )", "choosing": "( ( ( RRSe - DS ) - ( ( Max( MUR,MLU ) + ( ( RMSe / MUM ) + DS ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.651841865750677}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6680161943319838, "obj2": 0.23393115313865057}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9858299595141701, "obj2": 0.006394170069808001}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6860822510878547}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * MUR ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6939473165627543}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6827435631636166}, {"determining": "( ( PN - MDR ) - ( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( MRS * CRS ) ) )", "choosing": "Min( ( ( RMSe * Min( ( RCSe / MLU ) ,RMSe ) ) + Max( RCSe,MUC ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.7894736842105263, "obj2": 0.09281350585507214}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - DDR ) - Max( ( ACS / FirstVNF_CPU_Server ),MRS ) ) ,Max( BR,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( CRS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( Min( ( CS * MUR ) ,RRSe ) + ( ( MUR + RCSe ) - MUR ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9696356275303644, "obj2": 0.013200633149785293}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6511388858541703}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU / CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,Max( MRS,MRS ) ) ) ) ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC + RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( Max( MUR,( ( RMSe / RMSe ) - Max( RRSe,( MUR * MUM ) ) ) ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7083543403628499}, {"determining": "Max( ACS,( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * Max( RMSe,MUR ) ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.700363322803212}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.951417004048583, "obj2": 0.017381222220177267}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9473684210526315, "obj2": 0.019778503861104156}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) ),PN ) ) ) * ( Max( AMS,FirstVNF_Mem ) * MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( CS + CS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7073082935757045}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9554655870445344, "obj2": 0.015914426328185512}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6801267310604623}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - ( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( RRSe ,( ( CS * ( MUC - ( ( MUC + MUR ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.9898785425101214, "obj2": 0.004431422926297167}, {"determining": "( ( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 0.9615384615384616, "obj2": 0.015672967231493435}, {"determining": "Max( ( ( ACS + ( Max( ( FirstVNF_RAM_Server - ARS ),Min( DDR ,RRS ) ) * ( PN - FirstVNF_RAM ) ) ) - BR ),Const )", "choosing": "( ( ( RMSe + CS ) - Min( MUC ,DS ) ) - ( ( Max( MUR,MLU ) + DS ) - ( ( Max( MUR,RRSe ) + DS ) + Min( ( Min( DS ,( MUC * ( DS + MUC ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7039298614814571}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( CS + CS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.02043448067538333}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6991868816333223}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7039298614814571}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,Min( MDR ,PN ) ) ) * MDR ) * ( ( ( MRS - Const ) + ( ARS + MDR ) ) - Min( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - DDR ) - AMS ) ,Max( BR,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( Max( ( RRSe - RMSe ),Max( RRSe,( ( MUM * RMSe ) * DS ) ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( MUR + RCSe ) / MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9635627530364372, "obj2": 0.01548169742412177}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,DDR ) - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013929542118923399}, {"determining": "( ( Const * ( FirstVNF_Mem - MDR ) ) * ( Min( ( ( FirstVNF_Mem - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( ARS + MDR ) + ( MRS - Const ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( Max( RMSe,( ( DS + MUR ) * ( ( DS * ( ( MUC - RRSe ) / MUR ) ) - Min( DS ,CS ) ) ) ) - Min( MUC ,DS ) ) )", "obj1": 0.9534412955465587, "obj2": 0.016640110285740133}, {"determining": "( Max( FirstVNF_CPU_Server,DDR ) * ( ARS + MRS ) )", "choosing": "Min( ( ( ( ( MUC - Max( RRSe,MUM ) ) / RRSe ) - ( RMSe / DS ) ) * ( CS / MUC ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * Min( RCSe ,MUR ) ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + Min( ( MDR * FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - MUM ) - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.00048530507083100307}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6993117436847758}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.9959514170040485, "obj2": 0.0012284483421307966}, {"determining": "( ( ( Const * MDR ) * ( ( MDR / AMS ) - ( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( DDR - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) - ( Const * PN ) )", "choosing": "Min( ( Min( DS ,RMSe ) / Min( Max( RRSe,( MUR / ( ( ( MLU - MUC ) / RCSe ) - ( ( CS * MUR ) - RMSe ) ) ) ) ,MUC ) ) ,( ( MUM * Max( MUR,( DS * CS ) ) ) - MUC ) )", "obj1": 0.9919028340080972, "obj2": 0.0038761417042626175}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RCSe ) ) ),DS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0012284483421307966}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - ( MRS * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( DS ,RCSe ) / Min( RCSe ,MUC ) ) ,( ( MUM * Max( MUR,Max( MUM,DS ) ) ) - MUC ) )", "obj1": 0.9919028340080972, "obj2": 0.0038761417042626175}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( FirstVNF_RAM + DDR ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6970010810907287}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013929542118923399}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( ( MRS / RRS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem_Server - MDR ),MRS ) / ( Max( MRS,Const ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( MUM - RMSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_RAM / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( BR / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,Min( ( RRSe + DS ) ,( ( ( RCSe + RRSe ) * DS ) / MLU ) ) ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Max( Min( CS ,RRSe ),Min( RCSe ,Max( MUR,MUR ) ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "Min( ( RRSe - DS ) ,( ( MUR * Min( DS ,RRSe ) ) / ( MLU * ( MUM - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) * ( MRS / ( ( ( DDR - FirstVNF_Mem_Server ) / ( ( MRS + ARS ) + FirstVNF_RAM ) ) / ( RRS * RRS ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( RRSe - ( CS - ( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( Max( Min( FirstVNF_RAM ,ACS ),Min( MDR ,CRS ) ) + FirstVNF_CPU ) ) - ( MDR + AMS ) )", "choosing": "Min( Max( DS,CS ) ,( ( Max( MLU,RRSe ) + ( RRSe / ( MUR - DS ) ) ) + ( ( MUR * RMSe ) * ( ( ( Max( CS,Min( RMSe ,RRSe ) ) * Max( CS,RRSe ) ) - ( Min( ( MUC + CS ) ,Min( MUC ,MUR ) ) - DS ) ) - ( Max( MLU,RRSe ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ARS / ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) ) ) + RRSe ) + Min( ( RCSe - RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS + FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( MDR - MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUM ) ,( Max( RCSe,RMSe ) / ( MUR / ( CS * ( ( CS + CS ) / RRSe ) ) ) ) ) * ( RRSe / MUR ) ) / Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Max( ( ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.781626249268393}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( ( FirstVNF_CPU_Server + ACS ),FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( Max( DS,CS ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,( ( BR * FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( Min( ( FirstVNF_Mem_Server / Min( PN ,BR ) ) ,DDR ) + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MUR / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUC + MUC ) * ( RMSe / MUM ) ) ) ) ) / ( Max( MUC,CS ) / DS ) ),MUR ) - ( ( ( MUR - Max( DS,CS ) ) - MLU ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( Max( FirstVNF_CPU,CRS ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( ( DS / RCSe ) - RCSe ) * MLU ),MUR ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.781626249268393}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC - MUC ) * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - ( ( RRSe - MUR ) * RRSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.1911204853809243}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7408906882591093, "obj2": 0.10029070303261163}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "Min( Min( Max( MUM,DS ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.06787974813029438}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.3199178410662827}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_CPU,BR ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( Max( Max( CRS,BR ),FirstVNF_Mem ) + ( ( Const + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( ( ( RMSe + CS ) - Min( MUC ,DS ) ) / ( MUM + MUR ) ) + CS ) - Min( MUC ,Max( ( RRSe + MUC ),Max( ( CS - MUC ),MUM ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.25049574516012546}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( ( MRS / ( ARS / ( MRS / BR ) ) ) / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( ( DS / RCSe ) * DS ) ) ,Min( ( ( Max( MUR,MLU ) + DS ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.5457203510406582}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_CPU_Server ) ) ) ) / ARS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) - CRS ) ) )", "choosing": "Min( ( MUC * RMSe ) ,( ( Max( ( RMSe * RCSe ),RMSe ) * RMSe ) - MUC ) )", "obj1": 0.8967611336032388, "obj2": 0.043124453784044295}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5870445344129555, "obj2": 0.2883960977696491}, {"determining": "( ( CRS * FirstVNF_RAM ) - Min( ( DDR - FirstVNF_Mem ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) )", "choosing": "Min( ( Min( DS ,RCSe ) / Min( RCSe ,MUC ) ) ,( Min( RRSe ,( ( CS * ( MUC - ( ( MUC + MUR ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) ) )", "obj1": 0.4392712550607287, "obj2": 0.4335996953564574}, {"determining": "Min( ( ( ( CRS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( ACS + AMS ) - ( MDR / BR ) ) ) )", "choosing": "( Max( ( ( Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) / MLU ) / ( MUC / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( MUM + MLU ) )", "obj1": 0.43724696356275305, "obj2": 0.4560109016364856}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( RRSe + ( ( RMSe - MUR ) + ( Max( DS,CS ) - MUR ) ) ),DS ) ) )", "obj1": 0.3643724696356275, "obj2": 0.4801009365579211}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.6417004048582996, "obj2": 0.2409095362542338}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( Max( MUR,MLU ) + DS ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5597095351767983}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( Min( RCSe ,( MUR - MUC ) ) * ( DS - Max( CS,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.402834008097166, "obj2": 0.4669699581517766}, {"determining": "Max( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.4742568849521724}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.39962120140751134}, {"determining": "Min( ( MRS * ACS ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7004048582995951, "obj2": 0.21165777886534906}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5769230769230769, "obj2": 0.3129866120711222}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6605632753488714}, {"determining": "( ( Const * FirstVNF_CPU_Server ) * ( PN * Max( FirstVNF_CPU,( PN * MRS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( ( RMSe * MLU ) - ( DS - Max( MLU,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.9230769230769231, "obj2": 0.039533251056596046}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( RRS + BR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( MDR,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Min( MRS ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.35631794104807374}, {"determining": "Min( ( Min( ACS ,MRS ) / ( ( FirstVNF_Mem_Server - BR ) * Min( BR ,PN ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) * ( PN + ( FirstVNF_CPU_Server + Max( BR,FirstVNF_CPU ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS + Max( ( ( ( ( RMSe + RRSe ) / ( MUM - RMSe ) ) + ( CS * DS ) ) - MLU ),RMSe ) ) * Max( Max( MUC,RRSe ),MUM ) ) - ( ( ( MUC / ( MUM + RMSe ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.2219351304594464}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) ) ) - Max( Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( FirstVNF_RAM + DDR ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_CPU - ACS ) ) ) ),MRS ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.23279352226720648, "obj2": 0.6023951550088603}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08741796561321068}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( Max( PN,DDR ) * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( MUM / ( ( ( RCSe * MUM ) + MUM ) / MLU ) ) - Min( MUC ,DS ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5852629249125503}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) / ( ( DS * ( ( DS / MUR ) + Min( MUR ,RMSe ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7613065429181004}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( BR + RRS ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.46558704453441296, "obj2": 0.3903946047492341}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) + Max( ( FirstVNF_RAM_Server - ( CRS * PN ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( ( Max( ( DS / RMSe ),MLU ) * MUM ),MLU ) + RRSe ) + Min( ( Min( Min( Min( DS ,MLU ) ,Max( RMSe,RRSe ) ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5558733713648051}, {"determining": "( ( MDR - AMS ) - ( MRS - Const ) )", "choosing": "( CS * ( ( DS / ( Max( MLU,Max( RCSe,RMSe ) ) / RRSe ) ) * Min( MUC ,( MUM / ( RRSe * RCSe ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4961037833242265}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.37697831276345994}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( RRS + BR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( MDR,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Min( MRS ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.35631794104807374}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5789473684210527, "obj2": 0.3009180755911616}, {"determining": "( ( ( ( Max( ACS,BR ) - ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( DDR / FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,MRS ) ) ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( RRS / FirstVNF_Mem ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ),MLU ) + DS ) + MUR ) ) - Max( Max( RMSe,( MLU - RMSe ) ),RRSe ) )", "obj1": 0.2165991902834008, "obj2": 0.6116645230701407}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7550607287449392, "obj2": 0.09388995498394435}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6194523868825194}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( BR + RRS ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( FirstVNF_RAM_Server * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( ACS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( Max( ( CS - MLU ),( ( RMSe / RMSe ) - Max( ( MUC * MUM ),RMSe ) ) ),RCSe ) ) ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5121457489878543, "obj2": 0.3591422565648767}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / DS ) ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.23986631312129703}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.366843207651728}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6740890688259109, "obj2": 0.2295586246650647}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR - ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / Min( FirstVNF_CPU ,ARS ) ) ) ) ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( MUM + ( ( RMSe - MUR ) + ( Min( Max( MUR,RRSe ) ,RMSe ) - RRSe ) ) ),DS ) ) )", "obj1": 0.34615384615384615, "obj2": 0.49900387687241754}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_Mem_Server ) ) ) ) - BR ),( Min( ( Const + ACS ) ,( FirstVNF_RAM / Min( RRS ,FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUR,RRSe ) ,MUM ) / RCSe ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + RRSe ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6475075536309267}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6690883844667238}, {"determining": "( Max( FirstVNF_CPU_Server,( Const / ( DDR * FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( DS + Min( ( DS + RCSe ) ,Min( RCSe ,RCSe ) ) ) * ( CS * DS ) ) * DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( DS + RMSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6320641117435318}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,( CRS * FirstVNF_RAM ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + MRS ) ) ) ) ) - MRS ) ),( Max( ( ( FirstVNF_RAM + DDR ) / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * MUR ) / Max( ( MLU / RMSe ),( ( MUR * DS ) - MUR ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7766509485423514}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) ) - BR ),Const )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) / ( ( DS * ( ( DS / MUR ) + Min( MUR ,RMSe ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7419908809599094}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( ( BR - MDR ) + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe * RCSe ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.771255060728745, "obj2": 0.0894200645969576}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.629834473251415}, {"determining": "( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ACS ) )", "choosing": "( ( ( RRSe - DS ) - ( ( Max( MUR,MLU ) + ( ( RMSe / MUM ) + DS ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.651841865750677}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ),FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( DS * RCSe ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022517609825608926}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.917004048582996, "obj2": 0.04309351023705249}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ),FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( DS * RCSe ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022517609825608926}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6680161943319838, "obj2": 0.23393115313865057}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( DS - MUM ) ,( Min( MUM ,DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6240502561232351}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( MUR / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9858299595141701, "obj2": 0.006394170069808001}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,PN ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ( MDR * BR ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,CS ) - ( RRSe - MLU ) ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.37559204478140845}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( AMS,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7123561017111526}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.6075314217859251}, {"determining": "( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server / ( RRS * ARS ) ),( MRS * CRS ) ) )", "choosing": "Min( ( MUR - Max( ( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ) / Max( MUM,( ( ( CS - MUM ) / Min( RMSe ,DS ) ) / MUC ) ) ),RRSe ) ) ,( Max( ( CS + CS ),MUR ) - Max( MUC,RCSe ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09898875430513222}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * MUR ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6939473165627543}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( Min( MUR ,MLU ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9757085020242915, "obj2": 0.010190858797034538}, {"determining": "Min( ( BR - FirstVNF_RAM_Server ) ,( ( Max( BR,AMS ) + ( Min( FirstVNF_Mem ,ACS ) + FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( ( DS / MUM ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - ( MUC * ( RRSe + RCSe ) ) ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3704237520791719}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( ( BR + DDR ) ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MUM * ( DS / RCSe ) ) * ( ( DS + CS ) * Max( RCSe,( RMSe / DS ) ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.3935277487764522}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6690883844667238}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6511388858541703}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Min( MUC ,DS ) ) ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.39406577959874334}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( RRS + BR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( MDR,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Min( MRS ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.39913589633668034}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU / CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,Max( MRS,MRS ) ) ) ) ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC + RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( Max( MUR,( ( RMSe / RMSe ) - Max( RRSe,( MUR * MUM ) ) ) ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7083543403628499}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.6217370959032912}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6720647773279352, "obj2": 0.2295983417870779}, {"determining": "Max( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUR + CS ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6839508747860151}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( MUR + CS ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7123561017111526}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( Max( ( ( MLU / Min( MUC ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),RMSe ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9190283400809717, "obj2": 0.04289014693582544}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) ) ) )", "choosing": "Min( ( Min( DS ,( ( MUC - RRSe ) * Max( ( MUR * ( MUC - MLU ) ),RMSe ) ) ) / Min( RCSe ,MUC ) ) ,( ( MUM * Max( MUR,( DS * CS ) ) ) - MUC ) )", "obj1": 0.9736842105263158, "obj2": 0.011211821549124862}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) ),PN ) ) ) * ( Max( AMS,FirstVNF_Mem ) * MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( CS + CS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7073082935757045}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9554655870445344, "obj2": 0.015914426328185512}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6827435631636166}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6801267310604623}, {"determining": "( ( PN - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9898785425101214, "obj2": 0.004304887518567318}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - DDR ) - Max( ( ACS / FirstVNF_CPU_Server ),MRS ) ) ,Max( BR,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( CRS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( Min( ( CS * MUR ) ,RRSe ) + ( ( MUR + RCSe ) - MUR ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9696356275303644, "obj2": 0.013200633149785293}, {"determining": "( ( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ) - Min( FirstVNF_CPU ,CRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Min( ( Min( MUM ,RCSe ) / Min( RCSe ,MUC ) ) ,( Max( ( MLU + MUM ),Max( RCSe,DS ) ) - MUC ) )", "obj1": 0.9615384615384616, "obj2": 0.015672967231493435}, {"determining": "Max( ACS,( ( MDR / Max( ( Const / Min( MRS ,RRS ) ),Const ) ) - CRS ) )", "choosing": "( ( DS - ( MUM * ( RCSe + RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * Max( RMSe,MUR ) ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7023440750213383}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.21862348178137653, "obj2": 0.6075314217859251}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( CS + CS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.02043448067538333}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,( MUM * ( ( MUM * MLU ) - MUC ) ) ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9493927125506073, "obj2": 0.018120302817751743}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6991868816333223}, {"determining": "( Min( Const ,MDR ) * ( Min( ( ( DDR - Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( Min( DS ,MUC ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013795816964339356}, {"determining": "( ( Max( ( FirstVNF_RAM / FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,Min( MDR ,PN ) ) ) * MDR ) * ( ( ( MRS - Const ) + ( ARS + MDR ) ) - Min( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - DDR ) - AMS ) ,Max( BR,FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( Max( ( RRSe - RMSe ),Max( RRSe,( ( MUM * RMSe ) * DS ) ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( MUR + RCSe ) / MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / RCSe ) )", "obj1": 0.9635627530364372, "obj2": 0.01548169742412177}], "10": [{"determining": "Max( ( ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.781626249268393}, {"determining": "( ( PN - ARS ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,MLU ) + DS ) * ( CS * DS ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( ( FirstVNF_CPU_Server + ACS ),FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( Max( DS,CS ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( ( DS / ( RMSe * RCSe ) ) - ( RCSe - DS ) ) * MLU ),MUR ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.781626249268393}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "Min( ( ( Max( AMS,FirstVNF_CPU ) - Max( CRS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( Const + BR ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.2961871698075687}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( Min( ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,( MUM * ( ( MUM * MLU ) - MUC ) ) ) + Max( MUC,RCSe ) ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.4549782211879702}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC - MUC ) * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - ( ( RRSe - MUR ) * RRSe ) ) )", "obj1": 0.7105263157894737, "obj2": 0.1911204853809243}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5870445344129555, "obj2": 0.2883960977696491}, {"determining": "( ( CRS * FirstVNF_RAM ) - Min( ( DDR - FirstVNF_Mem ) ,Max( ( BR + DDR ),Max( ( FirstVNF_Mem_Server - ( ( RRS - ( FirstVNF_Mem - Const ) ) - Const ) ),PN ) ) ) )", "choosing": "Min( ( Min( DS ,RCSe ) / Min( RCSe ,MUC ) ) ,( Min( RRSe ,( ( CS * ( MUC - ( ( MUC + MUR ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) ) )", "obj1": 0.4392712550607287, "obj2": 0.4335996953564574}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - Min( MUC ,Max( ( RRSe + MUC ),Max( ( CS - MUC ),MUM ) ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3401366929515659}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8461538461538461, "obj2": 0.05411936438908233}, {"determining": "( Max( MDR,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) / ( ( Min( CRS ,CRS ) / ARS ) - ( MRS + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RCSe + Max( MUR,MLU ) ) + Min( Min( RCSe ,Min( ( MUM * MUR ) ,( MUC * Max( CS,MUM ) ) ) ) ,( Min( RRSe ,Max( MUC,DS ) ) - RCSe ) ) ) ) - ( MUM * DS ) )", "obj1": 0.3643724696356275, "obj2": 0.4796832940436314}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Max( DS,CS ) - MUR ) - MLU ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5327553873524464}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07379709732419028}, {"determining": "( ( ( ( Max( ACS,BR ) - ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( DDR / FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( ( Const * DDR ) ,Max( BR,FirstVNF_CPU ) ) - ( ( CRS - Const ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / Max( BR,ACS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( Max( DS,CS ) - MUR ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5959848711963608}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( Max( MUR,MLU ) + DS ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5597095351767983}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "( ( PN - MDR ) - ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,MLU ) + DS ) + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6032388663967612, "obj2": 0.25510254262919513}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / ( MUC + ( CS * DS ) ) ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8724696356275303, "obj2": 0.04691728922061113}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6781376518218624, "obj2": 0.21743049006056084}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6194523868825194}, {"determining": "Min( ( ( ( Min( FirstVNF_RAM_Server ,DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + ( BR / FirstVNF_CPU_Server ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MUM / CS ),( MUC + DS ) ),( ( CS + MUC ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.4979757085020243, "obj2": 0.36213411993822026}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( FirstVNF_CPU,BR ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( Max( Max( CRS,BR ),FirstVNF_Mem ) + ( ( Const + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( ( ( RMSe + CS ) - Min( MUC ,DS ) ) / ( MUM + MUR ) ) + CS ) - Min( MUC ,Max( ( RRSe + MUC ),Max( ( CS - MUC ),MUM ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.25049574516012546}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) ) ) )", "choosing": "( Min( MLU ,( MLU / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.6376518218623481, "obj2": 0.24357581996307667}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,RCSe ) ) - RCSe ),MUR ) / ( ( DS * ( ( DS / MUR ) + Min( MUR ,RMSe ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7613065429181004}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) * Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + Min( ( ( BR / DDR ) + ( FirstVNF_CPU_Server + DDR ) ) ,( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,Max( MUC,RCSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6518218623481782, "obj2": 0.23042346247918596}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_CPU_Server ) ) ) ) / ARS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) - CRS ) ) )", "choosing": "Min( ( MUC * RMSe ) ,( ( Max( ( RMSe * RCSe ),RMSe ) * RMSe ) - MUC ) )", "obj1": 0.8967611336032388, "obj2": 0.043124453784044295}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.39962120140751134}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) + Max( ( FirstVNF_RAM_Server - ( CRS * PN ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( ( Max( ( DS / RMSe ),MLU ) * MUM ),MLU ) + RRSe ) + Min( ( Min( Min( Min( DS ,MLU ) ,Max( RMSe,RRSe ) ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5558733713648051}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "Min( Min( Max( MUM,Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ,MUR ) ,( ( RMSe + RRSe ) * ( DS * ( MUC / RMSe ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.03137238739946615}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7408906882591093, "obj2": 0.10029070303261163}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6660380367757601}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,MRS ) ) - ( ( ( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,CRS ) ) / ( ( FirstVNF_RAM_Server * AMS ) / CRS ) ) / MRS ) / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MUM - Min( MUC ,Max( MUM,RRSe ) ) ) + ( ( RRSe * ( DS * MUM ) ) * Max( Max( MUC,CS ),Max( MUC,MLU ) ) ) ) / DS ) ) * ( MUC / MUR ) ) ,Min( ( ( Max( MUR,Min( MUR ,RMSe ) ) + DS ) * ( CS * MUC ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5427953367279511}, {"determining": "( Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) - ( DDR - AMS ) )", "choosing": "( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.23076923076923078, "obj2": 0.5911448159516252}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( Max( PN,DDR ) * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( MUM / ( ( ( RCSe * MUM ) + MUM ) / MLU ) ) - Min( MUC ,DS ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5852629249125503}, {"determining": "( ( BR - MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.48827635408983533}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC - MUC ) * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - ( ( RRSe - MUR ) * RRSe ) ) )", "obj1": 0.6983805668016194, "obj2": 0.2006075806478837}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC - MUC ) * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - ( ( RRSe - MUR ) * RRSe ) ) )", "obj1": 0.6983805668016194, "obj2": 0.2006075806478837}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.9109311740890689, "obj2": 0.04253120694031883}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "( ( PN - MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * MUM ) * ( RCSe - CS ) )", "obj1": 0.7874493927125507, "obj2": 0.08149808179172155}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( MLU ,( ( CS * ( MUC - ( ( MUC + ( CS * DS ) ) * ( CS - MUM ) ) ) ) / MLU ) ) * ( RRSe - CS ) )", "obj1": 0.6417004048582996, "obj2": 0.2409095362542338}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MRS + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - ( CS * RMSe ) ) ) ) ) - ( ( RMSe + CS ) - ( MUC + DS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.543456774418404}, {"determining": "( ( Const * FirstVNF_CPU_Server ) * ( PN * Max( FirstVNF_CPU,( PN * MRS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU / ( ( RMSe * MLU ) - ( DS - Max( MLU,Max( RMSe,CS ) ) ) ) ) ) + RRSe ) + ( Min( MUR ,RMSe ) + ( RCSe / MUR ) ) )", "obj1": 0.9230769230769231, "obj2": 0.039533251056596046}, {"determining": "( Max( FirstVNF_CPU_Server,( Const / ( DDR * FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( DS + Min( ( DS + RCSe ) ,Min( RCSe ,RCSe ) ) ) * ( CS * DS ) ) * DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( DS + RMSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6320641117435318}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR - ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / Min( FirstVNF_CPU ,ARS ) ) ) ) ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( MUM + ( ( RMSe - MUR ) + ( Min( Max( MUR,RRSe ) ,RMSe ) - RRSe ) ) ),DS ) ) )", "obj1": 0.34615384615384615, "obj2": 0.49900387687241754}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,( CRS * FirstVNF_RAM ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + MRS ) ) ) ) ) - MRS ) ),( Max( ( ( FirstVNF_RAM + DDR ) / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * MUR ) / Max( ( MLU / RMSe ),( ( MUR * DS ) - MUR ) ) ) )", "obj1": 0.06072874493927125, "obj2": 0.7766509485423514}, {"determining": "( Min( ( ACS * ( ARS + AMS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU_Server / CRS ) - Max( Const,MRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RCSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6605632753488714}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - ( ARS / ( RRS * ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( MDR - ARS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( RMSe + CS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6634559727960445}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_Mem_Server ) ) ) ) - BR ),( Min( ( Const + ACS ) ,( FirstVNF_RAM / Min( RRS ,FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUR,RRSe ) ,MUM ) / RCSe ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + RRSe ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6475075536309267}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.38241853535731046}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( ( BR - MDR ) + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RMSe * RCSe ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.771255060728745, "obj2": 0.0894200645969576}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08736955418836896}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( BR + RRS ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.46558704453441296, "obj2": 0.3903946047492341}, {"determining": "( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.629834473251415}, {"determining": "( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ACS ) )", "choosing": "( ( ( RRSe - DS ) - ( ( Max( MUR,MLU ) + ( ( RMSe / MUM ) + DS ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.651841865750677}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6720647773279352, "obj2": 0.2295983417870779}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( DS - MUM ) ,( Min( MUM ,DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6240502561232351}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6740890688259109, "obj2": 0.2295586246650647}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( AMS,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7123561017111526}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ),FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( DS * RCSe ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022517609825608926}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7550607287449392, "obj2": 0.09388995498394435}, {"determining": "Min( ( BR - FirstVNF_RAM_Server ) ,( ( Max( BR,AMS ) + ( Min( FirstVNF_Mem ,ACS ) + FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( ( DS / MUM ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - ( MUC * ( RRSe + RCSe ) ) ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3704237520791719}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( Min( MUR ,MLU ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9757085020242915, "obj2": 0.010190858797034538}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "( ( PN - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9898785425101214, "obj2": 0.004304887518567318}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.366843207651728}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * MUR ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6939473165627543}, {"determining": "( ( MDR - AMS ) - ( MRS - Const ) )", "choosing": "( CS * ( ( DS / ( Max( MLU,Max( RCSe,RMSe ) ) / RRSe ) ) * Min( MUC ,( MUM / ( RRSe * RCSe ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4961037833242265}, {"determining": "( ( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) ) - ( ( Const * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) - CRS ) ) )", "choosing": "Min( ( MUC * RMSe ) ,( ( MUM / ( CS + CS ) ) - MUC ) )", "obj1": 0.9959514170040485, "obj2": 0.0013420044286163667}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( CRS * FirstVNF_RAM ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9838056680161943, "obj2": 0.007378590646857407}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.7935222672064778, "obj2": 0.07897641488071273}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,PN ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ( MDR * BR ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,CS ) - ( RRSe - MLU ) ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.37559204478140845}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.37697831276345994}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Min( MUC ,DS ) ) ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.39406577959874334}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / ( Max( MRS,FirstVNF_Mem ) - ( RRS + BR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Max( FirstVNF_Mem,Min( ( FirstVNF_Mem_Server / ACS ) ,( ARS * CRS ) ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) + Max( MDR,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Min( MRS ,MDR ) ) ) ) ) )", "choosing": "( ( RRSe * RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.39913589633668034}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6827435631636166}, {"determining": "( ( Const * MDR ) * ( Min( ( ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) - FirstVNF_CPU ) ,Max( Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ),FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + ( ( ( RCSe + RCSe ) - MUR ) + ( RMSe * RRSe ) ) ) + RMSe ) / ( DS * RCSe ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022517609825608926}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6991868816333223}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9554655870445344, "obj2": 0.015914426328185512}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU / CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,Max( MRS,MRS ) ) ) ) ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC + RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( Max( MUR,( ( RMSe / RMSe ) - Max( RRSe,( MUR * MUM ) ) ) ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7083543403628499}, {"determining": "( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server / ( RRS * ARS ) ),( MRS * CRS ) ) )", "choosing": "Min( ( MUR - Max( ( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ) / Max( MUM,( ( ( CS - MUM ) / Min( RMSe ,DS ) ) / MUC ) ) ),RRSe ) ) ,( Max( ( CS + CS ),MUR ) - Max( MUC,RCSe ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09898875430513222}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.19230769230769232, "obj2": 0.6217370959032912}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( MUM / ( CS + CS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.020434480675383324}, {"determining": "Max( ACS,( ( MDR / Max( ( Const / Min( MRS ,RRS ) ),Const ) ) - CRS ) )", "choosing": "( ( DS - ( MUM * ( RCSe + RCSe ) ) ) - ( ( ( ( MUR + MUM ) / Max( MUR,( DS * Max( RMSe,MUR ) ) ) ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7023440750213383}, {"determining": "Max( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUR + CS ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6839508747860151}, {"determining": "Min( ( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( AMS,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7123561017111526}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( ( ARS + MDR ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3788016344821323}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6507515107752713}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ( ( ( FirstVNF_Mem_Server + ACS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( Max( RMSe,MLU ) * ( Max( MLU,RRSe ) - RCSe ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) + DS ) + MUR ) * ( ( DS + CS ) * Max( Max( MUR,( ( RMSe / RMSe ) - Max( RRSe,( MUC * MUM ) ) ) ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6951466323457385}, {"determining": "( Min( Const ,MDR ) * ( Min( ( ( DDR - Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( Min( DS ,MUC ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013795816964339356}, {"determining": "Max( ( ( ACS + ( FirstVNF_CPU - Min( Const ,Const ) ) ) - BR ),( Min( CRS ,( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( Max( BR,FirstVNF_CPU ),CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) ) - ( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( RCSe,RRSe ),Max( ( CS - MLU ),( ( RMSe / RMSe ) - Max( ( MUC * MUM ),RMSe ) ) ) ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( Max( MUR,( ( RMSe / RMSe ) - Max( RRSe,( MUC * MUM ) ) ) ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7063240080774134}], "11": [{"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ARS ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( Max( MUR,MLU ) + DS ) * ( CS * DS ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_RAM ),( Const / FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,MUM ) ) ) - RCSe ),MUR ) / ( ( DS * ( ( ( Max( Min( CS ,MLU ),RMSe ) + ( Max( RRSe,RCSe ) - ( RRSe + MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * MLU ),MUR ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7800291313106894}, {"determining": "Min( ( ( Max( AMS,FirstVNF_CPU ) - Max( CRS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( Const + BR ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.2961871698075687}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5870445344129555, "obj2": 0.2883960977696491}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12855576932005924}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( ( ARS + MDR ) / Max( ( RRS / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( DS * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.42084971953488454}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.24303601634081778}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( Min( ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) + Min( BR ,PN ) ) / ACS ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,( MUM * ( ( MUM * MLU ) - MUC ) ) ) + Max( MUC,RCSe ) ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3967611336032389, "obj2": 0.4549782211879702}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - Max( ( ( MUM / MUM ) + ( RRSe / DS ) ),Max( DS,CS ) ) ) ) ) ) - ( ( RMSe + CS ) - ( MUC + DS ) ) )", "obj1": 0.6983805668016194, "obj2": 0.19204344025213174}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - Min( MUC ,Max( ( RRSe + MUC ),Max( ( CS - MUC ),MUM ) ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3401366929515659}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6396761133603239, "obj2": 0.23860236110290856}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Max( DS,CS ) - MUR ) - MLU ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5327553873524464}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.46215846650163644}, {"determining": "( Max( MDR,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) / ( ( Min( CRS ,CRS ) / ARS ) - ( MRS + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RCSe + Max( MUR,MLU ) ) + Min( Min( RCSe ,Min( ( MUM * MUR ) ,( MUC * Max( CS,MUM ) ) ) ) ,( Min( RRSe ,Max( MUC,DS ) ) - RCSe ) ) ) ) - ( MUM * DS ) )", "obj1": 0.3643724696356275, "obj2": 0.4796832940436314}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.030277939607383484}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MDR ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC - MUC ) * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6842105263157895, "obj2": 0.20037782235133597}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / ( MUC + ( CS * DS ) ) ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8724696356275303, "obj2": 0.04691728922061113}, {"determining": "( FirstVNF_Mem / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5677894600642763}, {"determining": "Max( ( ( ( RRS - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( Min( ARS ,FirstVNF_Mem_Server ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / DDR ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( DS * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7777239814263548}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6781376518218624, "obj2": 0.21743049006056084}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_CPU_Server ) ) ) ) / ARS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) - CRS ) ) )", "choosing": "Min( ( MUC * RMSe ) ,( ( Max( ( RMSe * RCSe ),RMSe ) * RMSe ) - MUC ) )", "obj1": 0.8967611336032388, "obj2": 0.043124453784044295}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8299595141700404, "obj2": 0.06050652250679667}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7408906882591093, "obj2": 0.10029070303261163}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5558976534557936}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( ( ARS + MDR ) / Max( ( Const / FirstVNF_CPU_Server ),ARS ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,DS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.3583217771742938}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM ) - RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUC * ( CS / ( MUM + Max( RCSe,( RCSe + MUM ) ) ) ) ) ,( ( ( ( MUC - RMSe ) / RCSe ) + ( ( RRSe * ( MUC + MUM ) ) - MUR ) ) * ( DS / DS ) ) ) - Max( ( ( Max( CS,DS ) - MUR ) - MLU ),RCSe ) )", "obj1": 0.9392712550607287, "obj2": 0.023040770735647087}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem ,Max( FirstVNF_CPU,MRS ) ) - ( ( ( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,CRS ) ) / ( ( FirstVNF_RAM_Server * AMS ) / CRS ) ) / MRS ) / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MUM - Min( MUC ,Max( MUM,RRSe ) ) ) + ( ( RRSe * ( DS * MUM ) ) * Max( Max( MUC,CS ),Max( MUC,MLU ) ) ) ) / DS ) ) * ( MUC / MUR ) ) ,Min( ( ( Max( MUR,Min( MUR ,RMSe ) ) + DS ) * ( CS * MUC ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5427953367279511}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.39962120140751134}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( ( DDR / ARS ) / MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + Min( ( Max( ( RRSe * Max( MUR,MUC ) ),MUM ) + ( RMSe - RCSe ) ) ,MUM ) ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8582995951417004, "obj2": 0.05283451516719421}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6660380367757601}, {"determining": "( ( BR - MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.48827635408983533}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.9109311740890689, "obj2": 0.04253120694031883}, {"determining": "( Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) - ( DDR - AMS ) )", "choosing": "( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.23076923076923078, "obj2": 0.5911448159516252}, {"determining": "( ( PN - MDR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM * MUM ) * ( RCSe - CS ) )", "obj1": 0.7874493927125507, "obj2": 0.08149808179172155}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR - ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / Min( FirstVNF_CPU ,ARS ) ) ) ) ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( MUM + ( ( RMSe - MUR ) + ( Min( Max( MUR,RRSe ) ,RMSe ) - RRSe ) ) ),DS ) ) )", "obj1": 0.34615384615384615, "obj2": 0.49900387687241754}, {"determining": "Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( DS ,Min( MUC ,DS ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6518218623481782, "obj2": 0.23042346247918596}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( DS - MUM ) ,( Min( MUM ,DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6240502561232351}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.551812426276522}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "( ( FirstVNF_Mem_Server / Min( Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ,FirstVNF_Mem_Server ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * Max( RRS,FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) + Min( MUR ,MUR ) ) - ( ( MUM - Min( Max( ( ( RRSe + RRSe ) * ( MLU - CS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( Min( DS ,MUM ) * RMSe ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6571671995328693}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08736955418836896}, {"determining": "( Min( Const ,MDR ) * ( Min( ( ( DDR - Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( Min( DS ,MUC ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013795816964339356}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( Const * BR ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( CS,MUC ) ) / ( MUM * MUC ) ) - Max( ( ( MUM / MUM ) + ( RRSe / DS ) ),Max( DS,CS ) ) ) ) ) ) - ( ( RMSe + CS ) - ( MUC + DS ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6140916619945767}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_Mem_Server ) ) ) ) - BR ),( Min( ( Const + ACS ) ,( FirstVNF_RAM / Min( RRS ,FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUR,RRSe ) ,MUM ) / RCSe ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + RRSe ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6475075536309267}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8461538461538461, "obj2": 0.05411936438908233}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( AMS,FirstVNF_Mem ) * MDR ) ) )", "choosing": "( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.2145748987854251, "obj2": 0.6027743046475146}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "( Max( FirstVNF_CPU_Server,( Const / ( DDR * FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( DS + Min( ( DS + RCSe ) ,Min( RCSe ,RCSe ) ) ) * ( CS * DS ) ) * DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( DS + RMSe ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6320641117435318}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6150266664005553}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Min( MUC ,DS ) ) ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.39406577959874334}, {"determining": "( Max( MRS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * ACS ) )", "choosing": "( ( ( RRSe - DS ) - ( ( Max( MUR,MLU ) + ( ( RMSe / MUM ) + DS ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.651841865750677}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Max( ( ( RRSe / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8380566801619433, "obj2": 0.05803195923882956}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Const / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6298268035667733}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( Max( PN,DDR ) * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( MUM / ( ( ( RCSe * MUM ) + MUM ) / MLU ) ) - Min( MUC ,DS ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5852629249125503}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.6720647773279352, "obj2": 0.2295983417870779}, {"determining": "( ( BR * MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - Max( DDR,( ACS + DDR ) ) ) * ( ACS / ( Max( FirstVNF_CPU_Server,DDR ) + Max( ACS,Const ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( ( MLU + RCSe ) + CS ) * ( MUM / MUM ) ) ,( MUC - MUM ) ) ) ) + MLU ) * ( ( ( ( MLU - Min( Max( ( MLU + CS ),DS ) ,DS ) ) * RCSe ) + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.003647984499783791}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "Min( ( ( ( Min( FirstVNF_RAM_Server ,DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + ( BR / FirstVNF_CPU_Server ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MUM / CS ),( MUC + DS ) ),( ( CS + MUC ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.4979757085020243, "obj2": 0.36213411993822026}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9554655870445344, "obj2": 0.015914426328185512}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MRS + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - ( CS * RMSe ) ) ) ) ) - ( ( RMSe + CS ) - ( MUC + DS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.543456774418404}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( AMS,FirstVNF_Mem ) * ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7129077144729474}, {"determining": "( ( MDR - AMS ) - ( MRS - Const ) )", "choosing": "( CS * ( ( DS / ( Max( MLU,Max( RCSe,RMSe ) ) / RRSe ) ) * Min( MUC ,( MUM / ( RRSe * RCSe ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4961037833242265}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - PN ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6740890688259109, "obj2": 0.2295586246650647}, {"determining": "( Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) - ( DDR - AMS ) )", "choosing": "( ( MLU - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.707690381287658}, {"determining": "( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,MRS ) * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( RMSe + CS ) - Min( RCSe ,DS ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7935222672064778, "obj2": 0.07807260287177299}, {"determining": "( ( CRS * ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( Min( MUR ,MLU ) / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9757085020242915, "obj2": 0.010190858797034538}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5490622520079006}, {"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - PN ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,( ( Max( RCSe,RMSe ) + DS ) / ( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7631578947368421, "obj2": 0.09308792510341617}, {"determining": "( ( PN - MDR ) - ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( Max( MUR,MLU ) + DS ) + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( CS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5957118614010085}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) / AMS ) - Max( FirstVNF_CPU,MRS ) ) / ( ACS - CRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( ( ARS + MDR ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server * DDR ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,Min( Max( DS,MLU ) ,RMSe ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( RMSe + DS ),( DS / CS ) ),( ( DS - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.4716599190283401, "obj2": 0.38702641895080947}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "Max( ( ( ACS + ( ( PN - ( MRS / BR ) ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * RRS ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6652934987638145}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server * ARS ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR / FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( Min( ( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ,MUM ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24696356275303644, "obj2": 0.5849015900987975}, {"determining": "Max( Min( AMS ,( ( Max( Const,MDR ) + ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ),( ( ( PN / Const ) + ( Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * CRS ) + DDR ) ,( BR * FirstVNF_Mem ) ) - PN ) ) - CRS ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( Max( ( MUM / MUC ),( ( RRSe - ( RCSe - Max( MUR,MUR ) ) ) / ( RCSe - RRSe ) ) ) + DS ) )", "obj1": 0.09919028340080972, "obj2": 0.6974385256397712}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem_Server / BR ),MRS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Max( Min( Min( MUM ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) ,MUM ),CS ) * ( ( MLU * DS ) * MUM ) ),MUR ) - ( ( ( Min( DS ,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7692307692307693, "obj2": 0.08897064973342525}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6827435631636166}, {"determining": "Min( ( BR - FirstVNF_RAM_Server ) ,( ( Max( BR,AMS ) + ( Min( FirstVNF_Mem ,ACS ) + FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( ( DS / MUM ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - ( MUC * ( RRSe + RCSe ) ) ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3704237520791719}, {"determining": "Min( ( Min( MRS ,MRS ) + Max( Const,ACS ) ) ,Min( ( ( ( FirstVNF_CPU + CRS ) - ( AMS * ( FirstVNF_RAM_Server - Min( ( MDR / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - ( MUR * ( ( ( DS / RCSe ) - ( ( ( MLU * MUC ) / RRSe ) - DS ) ) * MLU ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3907362354071379}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7510121457489879, "obj2": 0.0971094066664676}, {"determining": "( ( Const * MDR ) * ( Min( ( FirstVNF_CPU - ( FirstVNF_RAM_Server - DDR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( MDR - ARS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) + ( ( ( RRS - FirstVNF_CPU ) + Const ) / Max( ( Const * FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( MLU - MUR ) + ( RRSe + RRSe ) ) * ( RRSe / MUM ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.006874819827856875}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.366843207651728}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.38241853535731046}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,( Min( DS ,Max( ( MUM * ( ( MUM / DS ) * MUR ) ),MUR ) ) / ( RMSe / MUC ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6939473165627543}, {"determining": "( Max( FirstVNF_CPU,MRS ) / ( Min( FirstVNF_Mem_Server ,Max( AMS,FirstVNF_CPU_Server ) ) - ( ARS / ( RRS * ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( MDR - ARS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( RMSe + CS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6634559727960445}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( RMSe + CS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9493927125506073, "obj2": 0.018938703763692447}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6194523868825194}, {"determining": "( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server / ( RRS * ARS ) ),( MRS * CRS ) ) )", "choosing": "Min( ( MUR - Max( ( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ) / Max( MUM,( ( ( CS - MUM ) / Min( RMSe ,DS ) ) / MUC ) ) ),RRSe ) ) ,( Max( ( CS + CS ),MUR ) - Max( MUC,RCSe ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09898875430513222}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,PN ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( ( MDR * BR ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,CS ) - ( RRSe - MLU ) ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.37559204478140845}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) * Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + Min( ( ( BR / DDR ) + ( FirstVNF_CPU_Server + DDR ) ) ,( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,Max( MUC,RCSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6518218623481782, "obj2": 0.23042346247918596}], "12": [{"determining": "( ( PN - ( Min( MRS ,Const ) + MDR ) ) - ( PN + AMS ) )", "choosing": "( ( MUM + MUM ) * ( RCSe - ( MUM * Min( Max( ( ( DS + CS ) + Max( MLU,DS ) ),CS ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "Min( ( ( Max( AMS,FirstVNF_CPU ) - Max( CRS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( Const + BR ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.2961871698075687}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.5870445344129555, "obj2": 0.2883960977696491}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12855576932005924}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.24303601634081778}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - Max( ( ( MUM / MUM ) + ( RRSe / DS ) ),Max( DS,CS ) ) ) ) ) ) - ( ( RMSe + CS ) - ( MUC + DS ) ) )", "obj1": 0.6983805668016194, "obj2": 0.19204344025213174}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.44582898331684506}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( ( DS + CS ) / RMSe ) ,Min( ( ( MUC + MUM ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),( DS - Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - Min( MUC ,Max( ( RRSe + MUC ),Max( ( CS - MUC ),MUM ) ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.3401366929515659}, {"determining": "Min( ( ( ( ( ( ACS - MDR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Min( Const ,( Min( FirstVNF_RAM_Server ,ACS ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( Max( ( Const / ( FirstVNF_RAM / FirstVNF_CPU ) ),FirstVNF_CPU ) + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( DS - Max( Max( RMSe,RCSe ),CS ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( Min( ( RRSe / DS ) ,MUR ) ,( Min( RMSe ,RCSe ) - ( ( MUM - CS ) + ( MUR - RMSe ) ) ) ) / RCSe ) ,( MUC - DS ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4057300852302713}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6396761133603239, "obj2": 0.23860236110290856}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Max( DS,CS ) - MUR ) - MLU ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5327553873524464}, {"determining": "Max( ( ( Const + DDR ) - BR ),( Min( CRS ,( Const + ACS ) ) / BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( RCSe / Min( DS ,( ( RRSe * RCSe ) * Max( MUC,DS ) ) ) ) ,( RRSe - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6501540329024146}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Const / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6114352984851141}, {"determining": "( Min( ( MRS / MRS ) ,( Const / CRS ) ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) + Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( FirstVNF_RAM_Server,ACS ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( Max( CS,MLU ) - RMSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5916963065121271}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6781376518218624, "obj2": 0.21743049006056084}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / ( MUC + ( CS * DS ) ) ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8724696356275303, "obj2": 0.04691728922061113}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( FirstVNF_Mem / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5677894600642763}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU / ( FirstVNF_RAM_Server + Min( Const ,FirstVNF_CPU_Server ) ) ) ) / ARS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) - CRS ) ) )", "choosing": "Min( ( MUC * RMSe ) ,( ( Max( ( RMSe * RCSe ),RMSe ) * RMSe ) - MUC ) )", "obj1": 0.8967611336032388, "obj2": 0.043124453784044295}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - Const ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5454991970265097}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8299595141700404, "obj2": 0.06050652250679667}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM ) - RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUC * ( CS / ( MUM + Max( RCSe,( RCSe + MUM ) ) ) ) ) ,( ( ( ( MUC - RMSe ) / RCSe ) + ( ( RRSe * ( MUC + MUM ) ) - MUR ) ) * ( DS / DS ) ) ) - Max( ( ( Max( CS,DS ) - MUR ) - MLU ),RCSe ) )", "obj1": 0.9392712550607287, "obj2": 0.023040770735647087}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( RMSe + MUM ) - MUM ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6619433198380567, "obj2": 0.22800647740981292}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( ( ARS + MDR ) / Max( ( Const / FirstVNF_CPU_Server ),ARS ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,DS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.5060728744939271, "obj2": 0.3583217771742938}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.46215846650163644}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MRS + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - ( CS * RMSe ) ) ) ) ) - ( ( RMSe + CS ) - ( MUC + DS ) ) )", "obj1": 0.2975708502024291, "obj2": 0.543456774418404}, {"determining": "( Max( MDR,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) / ( ( Min( CRS ,CRS ) / ARS ) - ( MRS + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RCSe + Max( MUR,MLU ) ) + Min( Min( RCSe ,Min( ( MUM * MUR ) ,( MUC * Max( CS,MUM ) ) ) ) ,( Min( RRSe ,Max( MUC,DS ) ) - RCSe ) ) ) ) - ( MUM * DS ) )", "obj1": 0.3643724696356275, "obj2": 0.4796832940436314}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( AMS - ( ARS + FirstVNF_RAM_Server ) ) ) ,( Const * Const ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( Const ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - CRS ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4690082682928463}, {"determining": "Max( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5371495226095013}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5558976534557936}, {"determining": "( ( ( DDR / ARS ) / MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + Min( ( Max( ( RRSe * Max( MUR,MUC ) ),MUM ) + ( RMSe - RCSe ) ) ,MUM ) ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8582995951417004, "obj2": 0.05283451516719421}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Min( MDR ,CRS ) / Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6330260967579328}, {"determining": "( ( BR - MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.48827635408983533}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "Min( ( ( ( MUM * ( ( MUC + MUM ) - MUM ) ) / RMSe ) / CS ) ,( RRSe + MUC ) )", "obj1": 0.9109311740890689, "obj2": 0.04253120694031883}, {"determining": "( ( Const * MDR ) * ( Min( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.39473684210526316, "obj2": 0.4539295515000649}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6660380367757601}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( CRS * Const ) ) ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( PN ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( RMSe + CS ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6568750938019388}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / DDR ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / MUM ) ) ,( MUM - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9190283400809717, "obj2": 0.029130422127637137}, {"determining": "( ( BR - MDR ) - ( ( Const * MDR ) * ( ( MDR - ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / Min( FirstVNF_CPU ,ARS ) ) ) ) ) - CRS ) ) )", "choosing": "( CS * ( ( DS / RCSe ) - Max( ( MUM + ( ( RMSe - MUR ) + ( Min( Max( MUR,RRSe ) ,RMSe ) - RRSe ) ) ),DS ) ) )", "obj1": 0.34615384615384615, "obj2": 0.49900387687241754}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( DS - MUM ) ,( Min( MUM ,DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6240502561232351}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6194523868825194}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - Max( ( ( MUM / MUM ) + ( RRSe / DS ) ),Max( DS,CS ) ) ) ) ) ) - ( ( RMSe + CS ) - RCSe ) )", "obj1": 0.6821862348178138, "obj2": 0.20262318913886934}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8461538461538461, "obj2": 0.05411936438908233}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - ( ( Const * MDR ) * ( ( ARS / BR ) - Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( CRS / ( Const * BR ) ) ) + ( ACS / Const ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + RRSe ),MUM ) ,MLU ) / RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MLU / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MUR * RMSe ) ) ) - Max( RCSe,RCSe ) ) ) / ( Max( DS,RMSe ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10857040414242651}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - Max( Max( CS,DS ),MUR ) )", "obj1": 0.4757085020242915, "obj2": 0.381136672826957}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.03018771208562553}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MDR ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( AMS ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC - MUC ) * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6862348178137652, "obj2": 0.19875676961197827}, {"determining": "Min( ( Min( MRS ,MRS ) + Max( Const,ACS ) ) ,Min( ( ( ( FirstVNF_CPU + CRS ) - ( AMS * ( FirstVNF_RAM_Server - Min( ( MDR / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - ( MUR * ( ( ( DS / RCSe ) - ( ( ( MLU * MUC ) / RRSe ) - DS ) ) * MLU ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3907362354071379}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( ( RMSe - MUR ) * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.39068825910931176, "obj2": 0.45542328702352736}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Max( ( ( RRSe / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8380566801619433, "obj2": 0.05803195923882956}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Const / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6298268035667733}, {"determining": "( Min( Const ,MDR ) * ( Min( ( ( DDR - Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( Min( DS ,MUC ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013795816964339356}, {"determining": "Max( Min( AMS ,( ( Max( Const,MDR ) + ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ),( ( ( PN / Const ) + ( Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * CRS ) + DDR ) ,( BR * FirstVNF_Mem ) ) - PN ) ) - CRS ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( Max( ( MUM / MUC ),( ( RRSe - ( RCSe - Max( MUR,MUR ) ) ) / ( RCSe - RRSe ) ) ) + DS ) )", "obj1": 0.09919028340080972, "obj2": 0.6974385256397712}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "Min( ( ( ( Min( FirstVNF_RAM_Server ,DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + ( BR / FirstVNF_CPU_Server ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MUM / CS ),( MUC + DS ) ),( ( CS + MUC ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.4979757085020243, "obj2": 0.36213411993822026}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + Max( BR,Min( RRS ,( FirstVNF_RAM + DDR ) ) ) ) * ( ( MDR - ARS ) + ( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( ACS - BR ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( ( ( DS - ( ( ( RCSe - RMSe ) - RRSe ) + MUR ) ) + ( CS * ( ( DS * Max( RCSe,RCSe ) ) + Min( MUR ,Max( RMSe,DS ) ) ) ) ),Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ),MUR ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6497975708502024, "obj2": 0.23713386992078792}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( MDR - AMS ) - ( MRS - Const ) )", "choosing": "( CS * ( ( DS / ( Max( MLU,Max( RCSe,RMSe ) ) / RRSe ) ) * Min( MUC ,( MUM / ( RRSe * RCSe ) ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.4961037833242265}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server * ARS ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7129077144729474}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6827435631636166}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.4004011983944838}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server + ( Max( PN,DDR ) * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( MUM / ( ( ( RCSe * MUM ) + MUM ) / MLU ) ) - Min( MUC ,DS ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5852629249125503}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( Min( DS ,MUM ) + RCSe ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6591931586724827}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server * ARS ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR / FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( Min( ( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ,MUM ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24696356275303644, "obj2": 0.5849015900987975}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( RMSe + CS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9493927125506073, "obj2": 0.018938703763692447}, {"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - PN ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,( ( Max( RCSe,RMSe ) + DS ) / ( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7631578947368421, "obj2": 0.09308792510341617}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) * Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + Min( ( ( BR / DDR ) + ( FirstVNF_CPU_Server + DDR ) ) ,( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,Max( MUC,RCSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6518218623481782, "obj2": 0.23042346247918596}, {"determining": "( ( PN - MDR ) - ( ( ( RRS / Max( AMS,FirstVNF_Mem ) ) * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( MUR * MUR ) - Max( ( ( ( RCSe / DS ) - ( RCSe - DS ) ) * MLU ),RCSe ) )", "obj1": 0.7793522267206477, "obj2": 0.0848886326091258}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem_Server / BR ),MRS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Max( Min( Min( MUM ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) ,MUM ),CS ) * ( ( MLU * DS ) * MUM ) ),MUR ) - ( ( ( Min( DS ,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7692307692307693, "obj2": 0.08897064973342525}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "( Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) - ( DDR - AMS ) )", "choosing": "( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.23076923076923078, "obj2": 0.5911448159516252}, {"determining": "( ( PN - MDR ) - ( ( CRS / MDR ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - DDR ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( ( Max( RMSe,( ( CS * RCSe ) + ( RRSe / MUM ) ) ) / Min( ( Min( DS ,RCSe ) * RRSe ) ,Max( MUM,DS ) ) ),MUR ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11141266043602495}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.366843207651728}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9554655870445344, "obj2": 0.015914426328185512}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Min( MUC ,DS ) ) ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.39406577959874334}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5909172428267537}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10155588973178012}, {"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( FirstVNF_RAM * ACS ) ) / FirstVNF_CPU_Server ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * CS ) ) ,DS ) ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7073331385503943}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) / AMS ) - Max( FirstVNF_CPU,MRS ) ) / ( ACS - CRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( ( ARS + MDR ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server * DDR ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,Min( Max( DS,MLU ) ,RMSe ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( RMSe + DS ),( DS / CS ) ),( ( DS - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.37290845546107393}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08736955418836896}, {"determining": "Min( ( ( ( ( FirstVNF_Mem - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.01164716091693274}, {"determining": "( ( BR * MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - Max( DDR,( ACS + DDR ) ) ) * ( ACS / ( Max( FirstVNF_CPU_Server,DDR ) + Max( ACS,Const ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( ( MLU + RCSe ) + CS ) * ( MUM / MUM ) ) ,( MUC - MUM ) ) ) ) + MLU ) * ( ( ( ( MLU - Min( Max( ( MLU + CS ),DS ) ,DS ) ) * RCSe ) + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.003647984499783791}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) / AMS ) - Max( FirstVNF_CPU,MRS ) ) / ( ACS - CRS ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( ( ARS + MDR ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server * DDR ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,Min( Max( DS,MLU ) ,RMSe ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( RMSe + DS ),( DS / CS ) ),( ( DS - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.48785425101214575, "obj2": 0.37290845546107393}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - ( Max( Const,FirstVNF_Mem ) * ( Min( Min( BR ,PN ) ,( ARS - FirstVNF_CPU_Server ) ) - CRS ) ) )", "choosing": "Min( Max( ( Min( MUR ,RRSe ) * CS ),RRSe ) ,Min( ( ( RMSe + RRSe ) * ( Max( RRSe,CS ) + RMSe ) ) ,( ( RCSe / MUR ) / Min( DS ,MUM ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004777015936733416}, {"determining": "( ( Const * MDR ) * ( Min( ( FirstVNF_CPU - ( FirstVNF_RAM_Server - DDR ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( ( BR + ( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( MDR - ARS ) ) * ( Min( Const ,FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ) + ( ( ( RRS - FirstVNF_CPU ) + Const ) / Max( ( Const * FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( MLU - MUR ) + ( RRSe + RRSe ) ) * ( RRSe / MUM ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.006874819827856875}, {"determining": "Min( ( BR - FirstVNF_RAM_Server ) ,( ( Max( BR,AMS ) + ( Min( FirstVNF_Mem ,ACS ) + FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( ( DS / MUM ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - ( MUC * ( RRSe + RCSe ) ) ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.3704237520791719}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server + DDR ) ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.757085020242915, "obj2": 0.09431136373472344}], "13": [{"determining": "( ( PN - AMS ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - Min( CRS ,ACS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( ( ( MUR - MUC ) + MLU ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Min( MRS ,Const ) + MDR ) ) - ( PN + AMS ) )", "choosing": "( ( MUM + MUM ) * ( RCSe - ( MUM * Min( Max( ( ( DS + CS ) + Max( MLU,DS ) ),CS ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "Min( ( ( Max( AMS,FirstVNF_CPU ) - Max( CRS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( Const + BR ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.2961871698075687}, {"determining": "( ( ( ( Max( RRS,( MRS - ACS ) ) + AMS ) + MDR ) - MDR ) - ( ( Max( ( Max( MRS,( Const / MDR ) ) / Const ),Const ) * BR ) * Max( DDR,( BR / CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,Max( RCSe,( MUM * RRSe ) ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( CS - RCSe ) - Max( RRSe,MUR ) ) ) ,( MLU * RCSe ) ) ) - ( MUM - RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3307153549275483}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( DS * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - RCSe ) )", "obj1": 0.5850202429149798, "obj2": 0.2554238960887367}, {"determining": "( ( ( Const + BR ) + PN ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( MUM - ( RRSe * ( ( CS * MUC ) * Min( ( DS * MUM ) ,( RMSe + MLU ) ) ) ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * ( MUC - ( MUM * MLU ) ) ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1471684118834796}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.291497975708502, "obj2": 0.5228029199791129}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - Max( ( ( MUM / MUM ) + ( RRSe / DS ) ),Max( DS,CS ) ) ) ) ) ) - ( ( RMSe + CS ) - RCSe ) )", "obj1": 0.6821862348178138, "obj2": 0.20262318913886934}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - Max( Max( CS,DS ),MUR ) )", "obj1": 0.4757085020242915, "obj2": 0.381136672826957}, {"determining": "( ( PN - MDR ) - ( ( Min( FirstVNF_CPU_Server ,( DDR * FirstVNF_RAM ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( RMSe * CS ) + MUC ) / MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( Min( MUC ,DS ) - ( RMSe + CS ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12853963381651523}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( ACS + PN ) / FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RMSe + MLU ) + DS ) + MUR ) ) - ( ( DS / DS ) - Min( MUC ,DS ) ) )", "obj1": 0.4230769230769231, "obj2": 0.4386053977750712}, {"determining": "Min( ( ( ( ( ( ACS - MDR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Min( Const ,( Min( FirstVNF_RAM_Server ,ACS ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( Max( ( Const / ( FirstVNF_RAM / FirstVNF_CPU ) ),FirstVNF_CPU ) + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( DS - Max( Max( RMSe,RCSe ),CS ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( Min( ( RRSe / DS ) ,MUR ) ,( Min( RMSe ,RCSe ) - ( ( MUM - CS ) + ( MUR - RMSe ) ) ) ) / RCSe ) ,( MUC - DS ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4057300852302713}, {"determining": "( Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / ( Const + MDR ) ) + ACS ) ),Const ) - ( DDR - AMS ) )", "choosing": "( ( ( MUM + ( MUR + ( ( MLU + DS ) * MUC ) ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8906882591093117, "obj2": 0.03888403048561148}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - Const ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5454991970265097}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.24303601634081778}, {"determining": "Max( ( ( Const + DDR ) - BR ),( Min( CRS ,( Const + ACS ) ) / BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( RCSe / Min( DS ,( ( RRSe * RCSe ) * Max( MUC,DS ) ) ) ) ,( RRSe - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6501540329024146}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Min( MUC ,DS ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.44712136627435645}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6396761133603239, "obj2": 0.23860236110290856}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.4458254126401263}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3441295546558704, "obj2": 0.49260756829246993}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.46215846650163644}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.030173667045802405}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM ) - RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUC * ( CS / ( MUM + Max( RCSe,( RCSe + MUM ) ) ) ) ) ,( ( ( ( MUC - RMSe ) / RCSe ) + ( ( RRSe * ( MUC + MUM ) ) - MUR ) ) * ( DS / DS ) ) ) - Max( ( ( Max( CS,DS ) - MUR ) - MLU ),RCSe ) )", "obj1": 0.9392712550607287, "obj2": 0.023040770735647087}, {"determining": "( Min( ( MRS / MRS ) ,( Const / CRS ) ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) + Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( FirstVNF_RAM_Server,ACS ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( Max( CS,MLU ) - RMSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5916963065121271}, {"determining": "( Max( MDR,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) / ( ( Min( CRS ,CRS ) / ARS ) - ( MRS + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RCSe + Max( MUR,MLU ) ) + Min( Min( RCSe ,Min( ( MUM * MUR ) ,( MUC * Max( CS,MUM ) ) ) ) ,( Min( RRSe ,Max( MUC,DS ) ) - RCSe ) ) ) ) - ( MUM * DS ) )", "obj1": 0.3643724696356275, "obj2": 0.4796832940436314}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( AMS - ( ARS + FirstVNF_RAM_Server ) ) ) ,( Const * Const ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( Const ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - CRS ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4690082682928463}, {"determining": "( ( BR - MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.48827635408983533}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10107571142853852}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,( MUC * Min( MUM ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5558976534557936}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - AMS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Max( DS,Min( MUR ,MLU ) ) - MUR ) - MLU ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6071860646025352}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6660380367757601}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( CRS * Const ) ) ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( PN ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( RMSe + CS ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6568750938019388}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / DDR ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / MUM ) ) ,( MUM - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9190283400809717, "obj2": 0.029130422127637137}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / ( MUC + ( CS * DS ) ) ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8724696356275303, "obj2": 0.04691728922061113}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Min( MDR ,CRS ) / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Const ),FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( ( ( RMSe + MUM ) - MUM ) + DS ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6354168729136521}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( DS - MUM ) ,( Min( MUM ,DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6240502561232351}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5679305545878292}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.4004011983944838}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.06825735144794504}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6194523868825194}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( Min( FirstVNF_CPU ,MRS ) / ( FirstVNF_CPU_Server + DDR ) ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09607954625937094}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "( Max( FirstVNF_RAM_Server,ACS ) / ( ( ( Const / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - PN ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( CS - RMSe ) + ( Min( RMSe ,( ( Max( RMSe,RMSe ) + CS ) * ( MUR + RCSe ) ) ) / ( RMSe * ( RMSe * Max( RMSe,Max( ( RMSe - MLU ),( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.6297490971783216}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6781376518218624, "obj2": 0.21743049006056084}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "( ( ( DDR / ARS ) / MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( RRSe + Min( ( Max( ( RRSe * Max( MUR,MUC ) ),MUM ) + ( RMSe - RCSe ) ) ,MUM ) ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8582995951417004, "obj2": 0.05283451516719421}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) )", "obj1": 0.46558704453441296, "obj2": 0.3900832381241286}, {"determining": "Min( ( Min( FirstVNF_Mem ,Min( Const ,FirstVNF_Mem ) ) / ( ( MDR + ARS ) / ( MRS - MDR ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) - ( ( ( MUR * RRSe ) + DS ) + MUR ) ) - ( CS / ( MUC + DS ) ) )", "obj1": 0.6639676113360324, "obj2": 0.22451773605473496}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) * Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + Min( ( ( BR / DDR ) + ( FirstVNF_CPU_Server + DDR ) ) ,( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,Max( MUC,RCSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6518218623481782, "obj2": 0.23042346247918596}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server * ARS ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7129077144729474}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9554655870445344, "obj2": 0.015914426328185512}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + Max( BR,Min( RRS ,( FirstVNF_RAM + DDR ) ) ) ) * ( ( MDR - ARS ) + ( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,( ACS - BR ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( ( ( DS - ( ( ( RCSe - RMSe ) - RRSe ) + MUR ) ) + ( CS * ( ( DS * Max( RCSe,RCSe ) ) + Min( MUR ,Max( RMSe,DS ) ) ) ) ),Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ),MUR ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6497975708502024, "obj2": 0.23713386992078792}, {"determining": "Min( ( ( Min( PN ,MDR ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC - DS ) ,( MUC * ( RMSe / MUM ) ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - ( ( ( MUR / RCSe ) - RCSe ) - Max( CS,( ( RMSe / ( ( DS + CS ) / ( DS * ( DS - MUM ) ) ) ) * MUC ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04727120150489679}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( ( DS / CS ),( MUC + DS ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.24370029793849904}, {"determining": "( Max( PN,MDR ) - ( ( CRS * MDR ) * ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) / ( ( ( ( FirstVNF_RAM_Server / PN ) / ( DDR - ARS ) ) * Const ) * FirstVNF_CPU ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM * Min( Max( Max( ( MUM * MUM ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.07891497839402938}, {"determining": "Max( ( ( ACS + ( ( PN - FirstVNF_RAM ) * Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6827435631636166}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Const / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20242914979757085, "obj2": 0.6114352984851141}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( RMSe + MUM ) - MUM ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6619433198380567, "obj2": 0.22800647740981292}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.7834008097165992, "obj2": 0.08313716264062042}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - ( ( Const * MDR ) * ( ( ARS / BR ) - Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( CRS / ( Const * BR ) ) ) + ( ACS / Const ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + RRSe ),MUM ) ,MLU ) / RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MLU / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MUR * RMSe ) ) ) - Max( RCSe,RCSe ) ) ) / ( Max( DS,RMSe ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10857040414242651}, {"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( FirstVNF_RAM * ACS ) ) / FirstVNF_CPU_Server ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * CS ) ) ,DS ) ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7073331385503943}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "( FirstVNF_Mem / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5677894600642763}, {"determining": "Max( Min( AMS ,( ( Max( Const,MDR ) + ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ),( ( ( PN / Const ) + ( Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * CRS ) + DDR ) ,( BR * FirstVNF_Mem ) ) - PN ) ) - CRS ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( Max( ( MUM / MUC ),( ( RRSe - ( RCSe - Max( MUR,MUR ) ) ) / ( RCSe - RRSe ) ) ) + DS ) )", "obj1": 0.09919028340080972, "obj2": 0.6974385256397712}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.061092911688916174}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem_Server / BR ),MRS ) ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Max( Min( Min( MUM ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) ,MUM ),CS ) * ( ( MLU * DS ) * MUM ) ),MUR ) - ( ( ( Min( DS ,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7692307692307693, "obj2": 0.08897064973342525}, {"determining": "( ( PN - MDR ) - ( ( CRS / MDR ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - DDR ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( ( Max( RMSe,( ( CS * RCSe ) + ( RRSe / MUM ) ) ) / Min( ( Min( DS ,RCSe ) * RRSe ) ,Max( MUM,DS ) ) ),MUR ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11141266043602495}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.394692181555177}, {"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - PN ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,( ( Max( RCSe,RMSe ) + DS ) / ( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7631578947368421, "obj2": 0.09308792510341617}, {"determining": "( Min( Const ,MDR ) * ( Min( ( ( DDR - Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( Min( DS ,MUC ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013795816964339356}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( Min( ( ( ( MLU / RRSe ) / ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) ) - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6396761133603239, "obj2": 0.23860236110290856}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( RMSe + CS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9473684210526315, "obj2": 0.019677784361266923}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Min( MDR ,CRS ) / Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6330260967579328}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) * Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + Min( ( ( BR / DDR ) + ( FirstVNF_CPU_Server + DDR ) ) ,( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,Max( MUC,RCSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6761133603238867, "obj2": 0.21969492622434056}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Max( Min( Min( MUM ,RRSe ) ,MUM ),CS ) * ( ( MLU * DS ) * MUM ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8502024291497976, "obj2": 0.05396634604884445}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Min( MDR ,CRS ) / Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( RMSe + MUM ) - MUM ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.6111455706649472}, {"determining": "Min( ( ( ( ( FirstVNF_Mem - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.01164716091693274}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( Max( FirstVNF_CPU_Server,CRS ) / ( ( FirstVNF_Mem_Server * ARS ) - ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,( ACS + DDR ) ) - PN ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM - ( MUR - CS ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( Min( ( Max( RRSe,CS ) / ( DS * CS ) ) ,DS ) + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7111254191661945}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( RMSe + CS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9493927125506073, "obj2": 0.018938703763692447}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( FirstVNF_RAM_Server / Max( AMS,( Const - ( FirstVNF_RAM / BR ) ) ) ) * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * PN ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUM ) - ( ( ( MUR - Max( DS,CS ) ) - MLU ) - RCSe ) )", "obj1": 0.8421052631578947, "obj2": 0.05659046199628154}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Min( MUC ,DS ) ) ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.39314394678076564}, {"determining": "( ( BR + Min( AMS ,( FirstVNF_RAM_Server * BR ) ) ) - ( Max( Const,FirstVNF_Mem ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / ( ( PN - Max( DDR,( DDR + ACS ) ) ) * ( ( ( MRS / BR ) + Max( ACS,Const ) ) / ACS ) ) ) - CRS ) ) )", "choosing": "( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( ( MLU + RCSe ) + CS ) * ( ( CS / MUC ) / MUM ) ) ,( MUC - MUM ) ) ) ) + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.9777327935222672, "obj2": 0.010487311248827057}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( Max( FirstVNF_CPU,CRS ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) - CRS ),( MDR - ARS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( ( DS / CS ),( MUC + DS ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( ( MUR + CS ) / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7015441741787505}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - ( Max( Const,FirstVNF_Mem ) * ( Min( Min( BR ,PN ) ,( ARS - FirstVNF_CPU_Server ) ) - CRS ) ) )", "choosing": "Min( Max( ( Min( MUR ,RRSe ) * CS ),RRSe ) ,Min( ( ( RMSe + RRSe ) * ( Max( RRSe,CS ) + RMSe ) ) ,( ( RCSe / MUR ) / Min( DS ,MUM ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004777015936733416}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUR ) - ( ( ( Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8360323886639676, "obj2": 0.05881833409138482}, {"determining": "( ( ( Const * MDR ) / ( ( MDR / Max( PN,( ( FirstVNF_RAM + AMS ) * FirstVNF_RAM ) ) ) - CRS ) ) - ( PN - MDR ) )", "choosing": "( Max( MLU,( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( DS + ( ( MLU + ( CS - MUR ) ) * MUR ) ) ) ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7975708502024291, "obj2": 0.07789931216825877}], "14": [{"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - Max( FirstVNF_CPU_Server,DDR ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * ( ( Const + MDR ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe * MLU ) / Min( ( MUR * MUC ) ,Min( ( ( MUR * ( Min( RRSe ,MUR ) + MLU ) ) - CS ) ,( MLU + MUC ) ) ) ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - AMS ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - Min( CRS ,ACS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( ( ( MUR - MUC ) + MLU ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "Min( ( ( Max( AMS,FirstVNF_CPU ) - Max( CRS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( Const + BR ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.2961871698075687}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( ( Const + BR ) + PN ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( MUM - ( RRSe * ( ( CS * MUC ) * Min( ( DS * MUM ) ,( RMSe + MLU ) ) ) ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * ( MUC - ( MUM * MLU ) ) ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1471684118834796}, {"determining": "( ( PN - MDR ) - ( ( ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - ( CRS * DDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * ( RRSe * MLU ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe * CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5437776978985157}, {"determining": "( ( RRS + CRS ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server * Const ) ) ) - CRS ) ) )", "choosing": "( Max( ( RCSe * Min( Max( Min( CS ,( MLU - Min( RRSe ,MUR ) ) ),DS ) ,RRSe ) ),DS ) - ( DS - DS ) )", "obj1": 0.23481781376518218, "obj2": 0.5766984221239837}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( ( DS / Max( RMSe,MUC ) ) / ( MUM * MUC ) ) - Max( ( ( MUM / MUM ) + ( RRSe / DS ) ),Max( DS,CS ) ) ) ) ) ) - ( ( RMSe + CS ) - RCSe ) )", "obj1": 0.6821862348178138, "obj2": 0.20262318913886934}, {"determining": "( ( ( ( Max( RRS,( MRS - ACS ) ) + AMS ) + MDR ) - MDR ) - ( ( Max( ( Max( MRS,( Const / MDR ) ) / Const ),Const ) * BR ) * Max( DDR,( BR / CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,Max( RCSe,( MUM * RRSe ) ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( CS - RCSe ) - Max( RRSe,MUR ) ) ) ,( MLU * RCSe ) ) ) - ( MUM - RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3307153549275483}, {"determining": "( ( PN - MDR ) - ( ( Min( FirstVNF_CPU_Server ,( DDR * FirstVNF_RAM ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( RMSe * CS ) + MUC ) / MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( Min( MUC ,DS ) - ( RMSe + CS ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12853963381651523}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - Max( Max( CS,DS ),MUR ) )", "obj1": 0.4757085020242915, "obj2": 0.381136672826957}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.5060728744939271, "obj2": 0.3162563429205284}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( ACS + PN ) / FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RMSe + MLU ) + DS ) + MUR ) ) - ( ( DS / DS ) - Min( MUC ,DS ) ) )", "obj1": 0.4230769230769231, "obj2": 0.4386053977750712}, {"determining": "Min( ( ( ( ( ( ACS - MDR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Min( Const ,( Min( FirstVNF_RAM_Server ,ACS ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( Max( ( Const / ( FirstVNF_RAM / FirstVNF_CPU ) ),FirstVNF_CPU ) + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( DS - Max( Max( RMSe,RCSe ),CS ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( Min( ( RRSe / DS ) ,MUR ) ,( Min( RMSe ,RCSe ) - ( ( MUM - CS ) + ( MUR - RMSe ) ) ) ) / RCSe ) ,( MUC - DS ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4057300852302713}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ,DS ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5199783224100688}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - Const ) ) )", "choosing": "( ( Max( Max( ( ( MUM * MUC ) / RMSe ),MUR ),( RRSe - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6376518218623481, "obj2": 0.2416861644491463}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_RAM ) ) ) * MDR ) * ( ( MDR / AMS ) - PN ) ) )", "choosing": "( ( ( RRSe + DS ) - ( Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) + ( Max( MUR,MLU ) + ( MUC + ( RMSe * RCSe ) ) ) ) ) - ( ( ( DS / RCSe ) + CS ) * Min( MUC ,DS ) ) )", "obj1": 0.2854251012145749, "obj2": 0.5363338329769963}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.24303601634081778}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.4458254126401263}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3441295546558704, "obj2": 0.49260756829246993}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.291497975708502, "obj2": 0.5228029199791129}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( Max( DS,CS ) * Min( ( MUM / DS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.32622175284862337}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( ( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - ( Max( ( ( ( RRS / RRS ) * MRS ) / BR ),( ( BR + CRS ) / CRS ) ) - Max( ( CRS * FirstVNF_Mem ),DDR ) ) ) ),( ( ( ( FirstVNF_RAM + DDR ) / Min( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) ,Max( BR,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( Min( Max( Min( ( CS / ( ( Max( RRSe,MUC ) - Max( RCSe,MUR ) ) - MUR ) ) ,RRSe ),CS ) ,( MUR * CS ) ) / ( ( DS * DS ) / Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7714953773463883}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.46215846650163644}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( ( DS / CS ),( MUC + DS ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.24370029793849904}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6660380367757601}, {"determining": "( Min( ( MRS / MRS ) ,( Const / CRS ) ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) + Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( FirstVNF_RAM_Server,ACS ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( Max( CS,MLU ) - RMSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5916963065121271}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( CRS * Const ) ) ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( PN ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( RMSe + CS ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6568750938019388}, {"determining": "( Max( MDR,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) / ( ( Min( CRS ,CRS ) / ARS ) - ( MRS + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RCSe + Max( MUR,MLU ) ) + Min( Min( RCSe ,Min( ( MUM * MUR ) ,( MUC * Max( CS,MUM ) ) ) ) ,( Min( RRSe ,Max( MUC,DS ) ) - RCSe ) ) ) ) - ( MUM * DS ) )", "obj1": 0.3643724696356275, "obj2": 0.4796832940436314}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( AMS - ( ARS + FirstVNF_RAM_Server ) ) ) ,( Const * Const ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( Const ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - CRS ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4690082682928463}, {"determining": "( ( BR - MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.48827635408983533}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ) ) ) - ( ( RMSe + CS ) - RCSe ) )", "obj1": 0.6761133603238867, "obj2": 0.21263366345665807}, {"determining": "Max( ( ( Const + DDR ) - BR ),( Min( CRS ,( Const + ACS ) ) / BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( RCSe / Min( DS ,( ( RRSe * RCSe ) * Max( MUC,DS ) ) ) ) ,( RRSe - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6501540329024146}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - AMS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Max( DS,Min( MUR ,MLU ) ) - MUR ) - MLU ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6071860646025352}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Min( MUC ,DS ) ) ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.44712136627435645}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Min( MDR ,CRS ) / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Const ),FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( ( ( RMSe + MUM ) - MUM ) + DS ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6354168729136521}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM ) - RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUC * ( CS / ( MUM + Max( RCSe,( RCSe + MUM ) ) ) ) ) ,( ( ( ( MUC - RMSe ) / RCSe ) + ( ( RRSe * ( MUC + MUM ) ) - MUR ) ) * ( DS / DS ) ) ) - Max( ( ( Max( CS,DS ) - MUR ) - MLU ),RCSe ) )", "obj1": 0.9392712550607287, "obj2": 0.023040770735647087}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.06825735144794504}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.4004011983944838}, {"determining": "( ( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( CS * DS ),( RMSe + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6126156616302886}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "Max( ( ( Min( ( Const * ACS ) ,ACS ) + ( ( PN - FirstVNF_RAM ) * ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( RCSe / Min( DS ,( ( RRSe * RCSe ) * Max( MUC,MUM ) ) ) ) ,( DS - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,RCSe ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6533630167818797}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8846153846153846, "obj2": 0.04161854978327769}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( DS - MUM ) ,( Min( MUM ,DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6240502561232351}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.026778392169239443}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.030173667045802405}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( ( DDR + FirstVNF_RAM ) - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - Min( ACS ,AMS ) ) ) )", "choosing": "( ( ( ( ( RMSe / MUC ) / RCSe ) + DS ) - ( ( Max( MUR,MLU ) / DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6700404858299596, "obj2": 0.22192470163733832}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06099182757762769}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.7834008097165992, "obj2": 0.08313716264062042}, {"determining": "( Min( Const ,MDR ) * ( Min( ( ( DDR - Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - Max( AMS,FirstVNF_RAM ) ) )", "choosing": "Max( Min( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( Min( DS ,MUC ) / RCSe ) )", "obj1": 0.9655870445344129, "obj2": 0.013795816964339356}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server * ARS ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7129077144729474}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),MUR ) )", "obj1": 0.46558704453441296, "obj2": 0.3900832381241286}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / ( MUC + ( CS * DS ) ) ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8724696356275303, "obj2": 0.04691728922061113}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4479013632613288}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8906882591093117, "obj2": 0.03888403048561148}, {"determining": "( ( PN - MDR ) - ( FirstVNF_CPU + ( CRS / MRS ) ) )", "choosing": "( Max( Min( Min( MUM ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) ,MLU ),CS ) - ( RRSe * MUC ) )", "obj1": 0.7489878542510121, "obj2": 0.09709645384233587}, {"determining": "Min( ( ( Min( PN ,MDR ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC - DS ) ,( MUC * ( RMSe / MUM ) ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - ( ( ( MUR / RCSe ) - RCSe ) - Max( CS,( ( RMSe / ( ( DS + CS ) / ( DS * ( DS - MUM ) ) ) ) * MUC ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.038207821366568126}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( FirstVNF_RAM_Server / Max( AMS,( Const - ( FirstVNF_RAM / BR ) ) ) ) * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * PN ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MLU ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUM ) - ( ( ( MUR - Max( DS,CS ) ) - MLU ) - RCSe ) )", "obj1": 0.8421052631578947, "obj2": 0.05659046199628154}, {"determining": "Min( ( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.38518763053531635}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - ( ( Const * MDR ) * ( ( ARS / BR ) - Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( CRS / ( Const * BR ) ) ) + ( ACS / Const ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + RRSe ),MUM ) ,MLU ) / RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MLU / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MUR * RMSe ) ) ) - Max( RCSe,RCSe ) ) ) / ( Max( DS,RMSe ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10857040414242651}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - Max( ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * MLU ),Max( ( Max( Min( Min( MUM ,RRSe ) ,MUM ),CS ) * ( ( MLU * DS ) * MUM ) ),MUR ) ) )", "obj1": 0.8502024291497976, "obj2": 0.053127731349728924}, {"determining": "( Max( PN,MDR ) - ( ( CRS * MDR ) * ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) / ( ( ( ( FirstVNF_RAM_Server / PN ) / ( DDR - ARS ) ) * Const ) * FirstVNF_CPU ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM * Min( Max( Max( ( MUM * MUM ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.07891497839402938}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - ( Max( Const,FirstVNF_Mem ) * ( Min( Min( BR ,PN ) ,( ARS - FirstVNF_CPU_Server ) ) - CRS ) ) )", "choosing": "Min( Max( ( Min( MUR ,RRSe ) * CS ),RRSe ) ,Min( ( ( RMSe + RRSe ) * ( Max( RRSe,CS ) + RMSe ) ) ,( ( RCSe / MUR ) / Min( DS ,MUM ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004777015936733416}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( Max( ARS,Const ) + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( Min( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ,( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),( CS * RRSe ) ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10101904086149383}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / RCSe ),MUR ) - ( ( ( Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8360323886639676, "obj2": 0.05881833409138482}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( RMSe + MUM ) - MUM ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6619433198380567, "obj2": 0.22800647740981292}, {"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( FirstVNF_RAM * ACS ) ) / FirstVNF_CPU_Server ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * CS ) ) ,DS ) ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7073331385503943}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6437246963562753, "obj2": 0.23752458193100703}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( ( ( DDR / ARS ) / MDR ) - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( MLU / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4574898785425101, "obj2": 0.3926081103723499}, {"determining": "Max( Min( AMS ,( ( Max( Const,MDR ) + ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ),( ( ( PN / Const ) + ( Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * CRS ) + DDR ) ,( BR * FirstVNF_Mem ) ) - PN ) ) - CRS ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( Max( ( MUM / MUC ),( ( RRSe - ( RCSe - Max( MUR,MUR ) ) ) / ( RCSe - RRSe ) ) ) + DS ) )", "obj1": 0.09919028340080972, "obj2": 0.6974385256397712}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.08886851272937756}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) * Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + Min( ( ( BR / DDR ) + ( FirstVNF_CPU_Server + DDR ) ) ,( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,Max( MUC,RCSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6518218623481782, "obj2": 0.23042346247918596}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_Mem / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) - MLU ) - RCSe ) )", "obj1": 0.8603238866396761, "obj2": 0.05029675236184728}, {"determining": "Min( ( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + BR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( AMS + ACS ) ) ) )", "choosing": "( ( Max( Min( ( Min( DS ,( MUC * ( MUR / RMSe ) ) ) / RCSe ) ,( MUC - DS ) ),( Min( ( ( ( RMSe / DS ) / ( MLU / RRSe ) ) * ( Max( RMSe,MUR ) * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) ) - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6497975708502024, "obj2": 0.23204322011113113}, {"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - PN ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,( ( Max( RCSe,RMSe ) + DS ) / ( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7631578947368421, "obj2": 0.09308792510341617}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "Min( ( ( Min( PN ,MDR ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC - DS ) ,( MUC * ( RMSe / MUM ) ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - ( ( ( MUR / RCSe ) - RCSe ) - Max( CS,( ( RMSe / ( ( DS + CS ) / ( DS * ( DS - MUM ) ) ) ) * MUC ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04727120150489679}, {"determining": "( ( PN - MDR ) - ( ( Const * ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,PN ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_RAM + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( MUC - MUC ) ) * ( ( MLU + DS ) * Max( ( ( MUC - ( ( MUR + CS ) / MUM ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.007389749930180414}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9554655870445344, "obj2": 0.015914426328185512}, {"determining": "Min( ( ( ( ( FirstVNF_Mem - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( RMSe + CS ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.9736842105263158, "obj2": 0.01139135405332661}, {"determining": "Min( ( Min( FirstVNF_Mem ,Min( Const ,FirstVNF_Mem ) ) / ( ( MDR + ARS ) / ( MRS - MDR ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) - ( ( ( MUR * RRSe ) + DS ) + MUR ) ) - ( CS / ( MUC + DS ) ) )", "obj1": 0.6639676113360324, "obj2": 0.22451773605473496}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * ( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / ( RMSe / DS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.39466106274730944}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08662024658646747}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / DDR ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / MUM ) ) ,( MUM - MUM ) ) ) ) / ( RMSe / DS ) ),MUR ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9190283400809717, "obj2": 0.02910151041045298}, {"determining": "Min( ( ( ( PN - MDR ) - Min( ( ( MDR / AMS ) - CRS ) ,( MRS * ( Max( Min( Const ,FirstVNF_RAM_Server ),FirstVNF_Mem ) - MRS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,BR ) )", "choosing": "( ( ( MUR + DS ) - ( ( ( ( ( Max( MUM,CS ) - MLU ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * MUR ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( Min( DS ,Max( Max( ( CS / MUM ),( RCSe * MUR ) ),Min( Min( RMSe ,MLU ) ,MUC ) ) ) * ( RRSe / DS ) ) / ( MUM - ( RRSe / Min( MUR ,RRSe ) ) ) ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.757085020242915, "obj2": 0.09400798038873649}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.11066693858719946}], "15": [{"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( FirstVNF_RAM * ACS ) ) / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * CS ) ) ,DS ) ) * Max( ( MUM + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - Max( FirstVNF_CPU_Server,DDR ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * ( ( Const + MDR ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RMSe * MLU ) / Min( ( MUR * MUC ) ,Min( ( ( MUR * ( Min( RRSe ,MUR ) + MLU ) ) - CS ) ,( MLU + MUC ) ) ) ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( FirstVNF_Mem * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RRSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.2867958501125602}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.36337089588570665}, {"determining": "Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Max( FirstVNF_CPU,MRS ) ) * Min( ARS ,FirstVNF_Mem_Server ) ) ) * ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) ) * ( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( DS / MUR ) - ( MLU / ( MUM + ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ) ) ) - ( ( RMSe + CS ) - RCSe ) )", "obj1": 0.6761133603238867, "obj2": 0.21263366345665807}, {"determining": "( ( RRS + CRS ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server * Const ) ) ) - CRS ) ) )", "choosing": "( Max( ( RCSe * Min( Max( Min( CS ,( MLU - Min( RRSe ,MUR ) ) ),DS ) ,RRSe ) ),DS ) - ( DS - DS ) )", "obj1": 0.23481781376518218, "obj2": 0.5766984221239837}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( MDR * ( FirstVNF_CPU - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * ( ( ( RMSe + RRSe ) * Max( Max( Max( Max( RCSe,RRSe ),( RCSe + CS ) ),MUM ),CS ) ) / DS ) ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( RMSe * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.14874106598274622}, {"determining": "( ( ( ( Max( RRS,( MRS - ACS ) ) + AMS ) + MDR ) - MDR ) - ( ( Max( ( Max( MRS,( Const / MDR ) ) / Const ),Const ) * BR ) * Max( DDR,( BR / CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,Max( RCSe,( MUM * RRSe ) ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( CS - RCSe ) - Max( RRSe,MUR ) ) ) ,( MLU * RCSe ) ) ) - ( MUM - RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3307153549275483}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.5060728744939271, "obj2": 0.3162563429205284}, {"determining": "Min( ( ( ( ( ( ACS - MDR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Min( Const ,( Min( FirstVNF_RAM_Server ,ACS ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( Max( ( Const / ( FirstVNF_RAM / FirstVNF_CPU ) ),FirstVNF_CPU ) + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( DS - Max( Max( RMSe,RCSe ),CS ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( Min( ( RRSe / DS ) ,MUR ) ,( Min( RMSe ,RCSe ) - ( ( MUM - CS ) + ( MUR - RMSe ) ) ) ) / RCSe ) ,( MUC - DS ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4057300852302713}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5449049347438027}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( ACS + PN ) / FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RMSe + MLU ) + DS ) + MUR ) ) - ( ( DS / DS ) - Min( MUC ,DS ) ) )", "obj1": 0.4230769230769231, "obj2": 0.4386053977750712}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1902834008097166, "obj2": 0.60697667507431}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ,DS ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5199783224100688}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - Const ) ) )", "choosing": "( ( Max( Max( ( ( MUM * MUC ) / RMSe ),MUR ),( RRSe - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6376518218623481, "obj2": 0.2416861644491463}, {"determining": "( Min( ( MRS / MRS ) ,( Const / CRS ) ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) + Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( FirstVNF_RAM_Server,ACS ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( Max( CS,MLU ) - RMSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5916963065121271}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( Min( DS ,MUM ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.24303601634081778}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.39972564136330857}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( ( Min( MDR ,CRS ) / Max( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Const ),FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( ( ( RMSe + MUM ) - MUM ) + DS ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.6354168729136521}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_RAM ) ) ) * MDR ) * ( ( MDR / AMS ) - PN ) ) )", "choosing": "( ( ( RRSe + DS ) - ( Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) + ( Max( MUR,MLU ) + ( MUC + ( RMSe * RCSe ) ) ) ) ) - ( ( ( DS / RCSe ) + CS ) * Min( MUC ,DS ) ) )", "obj1": 0.2854251012145749, "obj2": 0.5363338329769963}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3441295546558704, "obj2": 0.49260756829246993}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.291497975708502, "obj2": 0.5228029199791129}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( Max( DS,CS ) * Min( ( MUM / DS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.32622175284862337}, {"determining": "( ( ( Const + BR ) + PN ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( MUM - ( RRSe * ( ( CS * MUC ) * Min( ( DS * MUM ) ,( RMSe + MLU ) ) ) ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * ( MUC - ( MUM * MLU ) ) ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1471684118834796}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.1253055342343137}, {"determining": "( ( PN - ( Min( ( ( FirstVNF_RAM / Const ) + Const ) ,Max( MDR,RRS ) ) * BR ) ) - Max( ( ( FirstVNF_CPU_Server / ACS ) * MDR ),( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( MLU - MUC ) / DS ) ) * ( CS + DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.6983805668016194, "obj2": 0.12962110396358872}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( ARS + MDR ) - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( ( DS / CS ),( MUC + DS ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.24370029793849904}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "( Max( MDR,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) / ( ( Min( CRS ,CRS ) / ARS ) - ( MRS + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RCSe + Max( MUR,MLU ) ) + Min( Min( RCSe ,Min( ( MUM * MUR ) ,( MUC * Max( CS,MUM ) ) ) ) ,( Min( RRSe ,Max( MUC,DS ) ) - RCSe ) ) ) ) - ( MUM * DS ) )", "obj1": 0.3643724696356275, "obj2": 0.4796832940436314}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( BR - MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.48827635408983533}, {"determining": "( ( ( ( ( Max( ARS,FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( ARS ,MDR ) ) - MDR ) - ( ( Const / MDR ) * ( ( MDR / Max( Max( ( ACS + AMS ),FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( CS * DS ),( RRSe + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( MUR + RCSe ) + Min( DS ,MUR ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.6263970652095525}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6438774710208104}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( ( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - MRS ) ),( ( ( ( FirstVNF_RAM + DDR ) / Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ,Max( BR,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( ( RMSe + MUM ) - MUM ) + DS ) ),MUR ) ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7682028326298799}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( AMS - ( ARS + FirstVNF_RAM_Server ) ) ) ,( Const * Const ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( Const ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - CRS ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4690082682928463}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5398087334600455}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - ( Max( Const,FirstVNF_Mem ) * ( Min( Min( BR ,PN ) ,( ARS - FirstVNF_CPU_Server ) ) - CRS ) ) )", "choosing": "Min( Max( ( Min( MUR ,RRSe ) * CS ),RRSe ) ,Min( ( ( RMSe + RRSe ) * ( Max( RRSe,CS ) + RMSe ) ) ,( ( RCSe / MUR ) / Min( DS ,MUM ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004777015936733416}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.4458254126401263}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * ACS ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( Max( MUR,MLU ),MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4463802543399193}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( RMSe / DS ) ) * ( CS * DS ) ) ,Min( ( DS - MUM ) ,( Min( MUM ,DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.6240502561232351}, {"determining": "Min( ( ACS * FirstVNF_RAM_Server ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( PN ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( ( DS / RCSe ) / MUC ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6566934013721789}, {"determining": "( Min( RRS ,Max( ( BR + DDR ),Max( ( RRS - Max( ( ( FirstVNF_Mem_Server * RRS ) / ( FirstVNF_Mem + Const ) ),( CRS * Max( MRS,RRS ) ) ) ),PN ) ) ) * ( ( ( RRS / Const ) - Const ) * Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,Max( Max( MUM,( Max( Min( RMSe ,( RMSe + RRSe ) ),MUR ) * RRSe ) ),MUR ) ) * Max( ( Min( Min( RRSe ,CS ) ,DS ) - MUR ),CS ) )", "obj1": 0.07894736842105263, "obj2": 0.7249831442175728}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * PN ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( RRSe + RRSe ),RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.012203693504617967}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.030159622005979273}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( ( RMSe + MUM ) - MUM ) + DS ) + MUR ) ) - ( CS - Min( MUC ,DS ) ) )", "obj1": 0.6680161943319838, "obj2": 0.2219171971038359}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem / ( Min( Min( FirstVNF_CPU ,MRS ) ,( FirstVNF_RAM + Const ) ) - ( ( ARS + MDR ) + ( MRS - MDR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + ( ( MUM / MUM ) + ( RRSe / DS ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server * ARS ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7129077144729474}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06477732793522267, "obj2": 0.742737799876358}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.46215846650163644}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Max( Max( ( ( MUM * ( ( RMSe + MUM ) - MUM ) ) / RMSe ),MUR ),( RRSe - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6437246963562753, "obj2": 0.23752458193100703}, {"determining": "Max( Min( AMS ,( ( Max( Const,MDR ) + ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ),( ( ( PN / Const ) + ( Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * CRS ) + DDR ) ,( BR * FirstVNF_Mem ) ) - PN ) ) - CRS ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( Max( ( MUM / MUC ),( ( RRSe - ( RCSe - Max( MUR,MUR ) ) ) / ( RCSe - RRSe ) ) ) + DS ) )", "obj1": 0.09919028340080972, "obj2": 0.6974385256397712}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4479013632613288}, {"determining": "Max( ( ( Min( ( Const * ACS ) ,ACS ) + ( ( PN - FirstVNF_RAM ) * ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( RCSe / Min( DS ,( ( RRSe * RCSe ) * Max( MUC,MUM ) ) ) ) ,( DS - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,RCSe ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6533630167818797}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "Min( ( ( ( ( FirstVNF_Mem - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( RMSe + CS ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.9736842105263158, "obj2": 0.01139135405332661}, {"determining": "Min( ( ( Min( PN ,MDR ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC - DS ) ,( MUC * ( RMSe / MUM ) ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - ( ( ( MUR / RCSe ) - RCSe ) - Max( CS,( ( RMSe / ( ( DS + CS ) / ( DS * ( DS - MUM ) ) ) ) * MUC ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.038207821366568126}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,MLU ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6660380367757601}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( Max( ARS,Const ) + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( Min( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ,( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),( CS * RRSe ) ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10101904086149383}, {"determining": "( ( Const * MDR ) * ( Min( Max( FirstVNF_CPU,FirstVNF_CPU ) ,Min( ( FirstVNF_CPU_Server / CRS ) ,( FirstVNF_CPU - ( FirstVNF_CPU * RRS ) ) ) ) - ( ( MRS - Const ) + ( ARS + ( DDR * ARS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + CS ) * MLU ) )", "obj1": 0.3785425101214575, "obj2": 0.4647615791649578}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( ( Min( ( FirstVNF_RAM / ( MRS / AMS ) ) ,( MRS + FirstVNF_Mem ) ) / ( CRS - ( MDR - FirstVNF_Mem_Server ) ) ),FirstVNF_CPU ) ) - ( ( ARS + MDR ) + ( MRS - Const ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( DS / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( MUC - RMSe ) ),MUR ) - ( ( ( Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,Min( DS ,Min( MUC ,( MUM + DS ) ) ) ) - MUR ) - MLU ) - CS ) )", "obj1": 0.9453441295546559, "obj2": 0.0204168649588414}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM ) - RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUC * ( CS / ( MUM + Max( RCSe,( RCSe + MUM ) ) ) ) ) ,( ( ( ( MUC - RMSe ) / RCSe ) + ( ( RRSe * ( MUC + MUM ) ) - MUR ) ) * ( DS / DS ) ) ) - Max( ( ( Max( CS,DS ) - MUR ) - MLU ),RCSe ) )", "obj1": 0.9392712550607287, "obj2": 0.023040770735647087}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( RMSe - ( ( RCSe + ( Min( MUC ,( MLU / MUR ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6656219091769829}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.4004011983944838}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8906882591093117, "obj2": 0.03888403048561148}, {"determining": "( ( PN - MDR ) - ( FirstVNF_CPU + ( CRS / MRS ) ) )", "choosing": "( Max( Min( Min( MUM ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) ,MLU ),CS ) - ( RRSe * MUC ) )", "obj1": 0.7489878542510121, "obj2": 0.09709645384233587}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4149797570850202, "obj2": 0.4447472966246363}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9311740890688259, "obj2": 0.025372455524822778}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Max( ( ( Const + DDR ) - BR ),( Min( CRS ,( Const + ACS ) ) / BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( RCSe / Min( DS ,( ( RRSe * RCSe ) * Max( MUC,DS ) ) ) ) ,( RRSe - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,RCSe ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6554764536264877}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( Max( MUM,RCSe ) ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04519743131280813}, {"determining": "( ( PN - MDR ) - ( ( Min( FirstVNF_CPU_Server ,( DDR * FirstVNF_RAM ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( RMSe * CS ) + MUC ) / MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( Min( MUC ,DS ) - ( RMSe + CS ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12853963381651523}, {"determining": "Min( ( ( Min( PN ,MDR ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC - DS ) ,( MUC * ( RMSe / MUM ) ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - ( ( ( MUR / RCSe ) - RCSe ) - Max( CS,( ( RMSe / ( ( DS + CS ) / ( DS * ( DS - MUM ) ) ) ) * MUC ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04727120150489679}, {"determining": "Min( ( ( ( PN - MDR ) - Min( ( ( MDR / AMS ) - CRS ) ,( MRS * ( Max( Min( Const ,FirstVNF_RAM_Server ),FirstVNF_Mem ) - MRS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,BR ) )", "choosing": "( ( ( MUR + DS ) - ( ( ( ( ( Max( MUM,CS ) - MLU ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * MUR ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( Min( DS ,Max( Max( ( CS / MUM ),( RCSe * MUR ) ),Min( Min( RMSe ,MLU ) ,MUC ) ) ) * ( RRSe / DS ) ) / ( MUM - ( RRSe / Min( MUR ,RRSe ) ) ) ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.757085020242915, "obj2": 0.09400798038873649}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_Mem / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) - MLU ) - RCSe ) )", "obj1": 0.8603238866396761, "obj2": 0.05029675236184728}, {"determining": "Min( ( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + BR ) ) * ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,ARS ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( AMS + ACS ) ) ) )", "choosing": "( ( Max( Min( ( Min( DS ,( MUC * ( MUR / RMSe ) ) ) / RCSe ) ,( MUC - DS ) ),( Min( ( ( ( RMSe / DS ) / ( MLU / RRSe ) ) * ( Max( RMSe,MUR ) * DS ) ) ,Min( ( Min( DS ,MUM ) / ( RCSe / MUR ) ) ,Max( RMSe,MUC ) ) ) - RMSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6497975708502024, "obj2": 0.23204322011113113}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ACS * FirstVNF_RAM_Server ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( DS ,MUM ) ) ) - Max( ( ( Min( Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - DS ) ) ,( MLU / RMSe ) ) - ( RCSe - DS ) ) * MLU ),Max( ( Max( Min( Min( MUM ,RRSe ) ,MUM ),CS ) * ( ( MLU * DS ) * MUM ) ),MUR ) ) )", "obj1": 0.8724696356275303, "obj2": 0.04611014630918126}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( PN * BR ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.058782896432628955}, {"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - PN ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,( ( Max( RCSe,RMSe ) + DS ) / ( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7631578947368421, "obj2": 0.09308792510341617}, {"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( FirstVNF_RAM * ACS ) ) / FirstVNF_CPU_Server ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * CS ) ) ,DS ) ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7073331385503943}, {"determining": "Max( ( ( Min( ( Const * ACS ) ,ACS ) + ( ( PN - FirstVNF_RAM ) * ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809275105743678}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * RMSe ) )", "obj1": 0.7874493927125507, "obj2": 0.0814654150817364}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( Max( PN,MDR ) - ( ( CRS * MDR ) * ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) / ( ( ( ( FirstVNF_RAM_Server / PN ) / ( DDR - ARS ) ) * Const ) * FirstVNF_CPU ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM * Min( Max( Max( ( MUM * MUM ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.07891497839402938}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) * Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + Min( ( ( BR / DDR ) + ( FirstVNF_CPU_Server + DDR ) ) ,( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( Min( ( MLU + RMSe ) ,Max( MUC,RCSe ) ) + RCSe ) - ( MUC + CS ) )", "obj1": 0.6518218623481782, "obj2": 0.23042346247918596}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( Max( FirstVNF_RAM,ACS ) - ARS ) - Max( ( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ),Max( RRS,Min( FirstVNF_RAM_Server ,( RRS + PN ) ) ) ) ) - ( Max( ( ( ( RRS / RRS ) * MRS ) / BR ),( ( BR + CRS ) / CRS ) ) - Max( ( CRS * FirstVNF_Mem ),DDR ) ) ) ),( ( ( ( FirstVNF_RAM + DDR ) / Min( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / CRS ) ) ,Max( BR,FirstVNF_CPU ) ) ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) / AMS ) )", "choosing": "( Min( Max( Min( ( CS / ( ( Max( RRSe,MUC ) - Max( RCSe,MUR ) ) - MUR ) ) ,RRSe ),CS ) ,( MUR * CS ) ) / ( ( DS * DS ) / Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7714953773463883}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( AMS / ACS ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU ) - Max( FirstVNF_CPU,Max( ( ( ( CRS - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ),( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( MUM - ( MUR - RMSe ) ) - ( ( ( ( ( Max( DS,( CS / RMSe ) ) + ( ( MUC + RCSe ) / Max( MUC,DS ) ) ) + MUM ) / MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051253230393817656}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( MLU + MUR ) - ( CS * RMSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.7834008097165992, "obj2": 0.08313716264062042}, {"determining": "Min( ( Min( FirstVNF_Mem ,Min( Const ,FirstVNF_Mem ) ) / ( ( MDR + ARS ) / ( MRS - MDR ) ) ) ,( ( FirstVNF_RAM_Server + ARS ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUC + DS ) - ( ( ( MUR * RRSe ) + DS ) + MUR ) ) - ( CS / ( MUC + DS ) ) )", "obj1": 0.6639676113360324, "obj2": 0.22451773605473496}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - ( ( Const * MDR ) * ( ( ARS / BR ) - Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( CRS / ( Const * BR ) ) ) + ( ACS / Const ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + RRSe ),MUM ) ,MLU ) / RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MLU / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MUR * RMSe ) ) ) - Max( RCSe,RCSe ) ) ) / ( Max( DS,RMSe ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10857040414242651}], "16": [{"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( FirstVNF_RAM * ACS ) ) / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * CS ) ) ,DS ) ) * Max( ( MUM + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( Min( MUR ,RMSe ),MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6194331983805668, "obj2": 0.2004716071474282}, {"determining": "( ( PN - MDR ) - ( ( MDR / ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.5020242914979757, "obj2": 0.28479420590135546}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / MUR ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1566509303345389}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2155342893289551}, {"determining": "( ( RRS + CRS ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server * Const ) ) ) - CRS ) ) )", "choosing": "( Max( ( RCSe * Min( Max( Min( CS ,( MLU - Min( RRSe ,MUR ) ) ),DS ) ,RRSe ) ),DS ) - ( DS - DS ) )", "obj1": 0.23481781376518218, "obj2": 0.5766984221239837}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.36337089588570665}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( DDR - Const ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RCSe ) + Min( ( Min( DS ,( MUR * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4068825910931174, "obj2": 0.41225445647603326}, {"determining": "( ( ( PN - Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS / FirstVNF_RAM ) ) / ( ACS - ARS ) )", "choosing": "Min( ( ( MUR * Min( DS ,CS ) ) / ( MLU * ( DS - CS ) ) ) ,( RMSe / RMSe ) )", "obj1": 0.3340080971659919, "obj2": 0.5085620845780003}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6062986145861644}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.3251306339770013}, {"determining": "( Min( ( MRS / MRS ) ,( Const / CRS ) ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) + Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( FirstVNF_RAM_Server,ACS ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( Max( CS,MLU ) - RMSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5916963065121271}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5135352091507828}, {"determining": "Min( ( ( ( ( ( ACS - MDR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Min( Const ,( Min( FirstVNF_RAM_Server ,ACS ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( Max( ( Const / ( FirstVNF_RAM / FirstVNF_CPU ) ),FirstVNF_CPU ) + PN ) ,FirstVNF_Mem ) ) )", "choosing": "( ( DS - Max( Max( RMSe,RCSe ),CS ) ) - ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( Min( ( RRSe / DS ) ,MUR ) ,( Min( RMSe ,RCSe ) - ( ( MUM - CS ) + ( MUR - RMSe ) ) ) ) / RCSe ) ,( MUC - DS ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.4057300852302713}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( FirstVNF_RAM_Server - DDR ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,( CS * DS ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.39962120140751134}, {"determining": "( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),MLU ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.43573577525924573}, {"determining": "Min( ( ( ( AMS * FirstVNF_CPU ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( FirstVNF_CPU ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3441295546558704, "obj2": 0.49260756829246993}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( Min( DS ,MUM ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5449049347438027}, {"determining": "( ( ( ( Max( RRS,( MRS - ACS ) ) + AMS ) + MDR ) - MDR ) - ( ( Max( ( Max( MRS,( Const / MDR ) ) / Const ),Const ) * BR ) * Max( DDR,( BR / CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,Max( RCSe,( MUM * RRSe ) ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( CS - RCSe ) - Max( RRSe,MUR ) ) ) ,( MLU * RCSe ) ) ) - ( MUM - RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3307153549275483}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3347904061855281}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( FirstVNF_RAM - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) + RRSe ),MUR ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6159035708797508}, {"determining": "( ( ( Const + BR ) + PN ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( MUM - ( RRSe * ( ( CS * MUC ) * Min( ( DS * MUM ) ,( RMSe + MLU ) ) ) ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * ( MUC - ( MUM * MLU ) ) ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1471684118834796}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "( Max( MDR,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) / ( ( Min( CRS ,CRS ) / ARS ) - ( MRS + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RCSe + Max( MUR,MLU ) ) + Min( Min( RCSe ,Min( ( MUM * MUR ) ,( MUC * Max( CS,MUM ) ) ) ) ,( Min( RRSe ,Max( MUC,DS ) ) - RCSe ) ) ) ) - ( MUM * DS ) )", "obj1": 0.3643724696356275, "obj2": 0.4796832940436314}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.291497975708502, "obj2": 0.5228029199791129}, {"determining": "( ( BR - MDR ) - ( Max( Const,FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ( ACS + AMS ) / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU + MLU ) * ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + DS ) + MUR ) ) )", "obj1": 0.354251012145749, "obj2": 0.48827635408983533}, {"determining": "( ( PN - MDR ) - ( MRS / RRS ) )", "choosing": "( ( ( DS - Max( ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ),CS ) ) - ( ( Max( MUR,MLU ) + ( MUM - CS ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.1300141059974921}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( ( Const / DDR ),FirstVNF_RAM_Server ) - DDR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( DS / Min( Max( MUC,RRSe ) ,RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6256952264036353}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.1253055342343137}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5449049347438027}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( AMS - ( ARS + FirstVNF_RAM_Server ) ) ) ,( Const * Const ) ) / ( FirstVNF_CPU_Server - RRS ) ) / ( ( Min( Const ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - CRS ) ) / ( Min( FirstVNF_RAM_Server ,AMS ) - ( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4690082682928463}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( AMS / MDR ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + MUC ) ) - ( ( RMSe + CS ) - Max( MUC,DS ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6344151562743237}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( AMS / ACS ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU ) - Max( FirstVNF_CPU,Max( ( ( ( CRS - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ),( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( MUM - ( MUR - RMSe ) ) - ( ( ( ( ( Max( DS,( CS / RMSe ) ) + ( ( MUC + RCSe ) / Max( MUC,DS ) ) ) + MUM ) / MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051253230393817656}, {"determining": "Min( ( ACS * FirstVNF_RAM_Server ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( PN ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( ( DS / RCSe ) / MUC ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6566934013721789}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( RRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - DS ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.2773279352226721, "obj2": 0.5329927097335448}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.45546558704453444, "obj2": 0.33414420266790434}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( MDR / AMS ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,( RMSe + CS ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.4413591444107798}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5398087334600455}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / CRS ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / ( ( MUM - RRSe ) - MUM ) ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.902834008097166, "obj2": 0.035002503893643}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * BR ) ) )", "choosing": "( Min( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05804178449819182}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( MDR * ( FirstVNF_CPU - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * ( ( ( RMSe + RRSe ) * Max( Max( Max( Max( RCSe,RRSe ),( RCSe + CS ) ),MUM ),CS ) ) / DS ) ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( RMSe * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.14874106598274622}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6438774710208104}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ,DS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5305671722866999}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem / ( Min( Min( FirstVNF_CPU ,MRS ) ,( FirstVNF_RAM + Const ) ) - ( ( ARS + MDR ) + ( MRS - MDR ) ) ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + ( ( MUM / MUM ) + ( RRSe / DS ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( ( Const * MDR ) / ( FirstVNF_CPU_Server + DDR ) ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + MUR ) - ( ( RMSe + CS ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.7672064777327935, "obj2": 0.08975716590723311}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MUM / ( ( MLU + MUM ) + Min( RRSe ,MUC ) ) ) / RRSe ) - ( ( ( RMSe / RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( CS + DS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4476005774002878}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.46215846650163644}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.653035749215386}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * PN ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( RRSe + RRSe ),RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.012203693504617967}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( PN * BR ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.058782896432628955}, {"determining": "Max( Min( AMS ,( ( Max( Const,MDR ) + ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ),( ( ( PN / Const ) + ( Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * CRS ) + DDR ) ,( BR * FirstVNF_Mem ) ) - PN ) ) - CRS ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( Max( ( MUM / MUC ),( ( RRSe - ( RCSe - Max( MUR,MUR ) ) ) / ( RCSe - RRSe ) ) ) + DS ) )", "obj1": 0.09919028340080972, "obj2": 0.6974385256397712}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * ACS ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( Max( MUR,MLU ),MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4463802543399193}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "( ( ( MRS * FirstVNF_Mem_Server ) / MDR ) - ( ( CRS * MDR ) * ( ( ( ( MRS / MDR ) / FirstVNF_CPU_Server ) / ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MUR ) + Max( ( Min( Max( MLU,( DS + MUM ) ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( DS + RMSe ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,Max( ( MUR + ( MUC + RRSe ) ),MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( ( MUR / ( RRSe + MUR ) ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08554576386882293}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8906882591093117, "obj2": 0.03888403048561148}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( Max( DS,CS ) * Min( ( MUM / DS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.32622175284862337}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - ( ( Const * MDR ) * ( ( ARS / BR ) - Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( CRS / ( Const * BR ) ) ) + ( ACS / Const ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + RRSe ),MUM ) ,MLU ) / RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MLU / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MUR * RMSe ) ) ) - Max( RCSe,RCSe ) ) ) / ( Max( DS,RMSe ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10857040414242651}, {"determining": "( Max( PN,MDR ) - ( ( CRS * MDR ) * ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) / ( ( ( ( FirstVNF_RAM_Server / PN ) / ( DDR - ARS ) ) * Const ) * FirstVNF_CPU ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM * Min( Max( Max( ( MUM * MUM ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.07891497839402938}, {"determining": "( ( Const * MDR ) * ( Min( Max( FirstVNF_CPU,FirstVNF_CPU ) ,Min( ( FirstVNF_CPU_Server / CRS ) ,( FirstVNF_CPU - ( FirstVNF_CPU * RRS ) ) ) ) - ( ( MRS - Const ) + ( ARS + ( DDR * ARS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + CS ) * MLU ) )", "obj1": 0.3785425101214575, "obj2": 0.4647615791649578}, {"determining": "Min( ( ( ( ( FirstVNF_Mem - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * ( BR + ( ( DDR / ( MRS * FirstVNF_Mem ) ) * DDR ) ) ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( ( Min( MDR ,CRS ) * Max( ( Const / CRS ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( RCSe + ( RRSe + RRSe ) ) ) + Min( ( Min( MLU ,DS ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( RMSe + CS ) - Max( RRSe,DS ) ) )", "obj1": 0.9757085020242915, "obj2": 0.010906048982495605}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( ( Min( ( FirstVNF_RAM / ( MRS / AMS ) ) ,( MRS + FirstVNF_Mem ) ) / ( CRS - ( MDR - FirstVNF_Mem_Server ) ) ),FirstVNF_CPU ) ) - ( ( ARS + MDR ) + ( MRS - Const ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( DS / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( MUC - RMSe ) ),MUR ) - ( ( ( Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,Min( DS ,Min( MUC ,( MUM + DS ) ) ) ) - MUR ) - MLU ) - CS ) )", "obj1": 0.9453441295546559, "obj2": 0.0204168649588414}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( Max( ARS,Const ) + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( Min( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ,( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),( CS * RRSe ) ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7489878542510121, "obj2": 0.09705537840706353}, {"determining": "Max( ( ( ACS + ( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) - BR ),( Min( CRS ,( FirstVNF_Mem_Server + ACS ) ) - BR ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6784917444389825}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ),Const ),FirstVNF_CPU ) + ( ( ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RCSe + ( Min( ( DS / RCSe ) ,MLU ) + RRSe ) ) * ( ( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.44534412955465585, "obj2": 0.4004011983944838}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( RMSe - ( ( RCSe + ( Min( MUC ,( MLU / MUR ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6656219091769829}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6481830105435649}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( ( ( ACS - MDR ) - FirstVNF_RAM ) - MDR ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RCSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( ( RRSe - MLU ) / ( ( ( MUM / RMSe ) + RRSe ) / MLU ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7068558920379311}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / Max( Max( MRS,DDR ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / RRSe ) ) ,( MUC - MUM ) ) ) ) ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9838056680161943, "obj2": 0.0063474578757787645}, {"determining": "Min( ( ( Min( PN ,MDR ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC - DS ) ,( MUC * ( RMSe / MUM ) ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - ( ( ( MUR / RCSe ) - RCSe ) - Max( CS,( ( RMSe / ( ( DS + CS ) / ( DS * ( DS - MUM ) ) ) ) * MUC ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04727120150489679}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_Mem / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) - MLU ) - RCSe ) )", "obj1": 0.8603238866396761, "obj2": 0.05029675236184728}, {"determining": "( ( RRS + CRS ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server * Const ) ) ) - CRS ) ) )", "choosing": "( Max( ( RCSe * Min( Max( Min( CS ,( MLU - Min( RRSe ,MUR ) ) ),DS ) ,RRSe ) ),DS ) - ( DS - DS ) )", "obj1": 0.9979757085020243, "obj2": 0.0031250058219156203}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( FirstVNF_RAM_Server / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUM - ( RMSe - MUR ) ) - ( ( ( MUC / RCSe ) + CS ) - Min( MUR ,DS ) ) )", "obj1": 0.8947368421052632, "obj2": 0.03776772412156247}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7178289206542253}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( Max( MUM,RCSe ) ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04519743131280813}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( MUR / ( ( DS * DS ) / Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011358391108766635}, {"determining": "Max( ( ( Min( ( Const * ACS ) ,ACS ) + ( ( PN - FirstVNF_RAM ) * ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809275105743678}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / Max( Max( MRS,FirstVNF_RAM_Server ),ACS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) ) - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.02289983997452176}, {"determining": "Min( ( ( ( PN - ( FirstVNF_Mem + AMS ) ) - ( ( Const * BR ) * ( ( MDR / AMS ) - PN ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,( ( Max( RCSe,RMSe ) + DS ) / ( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),MLU ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7631578947368421, "obj2": 0.09308792510341617}, {"determining": "( ( MDR * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6829157350655244}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * RMSe ) )", "obj1": 0.7874493927125507, "obj2": 0.0814654150817364}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( RMSe - ( ( RCSe + ( Min( MUC ,( MLU / MUR ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6681215680040977}, {"determining": "Min( ( ( MDR / AMS ) - CRS ) ,( ( ( ( FirstVNF_RAM_Server / DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server * ARS ) + ( Min( ( ( FirstVNF_CPU_Server / Max( ACS,Const ) ) + DDR ) ,FirstVNF_CPU_Server ) - PN ) ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7129077144729474}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Max( Max( MRS,( ( ACS - MDR ) - DDR ) ),CRS ) ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.0038976403123900227}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12741541100989703}, {"determining": "Min( ( ( ( PN - MDR ) - Min( ( ( MDR / AMS ) - CRS ) ,( MRS * ( Max( Min( Const ,FirstVNF_RAM_Server ),FirstVNF_Mem ) - MRS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,BR ) )", "choosing": "( ( ( MUR + DS ) - ( ( ( ( ( Max( MUM,CS ) - MLU ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * MUR ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( Min( DS ,Max( Max( ( CS / MUM ),( RCSe * MUR ) ),Min( Min( RMSe ,MLU ) ,MUC ) ) ) * ( RRSe / DS ) ) / ( MUM - ( RRSe / Min( MUR ,RRSe ) ) ) ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.757085020242915, "obj2": 0.09400798038873649}], "17": [{"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( PN - MDR ) ) / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * ( RMSe / MUM ) ) ) ,DS ) ) * Max( ( MUM + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,FirstVNF_RAM_Server ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4010461282788192}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( DDR + Min( Max( BR,( AMS / MRS ) ) ,( MDR - RRS ) ) ) / ( ( MRS - Max( AMS,FirstVNF_RAM ) ) / ( ACS / ( ( FirstVNF_CPU / FirstVNF_CPU ) + BR ) ) ) ) - CRS ) ) )", "choosing": "( ( RRSe - MUM ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( Max( ( ( ( DS / ( DS / MUR ) ) / MUC ) + RRSe ),MUR ) * ( CS + RCSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.36301026672732345}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / MUR ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.1566509303345389}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2155342893289551}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( Min( MUR ,RMSe ),MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6275303643724697, "obj2": 0.19835717433721473}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.26657260854840703}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * ACS ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,( MDR - FirstVNF_Mem_Server ) ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( ( MUR - RCSe ) * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( Max( MUR,MLU ),MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.45499431250273953}, {"determining": "( ( RRS + CRS ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server * Const ) ) ) - CRS ) ) )", "choosing": "( Max( ( RCSe * Min( Max( Min( CS ,( MLU - Min( RRSe ,MUR ) ) ),DS ) ,RRSe ) ),DS ) - ( DS - DS ) )", "obj1": 0.23481781376518218, "obj2": 0.5766984221239837}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Max( Max( MRS,( ( ACS - MDR ) - DDR ) ),CRS ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( CS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3259109311740891, "obj2": 0.49716014513167694}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( Max( DS,CS ) * Min( ( MUM / DS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.32622175284862337}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5512684633919976}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * ACS ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( Max( MUR,MLU ),MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( DS + CS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4463802543399193}, {"determining": "( ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,( ( DS * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) + ( Max( MUR,MLU ) + DS ) ) ) / Max( ( MLU - RMSe ),( ( MUM * MLU ) / MUR ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.588983843772847}, {"determining": "( ( PN - MDR ) - ( ( MDR / ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.5020242914979757, "obj2": 0.28479420590135546}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.034830293545732395}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3347904061855281}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( BR * Const ) * ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( PN * BR ) ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC * ( DS / MUM ) ) ,( MUC - DS ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - Max( ( ( MUR / RCSe ) - RCSe ),RCSe ) )", "obj1": 0.9352226720647774, "obj2": 0.02483311858614866}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( Max( BR,FirstVNF_RAM ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( Min( MUR ,RMSe ),MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( ( MLU / RMSe ) - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.611336032388664, "obj2": 0.20482926535710735}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6062986145861644}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3117408906882591, "obj2": 0.5080249029445011}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - ( ( Const * MDR ) * ( ( ARS / BR ) - Max( ( ( ( MRS - FirstVNF_Mem_Server ) + ( CRS / ( Const * BR ) ) ) + ( ACS / Const ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + RRSe ),MUM ) ,MLU ) / RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( MLU / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MUR * RMSe ) ) ) - Max( RCSe,RCSe ) ) ) / ( Max( DS,RMSe ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10857040414242651}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13749385439818243}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( AMS / MDR ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + MUC ) ) - ( ( RMSe + CS ) - Max( MUC,DS ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6344151562743237}, {"determining": "( ( ( ( Max( RRS,( MRS - ACS ) ) + AMS ) + MDR ) - MDR ) - ( ( Max( ( Max( MRS,( Const / MDR ) ) / Const ),Const ) * BR ) * Max( DDR,( BR / CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,Max( RCSe,( MUM * RRSe ) ) ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( CS - RCSe ) - Max( RRSe,MUR ) ) ) ,( MLU * RCSe ) ) ) - ( MUM - RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3307153549275483}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.1253055342343137}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5398087334600455}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * MDR ) * ( ( ( FirstVNF_Mem_Server / AMS ) - CRS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( Max( ( MLU + RCSe ),MUC ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2813765182186235, "obj2": 0.5282352446279214}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5328561814030914}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ARS * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7178289206542253}, {"determining": "( ( PN - MDR ) - ( ( PN * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( FirstVNF_CPU ,Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( CS * ( CS - DS ) ) ) - ( ( RMSe + CS ) + ( MUC * DS ) ) )", "obj1": 0.46356275303643724, "obj2": 0.33085136928685}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( MDR * ( FirstVNF_CPU - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * ( ( ( RMSe + RRSe ) * Max( Max( Max( Max( RCSe,RRSe ),( RCSe + CS ) ),MUM ),CS ) ) / DS ) ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( RMSe * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.14874106598274622}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6438774710208104}, {"determining": "Min( ( ( ( ( Max( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ),FirstVNF_Mem ) * FirstVNF_CPU ) / ARS ) - Min( RRS ,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server - RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( MRS * ARS ) ) * ( ( PN - Const ) - Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MUM / ( ( MLU + MUM ) + Min( RRSe ,MUC ) ) ) / RRSe ) - ( ( ( RMSe / RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) - Max( CS,Max( ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ),RCSe ) ) ) - ( ( MUM * DS ) * ( ( CS + DS ) * Max( RCSe,( RMSe / Max( ( DS + MUM ),MLU ) ) ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4476005774002878}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / ( MDR / FirstVNF_Mem ) ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( PN * BR ) ) )", "choosing": "( ( ( ( MUR - MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( RMSe / RMSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8421052631578947, "obj2": 0.05657760266523093}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( AMS / ACS ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU ) - Max( FirstVNF_CPU,Max( ( ( ( CRS - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ),( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ACS * FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( MUM - ( MUR - RMSe ) ) - ( ( ( ( ( Max( DS,( CS / RMSe ) ) + ( ( MUC + RCSe ) / Max( MUC,DS ) ) ) + MUM ) / MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8562753036437247, "obj2": 0.051253230393817656}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.291497975708502, "obj2": 0.5228029199791129}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) )", "choosing": "( Min( MUC ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.0897267954602838}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * PN ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( RRSe + RRSe ),RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.012203693504617967}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6613139935563863}, {"determining": "( ( ( DDR + ( Const * Min( CRS ,FirstVNF_Mem_Server ) ) ) / MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( PN - MDR ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RMSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MLU * RMSe ) )", "obj1": 0.742914979757085, "obj2": 0.09978122644568434}, {"determining": "( ( ( Const + BR ) + PN ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( MUC ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( MUM - ( RRSe * ( ( CS * MUC ) * Min( ( DS * MUM ) ,( RMSe + MLU ) ) ) ) ) ) / Max( ( MLU / RMSe ),Max( ( MUM * ( MUC - ( MUM * MLU ) ) ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1471684118834796}, {"determining": "( ( MDR * Const ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6972095324668374}, {"determining": "( ( PN - MDR ) - ( MRS / RRS ) )", "choosing": "( ( ( DS - Max( ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ),CS ) ) - ( ( Max( MUR,MLU ) + ( MUM - CS ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.1300141059974921}, {"determining": "( ( ( MRS * FirstVNF_Mem_Server ) / MDR ) - ( ( CRS * MDR ) * ( ( ( ( MRS / MDR ) / FirstVNF_CPU_Server ) / ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MUR ) + Max( ( Min( Max( MLU,( DS + MUM ) ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( DS + RMSe ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,Max( ( MUR + ( MUC + RRSe ) ),MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( ( MUR / ( RRSe + MUR ) ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08554576386882293}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6697608178278941}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6821495558978425}, {"determining": "( ( Max( AMS,( AMS / FirstVNF_RAM_Server ) ) - MRS ) / ( ACS / ( ( FirstVNF_CPU - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( DS / MUR ) - ( Min( DS ,DS ) / ( MUM + ( ( Min( ( RMSe - MUR ) ,MUM ) / ( MUR * DS ) ) - ( ( ( MUM / MUM ) + ( RRSe / DS ) ) * Max( DS,CS ) ) ) ) ) ) - ( CS + ( ( MLU / MUM ) / RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6869732009782932}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( RRSe - MUM ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) * ( CS + RCSe ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.6080386095651342}, {"determining": "Min( ( ( Min( PN ,MDR ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC - DS ) ,( MUC * ( RMSe / MUM ) ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - ( ( ( MUR / RCSe ) - RCSe ) - Max( CS,( ( RMSe / ( ( DS + CS ) / ( DS * ( DS - MUM ) ) ) ) * MUC ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.04727120150489679}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( DS ,MUM ) + RCSe ) - ( MUC + CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.29554655870445345, "obj2": 0.519347759177864}, {"determining": "( Max( PN,MDR ) - ( ( CRS * MDR ) * ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) / ( ( ( ( FirstVNF_RAM_Server / PN ) / ( DDR - ARS ) ) * Const ) * FirstVNF_CPU ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM * Min( Max( Max( ( MUM * MUM ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.07891497839402938}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008333349091950581}, {"determining": "Min( ( ( ( PN - MDR ) - Min( ( ( MDR / AMS ) - CRS ) ,( MRS * ( Max( Min( Const ,FirstVNF_RAM_Server ),FirstVNF_Mem ) - MRS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,BR ) )", "choosing": "( ( ( MUR + DS ) - ( ( ( ( ( Max( MUM,CS ) - MLU ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * MUR ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( Min( DS ,Max( Max( ( CS / MUM ),( RCSe * MUR ) ),Min( Min( RMSe ,MLU ) ,MUC ) ) ) * ( RRSe / DS ) ) / ( MUM - ( RRSe / Min( MUR ,RRSe ) ) ) ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.757085020242915, "obj2": 0.09400798038873649}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MUM ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * RMSe ) )", "obj1": 0.7874493927125507, "obj2": 0.0814654150817364}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6481830105435649}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8906882591093117, "obj2": 0.03888403048561148}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( ( MLU / MUM ) / RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6252558448935387}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( ( ( ACS - MDR ) - FirstVNF_RAM ) - MDR ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RCSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( ( RRSe - MLU ) / ( ( ( MUM / RMSe ) + RRSe ) / MLU ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7068558920379311}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * FirstVNF_Mem ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / ACS ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + ( ( ( ( MUC * ( DS / CS ) ) / RMSe ) / ( MUC * ( RRSe / ( RRSe * MUR ) ) ) ) + Min( DS ,RMSe ) ) ) * ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5133687190378653}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( ( Const / DDR ),FirstVNF_RAM_Server ) - DDR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( DS / Min( Max( MUC,RRSe ) ,RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6256952264036353}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7550607532170259}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( ( Min( ( FirstVNF_RAM / ( MRS / AMS ) ) ,( MRS + FirstVNF_Mem ) ) / ( CRS - ( MDR - FirstVNF_Mem_Server ) ) ),FirstVNF_CPU ) ) - ( ( ARS + MDR ) + ( MRS - Const ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( DS / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( MUC - RMSe ) ),MUR ) - ( ( ( Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,Min( DS ,Min( MUC ,( MUM + DS ) ) ) ) - MUR ) - MLU ) - CS ) )", "obj1": 0.9453441295546559, "obj2": 0.0204168649588414}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) - ( ( CRS * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( RRSe + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + ( ( DS + CS ) * Max( RCSe,MUR ) ) ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12722932446937313}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.15182186234817813, "obj2": 0.653035749215386}, {"determining": "Min( ( ACS * FirstVNF_RAM_Server ) ,( ( Max( BR,FirstVNF_CPU ) + ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) * ( ( MDR - ARS ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem - Min( ACS ,FirstVNF_CPU_Server ) ) ) ) ) ) * ( Min( PN ,MRS ) - ( ACS + AMS ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( ( DS / RCSe ) / MUC ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6566934013721789}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / Max( Max( MRS,DDR ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / RRSe ) ) ,( MUC - MUM ) ) ) ) ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9838056680161943, "obj2": 0.0063474578757787645}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( Max( ARS,Const ) + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( Min( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ,( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),( CS * RRSe ) ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7489878542510121, "obj2": 0.09705537840706353}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_Mem - DDR ) * AMS ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( RCSe + ( RRSe + RRSe ) ) ) + Min( ( Min( MLU ,DS ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) - MLU ) - RCSe ) )", "obj1": 0.8846153846153846, "obj2": 0.044494434631115146}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5142744245055585}, {"determining": "Max( ( ( ( PN / Const ) + ( Min( ( ( FirstVNF_CPU_Server / Min( BR ,FirstVNF_CPU_Server ) ) + DDR ) ,FirstVNF_CPU_Server ) * PN ) ) - CRS ),Min( AMS ,( ( Max( Const,MDR ) * ( DDR + FirstVNF_RAM_Server ) ) + DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( RRSe + Max( MLU,MUR ) ) + Min( ( Min( DS ,( MUC * ( MUC * RRSe ) ) ) / RCSe ) ,( MUC - ( ( MUR - ( MUC - MUM ) ) * CS ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6851529650811811}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( Min( Max( MUM,RCSe ) ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04519743131280813}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.333892302681325}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( Min( DS ,MUM ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5449049347438027}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( Min( MUR ,RMSe ),MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6194331983805668, "obj2": 0.2004716071474282}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5449049347438027}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( RMSe - ( ( RCSe + ( Min( MUC ,( MLU / MUR ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6681215680040977}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( Min( MUR ,RMSe ),MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.6174089068825911, "obj2": 0.20162520539143128}, {"determining": "( ( PN - MDR ) - ( ( CRS * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( Max( ( FirstVNF_RAM + Const ),FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09219778409170676}, {"determining": "( ( PN - MDR ) - ( ( CRS * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7813765182186235, "obj2": 0.08480595803265611}], "18": [{"determining": "Min( ( ( ( PN - MDR ) - Min( ( ( MDR / AMS ) - CRS ) ,( MRS * ( Max( Min( Const ,FirstVNF_RAM_Server ),FirstVNF_Mem ) - MRS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,BR ) )", "choosing": "( ( ( MUR + DS ) - ( ( ( ( ( Max( MUM,CS ) - MLU ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * MUR ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( Min( DS ,Max( Max( ( CS / MUM ),( RCSe * MUR ) ),Min( Min( RMSe ,MLU ) ,MUC ) ) ) * ( RRSe / DS ) ) / ( MUM - ( RRSe / Min( MUR ,RRSe ) ) ) ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( ( Max( Min( ARS ,( ( Max( FirstVNF_Mem_Server,ARS ) * ( FirstVNF_CPU_Server - PN ) ) + FirstVNF_Mem ) ),( PN - MDR ) ) / Max( ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ARS ,FirstVNF_Mem_Server ) ),CRS ) ),PN ) )", "choosing": "( ( RRSe - Max( CS,Max( ( Max( DS,CS ) - MUR ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + Min( ( RMSe / ( ( RMSe * MUM ) * ( RMSe / MUM ) ) ) ,DS ) ) * Max( ( MUM + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - Max( ( FirstVNF_CPU_Server - CRS ),ACS ) )", "choosing": "Min( ( ( ( RCSe * RRSe ) - ( Max( ( RMSe + MUM ),Max( ( MUC / ( MUR + CS ) ),CS ) ) / DS ) ) + ( CS * DS ) ) ,Max( MUR,RMSe ) )", "obj1": 0.6680161943319838, "obj2": 0.15664735965782012}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MRS - ARS ) + ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( DS / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( ( RMSe - DS ) * ( MLU + CS ) ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.19746213806104213}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( DDR + Min( Max( BR,( AMS / MRS ) ) ,( MDR - RRS ) ) ) / ( ( MRS - Max( AMS,FirstVNF_RAM ) ) / ( ACS / ( ( FirstVNF_CPU / FirstVNF_CPU ) + BR ) ) ) ) - CRS ) ) )", "choosing": "( ( RRSe - MUM ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( Max( ( ( ( DS / ( DS / MUR ) ) / MUC ) + RRSe ),MUR ) * ( CS + RCSe ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.36301026672732345}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( Max( MUC,MUR ) / RMSe ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.4048582995951417, "obj2": 0.39532534977527606}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - RRS ) * FirstVNF_Mem ) * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( RMSe,( MUR + ( MUC - ( Max( CS,MUC ) * CS ) ) ) ) ,MLU ) - ( ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MLU ) ) * ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.43190299473589466}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,FirstVNF_RAM_Server ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ARS * Max( FirstVNF_RAM,FirstVNF_RAM ) ),( ACS * Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( Min( ( RMSe + RRSe ) ,( CS * DS ) ) / DS ) ) * Max( ( MLU / MUM ),MUC ) ) ,Min( ( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.40064528521991005}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3148800248756393}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3623481781376518, "obj2": 0.4512327586973633}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5478082949213623}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.26657260854840703}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5821453821185001}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( Max( MDR,PN ) - MDR ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( ( CS * RRSe ) * MLU ) * Max( Min( Max( MUC,MUM ) ,MUM ),MLU ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( ( MUM * MLU ) - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.2617822961745823}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Max( Max( MRS,( ( ACS - MDR ) - DDR ) ),CRS ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( CS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3259109311740891, "obj2": 0.49716014513167694}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( ARS / ( MRS / BR ) ) * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( FirstVNF_Mem_Server / Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / FirstVNF_RAM ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( CS - CS ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe - RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9149797570850202, "obj2": 0.03223792139070106}, {"determining": "( ( PN - MDR ) - ( ( PN * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( FirstVNF_CPU ,Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( CS * ( CS - DS ) ) ) - ( ( RMSe + CS ) + ( MUC * DS ) ) )", "obj1": 0.46356275303643724, "obj2": 0.33085136928685}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2155342893289551}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + MUM ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.1253055342343137}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6697608178278941}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( ( MLU / MUM ) / RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6343777856544695}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.034830293545732395}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / ( MDR / FirstVNF_Mem ) ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( PN * BR ) ) )", "choosing": "( ( ( ( MUR - MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( RMSe / RMSe ) - Max( RRSe,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8421052631578947, "obj2": 0.05657760266523093}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( BR * Const ) * ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( PN * BR ) ) )", "choosing": "( Max( ( ( MLU / Min( Min( ( MUC * ( DS / MUM ) ) ,( MUC - DS ) ) ,( MLU / RMSe ) ) ) / RCSe ),MUR ) - Max( ( ( MUR / RCSe ) - RCSe ),RCSe ) )", "obj1": 0.9352226720647774, "obj2": 0.02483311858614866}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * PN ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( RRSe + RRSe ),RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.012203693504617967}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.604824514786667}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6816535781031176}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5475129689910753}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.291497975708502, "obj2": 0.5228029199791129}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * MDR ) * ( ( ( FirstVNF_Mem_Server / AMS ) - CRS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( Max( ( MLU + RCSe ),MUC ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2813765182186235, "obj2": 0.5282352446279214}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5024959598245374}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "( ( PN - MDR ) - ( ( ( Max( PN,BR ) + Max( PN,BR ) ) * MDR ) * ( DDR - Const ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10269421198087775}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13749385439818243}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3347904061855281}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( MDR * ( FirstVNF_CPU - ARS ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( MUR ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * ( ( ( RMSe + RRSe ) * Max( Max( Max( Max( RCSe,RRSe ),( RCSe + CS ) ),MUM ),CS ) ) / DS ) ) / ( ( DS * DS ) / Max( ( MLU / RMSe ),Max( ( MUM * ( ( RMSe * MLU ) - MUC ) ),MUR ) ) ) )", "obj1": 0.680161943319838, "obj2": 0.14874106598274622}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6553600610304788}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / Max( Max( MRS,DDR ),CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / RRSe ) ) ,( MUC - MUM ) ) ) ) ) - ( ( ( Max( CS,DS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9838056680161943, "obj2": 0.0063474578757787645}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / Min( FirstVNF_RAM_Server ,BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( RMSe / ( MLU / MUM ) ) ) / ( RCSe / RRSe ) ) * DS ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5157623124047842}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5328561814030914}, {"determining": "( ( PN - MDR ) - ( MRS / RRS ) )", "choosing": "( ( ( DS - Max( ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ),CS ) ) - ( ( Max( MUR,MLU ) + ( MUM - CS ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.1300141059974921}, {"determining": "Max( Max( BR,FirstVNF_RAM ),( Max( FirstVNF_RAM,( ( FirstVNF_Mem_Server / Min( PN ,PN ) ) - Const ) ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( DS * MUR ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( CS / MUR ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7112108897006325}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6524502829598048}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8906882591093117, "obj2": 0.03888403048561148}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( RRSe - MUM ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) * ( CS + RCSe ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.6080386095651342}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8785425101214575, "obj2": 0.0441714296342077}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3117408906882591, "obj2": 0.5080249029445011}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ARS / ( MRS / BR ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5110971530833571}, {"determining": "( ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( MRS - Const ) + ( ARS + MDR ) ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,( ( DS * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) + ( Max( MUR,MLU ) + DS ) ) ) / Max( ( MLU - RMSe ),( ( MUM * MLU ) / MUR ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.588983843772847}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1418059634644597}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + ( ( DS + CS ) * Max( RCSe,MUR ) ) ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.7004048582995951, "obj2": 0.12722932446937313}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,MRS ) ,Max( Const,RRS ) )", "choosing": "( ( ( RRSe + ( Min( DS ,( RCSe + DS ) ) + Min( Min( MLU ,( ( CS - RMSe ) + ( MLU * MUR ) ) ) ,( Min( ( MUC - RCSe ) ,MUR ) / CS ) ) ) ) - ( ( ( ( ( Max( RRSe,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( ( MUC * MUR ) ,DS ) / RCSe ) ,( MUC - DS ) ) ) ) - ( DS * DS ) )", "obj1": 0.8178137651821862, "obj2": 0.07044959751688519}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6613139935563863}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( ( Const / DDR ),FirstVNF_RAM_Server ) - DDR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( DS / Min( Max( MUC,RRSe ) ,RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6256952264036353}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,DDR ) ),( BR / ( Max( PN,BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7173354229165992}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Max( ( FirstVNF_RAM + Const ),FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( MUR * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8846153846153846, "obj2": 0.041084160248073355}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( ( MLU / MUM ) / RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6252558448935387}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( CS,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.055998447688177175}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( ARS - ( ( ( Const / FirstVNF_CPU ) / ACS ) * CRS ) ) ) + AMS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( CS / Min( CS ,Min( ( MLU + RCSe ) ,CS ) ) ) ) - ( Min( ( ( MLU / ( Max( DS,Max( MUC,MUM ) ) - Min( ( RRSe + CS ) ,( MUR * MLU ) ) ) ) * ( ( Min( ( MLU * MUC ) ,RRSe ) - ( ( DS / MLU ) * MLU ) ) + ( CS + MUC ) ) ) ,( DS - DS ) ) / ( ( Min( Min( RCSe ,( DS - DS ) ) ,MLU ) / ( CS - DS ) ) + ( CS - Max( Max( MLU,MLU ),( CS + ( CS * Max( MLU,MUC ) ) ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7020348593273068}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5398087334600455}, {"determining": "( ( ARS * MDR ) * ( Max( Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( Max( MUR,MLU ) * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7170317092746336}, {"determining": "( ( PN - FirstVNF_CPU_Server ) - ( ( Const * MDR ) * ( ( BR / ( Max( ( FirstVNF_Mem * BR ),BR ) + Max( PN,BR ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Min( ( RRSe + ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) ) ,RCSe ) ) ) - ( ( Max( RRSe,MLU ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + Max( CS,( DS + Min( ( MUM + MUR ) ,MUC ) ) ) ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.09385103157103042}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( ( ( ACS - MDR ) - FirstVNF_RAM ) - MDR ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RCSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( ( RRSe - MLU ) / ( ( ( MUM / RMSe ) + RRSe ) / MLU ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7068558920379311}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7550607532170259}, {"determining": "( Max( PN,MDR ) - ( ( CRS * MDR ) * ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) / ( ( ( ( FirstVNF_RAM_Server / PN ) / ( DDR - ARS ) ) * Const ) * FirstVNF_CPU ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM * Min( Max( Max( ( MUM * MUM ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.07891497839402938}, {"determining": "( ( PN - MDR ) - ( ( MDR / ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.5020242914979757, "obj2": 0.28479420590135546}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,( ( DS * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) + Min( MUR ,RRSe ) ) ) / Max( ( MLU - RMSe ),( ( MUM * MLU ) / MUR ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5386325293708092}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( RMSe - ( ( RCSe + ( Min( MUC ,( MLU / MUR ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6681215680040977}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6481830105435649}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / BR ) - Max( ( ( ( FirstVNF_Mem_Server - MRS ) + ( CRS / ( Const * BR ) ) ) + ( ACS / Const ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( Min( MUR ,RMSe ),MLU ) + RCSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ) ) - ( ( ( DS / RCSe ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.937246963562753, "obj2": 0.0241611991329944}, {"determining": "( ( Const * MDR ) * ( Min( ( ( FirstVNF_RAM_Server - DDR ) - FirstVNF_CPU ) ,Max( ( Min( ( FirstVNF_RAM / ( MRS / AMS ) ) ,( MRS + FirstVNF_Mem ) ) / ( CRS - ( MDR - FirstVNF_Mem_Server ) ) ),FirstVNF_CPU ) ) - ( ( ARS + MDR ) + ( MRS - Const ) ) ) )", "choosing": "( Max( ( ( MLU / Min( ( DS / RMSe ) ,Min( ( MUC * ( RMSe / MUM ) ) ,( MUC - MUM ) ) ) ) / ( MUC - RMSe ) ),MUR ) - ( ( ( Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,Min( DS ,Min( MUC ,( MUM + DS ) ) ) ) - MUR ) - MLU ) - CS ) )", "obj1": 0.9453441295546559, "obj2": 0.0204168649588414}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0029848596882304963}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.333892302681325}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_RAM_Server * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( Min( RRS ,FirstVNF_Mem ) + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUM * MUR ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008333349091950581}, {"determining": "( ( PN - MDR ) - ( ( CRS * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( Max( ( PN - MDR ),FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( Max( DS,CS ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08823929104084843}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008333349091950581}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8623481781376519, "obj2": 0.04970978276390116}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( PN * BR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RCSe + Max( RRSe,RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( Min( DS ,MUM ) + RCSe ) ) ) ) ) - ( ( ( DS / RCSe ) / MUC ) - ( Min( MUC ,Min( MLU ,MUC ) ) - DS ) ) )", "obj1": 0.8704453441295547, "obj2": 0.04701859697739982}], "19": [{"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( MUC - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - MDR ) - Min( ( ( MDR / AMS ) - CRS ) ,( MRS * ( Max( Min( Const ,FirstVNF_RAM_Server ),FirstVNF_Mem ) - MRS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,BR ) )", "choosing": "( ( ( MUR + DS ) - ( ( ( ( ( Max( MUM,CS ) - MLU ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * MUR ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( ( Min( DS ,Max( Max( ( CS / MUM ),( RCSe * MUR ) ),Min( Min( RMSe ,MLU ) ,MUC ) ) ) * ( RRSe / DS ) ) / ( MUM - ( RRSe / Min( MUR ,RRSe ) ) ) ) - ( ( ( DS / RCSe ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.35951234939589133}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - RRS ) * FirstVNF_Mem ) * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( RMSe,( MUR + ( MUC - ( Max( CS,MUC ) * CS ) ) ) ) ,MLU ) - ( ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MLU ) ) * ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.43190299473589466}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3623481781376518, "obj2": 0.4512327586973633}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * ACS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - MLU )", "obj1": 0.4048582995951417, "obj2": 0.3868817319937201}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5478082949213623}, {"determining": "( ( PN - ( MDR + FirstVNF_Mem ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server / ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUR * ( ( MUM * MLU ) - MUC ) ),( MUM + MUM ) ) ) ) - ( Min( ( ( DS / ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) + ( Max( MUR,CS ) + RCSe ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5322290604715169}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,FirstVNF_RAM_Server ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ARS * Max( FirstVNF_RAM,FirstVNF_RAM ) ),( ACS * Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( Min( ( RMSe + RRSe ) ,( CS * DS ) ) / DS ) ) * Max( ( MLU / MUM ),MUC ) ) ,Min( ( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.40064528521991005}, {"determining": "( ( PN - MDR ) - Max( ( FirstVNF_CPU_Server - CRS ),ACS ) )", "choosing": "Min( ( ( ( RCSe * RRSe ) - ( Max( ( RMSe + MUM ),Max( ( MUC / ( MUR + CS ) ),CS ) ) / DS ) ) + ( CS * DS ) ) ,Max( MUR,RMSe ) )", "obj1": 0.6680161943319838, "obj2": 0.15664735965782012}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) )", "obj1": 0.6153846153846154, "obj2": 0.19318023546102295}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) * ( ( MDR / AMS ) - ( ( ACS - FirstVNF_RAM_Server ) * Min( ( Min( PN ,ARS ) + ( ( ACS - PN ) - ( RRS * PN ) ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( DS + ( ( CS / MUM ) + MUR ) ) * RMSe ) - ( ( RMSe * Max( RMSe,Min( ( ( RRSe * MUM ) * ( CS / RMSe ) ) ,RMSe ) ) ) + MUM ) ) ,Min( ( ( RMSe / ( Min( ( Max( MUR,MLU ) * MUM ) ,MUM ) - RRSe ) ) * ( CS * ( MUR + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.17204849933039532}, {"determining": "( ( ( Const * MDR ) * Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( ( Const + ( FirstVNF_CPU_Server * PN ) ) + CRS ) ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / MUR ) - ( ( ( MUR * DS ) * ( ( DS + Max( RCSe,CS ) ) + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,( Max( ( RMSe / MUM ),MUC ) / ( ( RRSe - MUR ) / MUR ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5719523933225165}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * MDR ) * ( ( ( FirstVNF_Mem_Server / AMS ) - CRS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( Max( ( MLU + RCSe ),MUC ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2813765182186235, "obj2": 0.5282352446279214}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6816535781031176}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Max( Max( MRS,( ( ACS - MDR ) - DDR ) ),CRS ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( CS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3259109311740891, "obj2": 0.49716014513167694}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( Max( MDR,PN ) - MDR ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( ( CS * RRSe ) * MLU ) * Max( Min( Max( MUC,MUM ) ,MUM ),MLU ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( ( MUM * MLU ) - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.2617822961745823}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - AMS ),( ACS * Min( ( ACS + ( FirstVNF_CPU - AMS ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( ( ( Const + FirstVNF_CPU ) + ( FirstVNF_CPU * PN ) ) + ACS ) * DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - Max( ( ( RMSe + RRSe ) * ( Max( Max( MUC,CS ),MUM ) * CS ) ),( Max( MUC,MUC ) / MUC ) ) ) * ( DS * CS ) ) ,( ( RMSe - MUR ) + RMSe ) )", "obj1": 0.48582995951417, "obj2": 0.3010233192142608}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.2155342893289551}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - ( Max( ( FirstVNF_CPU_Server / ACS ),MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( ( ( Min( Min( MUC ,( DS + RMSe ) ) ,( Max( MUC,RRSe ) + Min( DS ,RRSe ) ) ) - ( RRSe - RCSe ) ) * RMSe ),Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.14116242711439192}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( BR / FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( DS / ( ( RMSe + RRSe ) * Max( Max( Max( MUC,RMSe ),MUM ),CS ) ) ) ) * ( CS * DS ) ) ,Min( ( ( ( MUR - RRSe ) - Max( MUR,MLU ) ) / RRSe ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + RMSe ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16964475979317664}, {"determining": "( ( ( Const * Max( ( Max( MRS,( ACS * ( ARS - RRS ) ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - MDR ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - ( PN - MDR ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( MUC - ( MUM * MUM ) ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( RRSe * Max( MUR,MLU ) ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6391547030891578}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6488563456975524}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + RRSe ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.31544874593308386}, {"determining": "( ( PN - MDR ) - ( ( PN * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( FirstVNF_CPU ,Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( CS * ( CS - DS ) ) ) - ( ( RMSe + CS ) + ( MUC * DS ) ) )", "obj1": 0.46356275303643724, "obj2": 0.33085136928685}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39676161636747376}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6261461143122488}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * PN ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( RRSe + RRSe ),RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.012203693504617967}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ARS / ( MRS / BR ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3016194331983806, "obj2": 0.5110971530833571}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.5031473422007283}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( ARS / ( MRS / BR ) ) * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( FirstVNF_Mem_Server / Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / FirstVNF_RAM ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( CS - CS ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe - RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9149797570850202, "obj2": 0.03223792139070106}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6697608178278941}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.291497975708502, "obj2": 0.5228029199791129}, {"determining": "( ( PN - MDR ) - ( ( ( Max( PN,BR ) + Max( PN,BR ) ) * MDR ) * ( DDR - Const ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10269421198087775}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / CS )", "obj1": 0.7550607287449392, "obj2": 0.09537574020166907}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( ( RMSe + ( ( DS + CS ) * Max( RCSe,MUR ) ) ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( DS + CS ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10083667089829688}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / Min( FirstVNF_RAM_Server ,BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( RMSe / ( MLU / MUM ) ) ) / ( RCSe / RRSe ) ) * DS ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5157623124047842}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( Max( MUC,( RMSe + RCSe ) ) / ( ( ( MUM / CS ) + RRSe ) / MLU ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11841130431869283}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( ( Const + ( ( ( Min( FirstVNF_RAM_Server ,DDR ) * Max( ( ARS - ARS ),FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) + Const ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RMSe + RRSe ) + ( CS * DS ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / Max( MLU,MUM ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.607514155146479}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "Max( Max( BR,FirstVNF_RAM ),Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( Max( ARS,DDR ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + RRSe ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( MUM + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7005092952935759}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,Max( ACS,FirstVNF_RAM_Server ) ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( ( CS * ( ( MUR * MUR ) / MUC ) ),MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.12369646553036431}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.32186234817813764, "obj2": 0.5024959598245374}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3148800248756393}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( CRS / MDR ) - ( ( DDR * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( ( ( MDR - PN ) + FirstVNF_RAM_Server ),( Max( ( FirstVNF_RAM_Server + ARS ),Max( PN,FirstVNF_Mem ) ) - Const ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MUM ) + Max( ( Min( Max( ( MLU * DS ),( MUC + MUM ) ) ,( RMSe * ( RRSe / DS ) ) ) - RRSe ),DS ) ) + ( Max( CS,CS ) - Max( MUM,RCSe ) ) ) / ( RRSe / MLU ) )", "obj1": 0.7732793522267206, "obj2": 0.08820449861369174}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / Max( FirstVNF_Mem_Server,CRS ) ) - CRS ) ) )", "choosing": "( Max( ( ( MLU / Min( ( RMSe / RMSe ) ,Min( ( ( MUC + MUC ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - MUM ) ) ) ) / ( RMSe / DS ) ),( MLU / Min( ( RCSe / RMSe ) ,Min( ( ( MUR + CS ) * ( RMSe / RRSe ) ) ,( MUC - MUM ) ) ) ) ) - ( ( ( ( DS / RCSe ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9251012145748988, "obj2": 0.029227330312277394}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3407795976261808}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( ( FirstVNF_RAM_Server - ARS ) / AMS ) - CRS ) ) )", "choosing": "( ( CS * ( DS - DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6613139935563863}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + Max( ACS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.33570126684399715}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.034225830374834364}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8623481781376519, "obj2": 0.04970978276390116}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,DDR ) ),( BR / ( Max( PN,BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7173354229165992}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13749385439818243}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server / ACS ) ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( ARS - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( MLU - RRSe ) ) * ( CS * DS ) ) ,( ( Max( Max( DS,( MUR - DS ) ),MUM ) - MLU ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.19909130319878904}, {"determining": "Min( ( ( ( PN - MDR ) - Min( ( Const * BR ) ,FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) ,Min( AMS ,BR ) )", "choosing": "( ( MLU - Max( CS,Max( ( RRSe + ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) ),RCSe ) ) ) - ( ( Max( MLU,RRSe ) + ( RRSe + ( MLU + Max( MUC,( ( MLU + MLU ) + RCSe ) ) ) ) ) * ( ( CS + DS ) * Max( ( ( MUC - ( MUM / ( MUR + CS ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.08100550327209402}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( ( MLU / MUM ) / RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6252558448935387}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( PN - MDR ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7813765182186235, "obj2": 0.08407546056504214}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( FirstVNF_Mem + MDR ) ) ) ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5323886639676113, "obj2": 0.2663842307047657}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( CS,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.055998447688177175}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / MDR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,( ARS / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( CS / MUC ) - ( ( RCSe + ( RRSe + ( ( RMSe + RRSe ) * ( Max( Max( MUC,CS ),MUM ) / CS ) ) ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6553600610304788}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( ( ( ACS - MDR ) - FirstVNF_RAM ) - MDR ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RCSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( ( RRSe - MLU ) / ( ( ( MUM / RMSe ) + RRSe ) / MLU ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7068558920379311}, {"determining": "Min( Max( ( PN / ( ( FirstVNF_Mem_Server - BR ) * Max( Const,FirstVNF_RAM_Server ) ) ),Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Max( ( FirstVNF_CPU_Server + ARS ),Min( ( ( BR + FirstVNF_CPU_Server ) + Const ) ,MDR ) ) ) ) ) ,( ( ( PN - MDR ) - ( ( ACS + Const ) * ( ( Max( Const,CRS ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUC ) - ( ( ( ( ( Max( ( RMSe / RRSe ),RCSe ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * Max( RCSe,RRSe ) ) ) + RMSe ) ,( MUC - Min( RMSe ,( DS * MUR ) ) ) ) ) - ( RRSe + DS ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09041728952320874}, {"determining": "( ( PN - MDR ) - ( ( MDR / ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.5020242914979757, "obj2": 0.28479420590135546}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - ARS ) - ( ( Const + ( ( ( ( Max( RRS,MRS ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( MLU / MUR ) ) ,( ( MLU * DS ) * MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( MUR,( ( ( DS / RCSe ) / MUC ) + RRSe ) ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.604824514786667}, {"determining": "( ( PN / MDR ) - ( ( ( Max( FirstVNF_RAM,( ( AMS * PN ) * ( FirstVNF_RAM_Server - PN ) ) ) * Min( DDR ,( ACS * Min( Const ,Const ) ) ) ) * MDR ) * ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) / AMS ) - ( Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + ( ( DS + CS ) * Max( RCSe,MUR ) ) ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS / DS ) ) ,Min( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) ,( RRSe * ( ( Min( RRSe ,MUM ) - RMSe ) - RRSe ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.026049860690789767}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5263157894736842, "obj2": 0.26657260854840703}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * DS ) ) / DS ) ) * ( CS * DS ) ) ,( ( DS * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) + Min( MUR ,RRSe ) ) ) / Max( ( MLU - RMSe ),( ( MUM * MLU ) / MUR ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.13206784041509328}, {"determining": "( ( ARS * Max( BR,MDR ) ) * ( Max( ( Min( FirstVNF_CPU_Server ,Const ) * ( FirstVNF_CPU_Server / CRS ) ),Max( BR,FirstVNF_CPU ) ) - ( ( ( ACS + PN ) - ( Const / FirstVNF_Mem_Server ) ) * Max( MRS,RRS ) ) ) )", "choosing": "( Min( ( Min( RRSe ,( ( ( ( MLU * RMSe ) * Max( DS,RRSe ) ) + MUC ) + MUM ) ) / ( MLU - CS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7129072438075608}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,MRS ) ,Max( Const,RRS ) )", "choosing": "( ( ( RRSe + ( Min( DS ,( RCSe + DS ) ) + Min( Min( MLU ,( ( CS - RMSe ) + ( MLU * MUR ) ) ) ,( Min( ( MUC - RCSe ) ,MUR ) / CS ) ) ) ) - ( ( ( ( ( Max( RRSe,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( ( MUC * MUR ) ,DS ) / RCSe ) ,( MUC - DS ) ) ) ) - ( DS * DS ) )", "obj1": 0.8178137651821862, "obj2": 0.07044959751688519}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008333349091950581}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( FirstVNF_RAM_Server - ARS ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.585698123819169}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( FirstVNF_CPU * BR ) * ( MRS - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_RAM_Server * ACS ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Max( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( MUR * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Min( DS ,CS ) - ( ( MLU / RRSe ) - ( ( ( CS - RRSe ) * ( CS * DS ) ) / DS ) ) ) - MLU ) - RCSe ) )", "obj1": 0.840080971659919, "obj2": 0.0574094771829726}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_RAM_Server * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( Min( RRS ,FirstVNF_Mem ) + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUM * MUR ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008333349091950581}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( DS + CS ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7044534412955465, "obj2": 0.12564659560303917}, {"determining": "( ( PN - MDR ) - ( MRS / RRS ) )", "choosing": "( ( ( DS - Max( ( ( Max( MUR,MLU ) + DS ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ),CS ) ) - ( ( Max( MUR,MLU ) + ( MUM - CS ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,CS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.1300141059974921}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) )", "obj1": 0.9919028340080972, "obj2": 0.002959233123363896}], "20": [{"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( PN - MDR ) ) ) * ( ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * ( ( MLU + MLU ) + RCSe ) ) ) ,Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( MUC - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( Max( ( RRS / AMS ),( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) - ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) ) / ( Max( DS,CS ) * Min( Max( MUC,( CS - ( ( MUM - MUC ) + RMSe ) ) ) ,( ( MUR / MUM ) * RMSe ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.48618215132818576}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5478082949213623}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),CS ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.4008097165991903, "obj2": 0.3866017615369403}, {"determining": "( ( PN - ( MDR + FirstVNF_Mem ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server / ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUR * ( ( MUM * MLU ) - MUC ) ),( MUM + MUM ) ) ) ) - ( Min( ( ( DS / ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) + ( Max( MUR,CS ) + RCSe ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5322290604715169}, {"determining": "( ( ( Const * MDR ) * Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( ( Const + ( FirstVNF_CPU_Server * PN ) ) + CRS ) ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / MUR ) - ( ( ( MUR * DS ) * ( ( DS + Max( RCSe,CS ) ) + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,( Max( ( RMSe / MUM ),MUC ) / ( ( RRSe - MUR ) / MUR ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5719523933225165}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.04081664631445183}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8623481781376519, "obj2": 0.04970978276390116}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( MDR + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,( ( ( DS / RCSe ) / MUC ) + MUR ) ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3582995951417004, "obj2": 0.45344421974761073}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( Max( MDR,PN ) - MDR ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( ( CS * RRSe ) * MLU ) * Max( Min( Max( MUC,MUM ) ,MUM ),MLU ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( ( MUM * MLU ) - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.2617822961745823}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - AMS ),( ACS * Min( ( ACS + ( FirstVNF_CPU - AMS ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( ( ( Const + FirstVNF_CPU ) + ( FirstVNF_CPU * PN ) ) + ACS ) * DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - Max( ( ( RMSe + RRSe ) * ( Max( Max( MUC,CS ),MUM ) * CS ) ),( Max( MUC,MUC ) / MUC ) ) ) * ( DS * CS ) ) ,( ( RMSe - MUR ) + RMSe ) )", "obj1": 0.48582995951417, "obj2": 0.3010233192142608}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ARS / ( MRS / BR ) ) / ( ( PN - FirstVNF_RAM ) * ( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) - ( ( ( RRSe + DS ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.4315060718061978}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) * MDR ) * ( ( ( FirstVNF_Mem_Server / AMS ) - CRS ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,MLU ) + RRSe ) + Min( ( Min( Max( ( MLU + RCSe ),MUC ) ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.2813765182186235, "obj2": 0.5282352446279214}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.35951234939589133}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.38461538461538464, "obj2": 0.40805039214264754}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MUR - DS ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5110009274497224}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( PN - MDR ) - ( ( ( BR + ACS ) * MDR ) * Min( ( FirstVNF_CPU_Server + ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * MUC ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) - ( ( ( RRSe + ( ( RMSe + ( RRSe / MLU ) ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.937246963562753, "obj2": 0.023865469512986796}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.145748987854251, "obj2": 0.6443323859095438}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6816535781031176}, {"determining": "( ( PN - MDR ) - Max( ( FirstVNF_CPU_Server - CRS ),ACS ) )", "choosing": "Min( ( ( ( RCSe * RRSe ) - ( Max( ( RMSe + MUM ),Max( ( MUC / ( MUR + CS ) ),CS ) ) / DS ) ) + ( CS * DS ) ) ,Max( MUR,RMSe ) )", "obj1": 0.6680161943319838, "obj2": 0.15664735965782012}, {"determining": "Max( Max( BR,FirstVNF_RAM ),Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( Max( ARS,DDR ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + RRSe ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( MUM + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7005092952935759}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2773569460324417}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( FirstVNF_RAM_Server - ARS ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.585698123819169}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.6538461538461539, "obj2": 0.15710217549852018}, {"determining": "( ( PN - MDR ) - ( ( ( Max( PN,BR ) + Max( PN,BR ) ) * MDR ) * ( DDR - Const ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10269421198087775}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - FirstVNF_RAM ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( Max( MUC,( RMSe + RCSe ) ) / ( ( ( MUM / CS ) + RRSe ) / ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14824328652117344}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - BR ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / MDR ) - CRS ) ) )", "choosing": "( Max( ( RRSe - ( ( CS / ( CS * ( ( MUR * MUR ) / MUC ) ) ) + RMSe ) ),MUR ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.22064777327935223, "obj2": 0.584453928735417}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( ( MLU / MUM ) / RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6252558448935387}, {"determining": "( ( PN - ( DDR - DDR ) ) - ( ( Const + ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * Min( ( RMSe / Max( MUM,( RMSe / MUM ) ) ) ,( ( MUM - RMSe ) - ( RRSe - ( ( ( RMSe + MLU ) - ( RRSe / DS ) ) * DS ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17879157260142364}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / Min( FirstVNF_RAM_Server ,BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( RMSe / ( MLU / MUM ) ) ) / ( RCSe / RRSe ) ) * DS ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5157623124047842}, {"determining": "( ( ( ( RRS - FirstVNF_CPU ) * ARS ) * Min( DDR ,FirstVNF_Mem_Server ) ) - ( PN - MDR ) )", "choosing": "Min( ( ( RMSe + DS ) * RMSe ) ,Min( MUR ,( ( DS / MUM ) / ( MUR / RCSe ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.4364319939275518}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( Min( MLU ,RMSe ) - ( ( RCSe + ( RRSe + ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) ) ) * ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.2128203402836059}, {"determining": "( ( ( MDR * FirstVNF_RAM ) - MDR ) - ( ( Const * Max( ( Min( ( ( PN - MDR ) + ACS ) ,DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( FirstVNF_CPU * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( MUC ,RMSe ) - ( ( RCSe + ( RRSe + MUC ) ) * ( ( RRSe * ( MLU / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3131847976063584}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - ( Max( ( FirstVNF_CPU_Server / ACS ),MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( ( ( Min( Min( MUC ,( DS + RMSe ) ) ,( Max( MUC,RRSe ) + Min( DS ,RRSe ) ) ) - ( RRSe - RCSe ) ) * RMSe ),Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.14116242711439192}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6261461143122488}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.3623481781376518, "obj2": 0.4512327586973633}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - DS )", "obj1": 0.6133603238866396, "obj2": 0.1903620131487013}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13749385439818243}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6031862864552436}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( ( ( ACS - MDR ) - FirstVNF_RAM ) - MDR ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RCSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( ( RRSe - MLU ) / ( ( ( MUM / RMSe ) + RRSe ) / MLU ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7068558920379311}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - BR ) * Max( Min( AMS ,FirstVNF_CPU_Server ),PN ) ) / ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( ( ( ACS - BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RCSe - MUR ) - Min( DS ,MUC ) ) )", "obj1": 0.6255060728744939, "obj2": 0.1885298230262074}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( Max( MUC,( RMSe + RCSe ) ) / ( ( ( MUM / CS ) + RRSe ) / MLU ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11841130431869283}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.431739197674357}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / ( ARS / ( MRS / BR ) ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008328281362597846}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( BR / AMS ) - CRS ) * ( Const * BR ) ) ) / ( ( MRS - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ( AMS + FirstVNF_RAM ) ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( MUM + ( CS - CS ) ) / ( Max( DS,CS ) * Min( ( MUM / MUR ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.0821305865543251}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39676161636747376}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,Max( ACS,FirstVNF_RAM_Server ) ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( ( CS * ( ( MUR * MUR ) / MUC ) ),MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7105263157894737, "obj2": 0.12369646553036431}, {"determining": "( ( MDR - PN ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / MRS ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( ARS + PN ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - ( DS * RMSe ) ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.1214574898785425, "obj2": 0.67918279247838}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( ARS / ( MRS / BR ) ) * BR ) * ( ( ( FirstVNF_CPU_Server / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - ( FirstVNF_CPU + CRS ) ) / ( FirstVNF_Mem_Server / Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / FirstVNF_RAM ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( CS - CS ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe - RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.9149797570850202, "obj2": 0.03223792139070106}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( MDR / ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( Max( Max( Max( MUC,CS ),MUM ),CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6659257588549352}, {"determining": "( ( CRS / MDR ) - ( ( DDR * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( ( ( MDR - PN ) + FirstVNF_RAM_Server ),( Max( ( FirstVNF_RAM_Server + ARS ),Max( PN,FirstVNF_Mem ) ) - Const ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MUM ) + Max( ( Min( Max( ( MLU * DS ),( MUC + MUM ) ) ,( RMSe * ( RRSe / DS ) ) ) - RRSe ),DS ) ) + ( Max( CS,CS ) - Max( MUM,RCSe ) ) ) / ( RRSe / MLU ) )", "obj1": 0.7732793522267206, "obj2": 0.08820449861369174}, {"determining": "( ( ( Const + ( ( ( Min( FirstVNF_RAM_Server ,DDR ) * Max( ( ARS - ARS ),FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) + Const ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RMSe + RRSe ) + ( CS * DS ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / Max( MLU,MUM ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.607514155146479}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( MDR / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( MRS / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - DS ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5225888937025989}, {"determining": "( ( PN - MDR ) - ( ( PN * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( FirstVNF_CPU ,Min( ACS ,PN ) ) ) ) )", "choosing": "( ( ( RRSe - MUC ) - ( CS * ( CS - DS ) ) ) - ( ( RMSe + CS ) + ( MUC * DS ) ) )", "obj1": 0.46356275303643724, "obj2": 0.33085136928685}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + Max( ACS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.33570126684399715}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,DDR ) ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( ( RMSe + ( ( DS + CS ) * Max( RCSe,MUR ) ) ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( DS + CS ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( MUR / MUR ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004367949060163012}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / FirstVNF_RAM ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) * ( CS * DS ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.07926818619145173}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,MRS ) ,Max( Const,RRS ) )", "choosing": "( ( ( RRSe + ( Min( DS ,( RCSe + DS ) ) + Min( Min( MLU ,( ( CS - RMSe ) + ( MLU * MUR ) ) ) ,( Min( ( MUC - RCSe ) ,MUR ) / CS ) ) ) ) - ( ( ( ( ( Max( RRSe,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( ( MUC * MUR ) ,DS ) / RCSe ) ,( MUC - DS ) ) ) ) - ( DS * DS ) )", "obj1": 0.8178137651821862, "obj2": 0.07044959751688519}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( Min( FirstVNF_CPU_Server ,Const ) ,( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) * ( ( MDR / AMS ) - ( ( ACS - FirstVNF_RAM_Server ) * Min( ( Min( PN ,ARS ) + ( ( ACS - PN ) - ( RRS * PN ) ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( DS + ( ( CS / MUM ) + MUR ) ) * RMSe ) - ( ( RMSe * Max( RMSe,Min( ( ( RRSe * MUM ) * ( CS / RMSe ) ) ,RMSe ) ) ) + MUM ) ) ,Min( ( ( RMSe / ( Min( ( Max( MUR,MLU ) * MUM ) ,MUM ) - RRSe ) ) * ( CS * ( MUR + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.17204849933039532}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.06882591093117409, "obj2": 0.7325790410133932}, {"determining": "( ( PN - MDR ) - ( ( MDR / ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.46558704453441296, "obj2": 0.3203222961143412}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( FirstVNF_Mem - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ( AMS / FirstVNF_Mem ) ) ) * ( ( PN - Const ) - ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( Const,ARS ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,( ( CS * DS ) * ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,MUR ),( MUR + DS ) ),CS ) ) / DS ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.19723640816359284}, {"determining": "( ( PN / MDR ) - ( ( ( Max( FirstVNF_RAM,( ( AMS * PN ) * ( FirstVNF_RAM_Server - PN ) ) ) * Min( DDR ,( ACS * Min( Const ,Const ) ) ) ) * MDR ) * ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) / AMS ) - ( Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + ( ( DS + CS ) * Max( RCSe,MUR ) ) ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS / DS ) ) ,Min( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) ,( RRSe * ( ( Min( RRSe ,MUM ) - RMSe ) - RRSe ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.026049860690789767}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( MRS - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Max( ( FirstVNF_RAM + Const ),FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06112210893050159}, {"determining": "( ( PN - ( Const + FirstVNF_CPU ) ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ARS ) ,Min( Min( FirstVNF_CPU_Server ,Const ) ,( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( MLU + Min( ( MLU * RCSe ) ,Min( RRSe ,MUR ) ) ) / RRSe ),MUR ) ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.1820042090519551}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.26384993440238014}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( DS + CS ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7044534412955465, "obj2": 0.12564659560303917}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( PN - MDR ) ,( Max( FirstVNF_RAM_Server,( CRS - Const ) ) - DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( MUR,MLU ) + ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + ( RCSe / RMSe ) ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7874493927125507, "obj2": 0.08089986038349153}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_RAM_Server * AMS ) ) * ( CRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( Max( Min( RCSe ,DS ),( ( RMSe * MUM ) + ( Max( MUR,CS ) * ( CS - RCSe ) ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,MUM ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.671138076032943}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.034225830374834364}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( BR / FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( DS / ( ( RMSe + RRSe ) * Max( Max( Max( MUC,RMSe ),MUM ),CS ) ) ) ) * ( CS * DS ) ) ,Min( ( ( ( MUR - RRSe ) - Max( MUR,MLU ) ) / RRSe ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + RMSe ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16964475979317664}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Min( Max( ( PN / ( ( FirstVNF_Mem_Server - BR ) * Max( Const,FirstVNF_RAM_Server ) ) ),Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Max( ( FirstVNF_CPU_Server + ARS ),Min( ( ( BR + FirstVNF_CPU_Server ) + Const ) ,MDR ) ) ) ) ) ,( ( ( PN - MDR ) - ( ( ACS + Const ) * ( ( Max( Const,CRS ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUC ) - ( ( ( ( ( Max( ( RMSe / RRSe ),RCSe ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * Max( RCSe,RRSe ) ) ) + RMSe ) ,( MUC - Min( RMSe ,( DS * MUR ) ) ) ) ) - ( RRSe + DS ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09041728952320874}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server * ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( MLU ,Max( Max( DS,MUC ),MUM ) ) - ( ( RMSe / ( RCSe + RRSe ) ) / ( RMSe + MUC ) ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6563039001563004}], "21": [{"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( PN - MDR ) ) ) * ( ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * ( ( MLU + MLU ) + RCSe ) ) ) ,Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),CS ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.4008097165991903, "obj2": 0.38660176153694026}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5478082949213623}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( Max( ( ( FirstVNF_CPU_Server / ( Max( ( BR / Const ),BR ) + ( ( PN + MRS ) / DDR ) ) ) + ( BR / Min( AMS ,( DDR + FirstVNF_RAM ) ) ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),RRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( ACS * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUR * Min( ( MUM * MUM ) ,MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( MUC - DS ) ,( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) ) ) - ( Min( ( ( MUR - MUC ) + MLU ) ,( MUC * RMSe ) ) / RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.5303641394244553}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,( Min( AMS ,BR ) - Min( MDR ,FirstVNF_CPU ) ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( MDR + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU + RRSe ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( DS - DS ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3481781376518219, "obj2": 0.4591279704501581}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.145748987854251, "obj2": 0.6443323859095438}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.35020242914979755, "obj2": 0.441344271563752}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - AMS ),( ACS * Min( ( ACS + ( FirstVNF_CPU - AMS ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( ( ( Const + FirstVNF_CPU ) + ( FirstVNF_CPU * PN ) ) + ACS ) * DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - Max( ( ( RMSe + RRSe ) * ( Max( Max( MUC,CS ),MUM ) * CS ) ),( Max( MUC,MUC ) / MUC ) ) ) * ( DS * CS ) ) ,( ( RMSe - MUR ) + RMSe ) )", "obj1": 0.48582995951417, "obj2": 0.3010233192142608}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.4786351836463022}, {"determining": "( ( PN - ( MDR + FirstVNF_Mem ) ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server / ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUR * ( ( MUM * MLU ) - MUC ) ),( MUM + MUM ) ) ) ) - ( Min( ( ( DS / ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) + ( Max( MUR,CS ) + RCSe ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5322290604715169}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.35951234939589133}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( MRS - CRS ) ) ) + ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * Min( AMS ,RRS ) ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Max( ( FirstVNF_RAM + Const ),FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( RRSe - ( Min( DS ,( RCSe + DS ) ) + Min( Min( MLU ,( ( CS - RMSe ) + ( MLU * MUR ) ) ) ,( Min( MUR ,( MUC + RCSe ) ) / CS ) ) ) ) - ( ( ( ( ( Max( RRSe,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + ( Min( ( DS + ( RCSe + ( DS * RCSe ) ) ) ,Min( MUC ,RMSe ) ) * RMSe ) ) ) - ( ( RMSe + CS ) - ( ( ( DS / MUM ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.8724696356275303, "obj2": 0.046072099208046245}, {"determining": "( ( PN - MDR ) - Max( ( FirstVNF_CPU_Server - CRS ),ACS ) )", "choosing": "Min( ( ( ( RCSe * RRSe ) - ( Max( ( RMSe + MUM ),Max( ( MUC / ( MUR + CS ) ),CS ) ) / DS ) ) + ( CS * DS ) ) ,Max( MUR,RMSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5077312221158279}, {"determining": "( ( MDR - PN ) - ( ( ( RRS - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - CRS ) ) ) * FirstVNF_Mem ) - ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( Min( MUR ,RCSe ) + MUR ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.4316974061867661}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_RAM_Server - DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( CS + DS ) * Max( ( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) + MUR ),MUR ) ) ) )", "obj1": 0.5425101214574899, "obj2": 0.25215866493061256}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.490591447627507}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - Max( ( RRS * ( MDR + RRS ) ),BR ) ) - ( ( Const * Max( ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7128418199475189}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),Min( MUC ,DS ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.6619433198380567, "obj2": 0.15377744576897212}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2773569460324417}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.034225830374834364}, {"determining": "Min( Max( ( PN / ( ( FirstVNF_Mem_Server - BR ) * Max( Const,FirstVNF_RAM_Server ) ) ),Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Max( ( FirstVNF_CPU_Server + ARS ),Min( ( ( BR + FirstVNF_CPU_Server ) + Const ) ,MDR ) ) ) ) ) ,( ( ( PN - MDR ) - ( ( ACS + Const ) * ( ( Max( Const,CRS ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUC ) - ( ( ( ( ( Max( ( RMSe / RRSe ),RCSe ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * Max( RCSe,RRSe ) ) ) + RMSe ) ,( MUC - Min( RMSe ,( DS * MUR ) ) ) ) ) - ( RRSe + DS ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09041728952320874}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_RAM_Server * AMS ) ) * ( CRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( Max( Min( RCSe ,DS ),( ( RMSe * MUM ) + ( Max( MUR,CS ) * ( CS - RCSe ) ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,MUM ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.671138076032943}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - MDR ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5662779013214279}, {"determining": "( ( ( Const + ( ( ( Min( FirstVNF_RAM_Server ,DDR ) * Max( ( ARS - ARS ),FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) + Const ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( ( DS + MUM ),( ( RMSe + RRSe ) + ( CS * DS ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / Max( MLU,MUM ) ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.607514155146479}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "Min( ( ( ( PN - MDR ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + Min( ( MUC - MUM ) ,MLU ) ) ) ,( ( MUC + MUC ) + DS ) )", "obj1": 0.8927125506072875, "obj2": 0.04141068939826259}, {"determining": "( ( ( Const + ( ( ( FirstVNF_Mem / ARS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * FirstVNF_RAM_Server ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( ( ( CS + ( ( MLU / MUM ) / RMSe ) ) / ( RMSe / DS ) ) * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6252558448935387}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - Max( ( FirstVNF_CPU_Server - CRS ),ACS ) )", "choosing": "Min( ( ( ( RCSe * RRSe ) - ( Max( ( RMSe + MUM ),Max( ( MUC / ( MUR + CS ) ),CS ) ) / DS ) ) + ( CS * DS ) ) ,Max( MUR,RMSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5077312221158279}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( Max( MDR,PN ) - MDR ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( ( CS * RRSe ) * MLU ) * Max( Min( Max( MUC,MUM ) ,MUM ),MLU ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( ( MUM * MLU ) - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.2617822961745823}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( Min( MUC ,MLU ) * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.43406368362255787}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "Max( Max( BR,FirstVNF_RAM ),Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( Max( ARS,DDR ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + RRSe ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( MUM + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7005092952935759}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6261461143122488}, {"determining": "( ( PN - MDR ) - ( ( ( Max( FirstVNF_RAM_Server,DDR ) * AMS ) * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ( DDR * Max( ( BR * DDR ),( MDR + FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RMSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( MUR * ( ( ( RRSe / RMSe ) / Max( Min( MUM ,MUR ),MUM ) ) + DS ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2637959722451936}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - DS )", "obj1": 0.6133603238866396, "obj2": 0.1903620131487013}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * DS ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011570705571369733}, {"determining": "( ( PN / MDR ) - ( ( ( Max( FirstVNF_RAM,( ( AMS * PN ) * ( FirstVNF_RAM_Server - PN ) ) ) * Min( DDR ,( ACS * Min( Const ,Const ) ) ) ) * MDR ) * ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) / AMS ) - ( Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + ( ( DS + CS ) * Max( RCSe,MUR ) ) ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS / DS ) ) ,Min( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) ,( RRSe * ( ( Min( RRSe ,MUM ) - RMSe ) - RRSe ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.026049860690789767}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.65817312867313}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,DDR ) ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( ( BR + ( MRS - Const ) ) - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( MLU / RMSe ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( DS + CS ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( MUR / MUR ) ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09642542042986708}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8623481781376519, "obj2": 0.04970978276390116}, {"determining": "( ( PN - ( DDR - DDR ) ) - ( ( Const + ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * Min( ( RMSe / Max( MUM,( RMSe / MUM ) ) ) ,( ( MUM - RMSe ) - ( RRSe - ( ( ( RMSe + MLU ) - ( RRSe / DS ) ) * DS ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17879157260142364}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( Max( MUC,( RMSe + RCSe ) ) / ( ( ( MUM / CS ) + RRSe ) / MLU ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11841130431869283}, {"determining": "( ( PN - ( MDR / AMS ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13639652496993163}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - FirstVNF_RAM ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( Max( MUC,( RMSe + RCSe ) ) / ( ( ( MUM / CS ) + RRSe ) / ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14824328652117344}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - BR ) * Max( Min( AMS ,FirstVNF_CPU_Server ),PN ) ) / ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( ( ( ACS - BR ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RCSe - MUR ) - Min( DS ,MUC ) ) )", "obj1": 0.6255060728744939, "obj2": 0.1885298230262074}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6983805668016194, "obj2": 0.1362404420075178}, {"determining": "( ( PN - ( Const + FirstVNF_CPU ) ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ARS ) ,Min( Min( FirstVNF_CPU_Server ,Const ) ,( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( MLU + Min( ( MLU * RCSe ) ,Min( RRSe ,MUR ) ) ) / RRSe ),MUR ) ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.1820042090519551}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( FirstVNF_RAM_Server - ARS ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.585698123819169}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MRS * AMS ) - CRS ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.1037911622655415}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + AMS ) ) ,DDR ) ) )", "choosing": "( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9433198380566802, "obj2": 0.021402887740788443}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16035445309732305}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6031862864552436}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( CS,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08213058655432509}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Min( ( ( PN - MDR ) + ACS ) ,DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.31269259528610516}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6781376518218624, "obj2": 0.13983560033973028}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / ( ARS / ( MRS / BR ) ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008328281362597846}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MDR )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * Max( DS,MLU ) ) / DS ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.21243691267127401}, {"determining": "( ( CRS / MDR ) - ( ( DDR * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( ( ( MDR - PN ) + FirstVNF_RAM_Server ),( Max( ( FirstVNF_RAM_Server + ARS ),Max( PN,FirstVNF_Mem ) ) - Const ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MUM ) + Max( ( Min( Max( ( MLU * DS ),( MUC + MUM ) ) ,( RMSe * ( RRSe / DS ) ) ) - RRSe ),DS ) ) + ( Max( CS,CS ) - Max( MUM,RCSe ) ) ) / ( RRSe / MLU ) )", "obj1": 0.7732793522267206, "obj2": 0.08820449861369174}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.38461538461538464, "obj2": 0.40805039214264754}, {"determining": "( ( PN - MDR ) - ( ( ( BR + ACS ) * MDR ) * Min( ( FirstVNF_CPU_Server + ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * MUC ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) - ( ( ( RRSe + ( ( RMSe + ( RRSe / MLU ) ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.937246963562753, "obj2": 0.023865469512986796}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( ( MDR - MRS ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ACS + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( RRSe + Min( DS ,( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) ) * ( ( DS + CS ) - Max( RCSe,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.69139999255237}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6822376327134315}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + Max( ACS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( Max( Max( MUC,CS ),MUM ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.3192679273225527}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( Max( ( RRS / AMS ),( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( ( ( MUM - Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) - Max( MUM,RCSe ) ) - ( Min( Min( MUC ,( MUR * DS ) ) ,MLU ) + Max( ( Min( Max( ( DS + MUM ),MLU ) ,MLU ) - RRSe ),DS ) ) ) / ( Max( DS,CS ) * Min( Max( MUC,( CS - ( ( MUM - MUC ) + RMSe ) ) ) ,( ( MUR / MUM ) * RMSe ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.48618215132818576}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.39011447609504407}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.5940748365518992}, {"determining": "( ( PN - MDR ) - ( ( MDR / ( ( FirstVNF_RAM_Server - ARS ) + ( ACS * Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.46558704453441296, "obj2": 0.3203222961143412}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.6538461538461539, "obj2": 0.15710217549852018}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / FirstVNF_RAM ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) * ( CS * DS ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.07926818619145173}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_CPU ) ,MRS ) ,Max( Const,RRS ) )", "choosing": "( ( ( RRSe + ( Min( DS ,( RCSe + DS ) ) + Min( Min( MLU ,( ( CS - RMSe ) + ( MLU * MUR ) ) ) ,( Min( ( MUC - RCSe ) ,MUR ) / CS ) ) ) ) - ( ( ( ( ( Max( RRSe,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( ( MUC * MUR ) ,DS ) / RCSe ) ,( MUC - DS ) ) ) ) - ( DS * DS ) )", "obj1": 0.8178137651821862, "obj2": 0.07044959751688519}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * ( ( PN + FirstVNF_RAM ) * FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM_Server - ARS ),CRS ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / ( ( MUM - RMSe ) * RMSe ) ) ) ) * ( ( CS + DS ) * Max( ( ( RRSe / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.5794150446201497}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + Max( ACS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.33570126684399715}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + PN ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( MUR,RCSe ) + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4015870769354087}], "22": [{"determining": "( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( PN - FirstVNF_CPU ) ) ) * ( ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MUC + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( MDR * Const ) * ( ( Const / Min( ( ( PN - MDR ) + FirstVNF_CPU ) ,DDR ) ) + Const ) ) * Max( FirstVNF_RAM,( DDR + ( CRS / MDR ) ) ) ) )", "choosing": "( Max( Max( CS,RCSe ),( MLU * MUR ) ) - ( ( ( RRSe - MLU ) / ( RRSe + DS ) ) * ( CS * ( RMSe + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3191407880855683}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5478082949213623}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( ( ( Min( MUC ,( MUR * MUR ) ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.33532470580585777}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( ( FirstVNF_RAM - DDR ) + FirstVNF_Mem_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( MUC / Max( ( ( MUC / Min( RMSe ,Max( RCSe,RRSe ) ) ) * MUM ),MUR ) ) )", "obj1": 0.4109311740890688, "obj2": 0.37890985258236776}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ACS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( Min( DS ,( RRSe * ( MUC + MUM ) ) ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5586498806478669}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "Max( ( ( FirstVNF_Mem * AMS ) + Min( FirstVNF_CPU_Server ,DDR ) ),( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) )", "choosing": "( ( ( DS * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) / ( Max( MLU,RMSe ) / Max( ( MUM * MLU ),( DS / MUC ) ) ) ) / Min( ( RCSe * MUC ) ,CS ) )", "obj1": 0.0728744939271255, "obj2": 0.7277106958413343}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.48213710075514793}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_RAM_Server * AMS ) ) * ( CRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( Max( Min( RCSe ,DS ),( ( RMSe * MUM ) + ( Max( MUR,CS ) * ( CS - RCSe ) ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,MUM ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.671138076032943}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MDR )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * Max( DS,MLU ) ) / DS ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.21243691267127401}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.4786351836463022}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ( PN * BR ) ,DDR ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( ( ( RMSe * RCSe ) + RMSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( ( MLU / ( MUM + Max( ( DS * MUR ),( CS / MUR ) ) ) ),( ( MUR + Min( MUM ,( RMSe - DS ) ) ) + ( RMSe * MUM ) ) ) / ( ( ( MUR / MLU ) * MUM ) - ( ( ( MUC * RRSe ) / RRSe ) / RCSe ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30728708076937444}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.12982120333091438}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),Min( MUC ,DS ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.6619433198380567, "obj2": 0.15377744576897212}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.35951234939589133}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.11133603238866396, "obj2": 0.6822376327134315}, {"determining": "( ( MDR - PN ) - ( ( ( RRS - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - CRS ) ) ) * FirstVNF_Mem ) - ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( Min( MUR ,RCSe ) + MUR ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.4316974061867661}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( ( RMSe + CS ) + DS ) * MUR ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23911724922129673}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - AMS ),( ACS * Min( ( ACS + ( FirstVNF_CPU - AMS ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( ( ( Const + FirstVNF_CPU ) + ( FirstVNF_CPU * PN ) ) + ACS ) * DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - Max( ( ( RMSe + RRSe ) * ( Max( Max( MUC,CS ),MUM ) * CS ) ),( Max( MUC,MUC ) / MUC ) ) ) * ( DS * CS ) ) ,( ( RMSe - MUR ) + RMSe ) )", "obj1": 0.48582995951417, "obj2": 0.3010233192142608}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_RAM_Server - DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( CS + DS ) * Max( ( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) + MUR ),MUR ) ) ) )", "obj1": 0.5425101214574899, "obj2": 0.25215866493061256}, {"determining": "Min( ( ( ( PN - MDR ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + Min( ( MUC - MUM ) ,MLU ) ) ) ,( ( MUC + MUC ) + DS ) )", "obj1": 0.8927125506072875, "obj2": 0.04141068939826259}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( ARS - FirstVNF_RAM_Server ),( ACS * Min( ( ( DDR - AMS ) + Min( PN ,ARS ) ) ,DDR ) ) ) ) * ( ( MDR / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( CS / Max( MLU,MUC ) ) * ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),( MUC + MUM ) ),CS ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( MUR,RCSe ) + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4015673707551458}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( MDR / AMS ) + Max( ( FirstVNF_RAM_Server - ( Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,( ACS * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( ( RCSe + DS ) / MUM ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.533533911901332}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( CRS / AMS ) - ( Min( ACS ,Min( ( MDR * CRS ) ,FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( Min( Max( RMSe,( MUC * MUR ) ) ,( RCSe - RRSe ) ) - DS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14149394236261015}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}, {"determining": "( ( PN - Max( ( RRS * ( MDR + RRS ) ),BR ) ) - ( ( Const * Max( ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7128418199475189}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2773569460324417}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - DS )", "obj1": 0.6133603238866396, "obj2": 0.1903620131487013}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.39011447609504407}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / FirstVNF_RAM ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) * ( CS * DS ) ) ) )", "obj1": 0.791497975708502, "obj2": 0.07926818619145173}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( BR + CRS ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RMSe ),MUR ) + ( MLU + ( MLU / ( DS * ( Max( RMSe,CS ) + MLU ) ) ) ) ) * ( ( DS + CS ) * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.2001269605691182}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server - ARS ),CRS ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / ( RRSe / DS ) ) ) ) * ( ( CS + DS ) * Max( ( ( RRSe / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5778358468355671}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "( ( PN - ( MDR / AMS ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13639652496993163}, {"determining": "Min( Max( ( PN / ( ( FirstVNF_Mem_Server - BR ) * Max( Const,FirstVNF_RAM_Server ) ) ),Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Max( ( FirstVNF_CPU_Server + ARS ),Min( ( ( BR + FirstVNF_CPU_Server ) + Const ) ,MDR ) ) ) ) ) ,( ( ( PN - MDR ) - ( ( ACS + Const ) * ( ( Max( Const,CRS ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUC ) - ( ( ( ( ( Max( ( RMSe / RRSe ),RCSe ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * Max( RCSe,RRSe ) ) ) + RMSe ) ,( MUC - Min( RMSe ,( DS * MUR ) ) ) ) ) - ( RRSe + DS ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09041728952320874}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),CS ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.4008097165991903, "obj2": 0.38660176153694026}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,DDR ) ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - ( BR / AMS ) ) ) ) / ( ( ( BR + ( MRS - Const ) ) - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( MLU / RMSe ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( DS + CS ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( MUR / MUR ) ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09642542042986708}, {"determining": "( ( PN - MDR ) - ( ( Const * MDR ) * ( ( MRS * AMS ) - CRS ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.1037911622655415}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( CS,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08213058655432509}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ARS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( Const + ACS ) ,DDR ) ) ),( ACS * Min( DDR ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU + RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + ( Max( RCSe,MUR ) / ( CS * RRSe ) ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.1659919028340081, "obj2": 0.6211973200666766}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.145748987854251, "obj2": 0.6443323859095438}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / DS ) * MUC ) - ( MUM + MUC ) ) - ( ( RMSe + CS ) - CS ) )", "obj1": 0.9190283400809717, "obj2": 0.031056916106173855}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4422651070141954}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( Max( MDR,PN ) - MDR ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( ( CS * RRSe ) * MLU ) * Max( Min( Max( MUC,MUM ) ,MUM ),MLU ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( ( MUM * MLU ) - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.2617822961745823}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( Min( MUC ,MLU ) * DS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.43406368362255787}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16035445309732305}, {"determining": "( ( PN - MDR ) - ( ( ( Max( FirstVNF_RAM_Server,DDR ) * AMS ) * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ( DDR * Max( ( BR * DDR ),( MDR + FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RMSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( MUR * ( ( ( RRSe / RMSe ) / Max( Min( MUM ,MUR ),MUM ) ) + DS ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2637959722451936}, {"determining": "( ( PN - MDR ) - ( Max( ( ( FirstVNF_CPU_Server / ( Max( ( BR / Const ),BR ) + ( ( PN + MRS ) / DDR ) ) ) + ( BR / Min( AMS ,( DDR + FirstVNF_RAM ) ) ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),RRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( ACS * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUR * Min( ( MUM * MUM ) ,MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( MUC - DS ) ,( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) ) ) - ( Min( ( ( MUR - MUC ) + MLU ) ,( MUC * RMSe ) ) / RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.5303641394244553}, {"determining": "( ( PN - MDR ) - Max( ( FirstVNF_CPU_Server - CRS ),ACS ) )", "choosing": "Min( ( ( ( RCSe * RRSe ) - ( Max( ( RMSe + MUM ),Max( ( MUC / ( MUR + CS ) ),CS ) ) / DS ) ) + ( CS * DS ) ) ,Max( MUR,RMSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5077312221158279}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( MRS - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Max( ( FirstVNF_RAM + Const ),FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( DS ,( RCSe + DS ) ) + Min( Min( MLU ,( ( CS - RMSe ) + ( MLU * MUR ) ) ) ,( Min( ( MUC + RCSe ) ,MUR ) / CS ) ) ) ) - ( ( ( ( ( Max( RRSe,CS ) - MUR ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( ( MUC * MUR ) ,DS ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - ( ( ( DS / MUM ) - ( RCSe - DS ) ) * CS ) ) )", "obj1": 0.8744939271255061, "obj2": 0.04506852357459877}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( MUR + CS ) * Max( RCSe,MUR ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6261461143122488}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( ( MDR / AMS ) - CRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),Min( MUC ,DS ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.09919028340080972, "obj2": 0.6994890326120352}, {"determining": "( ( PN - MDR ) - ( ( Const * ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 0.645748987854251, "obj2": 0.17333785386516712}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,DDR ) ) ) ) * Min( Max( FirstVNF_CPU_Server,CRS ) ,Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( MUM,( MUM / ( MUM * ( ( MUM / MUM ) - MUM ) ) ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.004300268469196245}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( Min( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * ( CS * RCSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + RRSe ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) - ( ( ( Max( DS,CS ) - MUR ) - MLU ) - RCSe ) )", "obj1": 0.8623481781376519, "obj2": 0.04970978276390116}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / ( ARS / ( MRS / BR ) ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008328281362597846}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.034225830374834364}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( Max( MUC,( RMSe + RCSe ) ) / ( ( ( MUM / CS ) + RRSe ) / MLU ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11841130431869283}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( FirstVNF_CPU ,MRS ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( MLU / MUR ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6526829194298841}, {"determining": "( ( PN - ( Const + FirstVNF_CPU ) ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ARS ) ,Min( Min( FirstVNF_CPU_Server ,Const ) ,( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( MLU + Min( ( MLU * RCSe ) ,Min( RRSe ,MUR ) ) ) / RRSe ),MUR ) ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.1820042090519551}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + AMS ) ) ,DDR ) ) )", "choosing": "( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9433198380566802, "obj2": 0.021402887740788443}, {"determining": "( ( PN - MDR ) - Max( ( FirstVNF_CPU_Server - CRS ),ACS ) )", "choosing": "Min( ( ( ( RCSe * RRSe ) - ( Max( ( RMSe + MUM ),Max( ( MUC / ( MUR + CS ) ),CS ) ) / DS ) ) + ( CS * DS ) ) ,Max( MUR,RMSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5077312221158279}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6031862864552436}, {"determining": "( ( PN - ( DDR - DDR ) ) - ( ( Const + ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * Min( ( RMSe / Max( MUM,( RMSe / MUM ) ) ) ,( ( MUM - RMSe ) - ( RRSe - ( ( ( RMSe + MLU ) - ( RRSe / DS ) ) * DS ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17879157260142364}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "Max( Max( BR,FirstVNF_RAM ),( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7054758118592447}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUR ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6585138902153298}, {"determining": "( ( CRS / MDR ) - ( ( DDR * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( ( ( MDR - PN ) + FirstVNF_RAM_Server ),( Max( ( FirstVNF_RAM_Server + ARS ),Max( PN,FirstVNF_Mem ) ) - Const ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MUM ) + Max( ( Min( Max( ( MLU * DS ),( MUC + MUM ) ) ,( RMSe * ( RRSe / DS ) ) ) - RRSe ),DS ) ) + ( Max( CS,CS ) - Max( MUM,RCSe ) ) ) / ( RRSe / MLU ) )", "obj1": 0.7732793522267206, "obj2": 0.08820449861369174}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( MDR / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( ( ( DS / RCSe ) / MUC ) - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RMSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09817057798755444}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / Const ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) - Max( FirstVNF_CPU,CRS ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01228691040565512}, {"determining": "( ( PN - MDR ) - ( ( ( BR + ACS ) * MDR ) * Min( ( FirstVNF_CPU_Server + ACS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * MUC ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) - ( ( ( RRSe + ( ( RMSe + ( RRSe / MLU ) ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.937246963562753, "obj2": 0.023865469512986796}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Min( ( ( PN - MDR ) + ACS ) ,DDR ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( ( ( BR + FirstVNF_CPU_Server ) + PN ) ,MDR ) ) ) )", "choosing": "( Max( ( RMSe / RRSe ),RCSe ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1012915004090588}], "23": [{"determining": "( ( PN - MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( PN - FirstVNF_CPU ) ) ) * ( ( MDR / ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MUC + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server - ARS ),CRS ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / ( RRSe / DS ) ) ) ) * ( ( CS + DS ) * Max( ( ( RRSe / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.22267206477732793, "obj2": 0.5778358468355671}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),Min( MUC ,DS ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.6619433198380567, "obj2": 0.15377744576897212}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( FirstVNF_CPU * ACS ) - ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( CS - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3349814234116902}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ACS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( Min( DS ,( RRSe * ( MUC + MUM ) ) ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5586498806478669}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( ( FirstVNF_RAM - DDR ) + FirstVNF_Mem_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( MUC / Max( ( ( MUC / Min( RMSe ,Max( RCSe,RRSe ) ) ) * MUM ),MUR ) ) )", "obj1": 0.4109311740890688, "obj2": 0.37890985258236776}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Max( PN,BR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ),MUR ) ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7211590434054972}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( CRS / AMS ) - ( Min( ACS ,Min( ( MDR * CRS ) ,FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( Min( Max( RMSe,( MUC * MUR ) ) ,( RCSe - RRSe ) ) - DS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14149394236261015}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.4786351836463022}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - DDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.5451520703259013}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6031862864552436}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4422651070141954}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( ( MDR - PN ) - ( ( ( RRS - ( FirstVNF_CPU_Server * ( FirstVNF_CPU_Server - CRS ) ) ) * FirstVNF_Mem ) - ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( Min( MUR ,RCSe ) + MUR ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.4316974061867661}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_RAM_Server * AMS ) ) * ( CRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( Max( Min( RCSe ,DS ),( ( RMSe * MUM ) + ( Max( MUR,CS ) * ( CS - RCSe ) ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,MUM ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.671138076032943}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - DS )", "obj1": 0.6133603238866396, "obj2": 0.1903620131487013}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( RCSe,( MUM / RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.18121187495718294}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.48213710075514793}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - AMS ),( ACS * Min( ( ACS + ( FirstVNF_CPU - AMS ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( ( ( Const + FirstVNF_CPU ) + ( FirstVNF_CPU * PN ) ) + ACS ) * DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - Max( ( ( RMSe + RRSe ) * ( Max( Max( MUC,CS ),MUM ) * CS ) ),( Max( MUC,MUC ) / MUC ) ) ) * ( DS * CS ) ) ,( ( RMSe - MUR ) + RMSe ) )", "obj1": 0.48582995951417, "obj2": 0.3010233192142608}, {"determining": "( ( PN - MDR ) - ( ( AMS * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( Min( CS ,RRSe ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( ( RMSe + CS ) + DS ) * MUR ) ) )", "obj1": 0.4291497975708502, "obj2": 0.35570278630310653}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16035445309732305}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,AMS ) ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC * DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Max( Max( DS,MUM ),CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6416624347909298}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( FirstVNF_CPU ,Min( ACS ,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + MUC ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( MLU / MUR ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.32223559314641753}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2773569460324417}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( ACS * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5372024959348027}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MDR )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.21598821249018613}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUR ),MUM ) ,MLU ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12955465587044535, "obj2": 0.6585138902153298}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,Max( RMSe,RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773187}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( FirstVNF_CPU ,MRS ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( MLU / MUR ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6553013096608133}, {"determining": "( ( PN - MDR ) - ( Max( ( ( FirstVNF_CPU_Server / ( Max( ( BR / Const ),BR ) + ( ( PN + MRS ) / DDR ) ) ) + ( BR / Min( AMS ,( DDR + FirstVNF_RAM ) ) ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),RRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( ACS * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUR * Min( ( MUM * MUM ) ,MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( MUC - DS ) ,( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) ) ) - ( Min( ( ( MUR - MUC ) + MLU ) ,( MUC * RMSe ) ) / RCSe ) )", "obj1": 0.25708502024291496, "obj2": 0.5303641394244553}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUC + DS ) ),( ( MUR - RCSe ) - Max( CS,MUM ) ) ) ,CS ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08213058655432509}, {"determining": "Min( Max( ( PN / ( ( FirstVNF_Mem_Server - BR ) * Max( Const,FirstVNF_RAM_Server ) ) ),Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,Max( ( FirstVNF_CPU_Server + ARS ),Min( ( ( BR + FirstVNF_CPU_Server ) + Const ) ,MDR ) ) ) ) ) ,( ( ( PN - MDR ) - ( ( ACS + Const ) * ( ( Max( Const,CRS ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( Const * MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( RCSe ,DS ) * MUC ) - ( ( ( ( ( Max( ( RMSe / RRSe ),RCSe ) - MLU ) - RCSe ) + RRSe ) + Min( ( Min( DS ,( MUC * Max( RCSe,RRSe ) ) ) + RMSe ) ,( MUC - Min( RMSe ,( DS * MUR ) ) ) ) ) - ( RRSe + DS ) ) )", "obj1": 0.7651821862348178, "obj2": 0.09041728952320874}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.6963562753036437, "obj2": 0.12982120333091438}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( ( RMSe + CS ) + DS ) * MUR ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23911724922129673}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.39011447609504407}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( RRSe * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.02970961050968423}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( ACS / Const ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,MRS ) ) ) ) ) - ( Max( MDR,PN ) - MDR ) )", "choosing": "Min( ( ( CS * DS ) * ( ( MLU / MUR ) - ( ( ( ( CS * RRSe ) * MLU ) * Max( Min( Max( MUC,MUM ) ,MUM ),MLU ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - ( MUM * ( ( MUM * MLU ) - MUC ) ) ) ) * ( ( MLU - ( Max( CS,( RMSe + MUM ) ) / ( MLU - RRSe ) ) ) * DS ) ) ,( ( MUM - ( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.5384615384615384, "obj2": 0.2617822961745823}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server + ARS ) * Min( ACS ,ACS ) ) ) ,( FirstVNF_RAM + Const ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RRSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( ( ( Min( MUC ,( MUR * MUR ) ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.31339893597342044}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( ( FirstVNF_RAM / AMS ) - FirstVNF_RAM_Server ) * AMS ) - Max( FirstVNF_CPU,( MRS * ( Min( MDR ,DDR ) * FirstVNF_RAM ) ) ) ) / Min( Min( MRS ,AMS ) ,ACS ) ) )", "choosing": "( ( RRSe / MLU ) / ( Max( RMSe,( ( RRSe / MLU ) * DS ) ) * Min( ( MUM + CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.04364700171560074}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( ( CRS / MDR ) * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC - CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,( MUC * MLU ) ) - RRSe ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.3623481781376518, "obj2": 0.4340682847545342}, {"determining": "( ( PN - ( DDR - DDR ) ) - ( ( Const + ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * Min( ( RMSe / Max( MUM,( RMSe / MUM ) ) ) ,( ( MUM - RMSe ) - ( RRSe - ( ( ( RMSe + MLU ) - ( RRSe / DS ) ) * DS ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17879157260142364}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( PN - MDR ) - ( ( ( Max( FirstVNF_RAM_Server,DDR ) * AMS ) * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ( DDR * Max( ( BR * DDR ),( MDR + FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RMSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( MUR * ( ( ( RRSe / RMSe ) / Max( Min( MUM ,MUR ),MUM ) ) + DS ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2637959722451936}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}, {"determining": "Min( ( ( ( PN - MDR ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + Min( ( MUC - MUM ) ,MLU ) ) ) ,( ( MUC + MUC ) + DS ) )", "obj1": 0.8927125506072875, "obj2": 0.04141068939826259}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9311740890688259, "obj2": 0.025245483136408474}, {"determining": "( ( PN - ( MDR / AMS ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13639652496993163}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6334392558892606}, {"determining": "Max( Max( BR,FirstVNF_RAM ),( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7035514756083937}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ( PN * BR ) ,DDR ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( ( ( RMSe * RCSe ) + RMSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( ( MLU / ( MUM + Max( ( DS * MUR ),( CS / MUR ) ) ) ),( ( MUR + Min( MUM ,( RMSe - DS ) ) ) + ( RMSe * MUM ) ) ) / ( ( ( MUR / MLU ) * MUM ) - ( ( ( MUC * RRSe ) / RRSe ) / RCSe ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30728708076937444}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ARS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( Const + ACS ) ,DDR ) ) ),( ACS * Min( DDR ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU + RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + ( Max( RCSe,MUR ) / ( CS * RRSe ) ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.1659919028340081, "obj2": 0.6211973200666766}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( ARS - FirstVNF_RAM_Server ),( ACS * Min( ( ( DDR - AMS ) + Min( PN ,ARS ) ) ,DDR ) ) ) ) * ( ( MDR / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( CS / Max( MLU,MUC ) ) * ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),( MUC + MUM ) ),CS ) ) / DS ) ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( MUR,RCSe ) + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4015673707551458}, {"determining": "( ( ( ( Max( ACS,BR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( RMSe - ( ( RCSe + ( Min( DS ,Max( ( MUC * RMSe ),( DS - RCSe ) ) ) + RRSe ) ) * ( Max( MUC,( RMSe + RCSe ) ) / ( ( ( MUM / CS ) + RRSe ) / MLU ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11841130431869283}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( MDR / AMS ) + Max( ( FirstVNF_RAM_Server - ( Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,( ACS * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( ( RCSe + DS ) / MUM ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.533533911901332}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MDR )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * Max( DS,MLU ) ) / DS ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.21243691267127401}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( ( RMSe + CS ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.25189327520064375}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - FirstVNF_CPU ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6789946954633869}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4467420897811366}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( PN - MDR ) - ( ( ( MDR * Const ) * ( ( Const / Min( ( ( PN - MDR ) + FirstVNF_CPU ) ,DDR ) ) + Const ) ) * Max( FirstVNF_RAM,( DDR + ( CRS / MDR ) ) ) ) )", "choosing": "( Max( Max( CS,RCSe ),( MLU * MUR ) ) - ( ( ( RRSe - MLU ) / ( RRSe + DS ) ) * ( CS * ( RMSe + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3191407880855683}, {"determining": "( ( PN - Max( ( RRS * ( MDR + RRS ) ),BR ) ) - ( ( Const * Max( ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ) + Min( MUR ,RRSe ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7128418199475189}, {"determining": "( ( CRS / MDR ) - ( ( DDR * MDR ) * ( ( ( ARS / FirstVNF_CPU_Server ) / Max( ( ( MDR - PN ) + FirstVNF_RAM_Server ),( Max( ( FirstVNF_RAM_Server + ARS ),Max( PN,FirstVNF_Mem ) ) - Const ) ) ) - CRS ) ) )", "choosing": "( ( ( Min( Min( MUC ,( MUR * DS ) ) ,MUM ) + Max( ( Min( Max( ( MLU * DS ),( MUC + MUM ) ) ,( RMSe * ( RRSe / DS ) ) ) - RRSe ),DS ) ) + ( Max( CS,CS ) - Max( MUM,RCSe ) ) ) / ( RRSe / MLU ) )", "obj1": 0.7732793522267206, "obj2": 0.08820449861369174}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( MRS * Min( FirstVNF_CPU_Server ,MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( Max( RMSe,( MUC - ( RRSe / ( MUR / RCSe ) ) ) ) * Max( MUC,CS ) ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.40207238200623957}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.24733832806879996}, {"determining": "Max( Max( BR,FirstVNF_RAM ),( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( RMSe + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.10121457489878542, "obj2": 0.6955022631879841}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + AMS ) ) ,DDR ) ) )", "choosing": "( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9433198380566802, "obj2": 0.021402887740788443}, {"determining": "( ( PN - MDR ) - ( ( MDR * MDR ) * ( ( MRS * AMS ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10587124620329465}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13208534683549333}, {"determining": "( ( PN - MDR ) - ( ( Const * ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.6477732793522267, "obj2": 0.17238253335024215}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / ( ARS / ( MRS / BR ) ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,CRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( MUM - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008328281362597846}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) * ( Max( ( ( Min( MUC ,( MUR * MUR ) ) - MUC ) + RRSe ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.0032446526383119855}], "24": [{"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RMSe + CS ) - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - ACS ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ( PN - MDR ) ,Min( ARS ,MDR ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS * Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) / ( ( ( RMSe + RRSe ) * Max( CS,Max( Max( MUR,CS ),( MLU * MUM ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.4284884817495182}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "Min( ( ( ( PN - MDR ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + Min( ( MUC - MUM ) ,MLU ) ) ) ,( ( MUC + MUC ) + DS ) )", "obj1": 0.8927125506072875, "obj2": 0.04141068939826259}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - DDR ) - FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) - Max( CRS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( MLU / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( ( MUR - MLU ) + ( DS * Max( CS,( MUC - MUC ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.5836697880000999}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( Max( Max( DDR,FirstVNF_RAM_Server ),CRS ) - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6031862864552436}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( FirstVNF_CPU * ACS ) - ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( CS - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3349814234116902}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( ( FirstVNF_RAM - DDR ) + FirstVNF_Mem_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( MUC / Max( ( ( MUC / Min( RMSe ,Max( RCSe,RRSe ) ) ) * MUM ),MUR ) ) )", "obj1": 0.4109311740890688, "obj2": 0.37890985258236776}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( Max( MRS,( ACS * RRS ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( RRSe + MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2573644184806765}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.48213710075514793}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.4786351836463022}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( CRS / AMS ) - ( Min( ACS ,Min( ( MDR * CRS ) ,FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( Min( Max( RMSe,( MUC * MUR ) ) ,( RCSe - RRSe ) ) - DS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14149394236261015}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23508388195222718}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( Min( FirstVNF_RAM_Server ,( ARS - AMS ) ),( ACS * ( FirstVNF_RAM_Server + BR ) ) ) ) / ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( Max( MUM,MUM ) * Max( ( ( RMSe * RCSe ) + MUM ),Max( CS,Min( CS ,RMSe ) ) ) ) - DS ) ) * ( CS * DS ) ) ,Min( ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.48582995951417, "obj2": 0.301003613033998}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - FirstVNF_CPU ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6789946954633869}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( PN - MDR ) - ( ( Const * ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.6477732793522267, "obj2": 0.17238253335024215}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( Min( ( Min( MUC ,RRSe ) * MUC ) ,RRSe ) - DS ) ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),Min( MUC ,DS ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.742914979757085, "obj2": 0.09980420236113767}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( FirstVNF_CPU ,Min( ACS ,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + MUC ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( MLU / MUR ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.32223559314641753}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( RCSe,( MUM / RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.18121187495718294}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( MRS - Const ) + ( ACS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) * ( Max( Min( DS ,( RRSe * ( MUC + MUM ) ) ),MUR ) * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.22469635627530365, "obj2": 0.5586498806478669}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,Max( RMSe,RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773187}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19948492421036423}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16035445309732305}, {"determining": "( ( PN - ( DDR - DDR ) ) - ( ( Const + ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * Min( ( RMSe / Max( MUM,( RMSe / MUM ) ) ) ,( ( MUM - RMSe ) - ( RRSe - ( ( ( RMSe + MLU ) - ( RRSe / DS ) ) * DS ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17879157260142364}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * FirstVNF_Mem_Server ) ) / Const ),( MDR * Const ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( CRS * Min( ( Const + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( MUR + ( ( MUR + ( MUC * CS ) ) / MUC ) ),MUR ) - ( ( RMSe + CS ) + Max( MUC,DS ) ) )", "obj1": 0.35020242914979755, "obj2": 0.44050127106051923}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( Min( MUR ,RCSe ) + MUR ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.02970961050968423}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.045890899969399206}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * Max( ( FirstVNF_RAM_Server - ARS ),CRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUR / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09364940519177097}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / ( RRSe / DS ) ) ) ) * ( ( CS + DS ) * Max( ( ( RRSe / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.6639676113360324, "obj2": 0.15159009320379607}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( Max( ( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Const ) + Min( ARS ,DDR ) ),( Min( CRS ,DDR ) / MRS ) ) - ( ( Const * Max( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server + ARS ) * Min( ACS ,ACS ) ) ) ,( FirstVNF_RAM + Const ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,RRS ) ),( ACS - Min( ( FirstVNF_CPU_Server + MDR ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / MUR ) - ( Min( MUR ,MUC ) + MUR ) ) * ( Max( ( ( Min( MUC ,( MUM * MUR ) ) * MUC ) + RRSe ),MUR ) * Max( ( RRSe / ( RRSe * MLU ) ),RMSe ) ) ) ,Min( MUR ,( Min( DS ,MLU ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3133900395665014}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( ( RMSe + CS ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.25189327520064375}, {"determining": "( ( PN - MDR ) - ( Max( MRS,MRS ) * ( ( AMS * ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( Min( CS ,Max( MLU,MUM ) ),DS ) - MUR ) - MLU ) - RCSe ) - Max( ( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) / ( RMSe / DS ) ),MLU ) )", "obj1": 0.8016194331983806, "obj2": 0.07625231247454364}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5254640858625657}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( ( FirstVNF_CPU * FirstVNF_Mem ),FirstVNF_CPU ) ) / ( Max( ( CRS * ( MDR + RRS ) ),BR ) + Const ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( DS * MUC ) ) ) / MUR ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7218150202197765}, {"determining": "( ( PN - MDR ) - ( ( AMS * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( RRSe - MUC ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.35283209939159643}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( RRSe + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - DS )", "obj1": 0.6133603238866396, "obj2": 0.1903584424719825}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR - ( ( FirstVNF_CPU_Server / ARS ) + ( Const / MRS ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_RAM ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( Min( ( RRSe * MUR ) ,CS ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6445073873069966}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RRSe ),DS ) ) - ( ( ( ( DS / RCSe ) / MUC ) - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.0570715958001007}, {"determining": "Max( Max( BR,FirstVNF_RAM ),( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7035514756083937}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.16396761133603238, "obj2": 0.6222544790891967}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( ( FirstVNF_RAM / AMS ) - FirstVNF_RAM_Server ) * AMS ) - Max( FirstVNF_CPU,( MRS * ( Min( MDR ,DDR ) * FirstVNF_RAM ) ) ) ) / Min( Min( MRS ,AMS ) ,ACS ) ) )", "choosing": "( ( RRSe / MLU ) / ( Max( RMSe,( ( RRSe / MLU ) * DS ) ) * Min( ( MUM + CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.04364700171560074}, {"determining": "( ( PN - ( MDR / AMS ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13639652496993163}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( RRSe * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.02970961050968423}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( RRS + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( MLU + ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) + RRSe ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - DS )", "obj1": 0.6174089068825911, "obj2": 0.18933435426063386}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ( PN * BR ) ,DDR ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( ( ( RMSe * RCSe ) + RMSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( ( MLU / ( MUM + Max( ( DS * MUR ),( CS / MUR ) ) ) ),( ( MUR + Min( MUM ,( RMSe - DS ) ) ) + ( RMSe * MUM ) ) ) / ( ( ( MUR / MLU ) * MUM ) - ( ( ( MUC * RRSe ) / RRSe ) / RCSe ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30728708076937444}, {"determining": "( ( Max( ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ) ),DDR ) - PN ) - ( Max( MRS,RRS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( PN + Const ) ),( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( DS / ( CS / MUM ) ),RCSe ) - ( MUC - CS ) ) * ( RCSe + CS ) ) ,Max( RCSe,( MUC / RMSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6568839053592417}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + AMS ) ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.5451520703259013}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,MDR )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * Max( DS,MLU ) ) / DS ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.21243691267127401}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + AMS ) ) ,DDR ) ) )", "choosing": "( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9433198380566802, "obj2": 0.021402887740788443}, {"determining": "( ( PN - MDR ) - ( Min( FirstVNF_Mem ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RMSe ),Max( Max( ( ( Min( DS ,MLU ) + RMSe ) + ( MUR - RCSe ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.02537983883668747}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_RAM_Server * AMS ) ) * ( CRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( Max( Min( RCSe ,DS ),( ( RMSe * MUM ) + ( Max( MUR,CS ) * ( CS - RCSe ) ) ) ) + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,MUM ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.671138076032943}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "( ( PN - MDR ) - ( ( ( MDR * Const ) * ( ( Const / Min( ( ( PN - MDR ) + FirstVNF_CPU ) ,DDR ) ) + Const ) ) * Max( FirstVNF_RAM,( DDR + ( CRS / MDR ) ) ) ) )", "choosing": "( Max( Max( CS,RCSe ),( MLU * MUR ) ) - ( ( ( RRSe - MLU ) / ( RRSe + DS ) ) * ( CS * ( RMSe + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3191407880855683}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08470951795409873}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( MRS * Min( FirstVNF_CPU_Server ,MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( Max( RMSe,( MUC - ( RRSe / ( MUR / RCSe ) ) ) ) * Max( MUC,CS ) ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.40207238200623957}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Min( ( ( PN - MDR ) + ACS ) ,DDR ) / Const ),Const ) ) * ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7155484671732759}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4422651070141954}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.6983805668016194, "obj2": 0.12914267766533746}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.24733832806879996}, {"determining": "( ( PN - MDR ) - ( ( MDR * MDR ) * ( ( MRS * AMS ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10587124620329465}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( RRSe + ( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - Min( RMSe ,MUR ) ) ) / ( ( MUR + RCSe ) - MUR ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.155227929278532}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( RCSe - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13208534683549333}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4467420897811366}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ARS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( Const + ACS ) ,DDR ) ) ),( ACS * Min( DDR ,( FirstVNF_CPU_Server + ACS ) ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU + RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + ( Max( RCSe,MUR ) / ( CS * RRSe ) ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.1659919028340081, "obj2": 0.6211973200666766}, {"determining": "Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( CS + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6976582647798851}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - FirstVNF_CPU ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6725901346493617}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.3909337319412504}], "25": [{"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - CRS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * Min( DDR ,PN ) ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( MDR - ( Const * ACS ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MLU ) - ( RMSe + CS ) ) * ( Min( MLU ,( RRSe - Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) ) + ( MUM * DS ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - ACS ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ( PN - MDR ) ,Min( ARS ,MDR ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS * Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) / ( ( ( RMSe + RRSe ) * Max( CS,Max( Max( MUR,CS ),( MLU * MUM ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.4284884817495182}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "Min( ( ( ( PN - MDR ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + Min( ( MUC - MUM ) ,MLU ) ) ) ,( ( MUC + MUC ) + DS ) )", "obj1": 0.8927125506072875, "obj2": 0.04141068939826259}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - DDR ) - FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) - Max( CRS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( MLU / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( ( MUR - MLU ) + ( DS * Max( CS,( MUC - MUC ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.5836697880000999}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( ( ( ( AMS + ( ( CRS * PN ) - ( ARS * ( Const + DDR ) ) ) ) - ( Max( Const,FirstVNF_Mem ) * MRS ) ) * Max( Const,( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ) ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Max( BR,( MDR * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( MUM + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - Min( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( RMSe - MUM ) ) ) ,Min( ( Min( DS ,( ( CS + MUM ) * RRSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + ( DS - Max( RCSe,MLU ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.597400692140919}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08470951795409873}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.48213710075514793}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( ( ( ( DS + MUM ) + RRSe ) * MUC ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.4786351836463022}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( Max( MRS,( ACS * RRS ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( RRSe + MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2573644184806765}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( RRS + Min( Min( ( ( ( DDR - FirstVNF_RAM_Server ) / ( Max( ARS,CRS ) - FirstVNF_Mem ) ) / MDR ) ,FirstVNF_CPU_Server ) ,ARS ) ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) + Min( FirstVNF_Mem_Server ,( Max( FirstVNF_Mem,CRS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ,( ( DS * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MLU ,MLU ) ) * RMSe ) ) + Min( MUR ,RRSe ) ) ) + Max( ( MLU - RMSe ),( ( MUM * RCSe ) / MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2876769155608972}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( ( FirstVNF_RAM - DDR ) + FirstVNF_Mem_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( MUC * RRSe ) ) - ( MUC / Max( ( ( MUC / Min( RMSe ,Max( RCSe,RRSe ) ) ) * MUM ),MUR ) ) )", "obj1": 0.4109311740890688, "obj2": 0.37890985258236776}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) )", "choosing": "( ( CS * DS ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5957403228022777}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( CRS / AMS ) - ( Min( ACS ,Min( ( MDR * CRS ) ,FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( Min( Max( RMSe,( MUC * MUR ) ) ,( RCSe - RRSe ) ) - DS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14149394236261015}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5108727603442491}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR - ( ( FirstVNF_CPU_Server / ARS ) + ( Const / MRS ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_RAM ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( Min( ( RRSe * MUR ) ,CS ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6445073873069966}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.16641510388485833}, {"determining": "( ( PN - ( DDR - DDR ) ) - ( ( Const + ( ( ARS / ( MRS / BR ) ) * BR ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + RCSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) * Min( ( RMSe / Max( MUM,( RMSe / MUM ) ) ) ,( ( MUM - RMSe ) - ( RRSe - ( ( ( RMSe + MLU ) - ( RRSe / DS ) ) * DS ) ) ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.17879157260142364}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( CS + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6976582647798851}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( Max( ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ) ),DDR ) - PN ) - ( Max( MRS,RRS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( PN + Const ) ),( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( DS / ( CS / MUM ) ),RCSe ) - ( MUC - CS ) ) * ( RCSe + CS ) ) ,Max( RCSe,( MUC / RMSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6568839053592417}, {"determining": "( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Min( RCSe ,( MUR / MUM ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6376742490351233}, {"determining": "Max( Max( BR,FirstVNF_RAM ),( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7035514756083937}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * FirstVNF_Mem_Server ) ) / Const ),( MDR * Const ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( CRS * Min( ( Const + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( MUR + ( ( MUR + ( MUC * CS ) ) / MUC ) ),MUR ) - ( ( RMSe + CS ) + Max( MUC,DS ) ) )", "obj1": 0.35020242914979755, "obj2": 0.44050127106051923}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.045890899969399206}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * ( MRS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( ( DS - RRSe ) - MUM ) ) / RCSe ) ,( MUC / DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.24696356275303644, "obj2": 0.5378557448008154}, {"determining": "( ( PN - MDR ) - ( Min( FirstVNF_Mem ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RMSe ),Max( Max( ( ( Min( DS ,MLU ) + RMSe ) + ( MUR - RCSe ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.02537983883668747}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6600927593262539}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,Max( RMSe,RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773187}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ACS ,Min( ACS ,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( MDR * Min( CRS ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( DS * RMSe ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / MUR ) ,( Max( DS,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.32283648564059675}, {"determining": "( Max( ( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Const ) + Min( ARS ,DDR ) ),( Min( CRS ,DDR ) / MRS ) ) - ( ( Const * Max( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server + ARS ) * Min( ACS ,ACS ) ) ) ,( FirstVNF_RAM + Const ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,RRS ) ),( ACS - Min( ( FirstVNF_CPU_Server + MDR ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / MUR ) - ( Min( MUR ,MUC ) + MUR ) ) * ( Max( ( ( Min( MUC ,( MUM * MUR ) ) * MUC ) + RRSe ),MUR ) * Max( ( RRSe / ( RRSe * MLU ) ),RMSe ) ) ) ,Min( MUR ,( Min( DS ,MLU ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3133900395665014}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( MRS * Min( FirstVNF_CPU_Server ,MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( Max( RMSe,( MUC - ( RRSe / ( MUR / RCSe ) ) ) ) * Max( MUC,CS ) ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.40207238200623957}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / RCSe ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21266891378502292}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( MDR / AMS ) / Const ) / AMS ) ) ) / Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) - ( Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) / DS ) ) * ( CS * DS ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5910931174089069, "obj2": 0.21203057722143298}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( FirstVNF_CPU * ACS ) - ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( CS - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3349814234116902}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16035445309732305}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM - MRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - ( MLU / RMSe ) ),DS ) ) - ( ( ( ( DS / RCSe ) / MUC ) - Min( Max( Max( ( DS / CS ),( MUR + DS ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8360323886639676, "obj2": 0.05706802512338189}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( Min( ( ACS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( ( FirstVNF_RAM / AMS ) - FirstVNF_RAM_Server ) * AMS ) - Max( FirstVNF_CPU,( MRS * ( Min( MDR ,DDR ) * FirstVNF_RAM ) ) ) ) / Min( Min( MRS ,AMS ) ,ACS ) ) )", "choosing": "( ( RRSe / MLU ) / ( Max( RMSe,( ( RRSe / MLU ) * DS ) ) * Min( ( MUM + CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.04364700171560074}, {"determining": "( ( PN - MDR ) - ( ( AMS * Max( ( Max( MRS,( ACS * RRS ) ) / PN ),Const ) ) * ( ( MDR / RRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ( AMS / ACS ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( RRSe - DS ) - ( ( ( RRSe - MLU ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( ( RMSe + MUR ) + RRSe ),MUR ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.35348450552915667}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( Max( RRSe,RCSe ) - ( MLU + RRSe ) ) + ( ( MUR - MUM ) + ( MUM * MUC ) ) ) / MUR ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19948492421036423}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ( PN * BR ) ,DDR ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( ( ( RMSe * RCSe ) + RMSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( ( MLU / ( MUM + Max( ( DS * MUR ),( CS / MUR ) ) ) ),( ( MUR + Min( MUM ,( RMSe - DS ) ) ) + ( RMSe * MUM ) ) ) / ( ( ( MUR / MLU ) * MUM ) - ( ( ( MUC * RRSe ) / RRSe ) / RCSe ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30728708076937444}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - MDR ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + ( ( ( DS / RCSe ) / MUC ) + MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.0032446526383119855}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( ACS + BR ) - CRS ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * MDR ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + RRS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM + CS ) - CS ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( CS / DS ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07358295527915922}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( MDR * MDR ) * ( ( MRS * AMS ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10587124620329465}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5254640858625657}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.757085020242915, "obj2": 0.09401889247505639}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( RRSe + ( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - Min( RMSe ,MUR ) ) ) / ( ( MUR + RCSe ) - MUR ) ) ) + ( MLU - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01231861271152547}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.4467420897811366}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( Min( ( Min( MUC ,RRSe ) * MUC ) ,RRSe ) - DS ) ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),Min( MUC ,DS ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( ( RMSe * RCSe ) + RMSe ) )", "obj1": 0.742914979757085, "obj2": 0.09980420236113767}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( Min( MUR ,RCSe ) + MUR ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.02970961050968423}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( Min( FirstVNF_RAM_Server ,( ARS - AMS ) ),( ACS * ( FirstVNF_RAM_Server + BR ) ) ) ) / ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( Max( MUM,MUM ) * Max( ( ( RMSe * RCSe ) + MUM ),Max( CS,Min( CS ,RMSe ) ) ) ) - DS ) ) * ( CS * DS ) ) ,Min( ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.48582995951417, "obj2": 0.301003613033998}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( ( ( Max( ACS,BR ) - ( FirstVNF_RAM * MRS ) ) - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - FirstVNF_CPU ) ) ) ) * ( MRS / ( MDR * FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( Max( ( DS + Min( ( Min( DS ,( MUC * RMSe ) ) / RCSe ) ,( RRSe - DS ) ) ),( ( RCSe + CS ) + Min( ( Max( Max( RMSe,RCSe ),CS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( MLU + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6725901346493617}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23508388195222718}, {"determining": "( ( PN - MDR ) - ( ( ( MDR * Const ) * ( ( Const / Min( ( ( PN - MDR ) + FirstVNF_CPU ) ,DDR ) ) + Const ) ) * Max( FirstVNF_RAM,( DDR + ( CRS / MDR ) ) ) ) )", "choosing": "( Max( Max( CS,RCSe ),( MLU * MUR ) ) - ( ( ( RRSe - MLU ) / ( RRSe + DS ) ) * ( CS * ( RMSe + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3191407880855683}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( Min( MUR ,RCSe ) + MUR ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4421157279565609}, {"determining": "( ( PN - MDR ) - ( ( Const * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.38866396761133604, "obj2": 0.39799605347724804}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( RCSe,( MUM / RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6275303643724697, "obj2": 0.18121187495718294}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ARS + ACS ) - ( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),DDR ) * Max( ( PN * FirstVNF_CPU_Server ),RRS ) ) ) - FirstVNF_CPU ) * FirstVNF_Mem ) * ( Min( Const ,Max( Min( CRS ,( CRS / FirstVNF_RAM ) ),( PN * Const ) ) ) + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,AMS ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( MLU ,Max( MUR,DS ) ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + RRSe ) + Min( MUC ,DS ) ) )", "obj1": 0.9190283400809717, "obj2": 0.027743460676847513}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6093117408906883, "obj2": 0.1917421795739156}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) - Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,CRS ) - ARS ),CRS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7096766969742002}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.24733832806879996}, {"determining": "( Min( BR ,MDR ) - Max( PN,Max( ( DDR / DDR ),RRS ) ) )", "choosing": "( ( ( RRSe + DS ) + Min( ( ( DS * ( Max( Min( MLU ,MUC ),RCSe ) + Min( RRSe ,RRSe ) ) ) + MLU ) ,DS ) ) - ( ( CS + RMSe ) - Min( DS ,MUC ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07209939634041716}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( RRSe * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.02970961050968423}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - ( FirstVNF_CPU - Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Min( FirstVNF_RAM_Server ,BR ) ) ) ) )", "choosing": "( ( ( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) + ( MUC - DS ) ) * RCSe ) / ( ( Min( MUC ,( ( MLU - CS ) / ( DS / RRSe ) ) ) * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.06992107532776909}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( ( RMSe + CS ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.25189327520064375}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Min( ( DDR - DDR ) ,AMS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10104868435662974}, {"determining": "( ( PN - ( ( Min( ARS ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - ( ( ( ( PN + ( DDR + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + Min( CRS ,Max( AMS,Max( Const,ACS ) ) ) ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - RCSe ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( Min( Min( RCSe ,MLU ) ,RCSe ) - ( MLU / RCSe ) ) ) * ( Min( Max( ( RRSe - Max( RMSe,MLU ) ),Min( MUC ,MLU ) ) ,Max( ( ( MUM - RCSe ) + RCSe ),RRSe ) ) / CS ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02164226088532835}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( FirstVNF_CPU_Server + DDR ) ) / Min( ( FirstVNF_RAM * Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + AMS ) ) ,DDR ) ) )", "choosing": "( ( ( ( RRSe / ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) / RRSe ) * RMSe ) - ( ( Min( ( RRSe / DS ) ,MUR ) + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9696356275303644, "obj2": 0.011953134916826714}], "26": [{"determining": "( ( PN - MDR ) - ( ( ( MRS - ( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( MDR - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( Max( Max( MLU,RCSe ),MLU ) - MUR ) / ( Max( Min( MLU ,( DS + RCSe ) ),( MLU + ( MUM / Min( MLU ,RRSe ) ) ) ) / Max( MUC,RRSe ) ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( ( ACS - CRS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * Min( DDR ,PN ) ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( MDR - ( Const * ACS ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( PN / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MLU ) - ( RMSe + CS ) ) * ( Min( MLU ,( RRSe - Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) ) + ( MUM * DS ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - DDR ) - FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) - Max( CRS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( MLU / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( ( MUR - MLU ) + ( DS * Max( CS,( MUC - MUC ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.5836697880000999}, {"determining": "( ( PN - ACS ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ( PN - MDR ) ,Min( ARS ,MDR ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS * Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) / ( ( ( RMSe + RRSe ) * Max( CS,Max( Max( MUR,CS ),( MLU * MUM ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.4284884817495182}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( CRS / AMS ) - ( Min( ACS ,Min( ( MDR * CRS ) ,FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( Min( Max( RMSe,( MUC * MUR ) ) ,( RCSe - RRSe ) ) - DS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14149394236261015}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( ( MDR + ( ( ( ( ( AMS - ARS ) - ( FirstVNF_CPU_Server + ARS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) * Min( CRS ,( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( RRSe - MLU ) + Max( DS,RRSe ) ) * ( ( Min( ( Min( MLU ,DS ) / RCSe ) ,( ( ( MUM - RMSe ) / ( CS / MUR ) ) - MUR ) ) + ( ( Min( Min( RMSe ,RMSe ) ,( CS + MLU ) ) - ( ( MUC / RMSe ) * DS ) ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( ( Min( CS ,CS ) + DS ) * Max( RMSe,RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.614146894902361}, {"determining": "( ( Max( ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ) ),DDR ) - PN ) - ( Max( MRS,RRS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( PN + Const ) ),( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( DS / ( CS / MUM ) ),RCSe ) - ( MUC - CS ) ) * ( RCSe + CS ) ) ,Max( RCSe,( MUC / RMSe ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7224576989510303}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.15846415037148853}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,( RRS + ( RRS / CRS ) ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Max( ( MUR + MUC ),Max( RRSe,DS ) ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( RCSe + CS ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.12998809720619928}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( MRS - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( Max( MRS,( ACS * RRS ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( RRSe + MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.2573644184806765}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( ( ( AMS + ( ( CRS * PN ) - ( ARS * ( Const + DDR ) ) ) ) - ( Max( Const,FirstVNF_Mem ) * MRS ) ) * Max( Const,( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ) ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Max( BR,( MDR * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( MUM + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - Min( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( RMSe - MUM ) ) ) ,Min( ( Min( DS ,( ( CS + MUM ) * RRSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + ( DS - Max( RCSe,MLU ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.597400692140919}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "( ( PN - MDR ) - ( ( Const * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.38866396761133604, "obj2": 0.39799605347724804}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) - Min( MRS ,( FirstVNF_Mem * FirstVNF_RAM ) ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + Min( Const ,FirstVNF_Mem ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) + Min( ( Min( DS ,( MUR * ( MUM + CS ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.19230769230769232, "obj2": 0.595274859639053}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23508388195222718}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}, {"determining": "Min( ( ( ( PN - MDR ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + Min( ( MUC - MUM ) ,MLU ) ) ) ,( ( MUC + MUC ) + DS ) )", "obj1": 0.8927125506072875, "obj2": 0.04141068939826259}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08470951795409873}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5108727603442491}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.16641510388485833}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.46806749574585627}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13918179200484582}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ARS + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + ( MUR - RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.17653694138250337}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( CS + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6976582647798851}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( FirstVNF_RAM * ACS ) ) / Max( Max( ACS,( MDR - DDR ) ),RRS ) ) * ( ( ACS / AMS ) - ( ( ( Max( MDR,ACS ) + FirstVNF_Mem_Server ) * FirstVNF_Mem ) * Min( ( Const + RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( ( ( Min( ( ( CS + RMSe ) + MUM ) ,MUC ) + CS ) - ( ( ( RMSe * CS ) * DS ) + ( ( MUM * ( Max( RCSe,MUC ) + MLU ) ) / ( ( Max( CS,MLU ) + ( RRSe * MUC ) ) - ( MUM + RMSe ) ) ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4149797570850202, "obj2": 0.37715831827461715}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "Min( ( ( ( MDR - PN ) - ( ( ACS * FirstVNF_Mem_Server ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( CRS,Max( AMS,( Const - Min( PN ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,Max( RMSe,RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( Max( CS,Min( ( RRSe + Max( MUC,Min( MUM ,RMSe ) ) ) ,( RMSe * ( RMSe + DS ) ) ) ),CS ) * Min( ( MUM / ( MLU - ( MUC * RRSe ) ) ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07173116406584289}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR - ( ( FirstVNF_CPU_Server / ARS ) + ( Const / MRS ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_RAM ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( Min( ( RRSe * MUR ) ,CS ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6445073873069966}, {"determining": "( ( ( ( AMS / DDR ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( RRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( AMS / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) + ( AMS / MDR ) ) ) )", "choosing": "( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) - ( ( Max( ( MUC * Min( MUR ,RMSe ) ),MLU ) + MUM ) + Min( ( Min( Max( MUC,Max( RMSe,MUR ) ) ,( ( MUR / MUM ) * RMSe ) ) / RCSe ) ,( DS - DS ) ) ) ) - ( Max( MUC,DS ) - ( RMSe + CS ) ) )", "obj1": 0.5546558704453441, "obj2": 0.24490615986857073}, {"determining": "( ( PN - AMS ) - ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) * AMS ) * MDR ) / ( ( MDR / AMS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( MUM + ( RRSe + MUC ) ) - ( ( MLU / DS ) * MUC ) ) - ( ( RCSe + CS ) - CS ) )", "obj1": 0.7206477732793523, "obj2": 0.11208761445873963}, {"determining": "( Max( ( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Const ) + Min( ARS ,DDR ) ),( Min( CRS ,DDR ) / MRS ) ) - ( ( Const * Max( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server + ARS ) * Min( ACS ,ACS ) ) ) ,( FirstVNF_RAM + Const ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,RRS ) ),( ACS - Min( ( FirstVNF_CPU_Server + MDR ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / MUR ) - ( Min( MUR ,MUC ) + MUR ) ) * ( Max( ( ( Min( MUC ,( MUM * MUR ) ) * MUC ) + RRSe ),MUR ) * Max( ( RRSe / ( RRSe * MLU ) ),RMSe ) ) ) ,Min( MUR ,( Min( DS ,MLU ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3133900395665014}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( MRS * Min( FirstVNF_CPU_Server ,MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( Max( RMSe,( MUC - ( RRSe / ( MUR / RCSe ) ) ) ) * Max( MUC,CS ) ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.40207238200623957}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + ( MUR / RCSe ) ) ) * ( ( ( RMSe + CS ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * MUR ) ) )", "obj1": 0.5425101214574899, "obj2": 0.25189327520064375}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * FirstVNF_Mem_Server ) ) / Const ),( MDR * Const ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( CRS * Min( ( Const + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( MUR + ( ( MUR + ( MUC * CS ) ) / MUC ) ),MUR ) - ( ( RMSe + CS ) + Max( MUC,DS ) ) )", "obj1": 0.35020242914979755, "obj2": 0.44050127106051923}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) - ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( DS - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( DS / Max( MLU,( ( CS * RMSe ) * Max( MUC,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6780110001582584}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.0693088534347505}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * ( MRS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( ( DS - RRSe ) - MUM ) ) / RCSe ) ,( MUC / DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.24696356275303644, "obj2": 0.5378557448008154}, {"determining": "( ( PN - MDR ) - ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) - Max( ( Min( Min( FirstVNF_CPU_Server ,AMS ) ,CRS ) - ARS ),CRS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7096766969742002}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9048582995951417, "obj2": 0.03384089258249963}, {"determining": "( ( Max( ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ) ),DDR ) - PN ) - ( Max( MRS,RRS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( PN + Const ) ),( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( DS / ( CS / MUM ) ),RCSe ) - ( MUC - CS ) ) * ( RCSe + CS ) ) ,Max( RCSe,( MUC / RMSe ) ) )", "obj1": 0.13360323886639677, "obj2": 0.6568839053592417}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12348178137651822, "obj2": 0.672214068041554}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( MRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( DS - ( RMSe - RMSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.05056247651152701}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( ( MLU - RRSe ),( DS + RRSe ) ) * ( ( ( ( ( Min( MLU ,MUR ) / RCSe ) / RMSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( ( MUC - RCSe ) + MLU ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.18218496111081856}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( CS + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.45546558704453444, "obj2": 0.333892302681325}, {"determining": "( ( PN - ( ( Min( ARS ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - ( ( ( ( PN + ( DDR + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + Min( CRS ,Max( AMS,Max( Const,ACS ) ) ) ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - RCSe ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( Min( Min( RCSe ,MLU ) ,RCSe ) - ( MLU / RCSe ) ) ) * ( Min( Max( ( RRSe - Max( RMSe,MLU ) ),Min( MUC ,MLU ) ) ,Max( ( ( MUM - RCSe ) + RCSe ),RRSe ) ) / CS ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02164226088532835}, {"determining": "( ( PN - MDR ) - ( ( AMS * Max( ( Max( MRS,( ACS * RRS ) ) / PN ),Const ) ) * ( ( MDR / RRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ( AMS / ACS ) * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( RRSe - DS ) - ( ( ( RRSe - MLU ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( ( RMSe + MUR ) + RRSe ),MUR ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.35348450552915667}, {"determining": "Min( Max( Const,( PN + DDR ) ) ,( ( ( ( FirstVNF_RAM_Server - ( CRS * ( FirstVNF_CPU_Server / Const ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Max( RCSe,Max( MUR,Min( MLU ,MUM ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( RMSe + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.0866174988489662}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - Max( ( Const * BR ),( ARS / ( MRS + Max( ACS,Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( RMSe / RRSe ) ) * ( CS * DS ) ) ,Min( ( ( DS / RRSe ) / MLU ) ,( ( MUM * MUC ) - RMSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2886281482299784}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.1903620131487013}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( PN - MDR ) - ( ( ( MDR * Const ) * ( ( Const / Min( ( ( PN - MDR ) + FirstVNF_CPU ) ,DDR ) ) + Const ) ) * Max( FirstVNF_RAM,( DDR + ( CRS / MDR ) ) ) ) )", "choosing": "( Max( Max( CS,RCSe ),( MLU * MUR ) ) - ( ( ( RRSe - MLU ) / ( RRSe + DS ) ) * ( CS * ( RMSe + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3191407880855683}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( ( FirstVNF_RAM - DDR ) + FirstVNF_Mem_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4311740890688259, "obj2": 0.3553367711498181}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU_Server / BR ) * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( CRS,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( ( MUR / MUR ) + DS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5040485829959515, "obj2": 0.28230582440544244}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( FirstVNF_CPU * ACS ) - ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) + ( ARS + MDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + Min( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( CS - RCSe ) - ( RRSe + MUM ) ) ) ,( ( MUR + RCSe ) - MUR ) ) ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.451417004048583, "obj2": 0.3349814234116902}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6600927593262539}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ACS ,Min( ACS ,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( MDR * Min( CRS ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( DS * RMSe ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / MUR ) ,( Max( DS,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.32283648564059675}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.34187134815335746}, {"determining": "( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) - ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1058607718401903}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ARS + ACS ) - ( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),DDR ) * Max( ( PN * FirstVNF_CPU_Server ),RRS ) ) ) - FirstVNF_CPU ) * FirstVNF_Mem ) * ( Min( Const ,Max( Min( CRS ,( CRS / FirstVNF_RAM ) ),( PN * Const ) ) ) + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,AMS ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( MLU ,Max( MUR,DS ) ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + RRSe ) + Min( MUC ,DS ) ) )", "obj1": 0.9190283400809717, "obj2": 0.027743460676847513}, {"determining": "( ( ( CRS * Min( ARS ,DDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( BR - BR ) ,DDR ) ) ) - ( PN - MDR ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - Max( Min( ( RCSe * MUM ) ,RMSe ),CS ) )", "obj1": 0.25101214574898784, "obj2": 0.5262772403957714}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.04343800469897587}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.24733832806879996}, {"determining": "Max( Max( BR,FirstVNF_RAM ),( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7035514756083937}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( CRS - ( MDR / AMS ) ) ) ) / ( ( FirstVNF_Mem_Server - ( ARS * RRS ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( MRS,( ACS * RRS ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - ( MLU / RMSe ) ),DS ) ) - ( ( ( ( DS / RCSe ) / MUC ) - Min( Max( Max( ( MUR + RCSe ),( MUR + DS ) ),( ( MUR - DS ) - Max( RRSe,MUM ) ) ) ,( MLU * RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,RMSe ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09817106998456097}, {"determining": "( ( Min( ( MRS - DDR ) ,FirstVNF_RAM_Server ) - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - ( RCSe + ( Max( ( Min( MUR ,MUM ) * ( RRSe * MUR ) ),MUC ) * MUR ) ) ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( RCSe,( MUM / RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( Min( DS ,MLU ) / RCSe ) / ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3407040137720929}, {"determining": "( ( PN - MDR ) - ( ( ( ( MDR - ARS ) + ( ( ( RRS * PN ) + ARS ) / ( RRS - Max( AMS,ACS ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) * ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_Mem ) - ( CRS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) + ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / Min( CS ,( ( RRSe - MUR ) + RCSe ) ) ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.00450537670442937}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.757085020242915, "obj2": 0.09401889247505639}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( PN + ( PN - MDR ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),( ( MUR - MUM ) + ( MUM * MUC ) ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.8319838056680162, "obj2": 0.06335648764055045}, {"determining": "( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Min( RCSe ,( MUR / MUM ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6376742490351233}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ( PN * BR ) ,DDR ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( ( ( RMSe * RCSe ) + RMSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( ( MLU / ( MUM + Max( ( DS * MUR ),( CS / MUR ) ) ) ),( ( MUR + Min( MUM ,( RMSe - DS ) ) ) + ( RMSe * MUM ) ) ) / ( ( ( MUR / MLU ) * MUM ) - ( ( ( MUC * RRSe ) / RRSe ) / RCSe ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30728708076937444}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}, {"determining": "( ( PN - MDR ) - ( Min( FirstVNF_Mem ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RMSe ),Max( Max( ( ( Min( DS ,MLU ) + RMSe ) + ( MUR - RCSe ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.02537983883668747}], "27": [{"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MDR ) - ( ( ( MRS - ( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( MDR - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( Max( Max( MLU,RCSe ),MLU ) - MUR ) / ( Max( Min( MLU ,( DS + RCSe ) ),( MLU + ( MUM / Min( MLU ,RRSe ) ) ) ) / Max( MUC,RRSe ) ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.15846415037148853}, {"determining": "( ( PN - ACS ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ( PN - MDR ) ,Min( ARS ,MDR ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS * Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) / ( ( ( RMSe + RRSe ) * Max( CS,Max( Max( MUR,CS ),( MLU * MUM ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.3603238866396761, "obj2": 0.4284884817495182}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( CRS / AMS ) - ( Min( ACS ,Min( ( MDR * CRS ) ,FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( Min( Max( RMSe,( MUC * MUR ) ) ,( RCSe - RRSe ) ) - DS ) ) ) )", "obj1": 0.6761133603238867, "obj2": 0.14149394236261015}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - Max( ( Const * BR ),( ARS / ( MRS + Max( ACS,Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( RMSe / RRSe ) ) * ( CS * DS ) ) ,Min( ( ( DS / RRSe ) / MLU ) ,( ( MUM * MUC ) - RMSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2886281482299784}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.17408906882591094, "obj2": 0.611604947130285}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( FirstVNF_RAM * ACS ) ) / Max( Max( ACS,( MDR - DDR ) ),RRS ) ) * ( ( ACS / AMS ) - ( ( ( Max( MDR,ACS ) + FirstVNF_Mem_Server ) * FirstVNF_Mem ) * Min( ( Const + RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( ( ( Min( ( ( CS + RMSe ) + MUM ) ,MUC ) + CS ) - ( ( ( RMSe * CS ) * DS ) + ( ( MUM * ( Max( RCSe,MUC ) + MLU ) ) / ( ( Max( CS,MLU ) + ( RRSe * MUC ) ) - ( MUM + RMSe ) ) ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4149797570850202, "obj2": 0.37715831827461715}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - DS ) - ( ( ( RRSe - MLU ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( ( RMSe + MUR ) + RRSe ),MUR ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.1754956816698392}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "Min( ( ( ( MDR - PN ) - ( ( ACS * FirstVNF_Mem_Server ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,Max( CRS,Max( AMS,( Const - Min( PN ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,Max( RMSe,RCSe ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( Max( CS,Min( ( RRSe + Max( MUC,Min( MUM ,RMSe ) ) ) ,( RMSe * ( RMSe + DS ) ) ) ),CS ) * Min( ( MUM / ( MLU - ( MUC * RRSe ) ) ) ,( MLU * RMSe ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07173116406584289}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.16641510388485833}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.250337786354347}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( ( MLU - RRSe ),( DS + RRSe ) ) * ( ( ( ( ( Min( MLU ,MUR ) / RCSe ) / RMSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( ( MUC - RCSe ) + MLU ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.18218496111081856}, {"determining": "( ( PN - MDR ) - ( ( ( ( AMS + ( ( CRS * PN ) - ( ARS * ( Const + DDR ) ) ) ) - ( Max( Const,FirstVNF_Mem ) * MRS ) ) * Max( Const,( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ) ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Max( BR,( MDR * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( MUM + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - Min( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( RMSe - MUM ) ) ) ,Min( ( Min( DS ,( ( CS + MUM ) * RRSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + ( DS - Max( RCSe,MLU ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.597400692140919}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( ( CRS * Min( ARS ,DDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( BR - BR ) ,DDR ) ) ) - ( PN - MDR ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - Max( Min( ( RCSe * MUM ) ,RMSe ),CS ) )", "obj1": 0.25101214574898784, "obj2": 0.5262772403957714}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * FirstVNF_Mem_Server ) ) / Const ),( MDR * Const ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( CRS * Min( ( Const + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( MUR + ( ( MUR + ( MUC * CS ) ) / MUC ) ),MUR ) - ( ( RMSe + CS ) + Max( MUC,DS ) ) )", "obj1": 0.35020242914979755, "obj2": 0.44050127106051923}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.46806749574585627}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.049544823664511815}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN + ( PN - MDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) / ( ( PN - FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.1903620131487013}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12348178137651822, "obj2": 0.672214068041554}, {"determining": "( ( PN - MDR ) - ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( ( MRS / CRS ),CRS ) ) - CRS ) - ( Min( FirstVNF_RAM_Server ,ACS ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Min( ( ( ( MLU / RCSe ) - ( MLU * RRSe ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) ) ) ) - ( ( ( ( RCSe - ( ( RMSe / MUC ) + Max( MUC,( MUC - RRSe ) ) ) ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.012241277385892032}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( CS + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6976582647798851}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.24733832806879996}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR - ( ( FirstVNF_CPU_Server / ARS ) + ( Const / MRS ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_RAM ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( Min( ( RRSe * MUR ) ,CS ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6445073873069966}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.04343443402225708}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6600927593262539}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Min( RCSe ,( MUR / MUM ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6376742490351233}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9048582995951417, "obj2": 0.03384089258249963}, {"determining": "( ( PN - MDR ) - ( ( AMS * ACS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( RRSe - MUC ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39732750447694976}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.19838056680161945, "obj2": 0.5935154819599616}, {"determining": "Min( ( ( ( PN - MDR ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) - ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "Min( Min( MLU ,( MUC + Min( ( MUC - MUM ) ,MLU ) ) ) ,( ( MUC + MUC ) + DS ) )", "obj1": 0.8927125506072875, "obj2": 0.04141068939826259}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( ( FirstVNF_CPU_Server / Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * ( ( ( ( PN / ( FirstVNF_Mem - PN ) ) * ACS ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * MUC ) ) ) - Min( ( CS + RMSe ) ,Max( MLU,Max( Min( Max( Min( Min( RRSe ,MLU ) ,RRSe ),MLU ) ,( MUC * ( CS + ( RCSe / MUR ) ) ) ),MUR ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2060891205540737}, {"determining": "( Max( ( Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Const ) + Min( ARS ,DDR ) ),( Min( CRS ,DDR ) / MRS ) ) - ( ( Const * Max( Min( Min( FirstVNF_CPU ,( ( FirstVNF_CPU_Server + ARS ) * Min( ACS ,ACS ) ) ) ,( FirstVNF_RAM + Const ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - Min( FirstVNF_CPU_Server ,RRS ) ),( ACS - Min( ( FirstVNF_CPU_Server + MDR ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / MUR ) - ( Min( MUR ,MUC ) + MUR ) ) * ( Max( ( ( Min( MUC ,( MUM * MUR ) ) * MUC ) + RRSe ),MUR ) * Max( ( RRSe / ( RRSe * MLU ) ),RMSe ) ) ) ,Min( MUR ,( Min( DS ,MLU ) / ( RCSe / MUR ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3133900395665014}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( MRS * Min( FirstVNF_CPU_Server ,MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( Max( RMSe,( MUC - ( RRSe / ( MUR / RCSe ) ) ) ) * Max( MUC,CS ) ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.40207238200623957}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ACS ,Min( ACS ,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( MDR * Min( CRS ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( DS * RMSe ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / MUR ) ,( Max( DS,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.32283648564059675}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11189285549028101}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) - ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( DS - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( DS / Max( MLU,( ( CS * RMSe ) * Max( MUC,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6780110001582584}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.0693088534347505}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ( PN * BR ) ,DDR ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MUC / DS ) - ( ( ( RMSe + RRSe ) * Max( ( ( RMSe * RCSe ) + RMSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( ( MLU / ( MUM + Max( ( DS * MUR ),( CS / MUR ) ) ) ),( ( MUR + Min( MUM ,( RMSe - DS ) ) ) + ( RMSe * MUM ) ) ) / ( ( ( MUR / MLU ) * MUM ) - ( ( ( MUC * RRSe ) / RRSe ) / RCSe ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30728708076937444}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * ( MRS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( ( DS - RRSe ) - MUM ) ) / RCSe ) ,( MUC / DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.24696356275303644, "obj2": 0.5378557448008154}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( Min( PN ,( MRS / FirstVNF_RAM ) ) - ( ( ( ARS * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS + RMSe ) + Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5090438220243311}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( PN + ( PN - MDR ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),( ( MUR - MUM ) + ( MUM * MUC ) ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.8319838056680162, "obj2": 0.06335648764055045}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - MDR ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,( DS / RCSe ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08352388525385562}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13918179200484582}, {"determining": "( ( PN - MDR ) - ( ( ( MDR * Const ) * ( ( Const / Min( ( ( PN - MDR ) + FirstVNF_CPU ) ,DDR ) ) + Const ) ) * Max( FirstVNF_RAM,( DDR + ( CRS / MDR ) ) ) ) )", "choosing": "( Max( Max( CS,RCSe ),( MLU * MUR ) ) - ( ( ( RRSe - MLU ) / ( RRSe + DS ) ) * ( CS * ( RMSe + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3191407880855683}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( CS + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.45546558704453444, "obj2": 0.333892302681325}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / Max( MDR,( MDR / Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) - CRS ) ) ) - Min( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ,( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( MUC / RRSe ) / MUC ) - ( ( ( RRSe - MLU ) / ( DS + RRSe ) ) * ( ( Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) + ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MLU / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.1204585330693758}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * ( Const * MDR ) ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( CS,( MUC + ( ( MUC - MUM ) - MLU ) ) ) ) - Max( MUM,RCSe ) ) ) / ( Max( DS,CS ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7732793522267206, "obj2": 0.08470951795409871}, {"determining": "( ( PN - ( ( Min( ARS ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - ( ( ( ( PN + ( DDR + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + Min( CRS ,Max( AMS,Max( Const,ACS ) ) ) ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - RCSe ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( Min( Min( RCSe ,MLU ) ,RCSe ) - ( MLU / RCSe ) ) ) * ( Min( Max( ( RRSe - Max( RMSe,MLU ) ),Min( MUC ,MLU ) ) ,Max( ( ( MUM - RCSe ) + RCSe ),RRSe ) ) / CS ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02164226088532835}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ARS + ACS ) - ( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),DDR ) * Max( ( PN * FirstVNF_CPU_Server ),RRS ) ) ) - FirstVNF_CPU ) * FirstVNF_Mem ) * ( Min( Const ,Max( Min( CRS ,( CRS / FirstVNF_RAM ) ),( PN * Const ) ) ) + ( ( ( ( Const * BR ) - DDR ) * AMS ) - Max( FirstVNF_CPU,AMS ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( MLU ,Max( MUR,DS ) ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / DS ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + RRSe ) + Min( MUC ,DS ) ) )", "obj1": 0.9190283400809717, "obj2": 0.027743460676847513}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) - ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1058607718401903}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( ( FirstVNF_RAM - PN ) + FirstVNF_Mem_Server ) ,DDR ) ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,CS ),MUM ),CS ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4311740890688259, "obj2": 0.3553191554332762}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * ( CRS / FirstVNF_CPU ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( ACS / FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( MLU ,Max( MUC,Min( MUM ,DS ) ) ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4442297492686775}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * ( PN - MDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( Min( MUC ,MUR ) - MUC ),MUR ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0006559768142791674}, {"determining": "Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) ,( ( ( PN - MDR ) - ( ( ( MDR - ARS ) + ( Min( Max( ACS,BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( RRS - ( ACS * FirstVNF_RAM ) ) * ( ACS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RMSe / MUM ),RRSe ) - ( MUC + CS ) ) * ( CS * DS ) ) ,Min( ( CS / MUR ) ,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.2250799549332219}, {"determining": "( ( Max( ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ) ),DDR ) - PN ) - ( Max( MRS,RRS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( PN + Const ) ),( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( DS / ( CS / MUM ) ),RCSe ) - ( MUC - CS ) ) * ( RCSe + CS ) ) ,Max( RCSe,( MUC / RMSe ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7224576989510303}, {"determining": "Min( Max( Const,( PN + DDR ) ) ,( ( ( ( FirstVNF_RAM_Server - ( CRS * ( FirstVNF_CPU_Server / Const ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Max( RCSe,Max( MUR,Min( MLU ,MUM ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( RMSe + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.0866174988489662}, {"determining": "( ( PN - MDR ) - ( ( ( ( MDR - ARS ) + ( ( ( RRS * PN ) + ARS ) / ( RRS - Max( AMS,ACS ) ) ) ) * ( ( MDR / AMS ) - CRS ) ) * ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_Mem ) - ( CRS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) + ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / Min( CS ,( ( RRSe - MUR ) + RCSe ) ) ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.00450537670442937}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.9008097165991903, "obj2": 0.03753616791652376}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( FirstVNF_RAM_Server - MDR ) ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( Min( DS ,MLU ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.2314887643680347}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),ACS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( MUM + RRSe ),MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13199233769672608}, {"determining": "( ( PN - MDR ) - ( Min( FirstVNF_Mem ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RMSe ),Max( Max( ( ( Min( DS ,MLU ) + RMSe ) + ( MUR - RCSe ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.02537983883668747}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( ( ( ( Const / AMS ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) + CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( MLU + DS ) ) - ( MUC * CS ) )", "obj1": 0.5020242914979757, "obj2": 0.2827550194124297}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( ( AMS / ARS ),FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6833691421831393}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( ( ( RMSe * RCSe ) + RMSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( ( ( RMSe + ( Min( ( MLU * MUM ) ,MLU ) - RRSe ) ) * ( CS * ( Max( ( Max( DS,CS ) - MUR ),RCSe ) + CS ) ) ) ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30728708076937444}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server * MDR ) * ( DDR * ARS ) ) )", "choosing": "( ( MUR - Max( ( ( MUR / ( RCSe * CS ) ) + RRSe ),Max( MUM,Max( ( MUR - ( Min( CS ,RMSe ) + ( DS * RRSe ) ) ),RCSe ) ) ) ) - ( Max( Min( ( CS / Min( ( MUM - MLU ) ,RCSe ) ) ,MLU ),CS ) * ( ( MLU - RRSe ) + ( CS + RRSe ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06582021294417514}], "28": [{"determining": "( Min( CRS ,FirstVNF_CPU ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( MUR * DS ) ) / ( Max( DS,CS ) * Min( Max( RRSe,( MUM / Min( ( DS + RMSe ) ,( MLU * Max( MLU,CS ) ) ) ) ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( AMS - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * MDR ) ) * AMS ) - ( ( MDR / AMS ) - Min( RRS ,( CRS / Max( PN,CRS ) ) ) ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( Max( RMSe,MLU ),CS ) ) - RMSe ) ) / ( Max( DS,Min( MUC ,MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10104868435662971}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.15846415037148853}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.250337786354347}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_CPU_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( MDR + FirstVNF_RAM_Server ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MUR + RCSe ) + ( RCSe / RMSe ) ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Min( ( ( ( DS / RCSe ) / MUC ) + RRSe ) ,MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08643159091288244}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( FirstVNF_RAM * ACS ) ) / Max( Max( ACS,( MDR - DDR ) ),RRS ) ) * ( ( ACS / AMS ) - ( ( ( Max( MDR,ACS ) + FirstVNF_Mem_Server ) * FirstVNF_Mem ) * Min( ( Const + RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( ( ( Min( ( ( CS + RMSe ) + MUM ) ,MUC ) + CS ) - ( ( ( RMSe * CS ) * DS ) + ( ( MUM * ( Max( RCSe,MUC ) + MLU ) ) / ( ( Max( CS,MLU ) + ( RRSe * MUC ) ) - ( MUM + RMSe ) ) ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4149797570850202, "obj2": 0.37715831827461715}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.4493927125506073, "obj2": 0.33673467499794874}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - Max( ( Const * BR ),( ARS / ( MRS + Max( ACS,Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( RMSe / RRSe ) ) * ( CS * DS ) ) ,Min( ( ( DS / RRSe ) / MLU ) ,( ( MUM * MUC ) - RMSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2886281482299784}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) + ( MDR / AMS ) ) ) - ( Max( ( Max( Min( FirstVNF_CPU ,( ( ARS - DDR ) * ( Const * FirstVNF_Mem ) ) ),ACS ) - Const ),PN ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( MUR,Max( RRSe,RMSe ) ) ,MLU ) - ( ( RRSe + Max( DS,Min( ( DS - MLU ) ,( ( MUM + RMSe ) / MUM ) ) ) ) / ( ( Max( Min( Min( RRSe ,MUM ) ,MUR ),( Min( MLU ,( MLU - RRSe ) ) + ( ( MUR * RRSe ) + Min( MUR ,MUR ) ) ) ) - MUM ) + MUM ) ) )", "obj1": 0.6720647773279352, "obj2": 0.14442276603810744}, {"determining": "( ( Max( ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ) ),DDR ) - PN ) - ( Max( MRS,RRS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( PN + Const ) ),( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( DS / ( CS / MUM ) ),RCSe ) - ( MUC - CS ) ) * ( RCSe + CS ) ) ,Max( RCSe,( MUC / RMSe ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7224576989510303}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( FirstVNF_Mem_Server + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,DDR ) ) ) ) )", "choosing": "( Max( Max( Max( Max( MUC,CS ),MUM ),CS ),Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( DS * RRSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.35466674929571584}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( ( MLU - RRSe ),( DS + RRSe ) ) * ( ( ( ( ( Min( MLU ,MUR ) / RCSe ) / RMSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( ( MUC - RCSe ) + MLU ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.18218496111081856}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),ACS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( MUM + RRSe ),MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.13199233769672608}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.46806749574585627}, {"determining": "( ( ( MDR - PN ) - ( MDR + Max( ARS,ACS ) ) ) - ( ( ( ( ( ACS + Max( ( Const - DDR ),AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUR / RRSe ) + MUR ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( DS / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3048067352667266}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.049544823664511815}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Max( Max( Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ),DDR ),( Const / FirstVNF_CPU_Server ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ARS + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.00913433089774995}, {"determining": "( ( PN - MDR ) - ( ( ( ( AMS + ( ( CRS * PN ) - ( ARS * ( Const + DDR ) ) ) ) - ( Max( Const,FirstVNF_Mem ) * MRS ) ) * Max( Const,( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ) ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Max( BR,( MDR * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( MUM + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - Min( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( RMSe - MUM ) ) ) ,Min( ( Min( DS ,( ( CS + MUM ) * RRSe ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + ( DS - Max( RCSe,MLU ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.597400692140919}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR - ( ( FirstVNF_CPU_Server / ARS ) + ( Const / MRS ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_RAM ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( Min( ( RRSe * MUR ) ,CS ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6445073873069966}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( CS,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6600927593262539}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) - ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1058607718401903}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.0693088534347505}, {"determining": "( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Min( RCSe ,( MUR / MUM ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6376742490351233}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * FirstVNF_Mem_Server ) ) / Const ),( MDR * Const ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( CRS * Min( ( Const + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( MUR + ( ( MUR + ( MUC * CS ) ) / MUC ) ),MUR ) - ( ( RMSe + CS ) + Max( MUC,DS ) ) )", "obj1": 0.35020242914979755, "obj2": 0.44050127106051923}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,CS ),MUM ),CS ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6085124916678345}, {"determining": "( ( ( PN - MDR ) - ( Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) * ( ( BR / AMS ) - CRS ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.20324214550936143}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( CS + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.45546558704453444, "obj2": 0.333892302681325}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.3122569455559415}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ACS ,Min( ACS ,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( MDR * Min( CRS ,MRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( DS * RMSe ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / MUR ) ,( Max( DS,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.32283648564059675}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.04343443402225708}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - DS ) - ( ( ( RRSe - MLU ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( ( RMSe + MUR ) + RRSe ),MUR ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.1754956816698392}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07139992192078022}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * ( MRS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( ( DS - RRSe ) - MUM ) ) / RCSe ) ,( MUC / DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.24696356275303644, "obj2": 0.5378557448008154}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Min( ACS ,FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3978663098799349}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11189285549028101}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - Max( Const,( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( ( RMSe * MUR ),MUM ),CS ) ) / DS ) ) * Max( ( RCSe + CS ),DS ) ) ,( CS + MUR ) )", "obj1": 0.19838056680161945, "obj2": 0.5889015957255174}, {"determining": "( ( PN - ( ( Min( ARS ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - ( ( ( ( PN + ( DDR + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + Min( CRS ,Max( AMS,Max( Const,ACS ) ) ) ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - RCSe ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( Min( Min( RCSe ,MLU ) ,RCSe ) - ( MLU / RCSe ) ) ) * ( Min( Max( ( RRSe - Max( RMSe,MLU ) ),Min( MUC ,MLU ) ) ,Max( ( ( MUM - RCSe ) + RCSe ),RRSe ) ) / CS ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02164226088532835}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13918179200484582}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( Min( PN ,( MRS / FirstVNF_RAM ) ) - ( ( ( ARS * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS + RMSe ) + Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5090438220243311}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - MDR ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,( DS / RCSe ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08352388525385562}, {"determining": "( ( ( PN - MDR ) - ( ( FirstVNF_Mem * BR ) * ( ( ( Const * ( FirstVNF_Mem + ( CRS / FirstVNF_RAM_Server ) ) ) / AMS ) - CRS ) ) ) - ( ( ( ACS / FirstVNF_CPU_Server ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( ( MUC - MUC ) + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - Max( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ),( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11906147933345246}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( Min( MUC ,MUR ) - MUC ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5445344129554656, "obj2": 0.24703105910687245}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ARS - FirstVNF_RAM_Server ),( ACS * ( ( ( MDR - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( RCSe + ( RRSe * ( CS * MUC ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( RRSe * MLU ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.4049712323449621}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( ( CRS * Min( ARS ,DDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( BR - BR ) ,DDR ) ) ) - ( PN - MDR ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - Max( Min( ( RCSe * MUM ) ,RMSe ),CS ) )", "obj1": 0.25101214574898784, "obj2": 0.5262772403957714}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12348178137651822, "obj2": 0.672214068041554}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6299109310459429}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( MUC,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( Max( MUM,( MUM / RCSe ) ) / ( MUM + MUR ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30719119952628915}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * ( CRS / FirstVNF_CPU ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( ( ACS / FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( Min( MLU ,Max( MUC,Min( MUM ,DS ) ) ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.34210526315789475, "obj2": 0.4442297492686775}, {"determining": "( ( PN - MDR ) - ( ( ( ( ARS - FirstVNF_RAM_Server ) - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( ( Const * PN ) - DDR ) * AMS ) - Max( FirstVNF_CPU,AMS ) ) ) ) )", "choosing": "( ( Max( CS,( MLU + ( RRSe / MUC ) ) ) - MLU ) - ( ( ( ( ( ( RMSe / MUC ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * Min( MUM ,( DS * ( RMSe - Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7119727895996426}, {"determining": "( ( FirstVNF_Mem - MDR ) - ( ( Const * Max( ( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( ARS * CRS ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,MLU ) + Max( ( ( Min( DS ,CS ) - MUC ) + RRSe ),MUR ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.19433198380566802, "obj2": 0.5941702651007015}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( ( ( ( Const / AMS ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) + CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( MLU + DS ) ) - ( MUC * CS ) )", "obj1": 0.5020242914979757, "obj2": 0.2827550194124297}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / Max( MUC,Max( MUC,RRSe ) ) ) - ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6136427038115134}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.9048582995951417, "obj2": 0.03384089258249963}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5668016194331984, "obj2": 0.2240165406321403}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.9008097165991903, "obj2": 0.03753616791652376}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.17441352085093037}, {"determining": "( ( PN - MDR ) - ( ( ( MDR * Const ) * ( ( Const / Min( ( ( PN - MDR ) + FirstVNF_CPU ) ,DDR ) ) + Const ) ) * Max( FirstVNF_RAM,( DDR + ( CRS / MDR ) ) ) ) )", "choosing": "( Max( Max( CS,RCSe ),( MLU * MUR ) ) - ( ( ( RRSe - MLU ) / ( RRSe + DS ) ) * ( CS * ( RMSe + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3191407880855683}, {"determining": "( ( ( ( Max( ACS,MDR ) - ( ( FirstVNF_RAM_Server - MDR ) * MRS ) ) - ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ( CRS / MRS ) ) ) * FirstVNF_Mem ) * ( FirstVNF_Mem - ( Min( Min( FirstVNF_CPU ,MRS ) ,( MDR + Const ) ) - ( ( MRS - MDR ) + ( ARS + MDR ) ) ) ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) / ( ACS / ( ( ( Min( DDR ,MRS ) - ( ( BR * Const ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) + BR ) ) )", "choosing": "( ( ( RMSe + CS ) - Min( DS ,MUC ) ) - Max( RRSe,( RMSe * ( RMSe + MLU ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12232095589973575}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( MRS,FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) - ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( DS - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( DS / Max( MLU,( ( CS * RMSe ) * Max( MUC,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6780110001582584}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( ( AMS / ARS ),FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6833691421831393}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUR + MUC ) / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( RMSe + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5247785295802749}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}], "29": [{"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( ( DDR + FirstVNF_RAM ) / BR ) - FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) * DS ) - ( Min( MLU ,MLU ) * ( ( DS - ( ( MUM * MUM ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_CPU ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( MUR * DS ) ) / ( Max( DS,CS ) * Min( Max( RRSe,( MUM / Min( ( DS + RMSe ) ,( MLU * Max( MLU,CS ) ) ) ) ) ,( MLU * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Max( Max( Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ),DDR ),( Const / FirstVNF_CPU_Server ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ARS + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.00913433089774995}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MLU ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.42585543159793704}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) + ( MDR / AMS ) ) ) - ( Max( ( Max( Min( FirstVNF_CPU ,( ( ARS - DDR ) * ( Const * FirstVNF_Mem ) ) ),ACS ) - Const ),PN ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( MUR,Max( RRSe,RMSe ) ) ,MLU ) - ( ( RRSe + Max( DS,Min( ( DS - MLU ) ,( ( MUM + RMSe ) / MUM ) ) ) ) / ( ( Max( Min( Min( RRSe ,MUM ) ,MUR ),( Min( MLU ,( MLU - RRSe ) ) + ( ( MUR * RRSe ) + Min( MUR ,MUR ) ) ) ) - MUM ) + MUM ) ) )", "obj1": 0.6720647773279352, "obj2": 0.14442276603810744}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( FirstVNF_RAM * ACS ) ) / Max( Max( ACS,( MDR - DDR ) ),RRS ) ) * ( ( ACS / AMS ) - ( ( ( Max( MDR,ACS ) + FirstVNF_Mem_Server ) * FirstVNF_Mem ) * Min( ( Const + RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( ( ( Min( ( ( CS + RMSe ) + MUM ) ,MUC ) + CS ) - ( ( ( RMSe * CS ) * DS ) + ( ( MUM * ( Max( RCSe,MUC ) + MLU ) ) / ( ( Max( CS,MLU ) + ( RRSe * MUC ) ) - ( MUM + RMSe ) ) ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4149797570850202, "obj2": 0.37715831827461715}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - Max( ( Const * BR ),( ARS / ( MRS + Max( ACS,Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( RMSe / RRSe ) ) * ( CS * DS ) ) ,Min( ( ( DS / RRSe ) / MLU ) ,( ( MUM * MUC ) - RMSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2886281482299784}, {"determining": "( ( Max( ( FirstVNF_CPU_Server * Max( Const,( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ) ),DDR ) - PN ) - ( Max( MRS,RRS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( PN + Const ) ),( FirstVNF_RAM_Server * Max( ( FirstVNF_CPU_Server + ACS ),Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( ( DS / ( CS / MUM ) ),RCSe ) - ( MUC - CS ) ) * ( RCSe + CS ) ) ,Max( RCSe,( MUC / RMSe ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7224576989510303}, {"determining": "( ( Min( ( ARS + ACS ) ,( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),DDR ) * Max( ( PN * FirstVNF_CPU_Server ),RRS ) ) ) - FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,DDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( Min( MUR ,Min( MUC ,MUC ) ) * ( CS * DS ) ) ,Min( ( Min( DS ,( ( MLU - RCSe ) * RMSe ) ) / MUR ) ,( Max( MUM,( ( ( RRSe / RCSe ) / RRSe ) / RCSe ) ) / ( MUM - MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7054322157926591}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( CS + DS ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09155805178398307}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( RMSe + RRSe ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6859501882117822}, {"determining": "( ( PN - ( ( Min( ARS ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - ( ( ( ( PN + ( DDR + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + Min( CRS ,Max( AMS,Max( Const,ACS ) ) ) ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - RCSe ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( Min( Min( RCSe ,MLU ) ,RCSe ) - ( MLU / RCSe ) ) ) * ( Min( Max( ( RRSe - Max( RMSe,MLU ) ),Min( MUC ,MLU ) ) ,Max( ( ( MUM - RCSe ) + RCSe ),RRSe ) ) / CS ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02164226088532835}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.4493927125506073, "obj2": 0.33673467499794874}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07133924980303814}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) ) * ( CS * DS ) ) ,Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.04343443402225708}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( AMS - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * MDR ) ) * AMS ) - ( ( MDR / AMS ) - Min( RRS ,( CRS / Max( PN,CRS ) ) ) ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( MUM - Max( Max( RMSe,MLU ),CS ) ) - RMSe ) ) / ( Max( DS,Min( MUC ,MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10104868435662971}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( BR + ( MRS - Const ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9271255060728745, "obj2": 0.02966038300940154}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6538461538461539, "obj2": 0.156635189979463}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.0693088534347505}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - MDR ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RMSe + CS ) * ( CS * ( DS / RCSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,( DS / RCSe ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08352388525385562}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( ( ( ( Const / AMS ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) + CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( MLU + DS ) ) - ( MUC * CS ) )", "obj1": 0.5020242914979757, "obj2": 0.2827550194124297}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,CS ),MUM ),CS ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6085124916678345}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.46806749574585627}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( ( MDR - PN ) - ( MDR + Max( ARS,ACS ) ) ) - ( ( ( ( ( ACS + Max( ( Const - DDR ),AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUR / RRSe ) + MUR ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( DS / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3048067352667266}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( Min( MUC ,MUR ) - MUC ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.037033424039330944}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.066115503596413}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13918179200484582}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_CPU_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( MDR + FirstVNF_RAM_Server ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MUR + RCSe ) + ( RCSe / RMSe ) ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Min( ( ( ( DS / RCSe ) / MUC ) + RRSe ) ,MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08643159091288244}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5668016194331984, "obj2": 0.2240165406321403}, {"determining": "( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Min( RCSe ,( MUR / MUM ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6376742490351233}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.12348178137651822, "obj2": 0.672214068041554}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( PN - MDR ) - ( Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) * ( ( BR / AMS ) - CRS ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.20324214550936143}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.1862348178137652, "obj2": 0.5966886927670912}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( Min( FirstVNF_RAM ,( CRS + MDR ) ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( MUM,( Max( RCSe,( MUC / MUC ) ) + ( RRSe - DS ) ) ) * MUR ) / ( Min( Max( RRSe,( MUM / Min( ( DS + RMSe ) ,( MLU * Max( MLU,CS ) ) ) ) ) ,( MLU * RMSe ) ) * Max( MUC,CS ) ) )", "obj1": 0.9149797570850202, "obj2": 0.030804298103411846}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( FirstVNF_Mem_Server + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,DDR ) ) ) ) )", "choosing": "( Max( Max( Max( Max( MUC,CS ),MUM ),CS ),Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( DS * RRSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.35466674929571584}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( RMSe,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.6592999970489332}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),PN ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.1694324070826238}, {"determining": "( ( PN - MDR ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * ( MRS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( ( DS - RRSe ) - MUM ) ) / RCSe ) ,( MUC / DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.24696356275303644, "obj2": 0.5378557448008154}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.7206477732793523, "obj2": 0.11189285549028101}, {"determining": "( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) - ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1058607718401903}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( PN - MDR ) - ( ( ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16841732235941562}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.049544823664511815}, {"determining": "( Min( PN ,( MRS / FirstVNF_RAM ) ) - ( ( ( ARS * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS + RMSe ) + Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5090438220243311}, {"determining": "( ( ( PN - MDR ) - ( ( FirstVNF_Mem * BR ) * ( ( ( Const * ( FirstVNF_Mem + ( CRS / FirstVNF_RAM_Server ) ) ) / AMS ) - CRS ) ) ) - ( ( ( ACS / FirstVNF_CPU_Server ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( ( MUC - MUC ) + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - Max( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ),( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11906147933345246}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - ( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUR + MUC ) / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7073077918143706}, {"determining": "( ( ( CRS * Min( ARS ,DDR ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( BR - BR ) ,DDR ) ) ) - ( PN - MDR ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - Max( Min( ( RCSe * MUM ) ,RMSe ),CS ) )", "obj1": 0.25101214574898784, "obj2": 0.5262772403957714}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6299109310459429}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),ACS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( MUM + RRSe ),MUR ) ) ) )", "obj1": 0.6902834008097166, "obj2": 0.1319851963432885}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12192991480795337}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.46963562753036436, "obj2": 0.3122569455559415}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( ( MLU - RRSe ),( DS + RRSe ) ) * ( ( ( ( ( Min( MLU ,MUR ) / RCSe ) / RMSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( ( MUC - RCSe ) + MLU ) ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.3517301545869512}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6124786483260405}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ARS - FirstVNF_RAM_Server ),( ACS * ( ( ( MDR - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( RCSe + ( RRSe * ( CS * MUC ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( RRSe * MLU ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.4049712323449621}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - DS ) - ( ( ( RRSe - MLU ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( ( RMSe + MUR ) + RRSe ),MUR ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.12998809720619928}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Min( ACS ,FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,MUR ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.3978663098799349}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - MDR ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( ( PN + ACS ) + ACS ) ,Max( Max( AMS,MRS ),MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) / MUC ) + MUR ) / ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RCSe * RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( ( ( ( DS / ( RMSe + ( MUR + RRSe ) ) ) / ( ( RRSe / Max( DS,MLU ) ) + MLU ) ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) + Min( MUC ,DS ) ) )", "obj1": 0.2834008097165992, "obj2": 0.5056482506509382}, {"determining": "( ( ( Const + ( ( ( ( FirstVNF_RAM_Server - DDR ) * Max( ( AMS / ARS ),FirstVNF_RAM_Server ) ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * Max( ACS,FirstVNF_RAM_Server ) ) ) ) - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) / MUC ) - ( ( ( DS + Max( CS,Max( RMSe,RCSe ) ) ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6833691421831393}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( MRS * ( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( MDR ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RRSe * MUC ) / MUM ) / ( ( ( MLU / CS ) * RRSe ) / ( ( MUM / DS ) / ( MUM + RRSe ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.4574898785425101, "obj2": 0.3335493502686982}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( RMSe + CS ) ,Min( MUC ,DS ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5247785295802749}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( ( MLU - RRSe ),( DS + RRSe ) ) * ( ( ( ( ( Min( MLU ,MUR ) / RCSe ) / RMSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( ( MUC - RCSe ) + MLU ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.18218496111081856}], "30": [{"determining": "( ( PN - MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( ( Const / MDR ) - ( BR + FirstVNF_CPU_Server ) ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( ( DDR + FirstVNF_RAM ) / BR ) - FirstVNF_Mem ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) * DS ) - ( Min( MLU ,MLU ) * ( ( DS - ( ( MUM * MUM ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.1862348178137652, "obj2": 0.5966886927670912}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( ( ( Const - FirstVNF_Mem ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR * AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( RCSe + MUC ) / MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7183026641124303}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - Max( ( Const * BR ),( ARS / ( MRS + Max( ACS,Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( RMSe / RRSe ) ) * ( CS * DS ) ) ,Min( ( ( DS / RRSe ) / MLU ) ,( ( MUM * MUC ) - RMSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2886281482299784}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( RMSe / MLU ) / DS ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3359933921198886}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( MRS * ( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( MDR ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RRSe * MUC ) / MUM ) / ( ( ( MLU / CS ) * RRSe ) / ( ( MUM / DS ) / ( MUM + RRSe ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.4574898785425101, "obj2": 0.3335493502686982}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( FirstVNF_CPU_Server + Const ) / ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe - DS ) - ( ( ( RRSe + RMSe ) * Max( Max( ( MUR / RMSe ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( RRSe + CS ) )", "obj1": 0.11538461538461539, "obj2": 0.6813197766516844}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) + ( MDR / AMS ) ) ) - ( Max( ( Max( Min( FirstVNF_CPU ,( ( ARS - DDR ) * ( Const * FirstVNF_Mem ) ) ),ACS ) - Const ),PN ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( MUR,Max( RRSe,RMSe ) ) ,MLU ) - ( ( RRSe + Max( DS,Min( ( DS - MLU ) ,( ( MUM + RMSe ) / MUM ) ) ) ) / ( ( Max( Min( Min( RRSe ,MUM ) ,MUR ),( Min( MLU ,( MLU - RRSe ) ) + ( ( MUR * RRSe ) + Min( MUR ,MUR ) ) ) ) - MUM ) + MUM ) ) )", "obj1": 0.6720647773279352, "obj2": 0.14442276603810744}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN + MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( ( RRS + MDR ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUM ) - MUC ) + RRSe ),MUR ) ) * ( CS * CS ) ) )", "obj1": 0.4352226720647773, "obj2": 0.3510650392053652}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( MUC,MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.41190362101003797}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3143555473562194}, {"determining": "( ( PN - MDR ) - ( ( Min( ( FirstVNF_CPU_Server + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( Min( MUC ,Max( RMSe,MLU ) ) * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6607423990344493}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.0693088534347505}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( ( ( ( Const / AMS ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) + CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( MLU + DS ) ) - ( MUC * CS ) )", "obj1": 0.5020242914979757, "obj2": 0.2827550194124297}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.46806749574585627}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( ( MDR - PN ) - ( MDR + Max( ARS,ACS ) ) ) - ( ( ( ( ( ACS + Max( ( Const - DDR ),AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUR / RRSe ) + MUR ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( DS / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3048067352667266}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( FirstVNF_RAM * ACS ) ) / Max( Max( ACS,( MDR - DDR ) ),RRS ) ) * ( ( ACS / AMS ) - ( ( ( Max( MDR,ACS ) + FirstVNF_Mem_Server ) * FirstVNF_Mem ) * Min( ( Const + RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( ( ( Min( ( ( CS + RMSe ) + MUM ) ,MUC ) + CS ) - ( ( ( RMSe * CS ) * DS ) + ( ( MUM * ( Max( RCSe,MUC ) + MLU ) ) / ( ( Max( CS,MLU ) + ( RRSe * MUC ) ) - ( MUM + RMSe ) ) ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4149797570850202, "obj2": 0.37715831827461715}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MLU ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.42585543159793704}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( ( MLU - RRSe ),( DS + RRSe ) ) * ( ( ( ( ( Min( MLU ,MUR ) / RCSe ) / RMSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),( ( MUC - RCSe ) + MLU ) ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.18218496111081856}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13918179200484582}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( FirstVNF_RAM - MDR ),( ACS * ( ARS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5458437756822567}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Min( RCSe ,( MUR / MUM ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6376742490351233}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.04244775287679475}, {"determining": "( ( PN - MDR ) - ( ( ( ( ARS + ACS ) - ( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),DDR ) * Max( ( PN * FirstVNF_CPU_Server ),RRS ) ) ) - FirstVNF_CPU ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7053037519152944}, {"determining": "( ( ( ( Const * ( FirstVNF_RAM_Server / ACS ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( DDR ,( FirstVNF_CPU_Server + ( MRS - Min( MDR ,Max( MDR,CRS ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,DS ) - ( Max( CS,( CS / RMSe ) ) + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5124776680028623}, {"determining": "( ( PN - MDR ) - ( ( ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16841732235941562}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Max( Max( Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ),DDR ),( Const / FirstVNF_CPU_Server ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ARS + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.00913433089774995}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * ACS ) ) - RRS ) ),( ACS * ( ( FirstVNF_CPU_Server + ACS ) + DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - Max( ( RMSe + RRSe ),RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.6873725088870628}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Max( ( PN - MDR ),( Const / FirstVNF_CPU_Server ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ARS + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( RRSe * ( MUC + MUM ) ) ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.9210526315789473, "obj2": 0.02954807901345622}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,CS ),MUM ),CS ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.17813765182186234, "obj2": 0.6085124916678345}, {"determining": "( ( PN - MDR ) - ( ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - Max( Min( DS ,RRSe ),( ( RMSe + ( CS / RMSe ) ) - ( CS / ( MLU / CS ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.0940925499919304}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( RCSe + ( RRSe * ( CS * MUC ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( RRSe * MLU ) + MUC ) ) ) ) ) ,MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.04889630242712807}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) + ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( ( AMS / CRS ) * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - BR ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + Max( DS,RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUR ) * ( ( ( ( RRSe / RCSe ) / Max( MUC,MUR ) ) * RMSe ) / MUR ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.15289532465339498}, {"determining": "( ( BR - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - MDR ),( ACS * ( ARS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) - ( MDR / ( ACS - PN ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RRSe ) / MUC ) + MUR ),( Min( ( MUC - DS ) ,( Min( ( DS + RRSe ) ,( MUC * Min( DS ,RMSe ) ) ) * RCSe ) ) * RCSe ) ) - ( CS * RCSe ) )", "obj1": 0.24696356275303644, "obj2": 0.5378496507902275}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07133924980303814}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.39629314560730766}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( FirstVNF_Mem_Server + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,DDR ) ) ) ) )", "choosing": "( Max( Max( Max( Max( MUC,CS ),MUM ),CS ),Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( DS * RRSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.35466674929571584}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - ( ( Min( ARS ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) - ( ( ( ( PN + ( DDR + DDR ) ) / Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) * Min( ( FirstVNF_CPU_Server + Min( CRS ,Max( AMS,Max( Const,ACS ) ) ) ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - RCSe ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( Min( Min( RCSe ,MLU ) ,RCSe ) - ( MLU / RCSe ) ) ) * ( Min( Max( ( RRSe - Max( RMSe,MLU ) ),Min( MUC ,MLU ) ) ,Max( ( ( MUM - RCSe ) + RCSe ),RRSe ) ) / CS ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.02164226088532835}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.3805668016194332, "obj2": 0.4024452664912046}, {"determining": "( Min( PN ,( MRS / FirstVNF_RAM ) ) - ( ( ( ARS * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS + RMSe ) + Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5090438220243311}, {"determining": "( ( ( PN - MDR ) - ( ( FirstVNF_Mem * BR ) * ( ( ( Const * ( FirstVNF_Mem + ( CRS / FirstVNF_RAM_Server ) ) ) / AMS ) - CRS ) ) ) - ( ( ( ACS / FirstVNF_CPU_Server ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( ( MUC - MUC ) + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - Max( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ),( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11906147933345246}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5262193483212187}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "( ( PN - MDR ) - ( ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + RRS ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6308002464229157}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6538461538461539, "obj2": 0.156635189979463}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6299109310459429}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_Mem - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( CRS * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( Min( MUR ,MUR ),( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3073533884603382}, {"determining": "( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( DS + CS ) - ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1058607718401903}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "( ( ( PN - MDR ) - ( Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) * ( ( BR / AMS ) - CRS ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.20324214550936143}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( Min( MUC ,MUR ) - MUC ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.037033424039330944}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( MUR * DS ) ) / ( Max( DS,CS ) * Min( Max( RRSe,( MUM / Min( ( DS + RMSe ) ,( MLU * Max( MLU,CS ) ) ) ) ) ,( MLU * RMSe ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3820536654905254}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( ( PN - ( ( RRS * ACS ) - FirstVNF_CPU ) ) - ( Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) * ( ( BR / AMS ) - CRS ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( CS,Max( RMSe,RCSe ) ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7147309051518881}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_CPU_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( MDR + FirstVNF_RAM_Server ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MUR + RCSe ) + ( RCSe / RMSe ) ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Min( ( ( ( DS / RCSe ) / MUC ) + RRSe ) ,MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08643159091288244}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( ( RRS - BR ) / RRS ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( ( ( MUM * MLU ) - MUC ) - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),( CS / RCSe ) ) ) ) )", "obj1": 0.9838056680161943, "obj2": 0.004645252634694292}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8319838056680162, "obj2": 0.06542622550257989}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( MUM * MUM ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22483832910670357}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.0248757511873295}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - MDR ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( ( PN + ACS ) + ACS ) ,Max( Max( AMS,MRS ),MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) / MUC ) + MUR ) / ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RCSe * RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( ( ( ( DS / ( RMSe + ( MUR + RRSe ) ) ) / ( ( RRSe / Max( DS,MLU ) ) + MLU ) ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) + Min( MUC ,DS ) ) )", "obj1": 0.2834008097165992, "obj2": 0.5056482506509382}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( RRSe + ( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - Min( RMSe ,MUR ) ) ) / ( ( MUR + RCSe ) - MUR ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.031378140983726696}, {"determining": "( ( PN - MDR ) - ( ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),CRS ) ) - CRS ) ) ) * ( ( MDR / AMS ) - Max( ( ARS - FirstVNF_RAM_Server ),( ACS * ( ( ( MDR - FirstVNF_Mem_Server ) + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( RCSe + ( RRSe * ( CS * MUC ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( RRSe * MLU ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( CS + DS ) * Max( ( DS * Max( RCSe,( MUM / RRSe ) ) ),MUR ) ) ) )", "obj1": 0.7469635627530364, "obj2": 0.09827162339553122}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}], "31": [{"determining": "( ( PN - MDR ) - Const )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( ( MLU - DS ) + CS ) - ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( ( Const / MDR ) - ( BR + FirstVNF_CPU_Server ) ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - Const ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Min( ( BR + MDR ) ,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( MUC + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( Min( DS ,( CS + RMSe ) ) / RCSe ) / ( MUC - DS ) ) ) * Max( MUR,( ( Min( MUC ,MLU ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13773556756000419}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3143555473562194}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_CPU_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( MDR + FirstVNF_RAM_Server ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MUR + RCSe ) + ( RCSe / RMSe ) ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Min( ( ( ( DS / RCSe ) / MUC ) + RRSe ) ,MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08643159091288244}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6064069277803673}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.16244740657152537}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - Max( ( Const * BR ),( ARS / ( MRS + Max( ACS,Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( RMSe / RRSe ) ) * ( CS * DS ) ) ,Min( ( ( DS / RRSe ) / MLU ) ,( ( MUM * MUC ) - RMSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2886281482299784}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( RMSe / MLU ) / DS ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3359933921198886}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) + ( MDR / AMS ) ) ) - ( Max( ( Max( Min( FirstVNF_CPU ,( ( ARS - DDR ) * ( Const * FirstVNF_Mem ) ) ),ACS ) - Const ),PN ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( MUR,Max( RRSe,RMSe ) ) ,MLU ) - ( ( RRSe + Max( DS,Min( ( DS - MLU ) ,( ( MUM + RMSe ) / MUM ) ) ) ) / ( ( Max( Min( Min( RRSe ,MUM ) ,MUR ),( Min( MLU ,( MLU - RRSe ) ) + ( ( MUR * RRSe ) + Min( MUR ,MUR ) ) ) ) - MUM ) + MUM ) ) )", "obj1": 0.6720647773279352, "obj2": 0.14442276603810744}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( MRS * ( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( MDR ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RRSe * MUC ) / MUM ) / ( ( ( MLU / CS ) * RRSe ) / ( ( MUM / DS ) / ( MUM + RRSe ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.4574898785425101, "obj2": 0.3335493502686982}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * ( ( Min( ( CRS * FirstVNF_CPU_Server ) ,Const ) / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( FirstVNF_CPU_Server + Const ) / ACS ) ,DDR ) ) ) ) - ( PN - BR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / ( MLU + MUR ) ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,RRSe ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6810242358694175}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( RCSe + ( RRSe * ( CS * MUC ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( RRSe * MLU ) + MUC ) ) ) ) ) ,MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.04889630242712807}, {"determining": "( ( PN + MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( ( RRS + MDR ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUM ) - MUC ) + RRSe ),MUR ) ) * ( CS * CS ) ) )", "obj1": 0.4352226720647773, "obj2": 0.3510650392053652}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( Min( MUC ,MUR ) - MUC ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( ( DS / MLU ) / ( RCSe / MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.037033424039330944}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5262193483212187}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * ACS ) ) - RRS ) ),( ACS * ( ( FirstVNF_CPU_Server + ACS ) + DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - Max( ( RMSe + RRSe ),RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.6873725088870628}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.19230769230769232, "obj2": 0.5953158818183503}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( ( ( ( Const / AMS ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) + CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( MLU + DS ) ) - ( MUC * CS ) )", "obj1": 0.5020242914979757, "obj2": 0.2827550194124297}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.46806749574585627}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - ( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC + MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUR + MUC ) / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) + DS ) + MUR ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8319838056680162, "obj2": 0.06542622550257989}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( FirstVNF_RAM * ACS ) ) / Max( Max( ACS,( MDR - DDR ) ),RRS ) ) * ( ( ACS / AMS ) - ( ( ( Max( MDR,ACS ) + FirstVNF_Mem_Server ) * FirstVNF_Mem ) * Min( ( Const + RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( ( ( Min( ( ( CS + RMSe ) + MUM ) ,MUC ) + CS ) - ( ( ( RMSe * CS ) * DS ) + ( ( MUM * ( Max( RCSe,MUC ) + MLU ) ) / ( ( Max( CS,MLU ) + ( RRSe * MUC ) ) - ( MUM + RMSe ) ) ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4149797570850202, "obj2": 0.37715831827461715}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MLU ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.42585543159793704}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ( MDR / AMS ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( Const - ( Min( BR ,( FirstVNF_Mem * FirstVNF_RAM ) ) - Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) + Min( ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.1862348178137652, "obj2": 0.5966886927670912}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( PN - MDR ) - ( ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - Max( Min( DS ,RRSe ),( ( RMSe + ( CS / RMSe ) ) - ( CS / ( MLU / CS ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.0940925499919304}, {"determining": "( ( AMS * MRS ) - ( Max( FirstVNF_RAM,FirstVNF_Mem ) + AMS ) )", "choosing": "( ( Max( ( RMSe + MUM ),DS ) - Max( CS,Max( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ),RMSe ) ) ) - ( ( ( DS + RRSe ) + ( MLU - RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / Min( Max( DS,MUC ) ,( RRSe / RRSe ) ) ) * Max( ( ( MUC + Max( MUM,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.41573722786579637}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - ( FirstVNF_CPU - ( PN / ( CRS / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( ARS + ACS ) - ( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),DDR ) * Max( ( PN * FirstVNF_CPU_Server ),RRS ) ) ) - FirstVNF_CPU ) * ( ( MDR - AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( Min( MLU ,MLU ) - MUC ) + RRSe ) - ( MUC / CS ) )", "obj1": 0.08502024291497975, "obj2": 0.7057354279960001}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_Mem - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( CRS * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( Min( MUR ,MUR ),( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.4797570850202429, "obj2": 0.3073533884603382}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( Max( RMSe,( MUR + DS ) ) ,MLU ) - ( ( ( RRSe + ( Max( Max( ( DS / CS ),( RMSe + DS ) ),( ( MUR - RCSe ) - Min( RMSe ,MUR ) ) ) / ( ( MUR + RCSe ) - MUR ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + MUR ),MUR ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.031378140983726696}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( BR - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - MDR ),( ACS * ( ARS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) - ( MDR / ( ACS - PN ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RRSe ) / MUC ) + MUR ),( Min( ( MUC - DS ) ,( Min( ( DS + RRSe ) ,( MUC * Min( DS ,RMSe ) ) ) * RCSe ) ) * RCSe ) ) - ( CS * RCSe ) )", "obj1": 0.24696356275303644, "obj2": 0.5378496507902275}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3825910931174089, "obj2": 0.39629314560730766}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07133924980303814}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) + ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( ( AMS / CRS ) * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - BR ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + Max( DS,RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUR ) * ( ( ( ( RRSe / RCSe ) / Max( MUC,MUR ) ) * RMSe ) / MUR ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.15289532465339498}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( FirstVNF_Mem_Server + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,DDR ) ) ) ) )", "choosing": "( Max( Max( Max( Max( MUC,CS ),MUM ),CS ),Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( DS * RRSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.35466674929571584}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( DS * ( DS + MUM ) ) / Max( Max( ( MUM * ( ( MUM / MLU ) - MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.0693088534347505}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * RRS ) * ( ( Max( Max( Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ),DDR ),( Const / FirstVNF_CPU_Server ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ARS + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10269421198087775}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.3805668016194332, "obj2": 0.4024452664912046}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.04244775287679475}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014427764476853767}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.04386369555786114}, {"determining": "( ( ( MDR - PN ) - ( MDR + Max( ARS,ACS ) ) ) - ( ( ( ( ( ACS + Max( ( Const - DDR ),AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( MUR / RRSe ) + MUR ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( DS / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.48380566801619435, "obj2": 0.3048067352667266}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( PN - MDR ) - ( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( ( ( ( ( MUR + MUC ) / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7137686962200482}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6299109310459429}, {"determining": "( ( PN - MDR ) - ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( FirstVNF_CPU_Server + Const ) / ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe - DS ) - ( ( ( RRSe + RMSe ) * Max( Max( ( MUR / RMSe ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( Min( DS ,MLU ) / RCSe ) )", "obj1": 0.09919028340080972, "obj2": 0.7001702468289952}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( RCSe + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - ( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.708502024291498, "obj2": 0.12192991480795337}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( Max( ( PN - MDR ),( Const / FirstVNF_CPU_Server ) ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ARS + ( MRS - MDR ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - ( RRSe * ( MUC + MUM ) ) ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.9230769230769231, "obj2": 0.02882630019595172}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.44971587040703687}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ),MUR ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.02456806097755538}, {"determining": "( ( PN * ( MDR / AMS ) ) - ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ( Min( DDR ,FirstVNF_CPU_Server ) - ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4081268556260832}, {"determining": "( Min( PN ,( MRS / FirstVNF_RAM ) ) - ( ( ( ARS * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS + RMSe ) + Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5090438220243311}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( MUR * DS ) ) / ( Max( DS,CS ) * Min( Max( RRSe,( MUM / Min( ( DS + RMSe ) ,( MLU * Max( MLU,CS ) ) ) ) ) ,( MLU * RMSe ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3820536654905254}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / ( Min( CRS ,FirstVNF_CPU ) - Min( PN ,FirstVNF_RAM_Server ) ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( RMSe - Max( RRSe,( Max( MUC,RRSe ) * CS ) ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7029937430284078}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( MUM * MUM ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22483832910670357}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6538461538461539, "obj2": 0.156635189979463}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - MDR ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( ( PN + ACS ) + ACS ) ,Max( Max( AMS,MRS ),MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) / MUC ) + MUR ) / ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RCSe * RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( ( ( ( DS / ( RMSe + ( MUR + RRSe ) ) ) / ( ( RRSe / Max( DS,MLU ) ) + MLU ) ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) + Min( MUC ,DS ) ) )", "obj1": 0.2834008097165992, "obj2": 0.5056482506509382}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * ( ( FirstVNF_RAM * RRS ) / Const ) ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MLU * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.7246963562753036, "obj2": 0.11101294571341754}, {"determining": "( ( ( PN - MDR ) - ( ( FirstVNF_Mem * BR ) * ( ( ( Const * ( FirstVNF_Mem + ( CRS / FirstVNF_RAM_Server ) ) ) / AMS ) - CRS ) ) ) - ( ( ( ACS / FirstVNF_CPU_Server ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( RRSe - Max( Min( ( ( ( MUC - MUC ) + Min( ( MUR + MUC ) ,RCSe ) ) * MUC ) ,RRSe ),Max( Max( ( MUR - ( Min( CS ,MUR ) + ( DS * MUR ) ) ),RCSe ),MUM ) ) ) - Max( ( ( RMSe - RRSe ) + ( RRSe + RRSe ) ),( ( CS + RCSe ) * Max( ( Min( RCSe ,CS ) + RRSe ),MUR ) ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11906147933345246}], "32": [{"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( ( ( ( Const / AMS ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) + CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( MLU + DS ) ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MDR ) - Const )", "choosing": "( RMSe - ( ( Max( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ),MUR ) + ( Min( DS ,Max( ( MUC + RMSe ),( CS - DS ) ) ) + RRSe ) ) * ( ( ( MLU - DS ) + CS ) - ( ( ( ( ( MLU / RRSe ) + CS ) + CS ) * Min( DS ,MUR ) ) - ( Max( DS,MLU ) - ( MUM + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( FirstVNF_RAM / ( CRS - CRS ) ) - ( ( ( Max( ( ( Min( FirstVNF_Mem ,DDR ) * PN ) * MDR ),( Min( ARS ,CRS ) - FirstVNF_Mem ) ) / BR ) - AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( DS * Min( Min( Max( Min( ( RMSe - RMSe ) ,( ( MLU * MUC ) - ( MUC + MLU ) ) ),MUR ) ,MUM ) ,( RRSe + Min( Max( RCSe,RRSe ) ,( MUR - ( MUM * MLU ) ) ) ) ) ) - Max( ( ( RCSe / RRSe ) / MUM ),RRSe ) )", "obj1": 0.32793522267206476, "obj2": 0.4662666047793959}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.5913760265896184}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( PN - Const ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Min( ( BR + MDR ) ,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( MUC + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( Min( DS ,( CS + RMSe ) ) / RCSe ) / ( MUC - DS ) ) ) * Max( MUR,( ( Min( MUC ,MLU ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13773556756000419}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6064069277803673}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( ( RRS - BR ) / RRS ) ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( RRSe / MLU ),DS ) ) + DS ) + Min( MUC ,DS ) ) )", "obj1": 0.979757085020243, "obj2": 0.004863762738466422}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.3143555473562194}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( RMSe / MLU ) / DS ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3359933921198886}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) + ( MDR / AMS ) ) ) - ( Max( ( Max( Min( FirstVNF_CPU ,( ( ARS - DDR ) * ( Const * FirstVNF_Mem ) ) ),ACS ) - Const ),PN ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( MUR,Max( RRSe,RMSe ) ) ,MLU ) - ( ( RRSe + Max( DS,Min( ( DS - MLU ) ,( ( MUM + RMSe ) / MUM ) ) ) ) / ( ( Max( Min( Min( RRSe ,MUM ) ,MUR ),( Min( MLU ,( MLU - RRSe ) ) + ( ( MUR * RRSe ) + Min( MUR ,MUR ) ) ) ) - MUM ) + MUM ) ) )", "obj1": 0.6720647773279352, "obj2": 0.14442276603810744}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( MRS * ( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( MDR ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RRSe * MUC ) / MUM ) / ( ( ( MLU / CS ) * RRSe ) / ( ( MUM / DS ) / ( MUM + RRSe ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.4574898785425101, "obj2": 0.3335493502686982}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( PN + MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ACS - ( PN - ( ( RRS + MDR ) + ( MRS / FirstVNF_RAM_Server ) ) ) ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUM ) - MUC ) + RRSe ),MUR ) ) * ( CS * CS ) ) )", "obj1": 0.4352226720647773, "obj2": 0.3510650392053652}, {"determining": "( ( AMS * MRS ) - ( Max( FirstVNF_RAM,FirstVNF_Mem ) + AMS ) )", "choosing": "( ( Max( ( RMSe + MUM ),DS ) - Max( CS,Max( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ),RMSe ) ) ) - ( ( ( DS + RRSe ) + ( MLU - RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / Min( Max( DS,MUC ) ,( RRSe / RRSe ) ) ) * Max( ( ( MUC + Max( MUM,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.36639676113360325, "obj2": 0.41573722786579637}, {"determining": "( Min( PN ,( MRS / FirstVNF_RAM ) ) - ( ( ( ARS * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS + RMSe ) + Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5090438220243311}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) - CRS ) ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( RCSe + ( RRSe * ( CS * MUC ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( RRSe * MLU ) + MUC ) ) ) ) ) ,MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.04889630242712807}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08423503288617452}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) - Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,( RMSe / RCSe ) ) * ( ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4939271255060729, "obj2": 0.27936380870954525}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.46806749574585627}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.16244740657152537}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.02647377408961982}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( FirstVNF_RAM * ACS ) ) / Max( Max( ACS,( MDR - DDR ) ),RRS ) ) * ( ( ACS / AMS ) - ( ( ( Max( MDR,ACS ) + FirstVNF_Mem_Server ) * FirstVNF_Mem ) * Min( ( Const + RRS ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - ( RCSe * RRSe ) ) - ( ( ( Min( ( ( CS + RMSe ) + MUM ) ,MUC ) + CS ) - ( ( ( RMSe * CS ) * DS ) + ( ( MUM * ( Max( RCSe,MUC ) + MLU ) ) / ( ( Max( CS,MLU ) + ( RRSe * MUC ) ) - ( MUM + RMSe ) ) ) ) ) + Min( MUR ,RCSe ) ) )", "obj1": 0.4149797570850202, "obj2": 0.37715831827461715}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.1834930782979614}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) + ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( ( AMS / CRS ) * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - BR ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + Max( DS,RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUR ) * ( ( ( ( RRSe / RCSe ) / Max( MUC,MUR ) ) * RMSe ) / MUR ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.15289532465339498}, {"determining": "( ( PN - ( FirstVNF_CPU - Max( AMS,ARS ) ) ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6790245607046198}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - Max( ( Const * BR ),( ARS / ( MRS + Max( ACS,Max( FirstVNF_CPU_Server,AMS ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RCSe ) - ( RMSe / RRSe ) ) * ( CS * DS ) ) ,Min( ( ( DS / RRSe ) / MLU ) ,( ( MUM * MUC ) - RMSe ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2886281482299784}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( MUM * MUM ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22483832910670357}, {"determining": "( ( BR - RRS ) - Max( RRS,( ARS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( ( RRSe / RCSe ) ,( ( ( Max( RRSe,MUC ) / ( CS * MUR ) ) + Max( RRSe,( MUC / DS ) ) ) - MUC ) ) + CS ) - Min( MUC ,RMSe ) ) - Max( MLU,DS ) )", "obj1": 0.402834008097166, "obj2": 0.38490869830094915}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - ( ( AMS - MDR ) - DDR ) ) ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.40792212456842347}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( ( ARS - Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ( ARS - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( ARS,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( Max( MUC,Max( MUR,MLU ) ) + ( ( MUM / ( RMSe - MUC ) ) / ( MUC / MLU ) ) ) / ( ( MUM * DS ) + Max( ( MLU / ( Max( ( ( RCSe / MLU ) * MUR ),RRSe ) - MUR ) ),Max( ( MUM * ( ( Min( DS ,MLU ) * MLU ) / MLU ) ),MUC ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.01439849119324486}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6299109310459429}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ),MUR ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.02456806097755538}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08634617491745682}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( ( ( ( ( ACS + Min( ( Const - DDR ) ,AMS ) ) - DDR ) * AMS ) * Max( ( Max( MRS,( ACS * RRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.3025676493419114}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Max( MRS,DDR ) ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ( Min( BR ,( FirstVNF_Mem * ACS ) ) - RRS ) ),( ACS * ( ( FirstVNF_CPU_Server + ACS ) + DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - Max( ( RMSe + RRSe ),RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.6873725088870628}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MLU ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0006383610977372415}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( FirstVNF_Mem_Server + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,DDR ) ) ) ) )", "choosing": "( Max( Max( Max( Max( MUC,CS ),MUM ),CS ),Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( DS * RRSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.35466674929571584}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( Const / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MLU ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.819838056680162, "obj2": 0.06911553216108342}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11869404306221157}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.3805668016194332, "obj2": 0.4024452664912046}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ),MUR ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022832007850580625}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.8866396761133604, "obj2": 0.040912521583933756}, {"determining": "( ( PN - MDR ) - ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( FirstVNF_CPU_Server + Const ) / ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( RCSe - DS ) - ( ( ( RRSe + RMSe ) * Max( Max( ( MUR / RMSe ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( Min( DS ,MLU ) / RCSe ) )", "obj1": 0.09919028340080972, "obj2": 0.7001702468289952}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07072687589362155}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.30938421730479304}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * ( ( FirstVNF_RAM * RRS ) / Const ) ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MLU * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.7246963562753036, "obj2": 0.11101294571341754}, {"determining": "( ( BR - MDR ) - ( ( ( ACS * FirstVNF_RAM_Server ) * Max( ( Max( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - MDR ),( ACS * ( ARS + FirstVNF_RAM ) ) ) / Const ),( Const * MDR ) ) ) * ( Max( Min( FirstVNF_RAM_Server ,( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) - ( MDR / ( ACS - PN ) ) ) ) )", "choosing": "( Max( ( ( ( DS / RRSe ) / MUC ) + MUR ),( Min( ( MUC - DS ) ,( Min( ( DS + RRSe ) ,( MUC * Min( DS ,RMSe ) ) ) * RCSe ) ) * RCSe ) ) - ( CS * RCSe ) )", "obj1": 0.24696356275303644, "obj2": 0.5378496507902275}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( MUR * DS ) ) / ( Max( DS,CS ) * Min( Max( RRSe,( MUM / Min( ( DS + RMSe ) ,( MLU * Max( MLU,CS ) ) ) ) ) ,( MLU * RMSe ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3820536654905254}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MLU * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11285955024422907}, {"determining": "( ( PN - MDR ) - ( ( PN - MDR ) - ( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * ( ( ( ( ( MUR + MUC ) / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) + RRSe ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7137686962200482}, {"determining": "( ( PN - MDR ) - Min( AMS ,ACS ) )", "choosing": "( ( ( Min( MLU ,MLU ) - MUC ) + RRSe ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( RCSe / DS ) + MUC ) + ( ( MLU + MUM ) / MLU ) ),MUR ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10263864778556905}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6538461538461539, "obj2": 0.156635189979463}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04542056915200542}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( CS - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.2388663967611336, "obj2": 0.5382970445080246}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - MDR ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( ( PN + ACS ) + ACS ) ,Max( Max( AMS,MRS ),MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) / MUC ) + MUR ) / ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RCSe * RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( ( ( ( DS / ( RMSe + ( MUR + RRSe ) ) ) / ( ( RRSe / Max( DS,MLU ) ) + MLU ) ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) + Min( MUC ,DS ) ) )", "obj1": 0.2834008097165992, "obj2": 0.5056482506509382}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07133924980303814}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( ( RRSe / MUC ) - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.7469635627530364, "obj2": 0.09788242319912249}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( MUC + MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUC + MUC ) / MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.6833847843659848}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.24898785425101214, "obj2": 0.528240358566855}], "33": [{"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUC + MUC ) / MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( ( ( ( Const / AMS ) + FirstVNF_CPU ) + FirstVNF_RAM_Server ) + CRS ) ) - CRS ) ) )", "choosing": "( ( ( ( Max( RMSe,MLU ) + DS ) + MUR ) - ( MLU + DS ) ) - ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( AMS + ACS ) - ( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),DDR ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( DDR - ( Const * DDR ) ) * AMS ) - Max( FirstVNF_CPU,AMS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) + ( DS + RRSe ) ) / ( ( ( ( ( RRSe / RCSe ) / ( DS - MUM ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.4630954918978286}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - Const ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Min( ( BR + MDR ) ,FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( ( DS / RCSe ) / MUC ) - ( ( ( RRSe - MLU ) + ( MUC + RRSe ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + ( ( Min( DS ,( CS + RMSe ) ) / RCSe ) / ( MUC - DS ) ) ) * Max( MUR,( ( Min( MUC ,MLU ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13773556756000419}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( CS - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9089068825910931, "obj2": 0.03929821405024841}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ACS - BR ) ,DDR ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.24898785425101214, "obj2": 0.528240358566855}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4008097165991903, "obj2": 0.38461807460508085}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.02647377408961982}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS + Min( ( Const - DDR ) ,AMS ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( CS,Max( RMSe,RCSe ) ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7064035166638748}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.3805668016194332, "obj2": 0.4024452664912046}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( Min( PN ,( MRS / FirstVNF_RAM ) ) - ( ( ( ARS * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS + RMSe ) + Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5090438220243311}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( MRS * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( AMS / FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) / MUM ) ) ) / MLU ) - ( RMSe - MLU ) )", "obj1": 0.4797570850202429, "obj2": 0.3069519223174071}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( ( PN - MDR ) - Min( AMS ,ACS ) )", "choosing": "( ( ( Min( MLU ,MLU ) - MUC ) + RRSe ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( RCSe / DS ) + MUC ) + ( ( MLU + MUM ) / MLU ) ),MUR ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10263864778556905}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / MDR ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5377701776419955}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( DS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06694461201037467}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) + ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( ( AMS / CRS ) * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - BR ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + Max( DS,RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUR ) * ( ( ( ( RRSe / RCSe ) / Max( MUC,MUR ) ) * RMSe ) / MUR ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.15289532465339498}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( MDR - FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( Max( MUC,CS ),MUM ),CS ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( ( MUM + MUR ),Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RCSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + DS ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.34681491793660635}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( DDR * Const ) + RRS ) ,( ( AMS + MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( ( ( ( ( RRSe + CS ) * ( ( MUC / MLU ) - MUR ) ) * Max( MUR,RCSe ) ) * CS ) ,MLU ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.16598728833167914}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.317028592464497}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( ( RRSe / MUC ) - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.7469635627530364, "obj2": 0.09788242319912249}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( MUM * MUM ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22483832910670357}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6064069277803673}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6299109310459429}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ),MUR ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.02456806097755538}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( MRS * ( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( AMS / MDR ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( MDR ,CRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( ( RRSe * MUC ) / MUM ) / ( ( ( MLU / CS ) * RRSe ) / ( ( MUM / DS ) / ( MUM + RRSe ) ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( RMSe ,RMSe ) )", "obj1": 0.4574898785425101, "obj2": 0.3335493502686982}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3687596745665494}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( AMS / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.8744939271255061, "obj2": 0.04381664735787331}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,MUM ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.8866396761133604, "obj2": 0.040912521583933756}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) + ( MDR / AMS ) ) ) - ( Max( ( Max( Min( FirstVNF_CPU ,( ( ARS - DDR ) * ( Const * FirstVNF_Mem ) ) ),ACS ) - Const ),PN ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( MUR,Max( RRSe,RMSe ) ) ,MLU ) - ( ( RRSe + Max( DS,Min( ( DS - MLU ) ,( ( MUM + RMSe ) / MUM ) ) ) ) / ( ( Max( Min( Min( RRSe ,MUM ) ,MUR ),( Min( MLU ,( MLU - RRSe ) ) + ( ( MUR * RRSe ) + Min( MUR ,MUR ) ) ) ) - MUM ) + MUM ) ) )", "obj1": 0.6720647773279352, "obj2": 0.14442276603810744}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( RMSe / MLU ) / DS ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3359933921198886}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ),MUR ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.022832007850580625}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.4665193626115695}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * FirstVNF_Mem_Server ) * ( ( MDR / AMS ) - ( ( ACS * Const ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) / MUM ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.6214574898785425, "obj2": 0.1813133154642888}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6538461538461539, "obj2": 0.156635189979463}, {"determining": "( ( PN - ( FirstVNF_CPU - Max( AMS,ARS ) ) ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( Max( Max( RCSe,RCSe ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6760310589976295}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.16244740657152537}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ( MDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) / Const ) * ( ( MDR / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( ( ( AMS - PN ) + FirstVNF_Mem_Server ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),( MUM + CS ) ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / MUC ) - ( MUC - DS ) ) ,MLU ) )", "obj1": 0.4291497975708502, "obj2": 0.35614243696934333}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( PN - MDR ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS / MUM ) / ( RCSe / MUR ) ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08634617491745682}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( Max( MUC,Max( MUR,MLU ) ) * ( ( MUM / ( RMSe - MUC ) ) / ( MUC / MLU ) ) ) / ( ( MUM * DS ) + Max( ( MLU / RMSe ),Max( ( MUM * ( ( Min( DS ,MLU ) * MLU ) / MLU ) ),MUC ) ) ) )", "obj1": 0.9696356275303644, "obj2": 0.012947493333902953}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3687596745665494}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.278421433104045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2797254559862909}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.14430041380647693}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11869404306221157}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( MDR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( MDR / AMS ) ) * AMS ) - Max( FirstVNF_CPU,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) / ( FirstVNF_Mem_Server / Max( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ),Max( DDR,DDR ) ) ) ) )", "choosing": "( ( Min( ( ( DS + Max( MUC,Min( MUM ,( MLU + MUM ) ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MLU ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,RMSe ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8178137651821862, "obj2": 0.06991021346019614}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( CRS + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( CS - MUM ) / ( CS / MUM ) ) ) / MLU ) - ( MLU + ( ( ( RRSe + ( ( RMSe / MUC ) + DS ) ) + MUM ) - RCSe ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6199414242446251}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08423503288617452}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - MDR ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( ( PN + ACS ) + ACS ) ,Max( Max( AMS,MRS ),MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) / MUC ) + MUR ) / ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RCSe * RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( ( ( ( DS / ( RMSe + ( MUR + RRSe ) ) ) / ( ( RRSe / Max( DS,MLU ) ) + MLU ) ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) + Min( MUC ,DS ) ) )", "obj1": 0.2834008097165992, "obj2": 0.5056482506509382}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07072687589362155}, {"determining": "( ( PN - MDR ) - ( ( ( Const * MDR ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) - BR ) ,DDR ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,DS ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.9655870445344129, "obj2": 0.014166993898176663}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM * Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + RRSe ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07133924980303814}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ( PN - MDR ) ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,( RCSe / RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.1123593427962468}], "34": [{"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) * Min( ( FirstVNF_Mem_Server * ( Const + FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,MLU ),( DS - CS ) ),MUR ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC + MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUC + MUC ) / MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( ( FirstVNF_CPU - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( Const - Max( ARS,CRS ) ) ) ) * MDR ) ) ) - ( ( ( ACS / FirstVNF_CPU_Server ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) * ( ( Max( MUR,MLU ) + ( ( MUR * CS ) * Min( RCSe ,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44949565404685465}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUC ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.31111824633241236}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( AMS + ACS ) - ( ( ( MDR * Const ) + AMS ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( DDR - Min( Const ,DDR ) ) * AMS ) - Max( FirstVNF_CPU,AMS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.37897298364646304}, {"determining": "( ( CRS / FirstVNF_RAM ) - ( ( ( ( ( ACS + Min( ( DDR - CRS ) ,( MRS - MDR ) ) ) - DDR ) * ( FirstVNF_Mem_Server - ACS ) ) * Max( ( Max( ( RRS - Min( FirstVNF_RAM ,ARS ) ),Min( ( FirstVNF_RAM - ARS ) ,DDR ) ) / ACS ),Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUR + MUM ) ) - ( ( ( ( ( ( ( MUR + MUC ) / CS ) + Max( MUC,Max( MUC,RRSe ) ) ) - MUC ) + RRSe ) + ( RRSe + DS ) ) * ( ( Max( ( ( RRSe / RCSe ) / RRSe ),RMSe ) / MUR ) * Max( ( MUM - ( ( ( MLU - RCSe ) / DS ) - ( Max( MUM,MUC ) - ( MUC + CS ) ) ) ),( ( Min( MUC ,( DS * RMSe ) ) - MUC ) + RRSe ) ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5826586220368805}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,Max( FirstVNF_RAM,ACS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_RAM_Server - ARS ) - ( ACS * Min( ( PN - MDR ) ,( FirstVNF_RAM_Server - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( RCSe - ( ( RMSe + MLU ) / RRSe ) ),Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( MUC / ( DS / RCSe ) ) ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01231861271152547}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) - Min( MUC ,DS ) ) )", "obj1": 0.979757085020243, "obj2": 0.006514398836766848}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS + Min( ( Const - DDR ) ,AMS ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( CS,Max( RMSe,RCSe ) ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7064035166638748}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( RMSe / MLU ) / DS ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3340938464242415}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) - ( MDR / ( ARS - ( ( DDR / FirstVNF_RAM_Server ) + AMS ) ) ) )", "choosing": "( ( MLU - Max( Max( Max( ( RRSe / MUM ),( ( MUC / MUC ) - ( Max( RMSe,CS ) * ( RMSe / MLU ) ) ) ),MUR ),Max( RMSe,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RCSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + ( ( RRSe / RCSe ) / RRSe ) ) ) + ( ( Min( RCSe ,MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5587044534412956, "obj2": 0.23405881497268588}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * FirstVNF_Mem_Server ) * ( ( MDR / AMS ) - ( ( ACS * Const ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( MUM,CS ) / MUM ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.6214574898785425, "obj2": 0.1813133154642888}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + ( ACS / CRS ) ) - DDR ) * ( PN + ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( RMSe * DS ) - ( ( ( MUC / MUM ) + CS ) - ( MUC - DS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.30518006626311994}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / MDR ) ) ) ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + RRSe ),MUR ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.13549360961313286}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( Min( ( FirstVNF_CPU_Server + BR ) ,DDR ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.40216236293463087}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( MDR / Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( DDR - AMS ) + ACS ) ,Min( ( Const * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,MLU ) )", "obj1": 0.4757085020242915, "obj2": 0.3086597399305891}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,( MRS + ACS ) ) ) - CRS ) ) ) ) - ( PN - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - MUM ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03358145207887133}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( MUM * MUM ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - DS ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22483832910670357}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6064069277803673}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11869404306221157}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1363304582777618}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( PN - MDR ) * CRS ) ) * AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( Min( Max( Max( ( Max( DS,CS ) / MLU ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS / MUM ) / ( RCSe / MUR ) ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.08634617491745682}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3687596745665494}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) - MDR ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * Max( ( MRS / Const ),( Const * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( ( PN + ACS ) + ACS ) ,Max( Max( AMS,MRS ),MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) / MUC ) + MUR ) / ( Min( ( Min( DS ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( ( ( ( RCSe * RCSe ) / RRSe ) * RMSe ) - DS ) ) * RCSe ) ) - ( ( ( ( ( DS / ( RMSe + ( MUR + RRSe ) ) ) / ( ( RRSe / Max( DS,MLU ) ) + MLU ) ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) + Min( MUC ,DS ) ) )", "obj1": 0.2834008097165992, "obj2": 0.5056482506509382}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( Min( Max( Max( ( ( RMSe / MLU ) / DS ),Max( ( MUM * ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( MUM / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3359933921198886}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( PN - MDR ) - ( ( ( Min( ( ( ( AMS / Const ) / CRS ) - ACS ) ,( ( ( CRS - CRS ) - Const ) + AMS ) ) * ( PN * FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem - FirstVNF_Mem ) ) * ( ( MDR / AMS ) - Min( ( MRS - ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) ,Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Min( CS ,MLU ) + ( ( ( Max( RRSe,RCSe ) * ( DS - RCSe ) ) * ( ( MUR * DS ) - RMSe ) ) + RCSe ) ) ) ) - Max( ( DS * ( ( MUM + ( MUM * MUC ) ) * RCSe ) ),MUC ) )", "obj1": 0.7611336032388664, "obj2": 0.09271982113214361}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( Max( RRS,DDR ),( Max( MRS,( RRS + FirstVNF_Mem_Server ) ) / Const ) ) ) * PN ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( ( MUC - RRSe ) + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / ( MUC - DS ) ) ) ) - ( ( CS - ( ( ( MUC - Min( MUC ,MLU ) ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9008097165991903, "obj2": 0.0368738428315066}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.02647377408961982}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,Max( MLU,MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6218748418590032}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.152717260047929}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( ACS + FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ),MUR ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.02456806097755538}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( DDR * Const ) + RRS ) ,( ( AMS + MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( ( ( ( ( RRSe + CS ) * ( ( MUC / MLU ) - MUR ) ) * Max( MUR,RCSe ) ) * CS ) ,MLU ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.16598728833167914}, {"determining": "( ( ( FirstVNF_CPU_Server - MDR ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,AMS ) ) * MDR ) + ( MDR / AMS ) ) ) - ( Max( ( Max( Min( FirstVNF_CPU ,( ( ARS - DDR ) * ( Const * FirstVNF_Mem ) ) ),ACS ) - Const ),PN ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( MUR,Max( RRSe,RMSe ) ) ,MLU ) - ( ( RRSe + Max( DS,Min( ( DS - MLU ) ,( ( MUM + RMSe ) / MUM ) ) ) ) / ( ( Max( Min( Min( RRSe ,MUM ) ,MUR ),( Min( MLU ,( MLU - RRSe ) ) + ( ( MUR * RRSe ) + Min( MUR ,MUR ) ) ) ) - MUM ) + MUM ) ) )", "obj1": 0.6720647773279352, "obj2": 0.14442276603810744}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.06128703127294752}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6351850990434311}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.715741788446943}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.278421433104045}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( MDR - FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( Max( MUC,CS ),MUM ),CS ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RMSe / MUC ) + Max( ( MUM + MUR ),Max( MUC,RRSe ) ) ) - RCSe ) + CS ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RCSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + DS ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.34681491793660635}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( ACS / FirstVNF_RAM ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,MUR ) ) ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( RCSe ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6435846353031289}, {"determining": "( ( PN - MDR ) - ( ( ( ACS * ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ) ) * Max( ( Max( MRS,( ACS * FirstVNF_Mem_Server ) ) / Const ),( Const * ( ( FirstVNF_RAM_Server - DDR ) * FirstVNF_CPU_Server ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ( Max( ACS,FirstVNF_RAM ) - RRS ) ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.3765182186234818, "obj2": 0.4032982662116705}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( ACS / ( FirstVNF_RAM * RRS ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( Max( ACS,( FirstVNF_RAM / AMS ) ) / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( Min( DS ,RRSe ) - ( ( RMSe + CS ) - ( CS / ( DS + Min( MUM ,CS ) ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.0034445381941948993}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6866266722959674}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ARS * FirstVNF_Mem_Server ) ) ) / Const ) * ( ( ( BR + MDR ) / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( Max( DDR,DDR ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( RMSe * ( RCSe + RCSe ) ),( MLU * Max( MUM,MUC ) ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) + RCSe ) - ( DS - ( RRSe + DS ) ) ) ,MLU ) )", "obj1": 0.4291497975708502, "obj2": 0.3559679934981071}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08423503288617452}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.4665193626115695}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) / CRS ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( CS * Max( RMSe,RCSe ) ) ) - ( ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( ( DS - RMSe ) * RRSe ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) * ( ( ( ( ( RRSe / ( CS * MUR ) ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),RRSe ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.1433985853103298}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3687596745665494}, {"determining": "( ( PN - ( FirstVNF_CPU - Max( AMS,ARS ) ) ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ACS * Min( ( FirstVNF_CPU_Server + ( ACS * FirstVNF_RAM ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( Max( RCSe,RCSe ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6787839912276761}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) * ( ( MDR / AMS ) - Min( CRS ,CRS ) ) ) )", "choosing": "( ( RRSe + Min( ( RCSe * ( ( DS - Max( ( RCSe / MUM ),MLU ) ) - ( DS + MUM ) ) ) ,( RRSe - RCSe ) ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.35384628577291743}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( CRS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * MLU ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.7408906882591093, "obj2": 0.10005582823231178}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( AMS / Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / Const ) ) ) - CRS ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / RCSe ) ) * RMSe ) - ( MUR + RMSe ) ) / ( Max( DS,MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.05144536382065995}], "35": [{"determining": "( ( ACS * Min( ( FirstVNF_CPU_Server + ( ACS * FirstVNF_RAM ) ) ,DDR ) ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) * Min( ( FirstVNF_Mem_Server * ( Const + FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,MLU ),( DS - CS ) ),MUR ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5821937996903558}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( MUR + MUM ) - ( CS / RRSe ) )", "obj1": 0.7995951417004049, "obj2": 0.07630236178159451}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( DDR * Const ) + RRS ) ,( ( AMS + MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( ( ( ( ( RRSe + CS ) * ( ( MUC / MLU ) - MUR ) ) * Max( MUR,RCSe ) ) * CS ) ,MLU ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.16598728833167914}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) * ( ( MDR / AMS ) - Min( CRS ,CRS ) ) ) )", "choosing": "( ( RRSe + Min( ( RCSe * ( ( DS - Max( ( RCSe / MUM ),MLU ) ) - ( DS + MUM ) ) ) ,( RRSe - RCSe ) ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.35384628577291743}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( AMS + ACS ) - ( ( ( MDR * Const ) + AMS ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) - FirstVNF_CPU ) * FirstVNF_Mem ) * ( FirstVNF_Mem + ( ( ( DDR - Min( Const ,DDR ) ) * AMS ) - Max( FirstVNF_CPU,AMS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.39473684210526316, "obj2": 0.37897298364646304}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.152717260047929}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( MDR - ARS ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server / ( ARS - FirstVNF_RAM ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU * Max( ( ( Min( MUC ,RCSe ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( Min( DS ,MLU ) / ( Max( DS,RCSe ) + RCSe ) ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - Min( MUC ,MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.39271255060728744, "obj2": 0.39057774704236}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.278421433104045}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUC ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.31111824633241236}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,Max( FirstVNF_RAM,ACS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_RAM_Server - ARS ) - ( ACS * Min( ( PN - MDR ) ,( FirstVNF_RAM_Server - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( RCSe - ( ( RMSe + MLU ) / RRSe ) ),Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( MUC / ( DS / RCSe ) ) ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01231861271152547}, {"determining": "( ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) - Min( MUC ,DS ) ) )", "obj1": 0.979757085020243, "obj2": 0.006514398836766848}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( CS / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.04466155878212496}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.02647377408961982}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.06128703127294752}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) / MUR ) ) ) - ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.05058363547795606}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( Min( ( FirstVNF_CPU_Server + BR ) ,DDR ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3805668016194332, "obj2": 0.40216236293463087}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6064069277803673}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3687596745665494}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5031015492322529}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.44534412955465585, "obj2": 0.318778883945544}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,( MRS + ACS ) ) ) - CRS ) ) ) ) - ( PN - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - MUM ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03358145207887133}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.06128703127294752}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1363304582777618}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11869404306221157}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) * CRS ) * ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( RRSe,( MUC / ( MUM / CS ) ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11217843583781757}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( ( FirstVNF_CPU - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( Const - Max( ARS,CRS ) ) ) ) * MDR ) ) ) - ( ( ( ACS / FirstVNF_CPU_Server ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) * ( ( Max( MUR,MLU ) + ( ( MUR * CS ) * Min( RCSe ,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44949565404685465}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( ACS / FirstVNF_RAM ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,MUR ) ) ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( RCSe ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6435846353031289}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / MDR ) ) ) ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( RMSe + RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + RRSe ),MUR ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.1348238567088257}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( ACS / ( FirstVNF_RAM * RRS ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( Max( ACS,( FirstVNF_RAM / AMS ) ) / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( Min( DS ,RRSe ) - ( ( RMSe + CS ) - ( CS / ( DS + Min( MUM ,CS ) ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.0034445381941948993}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ARS * FirstVNF_Mem_Server ) ) ) / Const ) * ( ( ( BR + MDR ) / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( Max( DDR,DDR ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( RMSe * ( RCSe + RCSe ) ),( MLU * Max( MUM,MUC ) ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) + RCSe ) - ( DS - ( RRSe + DS ) ) ) ,MLU ) )", "obj1": 0.4291497975708502, "obj2": 0.3559679934981071}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( Max( FirstVNF_RAM,FirstVNF_RAM ) + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - Min( Min( ACS ,( FirstVNF_RAM_Server / Const ) ) ,Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - ( MUC + MUM ) ) - ( ( ( ( ( ( RMSe - MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( ( ( MUR - DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6273823915976886}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.6659919028340081, "obj2": 0.14938692006230195}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) / CRS ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( CS * Max( RMSe,RCSe ) ) ) - ( ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( ( DS - RMSe ) * RRSe ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) * ( ( ( ( ( RRSe / ( CS * MUR ) ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),RRSe ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.1433985853103298}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( ( MUC * MUM ) / MUM ) - MUC ) + RRSe ),MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.7307692307692307, "obj2": 0.10784684509897052}, {"determining": "Min( ( ( ( PN - MDR ) - ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / Const ) * CRS ) ) * Max( ( Max( MRS,( RRS * ACS ) ) / Const ),Const ) ) - ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) ) * ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + DS ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.7469635627530364, "obj2": 0.097946721617354}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUC + MUC ) / MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.18119262145461615}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,Max( MLU,MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6218748418590032}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Min( ( FirstVNF_CPU / FirstVNF_RAM ) ,FirstVNF_RAM ) ) ) ) * FirstVNF_Mem ) * ( BR * CRS ) ) )", "choosing": "( ( ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( Min( Min( MUR ,RCSe ) ,( MUM - DS ) ) - CS ) ) ) - MUR ) - ( ( CS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( RRSe * Max( ( MLU / MUM ),DS ) ) + DS ) + ( CS - DS ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3687596745665494}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,BR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + ( MUM * MLU ) ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7550607287449392, "obj2": 0.09415752678731608}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) ) * ( Max( MRS,( ACS * ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) / ( Max( ( ARS * RRS ),RRS ) - FirstVNF_Mem ) ) ) * ( BR / CRS ) ) )", "choosing": "( ( MUC - Max( RMSe,RMSe ) ) - ( ( ( RRSe * Max( ( ( RCSe + MUC ) / CS ),DS ) ) + DS ) + ( MUC - DS ) ) )", "obj1": 0.9352226720647774, "obj2": 0.02598057487967615}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7813765182186235, "obj2": 0.08343290302778697}, {"determining": "( ( PN - MDR ) - ( MDR - ARS ) )", "choosing": "( ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.7104356759662395}, {"determining": "( ( PN - MDR ) - ( Const / ( ( FirstVNF_Mem_Server / Min( ( DDR + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUR ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MUR ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( ( Max( MLU,MUR ) - MLU ) - MUC ) + ( Max( MUC,MUR ) * Min( MLU ,Min( DS ,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.020417556387724307}, {"determining": "( ( PN - FirstVNF_RAM ) - ( CRS - AMS ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,MUR ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( Max( ( MUC * MUM ),( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04126707229587477}, {"determining": "( ( PN - MDR ) - ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( MRS - ( ( AMS - MDR ) - DDR ) ) ) ,DDR ) ) ) )", "choosing": "( ( ( RRSe + Max( ( MLU / RMSe ),Max( ( MUM * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) - ( ( Max( MUR,CS ) + RCSe ) + Min( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ,( MUC - DS ) ) ) ) - ( ( RRSe / MUC ) + ( DS + RRSe ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4091009032895626}], "36": [{"determining": "( ( ( BR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( MDR * FirstVNF_CPU ) ) * ( ( MDR * ARS ) - Max( ( ACS * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,RRSe ) ) ),RCSe ) + ( MUC - MUR ) ) + ( DS + RRSe ) ) * ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( ( FirstVNF_CPU_Server + ( ACS * FirstVNF_RAM ) ) ,DDR ) ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( MDR / AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.37044534412955465, "obj2": 0.39899702880009325}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.36135246860927783}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) * ( ( MDR / AMS ) - Min( CRS ,CRS ) ) ) )", "choosing": "( ( RRSe + Min( ( RCSe * ( ( DS - Max( ( RCSe / MUM ),MLU ) ) - ( DS + MUM ) ) ) ,( RRSe - RCSe ) ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.35384628577291743}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS * FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06790866909798256}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,( MRS + ACS ) ) ) - CRS ) ) ) ) - ( PN - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - MUM ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03358145207887133}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5821937996903558}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( MUR + MUM ) - ( CS / RRSe ) )", "obj1": 0.7995951417004049, "obj2": 0.07630236178159451}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.278421433104045}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.659919028340081, "obj2": 0.152717260047929}, {"determining": "( ( PN - FirstVNF_RAM ) - ( CRS - AMS ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,MUR ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( Max( ( MUC * MUM ),( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04126707229587477}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.02647377408961982}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( Max( RRSe,CS ),MUM ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11827529888339253}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.16457844092132884}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) / CRS ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( CS * Max( RMSe,RCSe ) ) ) - ( ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( ( DS - RMSe ) * RRSe ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) * ( ( ( ( ( RRSe / ( CS * MUR ) ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),RRSe ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.1433985853103298}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,Max( FirstVNF_RAM,ACS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_RAM_Server - ARS ) - ( ACS * Min( ( PN - MDR ) ,( FirstVNF_RAM_Server - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( RCSe - ( ( RMSe + MLU ) / RRSe ) ),Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( MUC / ( DS / RCSe ) ) ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01231861271152547}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6064069277803673}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( CS / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.04466155878212496}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,( MUM / RRSe ) ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.48673960609062983}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5031015492322529}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUC ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.45546558704453444, "obj2": 0.31111824633241236}, {"determining": "( ( ( FirstVNF_CPU * PN ) * ( ACS + MRS ) ) - Max( FirstVNF_Mem_Server,ARS ) )", "choosing": "( Min( Max( Max( ( MLU / RMSe ),Max( ( MUM / ( ( MUM * MLU ) - MUC ) ),MUR ) ),( ( RCSe + CS ) + Min( ( ( ( DS + MLU ) / DS ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( ( MLU * DS ) + MUC ) ,( MUM + ( CS - MUR ) ) ) ) ) ) ,MLU ) - ( ( RMSe - MLU ) * ( ( CS + DS ) * Max( ( ( MUM * ( RRSe * RCSe ) ) + RRSe ),RCSe ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12473098352744409}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.6659919028340081, "obj2": 0.14938692006230195}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( DDR * Const ) + RRS ) ,( ( AMS + MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( ( ( ( ( RRSe + CS ) * ( ( MUC / MLU ) - MUR ) ) * Max( MUR,RCSe ) ) * CS ) ,MLU ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.16598728833167914}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / Const ),Max( MRS,DDR ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - MLU ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.868421052631579, "obj2": 0.04950141348612133}, {"determining": "( ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - ( MUC + MUM ) ) - ( ( ( ( ( ( RMSe - MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( ( ( MUR - DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9736842105263158, "obj2": 0.008671419021326912}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUC + MUC ) / MUC ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.18119262145461615}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1363304582777618}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( Const / ( ( FirstVNF_Mem_Server / Min( ( DDR + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUR ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MUR ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( ( Max( MLU,MUR ) - MLU ) - MUC ) + ( Max( MUC,MUR ) * Min( MLU ,Min( DS ,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.020417556387724307}, {"determining": "( ( ( FirstVNF_CPU - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( Const - Max( ARS,CRS ) ) ) ) * MDR ) ) ) - ( ( ( ACS / FirstVNF_CPU_Server ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) * ( ( Max( MUR,MLU ) + ( ( MUR * CS ) * Min( RCSe ,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.44949565404685465}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( ACS / FirstVNF_RAM ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,MUR ) ) ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( RCSe ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6435846353031289}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / MDR ) ) ) ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MLU - RMSe ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( RMSe + RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + RRSe ),MUR ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.1348238567088257}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( FirstVNF_CPU_Server + PN ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) * AMS ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( MLU / RMSe ) - ( MUC / ( MUM - ( ( MLU - ( DS - ( RMSe - Max( RCSe,RCSe ) ) ) ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.0915096871523219}, {"determining": "( ( ( Const * BR ) * ( ( BR / AMS ) - CRS ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) - Min( MUC ,DS ) ) )", "obj1": 0.979757085020243, "obj2": 0.006514398836766848}, {"determining": "Min( ( ( ( ( DDR - MDR ) - MDR ) - ( ( Const * BR ) * ( ( BR / FirstVNF_Mem ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem_Server - BR ) * ( ( MDR * ( FirstVNF_RAM_Server / RRS ) ) * DDR ) ) )", "choosing": "( ( ( CS + RMSe ) - Min( MUC ,DS ) ) - ( ( RRSe + DS ) - ( ( Max( Min( ( Min( MUM ,RRSe ) - Min( MUC ,MLU ) ) ,( Min( RMSe ,MUM ) - RRSe ) ),MLU ) - ( RMSe - Max( RRSe,( DS / RCSe ) ) ) ) * MUR ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08716189490679199}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( FirstVNF_RAM_Server - ARS ) + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.20040485829959515, "obj2": 0.5846461844124867}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.36135246860927783}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) + AMS ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) ) * ( Max( MRS,( ACS * ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) / ( Max( ( ARS * RRS ),RRS ) - FirstVNF_Mem ) ) ) * ( BR / CRS ) ) )", "choosing": "( ( MUC - Max( RMSe,RMSe ) ) - ( ( ( RRSe * Max( ( ( RCSe + MUC ) / CS ),DS ) ) + DS ) + ( MUC - DS ) ) )", "obj1": 0.9352226720647774, "obj2": 0.02598057487967615}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( ( FirstVNF_Mem * AMS ) / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),MUM ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( ( ARS - MDR ) - ( ( FirstVNF_Mem_Server + AMS ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server * ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( MRS,( ACS * FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( CS ,MUC ) + ( CS * ( ( MUM - CS ) + ( ( RRSe - MUM ) * ( MUC + MUR ) ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7169241190263858}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ARS * FirstVNF_Mem_Server ) ) ) / Const ) * ( ( ( BR + MDR ) / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( Max( DDR,DDR ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( RMSe * ( RCSe + RCSe ) ),( MLU * Max( MUM,MUC ) ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) + RCSe ) - ( DS - ( RRSe + DS ) ) ) ,MLU ) )", "obj1": 0.4291497975708502, "obj2": 0.3559679934981071}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "( ( PN - MDR ) - ( ( ( Min( BR ,BR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Max( ( ACS + FirstVNF_CPU_Server ),DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,Max( RMSe,RCSe ) ) ) - ( ( Min( ( MUR * ( RCSe - DS ) ) ,RMSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUC ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3142163527154087}, {"determining": "( ( PN - MDR ) - ( Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_RAM_Server - ARS ) - ( ACS * Min( ( PN - MDR ) ,( FirstVNF_RAM_Server - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( RCSe - ( ( RMSe + RMSe ) / RRSe ) ),Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( MUC / ( DS / RCSe ) ) ),MUR ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.024436497328789657}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,Max( MLU,MUR ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15991902834008098, "obj2": 0.6218748418590032}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6586359905782766}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) / MUR ) ) ) - ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.05058363547795606}], "37": [{"determining": "( ( ( Const * Min( FirstVNF_CPU_Server ,BR ) ) * ( ( MDR - ( ( Max( RRS,CRS ) * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ACS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Min( ( RCSe * ( ( RCSe - DS ) + ( MLU + MUC ) ) ) ,MLU ) ) / ( ( DS * ( MUM + DS ) ) / Max( Max( ( MUM * ( ( MUM / RMSe ) + MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( MDR * FirstVNF_CPU ) ) * ( ( MDR * ARS ) - Max( ( ACS * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,RRSe ) ) ),RCSe ) + ( MUC - MUR ) ) + ( DS + RRSe ) ) * ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) * ( ( MDR / AMS ) - Max( DDR,DDR ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( ( DS / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( ( CS - ( MUM / RMSe ) ) * MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.360981416253951}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( ( RMSe / MUM ) + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3989588359608116}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS * FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06790866909798256}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) * ( ( MDR / AMS ) - Min( CRS ,CRS ) ) ) )", "choosing": "( ( RRSe + Min( ( RCSe * ( ( DS - Max( ( RCSe / MUM ),MLU ) ) - ( DS + MUM ) ) ) ,( RRSe - RCSe ) ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.35384628577291743}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "Min( ( ( ( ( DDR - MDR ) - MDR ) - ( ( Const * BR ) * ( ( BR / FirstVNF_Mem ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem_Server - BR ) * ( ( MDR * ( FirstVNF_RAM_Server / RRS ) ) * DDR ) ) )", "choosing": "( ( ( CS + RMSe ) - Min( MUC ,DS ) ) - ( ( RRSe + DS ) - ( ( Max( Min( ( Min( MUM ,RRSe ) - Min( MUC ,MLU ) ) ,( Min( RMSe ,MUM ) - RRSe ) ),MLU ) - ( RMSe - Max( RRSe,( DS / RCSe ) ) ) ) * MUR ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08716189490679199}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.278421433104045}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( MLU,MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7267206477732794, "obj2": 0.11672205817847284}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * PN ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( ( MLU - CS ) ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10240148049865758}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.026473774089619817}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,( MRS + ACS ) ) ) - CRS ) ) ) ) - ( PN - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - MUM ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03358145207887133}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09836804598456372}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07361565864811132}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * Max( MUC,RMSe ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7118230174933734}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,( MUM / RRSe ) ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.48673960609062983}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5029027867826155}, {"determining": "( ( ( ( ( MDR - RRS ) + ARS ) - ( FirstVNF_CPU - AMS ) ) - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / MDR ) ) ) / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Const + AMS ) - DDR ) ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUC ) * RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( MUR,CS ) * ( ( ( Max( MUR,RCSe ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6524910952243514}, {"determining": "( ( PN - MDR ) - ( ( ( Min( BR ,BR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Max( ( ACS + FirstVNF_CPU_Server ),DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,Max( RMSe,RCSe ) ) ) - ( ( Min( ( MUR * ( RCSe - DS ) ) ,RMSe ) + ( DS + RRSe ) ) * ( Max( ( ( ( ( MUC * MUC ) / MUM ) - MUC ) + RRSe ),MUC ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.4534412955465587, "obj2": 0.3142163527154087}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - CRS ) ),Const ) ) * ( ( ( ( ( ( CRS - CRS ) + MDR ) * AMS ) + Max( FirstVNF_CPU_Server,( DDR / MDR ) ) ) * MDR ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Max( RCSe,RCSe ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) ) - ( ( RCSe * MUC ) - DS ) ) ,MLU ) )", "obj1": 0.8987854251012146, "obj2": 0.040191182399452685}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) / CRS ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( CS * Max( RMSe,RCSe ) ) ) - ( ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( ( DS - RMSe ) * RRSe ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) * ( ( ( ( ( RRSe / ( CS * MUR ) ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),RRSe ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.1433985853103298}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( FirstVNF_Mem * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( BR / AMS ) - Max( ( ARS - FirstVNF_RAM_Server ),( ACS * Min( ( PN - Max( RRS,ARS ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( Max( ( MUC + DS ),RCSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + RRSe ),MUR ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09343917554460072}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.15457139429468103}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,Const ) ,DDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( DDR * Const ) + RRS ) ,( ( AMS + MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( ( ( ( ( RRSe + CS ) * ( ( MUC / MLU ) - MUR ) ) * Max( MUR,RCSe ) ) * CS ) ,MLU ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.16598728833167914}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1363304582777618}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( Const / ( ( FirstVNF_Mem_Server / Min( ( DDR + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUR ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MUR ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( ( Max( MLU,MUR ) - MLU ) - MUC ) + ( Max( MUC,MUR ) * Min( MLU ,Min( DS ,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.020417556387724307}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( ACS / FirstVNF_RAM ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,MUR ) ) ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( RCSe ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6435846353031289}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( FirstVNF_CPU_Server + PN ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) * AMS ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( MLU / RMSe ) - ( MUC / ( MUM - ( ( MLU - ( DS - ( RMSe - Max( RCSe,RCSe ) ) ) ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.0915096871523219}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04120604201570222}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( CS / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.04466155878212496}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) / MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( MRS - MRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( MLU - MUM ) ) / MLU ) - ( ( ( ( Max( MUR,MLU ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) * Max( MUR,CS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5816011775215111}, {"determining": "( ( ( Const * BR ) * ( ( ( PN - MDR ) / AMS ) - CRS ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - ( MUC + MUM ) ) - ( ( ( ( ( ( RMSe - RCSe ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + DS ) ) * Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( ( ( MUR - DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0026407859155349288}, {"determining": "( ( Const * ( ACS - ARS ) ) - Max( Max( Const,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( MUR + DS ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( ( ( Min( MUC ,MUR ) - MUC ) - RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6766684190626528}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( Max( ( MDR + DDR ),ACS ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) + ( ( MDR / AMS ) - ( Min( ( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - Max( ( RCSe / MUM ),Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.11827529888339253}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( FirstVNF_RAM_Server - ARS ) + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.20040485829959515, "obj2": 0.5846461844124867}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,Max( FirstVNF_RAM,ACS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_RAM_Server - ARS ) - ( ACS * Min( ( PN - MDR ) ,( FirstVNF_RAM_Server - Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( RCSe - ( ( RMSe + MLU ) / RRSe ) ),Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUM * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( MUC / ( DS / RCSe ) ) ),MUR ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01231861271152547}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server + MRS ) * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Max( ( ( Min( Max( MUM,MUR ) ,MLU ) - MUC ) + ( RRSe * MUR ) ),MUR ) ) )", "obj1": 0.4574898785425101, "obj2": 0.30980839401519294}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ( MRS * MDR ) - ( ( AMS / FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server / Min( ( PN / BR ) ,MRS ) ) * MDR ) ) ) - ( Min( BR ,AMS ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,( MUM * MUM ) ) ) ) - ( ( MLU / RMSe ) * ( MUR + RMSe ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4499376418107525}, {"determining": "( ( PN - MDR ) - Max( Min( ACS ,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,CS ) + MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( CS ,( RMSe * DS ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6441337501190916}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) - AMS ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( ( FirstVNF_RAM / ( AMS / PN ) ) + ACS ) ,DDR ) ) ) * ( BR / CRS ) ) )", "choosing": "( ( ( ( DS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) - ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( CS - Min( Min( MUR ,RCSe ) ,RMSe ) ) ) ) - MUR ) ) - ( ( ( RRSe * Max( ( ( RCSe + MUC ) / MUM ),DS ) ) + DS ) + Max( Max( ( MUM * RCSe ),CS ),( MUC + ( ( RMSe - ( ( RMSe * MUC ) + DS ) ) * DS ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.025978543542813495}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ARS * FirstVNF_Mem_Server ) ) ) / Const ) * ( ( ( BR + MDR ) / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( Max( DDR,DDR ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( RMSe * ( RCSe + RCSe ) ),( MLU * Max( MUM,MUC ) ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) + RCSe ) - ( DS - ( RRSe + DS ) ) ) ,MLU ) )", "obj1": 0.4291497975708502, "obj2": 0.3559679934981071}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ARS ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RRSe - RCSe ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( DS ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.19380458496298672}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6586359905782766}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( MDR,( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( MUM - RRSe ) + RRSe ),MUC ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12468972096545514}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ACS / ( FirstVNF_RAM * RRS ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.702937808870343}], "38": [{"determining": "( Max( Min( FirstVNF_Mem_Server ,Const ),DDR ) - ( Max( AMS,FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,( DDR * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( ( ( ( ( RRSe + CS ) * ( RCSe - MUR ) ) * Max( MUR,RCSe ) ) * CS ) ,MLU ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe - MLU ),( ( Min( MUC ,MUR ) - MUC ) + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Min( FirstVNF_CPU_Server ,BR ) ) * ( ( MDR - ( ( Max( RRS,CRS ) * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ACS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,RMSe ) / Min( ( RCSe * ( ( RCSe - DS ) + ( MLU + MUC ) ) ) ,MLU ) ) / ( ( DS * ( MUM + DS ) ) / Max( Max( ( MUM * ( ( MUM / RMSe ) + MUC ) ),MUR ),( MLU / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) * ( ( MDR / AMS ) - Max( DDR,DDR ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( ( DS / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( ( CS - ( MUM / RMSe ) ) * MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.360981416253951}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * ( Min( CS ,DS ) / Max( RMSe,MUM ) ) ) * ( ( RMSe / MUM ) + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.37044534412955465, "obj2": 0.395833349217797}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS * FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06790866909798256}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) * ( ( MDR / AMS ) - Min( CRS ,CRS ) ) ) )", "choosing": "( ( RRSe + Min( ( RCSe * ( ( DS - Max( ( RCSe / MUM ),MLU ) ) - ( DS + MUM ) ) ) ,( RRSe - RCSe ) ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.4352226720647773, "obj2": 0.35384628577291743}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( MDR,( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( MUM - RRSe ) + RRSe ),MUC ) * ( RRSe / MUR ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.1419485503667188}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.15457139429468103}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1363304582777618}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - CRS ) ),Const ) ) * Max( FirstVNF_CPU,( ( FirstVNF_Mem_Server - BR ) * ( ( FirstVNF_RAM_Server - Max( FirstVNF_RAM,BR ) ) * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUM / MUC ) - MUC ) / MUR ) - Min( ( ( Min( DS ,MLU ) * RCSe ) - ( DS - ( RCSe * MUC ) ) ) ,MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.004568296714027248}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.8016194331983806, "obj2": 0.07361565864811132}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) - AMS ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( ( FirstVNF_RAM / ( AMS / PN ) ) + ACS ) ,DDR ) ) ) * ( BR / CRS ) ) )", "choosing": "( ( ( ( DS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) - ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( CS - Min( Min( MUR ,RCSe ) ,RMSe ) ) ) ) - MUR ) ) - ( ( ( RRSe * Max( ( ( RCSe + MUC ) / MUM ),DS ) ) + DS ) + Max( Max( ( MUM * RCSe ),CS ),( MUC + ( ( RMSe - ( ( RMSe * MUC ) + DS ) ) * DS ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.025978543542813495}, {"determining": "( ( RRS * Const ) - ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,( ( MUC / MLU ) / MUC ) ) - RCSe ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.05008300858566842}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( Min( PN ,( FirstVNF_RAM_Server / PN ) ) - Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) - ( ( Max( RMSe,MLU ) - ( RMSe - Max( RRSe,( Min( RRSe ,MUC ) * Max( MUC,RRSe ) ) ) ) ) * MUR ) ) - ( ( CS + RMSe ) - Min( MUC ,DS ) ) )", "obj1": 0.5121457489878543, "obj2": 0.27612911369322934}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server + MRS ) * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Max( ( ( Min( Max( MUM,MUR ) ,MLU ) - MUC ) + ( RRSe * MUR ) ),MUR ) ) )", "obj1": 0.4574898785425101, "obj2": 0.30980839401519294}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "Min( ( ( ( ( DDR - MDR ) - MDR ) - ( ( Const * BR ) * ( ( BR / FirstVNF_Mem ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem_Server - BR ) * ( ( MDR * ( FirstVNF_RAM_Server / RRS ) ) * DDR ) ) )", "choosing": "( ( ( CS + RMSe ) - Min( MUC ,DS ) ) - ( ( RRSe + DS ) - ( ( Max( Min( ( Min( MUM ,RRSe ) - Min( MUC ,MLU ) ) ,( Min( RMSe ,MUM ) - RRSe ) ),MLU ) - ( RMSe - Max( RRSe,( DS / RCSe ) ) ) ) * MUR ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08716189490679199}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,( MUM / RRSe ) ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.48673960609062983}, {"determining": "( ( PN - MDR ) - ( Const / ( ( FirstVNF_Mem_Server / Min( ( DDR + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUR ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MUR ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( ( Max( MLU,MUR ) - MLU ) - MUC ) + ( Max( MUC,MUR ) * Min( MLU ,Min( DS ,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.020417556387724307}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5029027867826155}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( MDR,( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( MUM - RRSe ) + RRSe ),MUC ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12468972096545514}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( CS / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MLU * RMSe ) + ( Min( DS ,( RRSe * ( MUC / MUM ) ) ) / RCSe ) ) * Max( ( ( RMSe * MUR ) - ( RCSe * MLU ) ),MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.04466155878212496}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09836804598456372}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) * ( ( MDR / AMS ) - Min( CRS ,CRS ) ) ) )", "choosing": "( ( RRSe + Min( ( RCSe * ( ( DS - Max( ( RCSe / MUM ),MLU ) ) - ( DS + MUM ) ) ) ,( RRSe - RCSe ) ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.011500485427368501}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.026473774089619817}, {"determining": "( ( PN - MDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Min( RRSe ,RCSe ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - CS ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( MUM ,RMSe ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) / RRSe ),( MUM / RRSe ) ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6680156092826282}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( ( MUR + MUC ) / MUC ) + Max( MUC,Max( MUC,DS ) ) ) - RCSe ) + Max( MLU,( ( MLU - Min( RMSe ,RCSe ) ) / MUC ) ) ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,MUR ) - MUC ) ),MUR ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.109382836687836}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem ) ) * ( ( PN / FirstVNF_RAM_Server ) - ( ( Const * MDR ) * ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,( MRS + ACS ) ) ) - CRS ) ) ) ) - ( PN - MDR ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - MUM ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( MUC ,DS ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03358145207887133}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.730002204697732}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( Const - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * MUC ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.11553492346092832}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( ( MRS * MDR ) - ( ( AMS / FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server / Min( ( PN / BR ) ,MRS ) ) * MDR ) ) ) - ( Min( BR ,AMS ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,( MUM * MUM ) ) ) ) - ( ( MLU / RMSe ) * ( MUR + RMSe ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4499376418107525}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( ACS / FirstVNF_RAM ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,MUR ) ) ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( RCSe ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6435846353031289}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04120604201570222}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2818597519508068}, {"determining": "( ( Const * ( ACS - ARS ) ) - Max( Max( Const,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( MUR + DS ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( ( ( Min( MUC ,MUR ) - MUC ) - RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6766684190626528}, {"determining": "( ( AMS - ( FirstVNF_Mem - PN ) ) - ( ( Min( Const ,( FirstVNF_CPU_Server / ACS ) ) / Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( RMSe ,MUM ) / ( MLU / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,( MLU * MUR ) ) - MUC ) + RRSe ),DS ) ) ) - ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * Max( RMSe,MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) )", "obj1": 0.07692307692307693, "obj2": 0.7141811934671156}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ARS * FirstVNF_Mem_Server ) ) ) / Const ) * ( ( ( BR + MDR ) / AMS ) - ( Min( FirstVNF_RAM_Server ,Min( FirstVNF_CPU_Server ,ACS ) ) * Min( Max( DDR,DDR ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( RMSe * ( RCSe + RCSe ) ),( MLU * Max( MUM,MUC ) ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) + RCSe ) - ( DS - ( RRSe + DS ) ) ) ,MLU ) )", "obj1": 0.4291497975708502, "obj2": 0.3559679934981071}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( ARS / ( Const * MDR ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.6497975708502024, "obj2": 0.16132475123075457}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( Max( FirstVNF_CPU,( Max( ARS,CRS ) / Max( BR,FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) / DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + Max( MUM,CS ) ) * Max( ( ( Min( RRSe ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5143941268413202}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - Min( ( PN - MDR ) ,DDR ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RMSe + CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7113174130921165}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( DDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( Max( ( FirstVNF_RAM_Server - ARS ),( ARS / FirstVNF_RAM_Server ) ) - ( MDR / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RCSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) + RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.03227044598914777}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) * ( ( MDR / AMS ) - Min( CRS ,CRS ) ) ) )", "choosing": "( ( RRSe + Min( ( RCSe * ( ( DS - Max( ( RCSe / MUM ),MLU ) ) - ( DS + MUM ) ) ) ,( RRSe - RCSe ) ) ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,CS ) + ( DS * Max( RCSe,( MUM / CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.011500485427368501}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) / MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( MRS - MRS ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( MLU - MUM ) ) / MLU ) - ( ( ( ( Max( MUR,MLU ) + ( Min( MLU ,Min( CS ,MUR ) ) * MUR ) ) + Min( ( Min( DS ,MLU ) / MUM ) ,( MUC - MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) * Max( MUR,CS ) ) )", "obj1": 0.20445344129554655, "obj2": 0.5816011775215111}, {"determining": "( ( PN - MDR ) - ( ( Min( ( ( CRS - CRS ) + MDR ) ,DDR ) * Max( ( Max( MRS,( ( AMS / BR ) / BR ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.6606451579319849}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4979757085020243, "obj2": 0.27759309996803194}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( FirstVNF_CPU_Server + PN ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) * AMS ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( MLU / RMSe ) - ( MUC / ( MUM - ( ( MLU - ( DS - ( RMSe - Max( RCSe,RCSe ) ) ) ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.0915096871523219}], "39": [{"determining": "( Min( ( PN / BR ) ,MRS ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( MLU - ( CS / Max( RMSe,RCSe ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,Const ),DDR ) - ( Max( AMS,FirstVNF_Mem ) * Min( FirstVNF_RAM_Server ,( ( Min( MRS ,RRS ) * Max( AMS,FirstVNF_CPU_Server ) ) / Min( RRS ,( DDR * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( Min( ( ( ( ( RRSe + CS ) * ( RCSe - MUR ) ) * Max( MUR,RCSe ) ) * CS ) ,MLU ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe - MLU ),( ( Min( MUC ,MUR ) - MUC ) + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) * ( ( MDR / AMS ) - Max( DDR,DDR ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( ( DS / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( ( CS - ( MUM / RMSe ) ) * MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.360981416253951}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.39337752104372414}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - ( ( Max( ( MRS * MRS ),Min( CRS ,FirstVNF_Mem ) ) / Const ) * ( ( CRS * ( BR / DDR ) ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( ( MUR + ( ( RCSe / Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) ) + CS ) ) - ( CS - RRSe ) )", "obj1": 0.42105263157894735, "obj2": 0.36062273977492576}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS * FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06790866909798256}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( MDR,( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( Max( ( ( MUM - RRSe ) + RRSe ),MUC ) * ( RRSe / MUR ) ) ) )", "obj1": 0.6740890688259109, "obj2": 0.1419485503667188}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.15457139429468103}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "Min( ( ( ( ( DDR - MDR ) - MDR ) - ( ( Const * BR ) * ( ( BR / FirstVNF_Mem ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem_Server - BR ) * ( ( MDR * ( FirstVNF_RAM_Server / RRS ) ) * DDR ) ) )", "choosing": "( ( ( CS + RMSe ) - Min( MUC ,DS ) ) - ( ( RRSe + DS ) - ( ( Max( Min( ( Min( MUM ,RRSe ) - Min( MUC ,MLU ) ) ,( Min( RMSe ,MUM ) - RRSe ) ),MLU ) - ( RMSe - Max( RRSe,( DS / RCSe ) ) ) ) * MUR ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08716189490679199}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem,ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( ( RCSe + RCSe ) * RMSe ),( MLU * Max( MUM,MUC ) ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,MLU ) )", "obj1": 0.20445344129554655, "obj2": 0.5811668247036018}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.18505889094620545}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( RRS * Const ) - ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,( ( MUC / MLU ) / MUC ) ) - RCSe ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.05008300858566842}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server + MRS ) * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Max( ( ( Min( Max( MUM,MUR ) ,MLU ) - MUC ) + ( RRSe * MUR ) ),MUR ) ) )", "obj1": 0.4574898785425101, "obj2": 0.30980839401519294}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( ACS / FirstVNF_RAM ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,MUR ) ) ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( RCSe ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6435846353031289}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07360120084869982}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( FirstVNF_CPU_Server + PN ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) * AMS ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( MLU / RMSe ) - ( MUC / ( MUM - ( ( MLU - ( DS - ( RMSe - Max( RCSe,RCSe ) ) ) ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.0915096871523219}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,( MUM / RRSe ) ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.48673960609062983}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5029027867826155}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.010296211805435345}, {"determining": "( ( FirstVNF_CPU_Server + ( MRS - MDR ) ) - ( ( ( ( ( BR / DDR ) - ( ( BR - PN ) - ( ACS + FirstVNF_RAM_Server ) ) ) * AMS ) * ( Const * ( Max( AMS,( MRS + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) / Const ) ) ) * ( ( MDR / AMS ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUC / MUM ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( Max( DS,CS ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RCSe + ( Min( DS ,RCSe ) - MUC ) ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7214401216010945}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( PN - MDR ) - ( Min( Max( ( Max( MRS,( FirstVNF_RAM * ( MDR / AMS ) ) ) / ( ( ( BR - FirstVNF_CPU ) * ARS ) * FirstVNF_Mem ) ),Const ) ,( CRS / AMS ) ) * ( ( MDR / ( ( PN / ACS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - RRSe ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.7591093117408907, "obj2": 0.09705287818062866}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * ( Min( CS ,DS ) / Max( RMSe,MUM ) ) ) * ( ( RMSe / MUM ) + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.37044534412955465, "obj2": 0.395833349217797}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2818597519508068}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.026473774089619817}, {"determining": "( ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) - ( ( Max( ACS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6664735782368972}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04120604201570222}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.730002204697732}, {"determining": "( ( Const * ( ACS - ARS ) ) - Max( Max( Const,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( MUR + DS ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( ( ( Min( MUC ,MUR ) - MUC ) - RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6766684190626528}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6842105263157895, "obj2": 0.1363304582777618}, {"determining": "( ( ( MRS * MDR ) - ( ( AMS / FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server / Min( ( PN / BR ) ,MRS ) ) * MDR ) ) ) - ( Min( BR ,AMS ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,( MUM * MUM ) ) ) ) - ( ( MLU / RMSe ) * ( MUR + RMSe ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4499376418107525}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - MDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ACS - MDR ) ) )", "choosing": "( ( ( RRSe * ( Min( Max( ( MUM - RRSe ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) - ( CS * DS ) ) / CS ) ) ) - ( ( CS - Max( RRSe,RRSe ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.5080971659919028, "obj2": 0.27402270359188335}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.13377037010270645}, {"determining": "( ( PN - MDR ) - Max( ( Max( Max( ARS,FirstVNF_Mem_Server ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server + DDR ) ),( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( CS * ( DS - ( RCSe * Max( Max( Max( RCSe,RCSe ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,( MLU - Min( RMSe ,( MUC - RMSe ) ) ) ) / RCSe ) - ( ( RCSe * MUC ) - DS ) ) ,MLU ) )", "obj1": 0.9817813765182186, "obj2": 0.00535543505443725}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( Const - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.1092103062050134}, {"determining": "( ( PN - MDR ) - ( Const / ( ( FirstVNF_Mem_Server / Min( ( DDR + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUR ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MUR ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( ( Max( MLU,MUR ) - MLU ) - MUC ) + ( Max( MUC,MUR ) * Min( MLU ,Min( DS ,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.020417556387724307}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( MDR - PN ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,MUR ) ) ) + RRSe ),MUR ) ) * ( Min( ( ( MUM / RCSe ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7070189606846549}, {"determining": "( ( AMS - ( FirstVNF_Mem - PN ) ) - ( ( Min( Const ,( FirstVNF_CPU_Server / ACS ) ) / Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( RMSe ,MUM ) / ( MLU / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,( MLU * MUR ) ) - MUC ) + RRSe ),DS ) ) ) - ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * Max( RMSe,MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) )", "obj1": 0.07692307692307693, "obj2": 0.7141811934671156}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09836804598456372}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( Max( FirstVNF_CPU,( Max( ARS,CRS ) / Max( BR,FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) / DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + Max( MUM,CS ) ) * Max( ( ( Min( RRSe ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5143941268413202}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU - ( Max( AMS,ACS ) - ( ( ( MDR * Const ) - AMS ) * Max( Const,( BR * FirstVNF_Mem ) ) ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / Min( ( ( FirstVNF_RAM / ( AMS / PN ) ) + ACS ) ,DDR ) ) ) * ( BR / CRS ) ) )", "choosing": "( ( ( ( DS - ( ( ( Min( MUC ,MUC ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) - ( Min( Max( ( Min( MLU ,( DS + RRSe ) ) - Max( ( DS + CS ),Max( RMSe,DS ) ) ),CS ) ,( ( ( ( CS * DS ) * Max( CS,RRSe ) ) * RMSe ) + ( CS - Min( Min( MUR ,RCSe ) ,RMSe ) ) ) ) - MUR ) ) - ( ( ( RRSe * Max( ( ( RCSe + MUC ) / MUM ),DS ) ) + DS ) + Max( Max( ( MUM * RCSe ),CS ),( MUC + ( ( RMSe - ( ( RMSe * MUC ) + DS ) ) * DS ) ) ) ) )", "obj1": 0.9352226720647774, "obj2": 0.025978543542813495}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10279666186848674}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),DS ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.040841498924646086}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6501989546227209}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.4979757085020243, "obj2": 0.27759309996803194}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( MDR - PN ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( Const,MDR ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * Max( ( ( MRS * ( RRS * ACS ) ) / Const ),MDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * MLU ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9392712550607287, "obj2": 0.02522805253177387}], "40": [{"determining": "( Min( ( PN / BR ) ,MRS ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),RRSe ) ) + Min( Min( ( CS / MUM ) ,( RCSe / Max( ( CS - RCSe ),MLU ) ) ) ,( MUC - DS ) ) ) - ( RRSe + Max( ( MLU / RMSe ),Max( ( CS * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / BR ) ,MRS ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( MLU - ( CS / Max( RMSe,RCSe ) ) ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) * ( ( MDR / AMS ) - Max( DDR,DDR ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( ( DS / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( ( CS - ( MUM / RMSe ) ) * MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.360981416253951}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.39337752104372414}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MLU ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.8704453441295547, "obj2": 0.047495186741091995}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07360120084869982}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.15457139429468103}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),DS ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.040841498924646086}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04120604201570222}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_Mem,ARS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( ( RCSe + RCSe ) * RMSe ),( MLU * Max( MUM,MUC ) ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,MLU ) )", "obj1": 0.20445344129554655, "obj2": 0.5811668247036018}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,DDR ) ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + CS ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.4068825910931174, "obj2": 0.3487742108580738}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS * FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06790866909798256}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( MDR - PN ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( Const,MDR ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * Max( ( ( MRS * ( RRS * ACS ) ) / Const ),MDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.9149797570850202, "obj2": 0.030945181416065653}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( ( Max( MRS,( ACS * ( ( ( CRS / ACS ) * MDR ) / CRS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + ( FirstVNF_Mem_Server * ARS ) ) ,DDR ) ) ) ) - ( ( ARS / DDR ) - MDR ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( ( Max( RMSe,RRSe ) * ( RMSe * RMSe ) ) + RRSe ) ) * ( ( ( ( ( RRSe / CS ) / RRSe ) * RMSe ) * MUR ) * Max( ( ( Min( MUC ,( MUC * RRSe ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5879875574294829}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( MUC / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12374077672238053}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( Min( ACS ,Max( Const,MDR ) ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( DS + MUC ),MUM ) ,MLU ) - ( ( ( RMSe + RRSe ) * ( CS * DS ) ) / CS ) ) ) - ( ( CS - ( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ) - ( RMSe + CS ) ) ) * CS ) ) - ( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * MLU ) / DS ) ) * ( CS * DS ) ) - Min( MUC ,DS ) ) )", "obj1": 0.7186234817813765, "obj2": 0.11720605313349212}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( MDR - PN ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ( MDR / AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,CS ) ) ) + RRSe ),MUR ) ) * ( Min( ( ( MUM / RCSe ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.666374223369655}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.24773255137929562}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "Min( ( ( ( ( DDR - MDR ) - MDR ) - ( ( Const * BR ) * ( ( BR / FirstVNF_Mem ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_Mem_Server - BR ) * ( ( MDR * ( FirstVNF_RAM_Server / RRS ) ) * DDR ) ) )", "choosing": "( ( ( CS + RMSe ) - Min( MUC ,DS ) ) - ( ( RRSe + DS ) - ( ( Max( Min( ( Min( MUM ,RRSe ) - Min( MUC ,MLU ) ) ,( Min( RMSe ,MUM ) - RRSe ) ),MLU ) - ( RMSe - Max( RRSe,( DS / RCSe ) ) ) ) * MUR ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08716189490679199}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.593000469872339}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( ( FirstVNF_CPU_Server + PN ) / AMS ) - ( ( FirstVNF_CPU_Server / Const ) * AMS ) ) ) * ( ( DDR / ACS ) * MDR ) ) )", "choosing": "( ( MLU / RMSe ) - ( MUC / ( MUM - ( ( MLU - ( DS - ( RMSe - Max( RCSe,RCSe ) ) ) ) / ( RCSe * CS ) ) ) ) )", "obj1": 0.7631578947368421, "obj2": 0.0915096871523219}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS * FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.8279352226720648, "obj2": 0.06375659113396868}, {"determining": "( ( PN - MDR ) - ( Const / ( ( FirstVNF_Mem_Server / Min( ( DDR + FirstVNF_CPU_Server ) ,( CRS + FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUR ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MUR ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( ( Max( MLU,MUR ) - MLU ) - MUC ) + ( Max( MUC,MUR ) * Min( MLU ,Min( DS ,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.020417556387724307}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,( MUM / RRSe ) ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.48515894294459116}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server - CRS ) ),Const ) ) * ( FirstVNF_CPU - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Max( RCSe,RCSe ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( ( RCSe * MUC ) - DS ) ) ,MLU ) )", "obj1": 0.9817813765182186, "obj2": 0.005355435054437249}, {"determining": "( ( ( PN - AMS ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * Min( FirstVNF_RAM ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) - MUR ) ) ) ) / MLU ) - ( ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.14742426100034703}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MRS,FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( Const + RRS ) ) * Max( CRS,MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( MUM - RRSe ),MUM ) ,DS ) - ( ( ( ( MUR - MUC ) + RRSe ) - ( CS * DS ) ) / Max( CS,RMSe ) ) ) ) - ( ( CS - ( ( DS - MUC ) - ( CS + RMSe ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09635188724314782}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( PN - MDR ) - ( ( MDR * ( DDR / ACS ) ) * ( ( PN / Max( Min( FirstVNF_CPU ,RRS ),FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_Mem ) - CRS ) ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,Max( MUC,RRSe ) ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( Max( Min( ( Min( MUM ,RRSe ) - Min( MUC ,MLU ) ) ,( Min( RMSe ,MUM ) - RRSe ) ),MLU ) - ( RMSe - Max( RRSe,( DS / RCSe ) ) ) ) + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6214574898785425, "obj2": 0.1820442776890271}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,MLU ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.9190283400809717, "obj2": 0.026473774089619817}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.730002204697732}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( Const * ( ACS - ARS ) ) - Max( Max( Const,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( MUR + DS ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( ( ( Min( MUC ,MUR ) - MUC ) - RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6766684190626528}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( ( MRS * MDR ) - ( ( AMS / FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server / Min( ( PN / BR ) ,MRS ) ) * MDR ) ) ) - ( Min( BR ,AMS ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,( MUM * MUM ) ) ) ) - ( ( MLU / RMSe ) * ( MUR + RMSe ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4499376418107525}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( DDR - MDR ) - ( ( ( AMS * ( FirstVNF_RAM_Server - DDR ) ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( ( DS / ( ( MLU * RRSe ) + ( RRSe + MLU ) ) ) / CS ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) - Max( RRS,ACS ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * CS ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - CS ) ) ) ) ) ) - ( Max( MUM,CS ) * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.9615384615384616, "obj2": 0.01188265038981674}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.13377037010270645}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.3578737450511457}, {"determining": "( ( Max( FirstVNF_CPU,( Max( ARS,CRS ) / Max( BR,FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) / DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + Max( MUM,CS ) ) * Max( ( ( Min( RRSe ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5143941268413202}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server + MRS ) * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Max( ( ( Min( Max( MUM,MUR ) ,MLU ) - MUC ) + ( RRSe * MUR ) ),MUR ) ) )", "obj1": 0.4574898785425101, "obj2": 0.30980839401519294}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2818597519508068}, {"determining": "( ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) - ( ( Max( ACS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6664735782368972}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( Min( MDR ,Max( CRS,( ( Max( FirstVNF_CPU_Server,BR ) + RRS ) / FirstVNF_RAM_Server ) ) ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( CS / ( MUC - Max( RCSe,MLU ) ) ) - ( MUC * MUC ) ) - ( ( ( MUR - RCSe ) * ( ( Min( ( ( MLU / RRSe ) - ( MUR + RMSe ) ) ,( RCSe + RCSe ) ) + RRSe ) * MUR ) ) * ( ( ( Max( MUR,MLU ) + ( DS - Max( RCSe,( RRSe / MLU ) ) ) ) + ( Min( DS ,( RRSe * ( CS + MUM ) ) ) / RCSe ) ) * Max( ( Min( RMSe ,Max( MUC,MLU ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.42637255636356974}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ),Const ) ) * ( FirstVNF_CPU - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) * ( DS - ( RMSe * Max( Max( Max( RCSe,RCSe ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( ( RCSe * MUC ) - DS ) ) ,MLU ) )", "obj1": 0.979757085020243, "obj2": 0.006430264681503589}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}], "41": [{"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / BR ) ,MRS ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),RRSe ) ) + Min( Min( ( CS / MUM ) ,( RCSe / Max( ( CS - RCSe ),MLU ) ) ) ,( MUC - DS ) ) ) - ( RRSe + Max( ( MLU / RMSe ),Max( ( CS * ( ( MUM * MUM ) - MUC ) ),MUR ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) * ( ( MDR / AMS ) - Max( DDR,DDR ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( ( DS / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( ( CS - ( MUM / RMSe ) ) * MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.360981416253951}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.49190283400809715, "obj2": 0.2818597519508068}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3785425101214575, "obj2": 0.3903070763844998}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07360120084869982}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04120604201570222}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / MRS ),CRS ) ) * ( ( Min( CRS ,DDR ) / RRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( MUR - RCSe ) - ( ( ( ( MUC - ( Max( ( CS * MLU ),( MLU * CS ) ) - MUC ) ) - MUC ) + RMSe ) - ( ( ( DS / RCSe ) - ( ( CS / ( CS / MLU ) ) - DS ) ) * CS ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06514006563061207}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7168120993878428}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( MDR - PN ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ( MDR / AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,CS ) ) ) + RRSe ),MUR ) ) * ( Min( ( ( MUM / RCSe ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.12550607287449392, "obj2": 0.666374223369655}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,Const ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),( MUM * MUM ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.3157894736842105, "obj2": 0.46362523976748765}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server + MRS ) * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Max( ( ( Min( Max( MUM,MUR ) ,MLU ) - MUC ) + ( RRSe * MUR ) ),MUR ) ) )", "obj1": 0.4574898785425101, "obj2": 0.30980839401519294}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.2513727384862831}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - ( ( Max( MRS,( FirstVNF_RAM_Server * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( ( MRS / FirstVNF_RAM ) / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe - MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( RRSe / MUM ) ) ) ) + Min( ( Min( DS ,( RRSe * CS ) ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6475026207751207}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( Max( MRS,( ACS * FirstVNF_Mem ) ) / Const ) ) ) ) ) )", "choosing": "( ( ( DS - Min( ( DS + RRSe ) ,Max( RRSe,MLU ) ) ) * Min( RCSe ,RCSe ) ) - ( Max( CS,MUR ) * ( Min( RMSe ,RMSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),DS ) ) ) )", "obj1": 0.9008097165991903, "obj2": 0.040841498924646086}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6882591093117408, "obj2": 0.13377037010270645}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6821862348178138, "obj2": 0.13931919618162836}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( CS / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.01898803310911211}, {"determining": "( ( PN - MDR ) - ( Min( ( DDR / DDR ) ,BR ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( MUR - DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.728744939271255, "obj2": 0.10911526831474225}, {"determining": "( ( ( PN - MDR ) - ( ( FirstVNF_Mem_Server / AMS ) - ( ( FirstVNF_CPU_Server / Min( ( PN / BR ) ,MRS ) ) * MDR ) ) ) - ( Min( BR ,MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MUM + MUR ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( Min( MUR ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUC,MUR ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( ( Max( MLU,MUR ) - MLU ) - MUC ) + ( Max( MUC,MUR ) * Min( MLU ,Min( DS ,MUC ) ) ) ),MUR ) ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7296399652315468}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.34695028690755547}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.03487651103996167}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6578947368421053, "obj2": 0.15457139429468103}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,RMSe ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.4873854226677586}, {"determining": "( ( ( Min( ACS ,( PN * FirstVNF_Mem ) ) * BR ) + MRS ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR / MLU ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( MUR / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( ( RMSe * RMSe ) / Max( RCSe,MUM ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7069129729667442}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( MUC / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12374077672238053}, {"determining": "( ( Const * ( ACS - ARS ) ) - Max( Max( Const,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( MUR + DS ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( ( ( Min( MUC ,MUR ) - MUC ) - RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6766684190626528}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,CS ) ) ) + RRSe ),MUR ) ) * ( Min( ( ( MUM / RCSe ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7105263157894737, "obj2": 0.11848012010989546}, {"determining": "( ( ( MRS * MDR ) - ( ( AMS / FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server / Min( ( PN / BR ) ,MRS ) ) * MDR ) ) ) - ( Min( BR ,AMS ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,( MUM * MUM ) ) ) ) - ( ( MLU / RMSe ) * ( MUR + RMSe ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4499376418107525}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( DDR - MDR ) - ( ( ( AMS * ( FirstVNF_RAM_Server - DDR ) ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( ( DS / ( ( MLU * RRSe ) + ( RRSe + MLU ) ) ) / CS ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) - Max( RRS,ACS ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * CS ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - CS ) ) ) ) ) ) - ( Max( MUM,CS ) * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.9615384615384616, "obj2": 0.01188265038981674}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.5921678045047718}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4618482648612759}, {"determining": "( ( ( PN - AMS ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * Min( FirstVNF_RAM ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) - MUR ) ) ) ) / MLU ) - ( ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6680161943319838, "obj2": 0.14742426100034703}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.2467892859371992}, {"determining": "( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * RMSe ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.709399913167671}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( Max( FirstVNF_CPU,( Max( ARS,CRS ) / Max( BR,FirstVNF_Mem ) ) ) - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) / DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + Max( MUM,CS ) ) * Max( ( ( Min( RRSe ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5143941268413202}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MLU ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04839650047222976}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,CRS ) + Min( MRS ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + MRS ) ) ) * ( Const + AMS ) ) * ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS * FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08364235028942371}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MRS,FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( Const + RRS ) ) * Max( CRS,MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( MUM - RRSe ),MUM ) ,DS ) - ( ( ( ( MUR - MUC ) + RRSe ) - ( CS * DS ) ) / Max( CS,RMSe ) ) ) ) - ( ( CS - ( ( DS - MUC ) - ( CS + RMSe ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09635188724314782}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) - ( ( Max( ACS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6664735782368972}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * Max( RRS,MRS ) ) * ( ( MDR / AMS ) - ( ( ( FirstVNF_CPU * Const ) / FirstVNF_RAM_Server ) * Min( ( AMS + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( Min( MUM ,CS ) + DS ) - MLU ) )", "obj1": 0.7368421052631579, "obj2": 0.10117484899402944}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}], "42": [{"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( FirstVNF_CPU * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,RRSe ) ) ),RCSe ) + ( MUC - MUR ) ) + ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.03487651103996167}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) * ( ( MDR / AMS ) - Max( DDR,DDR ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( ( DS / RCSe ) / RRSe ) * RMSe ) / MUR ) * ( ( ( ( CS - ( MUM / RMSe ) ) * MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.360981416253951}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS / Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * Max( ( Max( MRS,( ( AMS + FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,Const ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( MUM,Max( ( ( MLU + RMSe ) * RCSe ),( RRSe / RCSe ) ) ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.19433198380566802, "obj2": 0.5880657529356039}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( FirstVNF_RAM - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server + MRS ) * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Max( ( ( Min( Max( MUM,MUR ) ,( MUC + MUC ) ) - MUC ) + ( RRSe * MUR ) ),MUR ) ) )", "obj1": 0.3866396761133603, "obj2": 0.3768182514213644}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / Min( ( Const + AMS ) ,DDR ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / ( Min( DS ,MLU ) / CS ) ) ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3486211893393227}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3785425101214575, "obj2": 0.3903070763844998}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( AMS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - ( MLU - MUM ) ) - ( ( RCSe / RRSe ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.006400879863310972}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * ( MDR / ( PN * CRS ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * ( Const / Max( MRS,( MDR - PN ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server - BR ) * ( ( MDR / AMS ) * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7131956057231553}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.5921678045047718}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "Min( ( MDR * FirstVNF_CPU_Server ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( ( AMS - RRS ) / RRS ) ) ) - AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7283781872460844}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / MRS ),CRS ) ) * ( ( Min( CRS ,DDR ) / RRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( MUR - RCSe ) - ( ( ( ( MUC - ( Max( ( CS * MLU ),( MLU * CS ) ) - MUC ) ) - MUC ) + RMSe ) - ( ( ( DS / RCSe ) - ( ( CS / ( CS / MLU ) ) - DS ) ) * CS ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06514006563061207}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,RMSe ) ) )", "obj1": 0.5425101214574899, "obj2": 0.2467892859371992}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MRS,FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( Const + RRS ) ) * Max( CRS,MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( MUM - RRSe ),MUM ) ,DS ) - ( ( ( ( MUR - MUC ) + RRSe ) - ( CS * DS ) ) / Max( CS,RMSe ) ) ) ) - ( ( CS - ( ( DS - MUC ) - ( CS + RMSe ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09635188724314782}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,( RRSe + MUM ) ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.04755291889115751}, {"determining": "( ( ACS / ( RRS * FirstVNF_RAM ) ) - ( ( Max( FirstVNF_CPU_Server,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) * MDR ) + ( ( ( RRS / AMS ) - ( Min( ACS ,PN ) * Min( ( ( FirstVNF_CPU / ARS ) + FirstVNF_CPU_Server ) ,DDR ) ) ) - CRS ) ) )", "choosing": "( ( DS * RRSe ) - ( ( RMSe + CS ) - ( Min( MUC ,( DS * MLU ) ) / ( MLU / CS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5009732541623678}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.2513727384862831}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( RMSe,RCSe ) ) / RMSe ),Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.04036776922400837}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8036437246963563, "obj2": 0.07360120084869982}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,CS ) ) ) + RRSe ),MUR ) ) * ( Min( ( ( MUM / RCSe ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7105263157894737, "obj2": 0.11848012010989546}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6821862348178138, "obj2": 0.13931919618162836}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,RMSe ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.4873818519910398}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) / ( ( MDR / ( ( AMS - MDR ) + Max( FirstVNF_CPU_Server,Const ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( ( MDR + FirstVNF_RAM ) + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( ( RCSe * RCSe ),( MUM * MUM ) ),MUM ) * RMSe ) ) ) - Min( ( ( ( RRSe + CS ) - RRSe ) + ( DS + RRSe ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.2793522267206478, "obj2": 0.5010216722717755}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * Max( RRS,MRS ) ) * ( ( MDR / AMS ) - ( ( ( FirstVNF_CPU * Const ) / FirstVNF_RAM_Server ) * Min( ( AMS + FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( Min( MUM ,CS ) + DS ) - MLU ) )", "obj1": 0.7368421052631579, "obj2": 0.10117484899402944}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) - ( ( Max( MRS,( ACS * ( ( ( MDR - ARS ) / ACS ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) / ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( RRSe + ( MUR - MUC ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( ( ( ( ( MUR * RCSe ) / RCSe ) / RRSe ) * RCSe ) / MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6453247067676326}, {"determining": "( ( ( Min( ACS ,( PN * FirstVNF_Mem ) ) * BR ) + MRS ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR / MLU ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( MUR / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( ( RMSe * RMSe ) / Max( RCSe,MUM ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7069129729667442}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( Const * ( ACS - ARS ) ) - Max( Max( Const,FirstVNF_CPU_Server ),FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( MUR + DS ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RRSe ) / MUR ) ) * ( ( ( Min( MUC ,MUR ) - MUC ) - RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6766684190626528}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.44872549622758}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_RAM_Server - ARS ),( FirstVNF_Mem * ( ACS * ARS ) ) ) ) ) - ( ( ARS - Max( MRS,ACS ) ) * ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / RRSe ) ) - ( ( MUM - RRSe ) - RRSe ) ) ) / Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * Max( Max( ( MUR / RCSe ),( MUM - RRSe ) ),MLU ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6634908865717066}, {"determining": "( ( ( MRS * MDR ) - ( ( AMS / FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server / Min( ( PN / BR ) ,MRS ) ) * MDR ) ) ) - ( Min( BR ,AMS ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,( MUM * MUM ) ) ) ) - ( ( MLU / RMSe ) * ( MUR + RMSe ) ) )", "obj1": 0.32186234817813764, "obj2": 0.4499376418107525}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( DDR - MDR ) - ( ( ( AMS * ( FirstVNF_RAM_Server - DDR ) ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( ( ( DS / ( ( MLU * RRSe ) + ( RRSe + MLU ) ) ) / CS ),RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.52834008097166, "obj2": 0.2503377863543469}, {"determining": "( ( ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / AMS ) ) * MDR ) ) - Max( RRS,ACS ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * CS ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - CS ) ) ) ) ) ) - ( Max( MUM,CS ) * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.9615384615384616, "obj2": 0.01188265038981674}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3431193163547806}, {"determining": "( ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) - ( ( Max( ACS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6664735782368972}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.31983805668016196, "obj2": 0.46182840568332856}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07100938770391688}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( MUC / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12374077672238053}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,CS ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5123389891802008}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( DDR - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * Max( ACS,Max( ( ARS + AMS ),AMS ) ) ) )", "choosing": "( ( MLU - ( CS - Max( RMSe,RCSe ) ) ) - ( Max( CS,Min( RMSe ,Min( MLU ,( DS + ( RMSe / RCSe ) ) ) ) ) * ( ( ( ( DS * Max( RCSe,( RCSe / RRSe ) ) ) + Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.3340080971659919, "obj2": 0.4355290376077162}], "43": [{"determining": "( ( ( Min( ACS ,( PN * FirstVNF_Mem ) ) * BR ) + MRS ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR / MLU ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( MUR / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( ( RMSe * RMSe ) / Max( RCSe,MUM ) ) - CS ) ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( FirstVNF_CPU * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,RRSe ) ) ),RCSe ) + ( MUC - MUR ) ) + ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.444092714384276}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - ( Max( Const,ACS ) * ( ( AMS / Max( ARS,Const ) ) - Max( ( FirstVNF_Mem_Server - ARS ),( ACS / Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) ) )", "choosing": "Min( Max( DS,MUC ) ,( RRSe / RRSe ) )", "obj1": 0.520242914979757, "obj2": 0.26894143225772404}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MRS,FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( Const + RRS ) ) * Max( CRS,MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( MUM - RRSe ),MUM ) ,DS ) - ( ( ( ( MUR - MUC ) + RRSe ) - ( CS * DS ) ) / Max( CS,RMSe ) ) ) ) - ( ( CS - ( ( DS - MUC ) - ( CS + RMSe ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09635188724314782}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,( ( ( DS / RCSe ) / MUC ) + RRSe ) ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08093437763098353}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6821862348178138, "obj2": 0.13931919618162836}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / MLU ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06436167830804286}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) - ( ( Max( MRS,( ACS * ( ( ( MDR - ARS ) / ACS ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) / ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( RRSe + ( MUR - MUC ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( ( ( ( ( MUR * RCSe ) / RCSe ) / RRSe ) * RCSe ) / MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6453247067676326}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.5921678045047718}, {"determining": "( Min( ( PN - MDR ) ,( ( AMS / MDR ) - ( MDR * ( FirstVNF_CPU_Server + ( ( AMS / MRS ) + RRS ) ) ) ) ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU - Max( CS,Max( CS,RCSe ) ) ) - ( ( ( MUR / ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) ) * Max( Max( MUM,RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( ( Min( MLU ,CS ) * Min( MUC ,RMSe ) ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( ( DS - ( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6360986885190578}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( PN - MDR ) - ( ( ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( MDR / AMS ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( Max( Max( RCSe,RCSe ),( RRSe / RCSe ) ),MUM ) * RMSe ) ) ) - Min( ( ( Min( MUR ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5849014320472565}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / ( DS * MLU ) ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.5425101214574899, "obj2": 0.24460390917137181}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * CS ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4048582995951417, "obj2": 0.35794145350681167}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( FirstVNF_RAM - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server + MRS ) * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Max( ( ( Min( Max( MUM,MUR ) ,( MUC + MUC ) ) - MUC ) + ( RRSe * MUR ) ),MUR ) ) )", "obj1": 0.3866396761133603, "obj2": 0.3768182514213644}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / ( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.15494627775042916}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS / Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) * Max( ( Max( MRS,( ( AMS + FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,Const ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( CS * ( DS - ( Max( MUM,Max( ( ( MLU + RMSe ) * RCSe ),( RRSe / RCSe ) ) ) * RMSe ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( MUC - DS ) ) ,Min( MUC ,DS ) ) )", "obj1": 0.19433198380566802, "obj2": 0.5880657529356039}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( Max( FirstVNF_Mem,FirstVNF_Mem ),PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( DS / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.031186333578741544}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.2834008097165992, "obj2": 0.49366292243964266}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.2513727384862831}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.03487651103996167}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "Min( ( MDR * FirstVNF_CPU_Server ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( ( AMS - RRS ) / RRS ) ) ) - AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7283781872460844}, {"determining": "( Min( PN ,MDR ) - ( ( ARS / ( Const * MDR ) ) - Min( Min( ACS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server * DDR ) ) ,DDR ) ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe + ( RRSe / MUC ) ) ) ) - ( ( ( ( ( Max( MUC,MLU ) + Max( Max( MUC,RRSe ),MUC ) ) - RCSe ) + RRSe ) + ( DS + Min( MUC ,RMSe ) ) ) * ( Max( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ),MUR ) * Max( ( ( Min( MUC ,MUR ) + MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5169292970347058}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( MDR + AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,( Max( RRS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,Max( DS,RCSe ) ) / Max( MLU,MUM ) ),Max( ( Min( DS ,MLU ) * Max( RCSe,( CS / RRSe ) ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.04036776922400837}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,( RRSe + MUM ) ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.04755291889115751}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07100938770391688}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / Min( ( Const + AMS ) ,DDR ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( RMSe / MUC ) + Max( MUC,Max( MUC,RRSe ) ) ) - RCSe ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / MUR ) * Max( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / ( Min( DS ,MLU ) / CS ) ) ),MUR ) ) * ( ( ( Max( MUC,MLU ) + ( DS * Max( RCSe,CS ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( Min( Max( MLU,MUR ) ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.3486211893393227}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * Max( Max( RCSe,RCSe ),CS ) ) / DS ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.7145748987854251, "obj2": 0.1156986933407023}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3785425101214575, "obj2": 0.3903070763844998}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( ( DS * Max( RCSe,RMSe ) ) + Max( MUR,CS ) ) + Min( ( Min( DS ,( MUC + MUM ) ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUM ,( ( RMSe / MUR ) * CS ) ) ) ) )", "obj1": 0.2935222672064777, "obj2": 0.4873818519910398}, {"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_RAM_Server - ARS ),( FirstVNF_Mem * ( ACS * ARS ) ) ) ) ) - ( ( ARS - Max( MRS,ACS ) ) * ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / RRSe ) ) - ( ( MUM - RRSe ) - RRSe ) ) ) / Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * Max( Max( ( MUR / RCSe ),( MUM - RRSe ) ),MLU ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6634908865717066}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( MUC / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12374077672238053}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( PN - ( FirstVNF_CPU - Max( AMS,ARS ) ) ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / MDR ) ) ) / Min( ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / ( CS + ( CS - RRSe ) ) ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6742501185705417}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - ( Min( ( FirstVNF_Mem_Server - AMS ) ,FirstVNF_Mem_Server ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) * ACS ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( DS + RRSe ) + ( MLU - RRSe ) ) * Min( ( Max( Max( Max( ( MUC / RCSe ),MUM ),( MUC * MUM ) ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5688259109311741, "obj2": 0.22546814329036516}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) - ( ( Max( ACS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6664735782368972}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.3431193163547806}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,CS ) ) ) + RRSe ),MUR ) ) * ( Min( ( ( MUM / RCSe ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7105263157894737, "obj2": 0.11848012010989546}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,CS ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5123389891802008}, {"determining": "( ( PN - ( MRS - Max( AMS,ARS ) ) ) - ( ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) * ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / ( Const - PN ) ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe + RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUR ,MUC ) - MUC ),RMSe ) * Max( ( ( ( ( CS - RMSe ) + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6782419863742373}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * CRS ) )", "choosing": "( ( ( MUC / ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( Min( MUM ,CS ) + DS ) - MLU ) )", "obj1": 0.7348178137651822, "obj2": 0.10210334930748123}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( MLU - ( ( ( MLU - RRSe ) + ( ( ( RCSe * MUM ) / MUM ) + CS ) ) * ( ( CS + DS ) * Max( ( RRSe + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( CS * ( RCSe * Max( MUM,CS ) ) ) + RRSe ),MUR ) ) * ( Min( ( ( MUM / RCSe ) + Min( ( MUR * MUR ) ,Min( RRSe ,MUM ) ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.0548194943099305}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( ( ACS - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU_Server ,AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_Mem_Server + ARS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( ( MLU / ( ( MUC / Min( MUR ,MUR ) ) - ( Max( RCSe,RRSe ) * Max( RRSe,CS ) ) ) ) + ( MUC - MUR ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.022707793628291475}, {"determining": "( ( ( PN - MDR ) - ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( ( FirstVNF_Mem_Server - Min( MRS ,( FirstVNF_CPU - Const ) ) ) * ( PN * ( Min( ACS ,Max( Const,MDR ) ) + ( RRS / FirstVNF_CPU ) ) ) ) * Max( ( ( MRS * ( RRS * ACS ) ) / Const ),MDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0022540437063084937}], "44": [{"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) - MLU ) - ( ( ( ( Min( Max( DS,CS ) ,MLU ) / RCSe ) * ( MUC - DS ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MLU ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,( PN * FirstVNF_Mem ) ) * BR ) + MRS ) - ( ( FirstVNF_Mem_Server - BR ) * ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR / MLU ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( MUR / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( ( RMSe * RMSe ) / Max( RCSe,MUM ) ) - CS ) ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.444092714384276}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / RRSe ) ) - ( ( MUM - RRSe ) - RRSe ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( RMSe ,( ( MUM + MUM ) + ( CS * MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.2559693162418391}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6821862348178138, "obj2": 0.13931919618162836}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( Const * FirstVNF_CPU_Server ) - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MRS,FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( Const + RRS ) ) * Max( CRS,MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( MUM - RRSe ),MUM ) ,DS ) - ( ( ( ( MUR - MUC ) + RRSe ) - ( CS * DS ) ) / Max( CS,RMSe ) ) ) ) - ( ( CS - ( ( DS - MUC ) - ( CS + RMSe ) ) ) * CS ) ) - ( ( RMSe + CS ) - Min( MUC ,DS ) ) )", "obj1": 0.7530364372469636, "obj2": 0.09635188724314782}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server + Const ) / Min( FirstVNF_CPU ,( CRS - ACS ) ) ) ) - MRS ) / ( ( FirstVNF_Mem - PN ) * ACS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( FirstVNF_RAM * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( Min( DS ,RCSe ) * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / DS ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.4008097165991903, "obj2": 0.3493836900767183}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * Const ) * ( ( MDR / AMS ) - ( Min( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * ( ACS * FirstVNF_CPU_Server ) ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Max( CS,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + MUC ),MUR ) ) * ( MUR * Max( ( ( Min( MUC ,( MUR / MUM ) ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.5769642736194776}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( CRS - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / ARS ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + DS ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( ( ( MUC - RMSe ) - RCSe ) - ( MLU - MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.7753036437246964, "obj2": 0.09162678014921072}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) - ( ( Max( MRS,( ACS * ( ( ( MDR - ARS ) / ACS ) / MDR ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) / ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( RRSe + ( MUR - MUC ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( ( ( ( ( MUR * RCSe ) / RCSe ) / RRSe ) * RCSe ) / MUR ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6453247067676326}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5786847526335737}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28900872343483586}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( ( PN - MDR ) - ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,Max( ( MUR * MLU ),CS ) ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6358105140003069}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.5921678045047718}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( ( PN - Const ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( MRS ,( CRS / FirstVNF_RAM ) ) ) - ( ( MDR / AMS ) - ( ( ( BR * AMS ) - RRS ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * RRS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( Min( MUM ,Max( RCSe,MUM ) ) - DS ),( MUM * ( ( MLU * ( Min( RMSe ,RMSe ) - Min( MUR ,DS ) ) ) + MLU ) ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUM,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) - ( RRSe + ( MUR - MUC ) ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / MUM ) / DS ) * RMSe ) / MUR ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.6987452751498122}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( Max( DDR,( FirstVNF_CPU - ACS ) ) - ( FirstVNF_CPU - Max( FirstVNF_CPU_Server,( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07894736842105263, "obj2": 0.7196276619700093}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1902834008097166, "obj2": 0.5866627681692327}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.03487651103996167}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07159350670374517}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5168595168419972}, {"determining": "( ( ( ACS - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU_Server ,AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_Mem_Server + ARS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( ( MLU / ( ( MUC / Min( MUR ,MUR ) ) - ( Max( RCSe,RRSe ) * Max( RRSe,CS ) ) ) ) + ( MUC - MUR ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.022707793628291475}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( Min( FirstVNF_RAM ,ACS ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( Max( Max( ( MUC / RCSe ),MUM ),( MUC * MUM ) ) / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.2793522267206478, "obj2": 0.49668018299300387}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,( RRSe + MUM ) ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.04755291889115751}, {"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( ( FirstVNF_Mem * AMS ) + Max( FirstVNF_CPU_Server,( DDR / FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_RAM_Server - ARS ),( FirstVNF_Mem * ( ACS * ARS ) ) ) ) ) - ( ( ARS - Max( MRS,ACS ) ) * ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( Min( ( MLU - RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / RRSe ) ) - ( ( MUM - RRSe ) - RRSe ) ) ) / Min( RCSe ,MUM ) ) - ( Max( CS,MUR ) * Max( Max( ( MUR / RCSe ),( MUM - RRSe ) ),MLU ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6634908865717066}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem * Max( ( FirstVNF_Mem * ( AMS * PN ) ),FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( CS * MLU ),( MLU * CS ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9838056680161943, "obj2": 0.009099378550768651}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.2513727384862831}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Max( AMS,FirstVNF_Mem ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * MUR ) / ( DS * MLU ) ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.5344129554655871, "obj2": 0.24905954513201628}, {"determining": "( Min( ( Const + AMS ) ,DDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MRS ) ) / AMS ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( DDR + ( ( FirstVNF_CPU_Server + CRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / RRSe ) ) - ( ( MUM - RRSe ) - RRSe ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( RMSe ,( ( MUM + MUM ) + ( CS * MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7045981278329444}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( RRS * FirstVNF_Mem ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,( ( ( DS / RCSe ) / MUC ) + RRSe ) ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( ( MUM - RRSe ) - MUM ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.099234034803971}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8117408906882592, "obj2": 0.07100938770391688}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - CRS ) - ( Max( AMS,FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,BR ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * CS ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( MUR,MLU ) - Min( RMSe ,MUC ) ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.6720647773279352, "obj2": 0.14912106813050124}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / MLU ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8238866396761133, "obj2": 0.06436167830804286}, {"determining": "( ( PN + MDR ) - ( ( Const * Max( ( ( FirstVNF_Mem * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ( MDR / ACS ) ,FirstVNF_Mem ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( DS / Min( MUM ,CS ) ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( MUC,MUC ) - RRSe ) ),MUC ) * ( MUM / Min( MUC ,RRSe ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.031116724343609705}, {"determining": "( ( PN - MDR ) - ( ( ( DDR / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server + AMS ) ,Const ) ) ) ) )", "choosing": "( ( Min( ( RMSe * MLU ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( RRSe + MUR ) ) - ( Max( CS,( ( ( MUC / RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7024291497975709, "obj2": 0.12374077672238053}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "Min( ( MDR * FirstVNF_CPU_Server ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( ( AMS - RRS ) / RRS ) ) ) - AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7283781872460844}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,CS ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5116500103388784}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( PN + FirstVNF_CPU ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.047664553749119744}, {"determining": "( ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) - ( ( Max( ACS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6664735782368972}, {"determining": "( ( PN - MDR ) - ( ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - RRS ) ) * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) * Max( ( FirstVNF_RAM_Server - ARS ),( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,( ( ( DS / RCSe ) / MUC ) + RRSe ) ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( MLU,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( ( ( MUM * Min( DS ,DS ) ) - MUC ) * MUR ),MUR ) ) ) - ( RMSe - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08465585572383837}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / ( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.15494627775042916}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "Min( ( MDR * FirstVNF_CPU_Server ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( ( MDR - RRS ) / RRS ) ) ) - AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( ( ( RRSe / RCSe ) / Max( CS,Max( RMSe,RCSe ) ) ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7200747255188567}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) - ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) * ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( BR + AMS ) ) * MDR ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( Min( MUC ,( RCSe * RCSe ) ),( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( MUM * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.7327935222672065, "obj2": 0.10279666186848674}, {"determining": "( Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( FirstVNF_RAM / AMS ) ) ) - MRS ) / Min( ( CRS / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - ( RCSe - CS ) ) + RRSe ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / CS ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4089068825910931, "obj2": 0.34490944314863314}], "45": [{"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Max( ( Max( MRS,( MDR * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,DDR ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( CS,( Max( Max( Max( RCSe,RCSe ),RMSe ),MUM ) * RMSe ) ) - MLU ) - ( ( ( ( Min( Max( DS,CS ) ,MLU ) / RCSe ) * ( MUC - DS ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MLU ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.4607119708252755}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( AMS / FirstVNF_CPU ) + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) / ( MLU * ( CS + ( RRSe + CS ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2578942631157482}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( Min( FirstVNF_RAM ,ACS ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( Max( Max( ( MUC / RCSe ),MUM ),( MUC * MUM ) ) / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.2793522267206478, "obj2": 0.49668018299300387}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_CPU_Server / ACS ) ,MDR ) * ( ( MDR / AMS ) - ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUR ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * Min( MUR ,MUM ) ) )", "obj1": 0.31781376518218624, "obj2": 0.44319099451166405}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5786847526335737}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_RAM * ARS ) ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),PN ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12151880286157171}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Max( Const,FirstVNF_CPU_Server ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( Max( ( MUM / CS ),( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( CS + RRSe ) ) * ( MUR * MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5661406856996047}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( CRS - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / ARS ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + DS ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( ( ( MUC - RMSe ) - RCSe ) - ( MLU - MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.7753036437246964, "obj2": 0.09162678014921072}, {"determining": "( ( PN - MDR ) - ( ( ( PN * CRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU + ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( Min( DS ,MLU ) / RCSe ) / ( MUC / DS ) ),( MUC / MUR ) ) / RCSe ) ,MUC ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.33773211508734796}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6702520492020695}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * FirstVNF_Mem ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Min( FirstVNF_RAM ,( RRS * FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU + Min( RMSe ,( Min( RCSe ,( CS / MUC ) ) + RMSe ) ) ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5554439209394257}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( FirstVNF_RAM / AMS ) ) ) - MRS ) / Min( ( CRS / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - ( RCSe - CS ) ) + RRSe ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / CS ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4089068825910931, "obj2": 0.34490944314863314}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( Min( MDR ,PN ) - ( ( Max( Max( FirstVNF_RAM_Server,( Const + RRS ) ),BR ) - ( AMS + ( ( FirstVNF_CPU_Server * CRS ) + FirstVNF_CPU_Server ) ) ) * ( ARS - Const ) ) )", "choosing": "( ( Max( Max( ( MUR + MUR ),Min( RRSe ,DS ) ),RCSe ) * CS ) - ( ( ( RCSe / Min( DS ,MLU ) ) - ( Min( RCSe ,MLU ) - DS ) ) * MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.48731165884926375}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Max( AMS,FirstVNF_Mem ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * MUR ) / ( DS * MLU ) ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.5344129554655871, "obj2": 0.24905954513201628}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09569724317588682}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( ( ( FirstVNF_RAM * RRS ) + ACS ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( MDR + DDR ) ) ) )", "choosing": "( Min( Min( ( MLU * RMSe ) ,( ( Max( MUR,MUC ) * ( MUM / RMSe ) ) - ( ( MUM - RRSe ) + MUM ) ) ) ,MLU ) - ( Max( CS,( ( ( ( RRSe / ( MLU + MLU ) ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.6951990104411958}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5847351351769877}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( ( MDR / AMS ),( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - Max( CS,RMSe ) ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.0339061903216834}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07159350670374517}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13710542804491788}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5147606689032751}, {"determining": "( ( ( ACS - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU_Server ,AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_Mem_Server + ARS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( ( MLU / ( ( MUC / Min( MUR ,MUR ) ) - ( Max( RCSe,RRSe ) * Max( RRSe,CS ) ) ) ) + ( MUC - MUR ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.022707793628291475}, {"determining": "( ( ( PN - MDR ) - ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / RRSe ) ) - ( ( MUM - RRSe ) - RRSe ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( RMSe ,( ( MUM + MUM ) + ( CS * MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6322992288692842}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem * Max( ( FirstVNF_Mem * ( AMS * PN ) ),FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( CS * MLU ),( MLU * CS ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9838056680161943, "obj2": 0.009099378550768651}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.39878542510121456, "obj2": 0.35075918362701114}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( Max( ( ( FirstVNF_RAM / ACS ) * MDR ),( FirstVNF_Mem + MDR ) ) - Max( Min( CRS ,FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7098032335374682}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( PN - FirstVNF_Mem_Server ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) / Const ) ) ) * ( ( ( Const + MDR ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,( MUC + ( RCSe * RCSe ) ) ) - ( DS + CS ) ) ) ) ) - ( Min( Max( CS,( MLU - ( RCSe * ( ( RMSe * CS ) + CS ) ) ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9210526315789473, "obj2": 0.025956570595371698}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( ( PN - MDR ) - ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6426531384738002}, {"determining": "Min( ( MDR * FirstVNF_CPU_Server ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( ( AMS - RRS ) / RRS ) ) ) - AMS ) - Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( Max( Max( RRSe,CS ),MUM ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7283781872460844}, {"determining": "( ( PN - MDR ) - ( ( ( Max( MDR,Max( FirstVNF_RAM,CRS ) ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( Min( RCSe ,MLU ) + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6418168115742358}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "( ( PN - MDR ) - ( ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - RRS ) ) * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) * Max( ( FirstVNF_RAM_Server - ARS ),( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,( ( ( DS / RCSe ) / MUC ) + RRSe ) ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( MLU,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( ( ( MUM * Min( DS ,DS ) ) - MUC ) * MUR ),MUR ) ) ) - ( RMSe - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08465585572383837}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / ( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6619433198380567, "obj2": 0.15494627775042916}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) * MDR ) ) ) - ( ( ( ( CRS / FirstVNF_RAM ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( MUR / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08111760761975331}, {"determining": "( ( PN + MDR ) - ( ( Const * Max( ( ( FirstVNF_Mem * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( Min( ( MDR / ACS ) ,FirstVNF_Mem ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( DS / Min( MUM ,CS ) ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( MUC,MUC ) - RRSe ) ),MUC ) * ( MUM / Min( MUC ,RRSe ) ) ) )", "obj1": 0.9149797570850202, "obj2": 0.031116724343609705}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,CS ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5116500103388784}, {"determining": "( ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) - ( ( ( MDR + FirstVNF_CPU ) + PN ) / ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( RRSe + ( MUR - MUC ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6628136113193571}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6821862348178138, "obj2": 0.13931919618162836}, {"determining": "( ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) + ( DDR * MRS ) ) ,( ( AMS - MDR ) - DDR ) ) ) - ( ( Max( ACS,( ACS * ( ( FirstVNF_CPU_Server / ACS ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6664735782368972}, {"determining": "( ( PN - AMS ) - ( ( Const * Max( ( ( BR + BR ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( MDR - PN ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( ( CS + RCSe ) / CS ) - DS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUM / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.044552263780817995}, {"determining": "( ( PN - CRS ) - ( ( ( RRS / AMS ) / ( ( CRS / FirstVNF_RAM ) / MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / RRS ) / AMS ) ) ) ) - ( Max( PN,RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( Min( MLU ,RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) - Min( MUM ,CS ) )", "obj1": 0.18218623481781376, "obj2": 0.5946799351395327}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) * PN ) ) * ( Const + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( RCSe * ( RMSe + RRSe ) ) / MUC ) ) * ( ( RMSe + MUC ) * DS ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7186070805602811}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.5921678045047718}], "46": [{"determining": "Min( ( ( ( AMS / Const ) - CRS ) - ACS ) ,( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ) + Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( ( RMSe + MUC ) * DS ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( AMS / FirstVNF_CPU ) + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) / ( MLU * ( CS + ( RRSe + CS ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2578942631157482}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR + AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) + CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / ( ( MUR / MUR ) * Max( MLU,MUR ) ) ) - ( Max( CS,( RCSe + MLU ) ) * ( ( ( Max( MUR,MLU ) * Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.45872264770242627}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_CPU_Server / ACS ) ,MDR ) * ( ( MDR / AMS ) - ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUR ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * Min( MUR ,MUM ) ) )", "obj1": 0.31781376518218624, "obj2": 0.44319099451166405}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5786847526335737}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Max( Const,FirstVNF_CPU_Server ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( Max( ( MUM / CS ),( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( CS + RRSe ) ) * ( MUR * MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5661406856996047}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Max( AMS,FirstVNF_Mem ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * MUR ) / ( DS * MLU ) ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.5344129554655871, "obj2": 0.24905954513201628}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - ( Const - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( Max( MDR,( ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,CS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * ( RCSe - RMSe ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5433742527617553}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.29269651689051396}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.2520155841419698}, {"determining": "( ( ARS - Min( MDR ,Const ) ) - ( ( ( ( PN + ( Max( Min( FirstVNF_CPU_Server ,CRS ),RRS ) - MDR ) ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( Max( ARS,FirstVNF_CPU_Server ) * ( ARS + DDR ) ) ) ) * MDR ) * ( ( Min( Const ,( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( FirstVNF_CPU_Server - ACS ) ,DDR ) ) ) / ( ( PN * FirstVNF_RAM ) * ( MRS / ( ARS / ( FirstVNF_CPU / BR ) ) ) ) ) - CRS ) ) )", "choosing": "( ( MLU - Max( CS,( RMSe / RCSe ) ) ) - ( ( MUC / Min( ( ( ( ( RMSe / MUC ) * ( MUR * RCSe ) ) / ( MUC - ( MUM * MUM ) ) ) * MUR ) ,Max( ( MLU * MUR ),CS ) ) ) * ( ( ( Max( MUR,MLU ) + ( RRSe + MUC ) ) + ( ( ( RCSe + MLU ) / RCSe ) - ( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( RRSe / MUM ) / RRSe ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.19533187793526832}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server - Const ) / AMS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( Min( ACS ,MRS ) * Max( ( Min( FirstVNF_RAM ,ACS ) * ( ACS * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( Max( ( MRS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( Max( Max( ( MUC / RCSe ),MUM ),( MUC * MUM ) ) / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - DS ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.2793522267206478, "obj2": 0.49668018299300387}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( Max( CRS,MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem_Server ,RRS ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + Min( ( ( ( MUC * MUR ) * DS ) - DS ) ,MUC ) ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( RRSe + ( ( ( MUC * RMSe ) / DS ) - MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28582094387210544}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( ( Max( AMS,FirstVNF_Mem ) * ( AMS * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( Max( ACS,Const ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / ( MUM / RRSe ) ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( Min( ( ( RMSe + DS ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.6951832513595495}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09569724317588682}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "( ( CRS - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / ARS ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + DS ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( ( ( MUC - RMSe ) - RCSe ) - ( MLU - MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.09342063561191755}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13710542804491788}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5147606689032751}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( MUR * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6827992828304811}, {"determining": "( ( ( ACS - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU_Server ,AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_Mem_Server + ARS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( ( MLU / ( ( MUC / Min( MUR ,MUR ) ) - ( Max( RCSe,RRSe ) * Max( RRSe,CS ) ) ) ) + ( MUC - MUR ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.022707793628291475}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( DDR + Min( BR ,MRS ) ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - ( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) - ( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Max( RRSe,Max( RMSe,RCSe ) ) - MLU ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * ( DS - MLU ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06905419934423927}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem * Max( ( FirstVNF_Mem * ( AMS * PN ) ),FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( ( CS * MLU ),( MLU * CS ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9838056680161943, "obj2": 0.009099378550768651}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) * ( DDR + ACS ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( MLU,( RMSe / MUC ) ) ,( RMSe - MUC ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( Max( ( Max( ( ( Min( CS ,MUM ) / Max( MLU,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( ( ( MUM * Min( DS ,DS ) ) - MUC ) * MUR ),MUR ) ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004276444612398619}, {"determining": "( ( PN - MDR ) - ( ( ( PN * CRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU + ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( Min( DS ,MLU ) / RCSe ) / ( MUC / DS ) ),( MUC / MUR ) ) / RCSe ) ,MUC ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.33773211508734796}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( ( RRSe * ( MUC + MUM ) ) ,DS ) / RCSe ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7242383635550194}, {"determining": "( ( PN - FirstVNF_Mem_Server ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) / Const ) ) ) * ( ( ( Const + MDR ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,( MUC + ( RCSe * RCSe ) ) ) - ( DS + CS ) ) ) ) ) - ( Min( Max( CS,( MLU - ( RCSe * ( ( RMSe * CS ) + CS ) ) ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9210526315789473, "obj2": 0.025956570595371698}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6702520492020695}, {"determining": "( ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) - ( ( ( MDR + FirstVNF_CPU ) + PN ) / ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( RRSe + ( MUR - MUC ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6628136113193571}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( ( MDR / AMS ),( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - Max( CS,RMSe ) ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.0339061903216834}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( RMSe / MUC ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) / Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( ( MUR - RRSe ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3519660752016941}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( FirstVNF_Mem * Max( ( FirstVNF_Mem / AMS ),FirstVNF_CPU ) ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( DS / CS ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUM / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04310318151351177}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - ( ( ( RMSe + RRSe ) * ( ( RCSe * ( RMSe + RRSe ) ) / MUC ) ) / ( DS * MLU ) ) ) * ( CS * DS ) ) ,( MUR + CS ) )", "obj1": 0.7368421052631579, "obj2": 0.10456967232942309}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( Min( PN ,ACS ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,RRSe ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01218607778807604}, {"determining": "( ( RRS * Const ) - ( ( AMS - FirstVNF_Mem ) * ( MDR * ( ( ARS - MDR ) - Min( ( ( AMS - MDR ) - DDR ) ,( PN / ( MDR + MDR ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR / MUC ) / Min( MUR ,CS ) ),MUM ),RRSe ) + ( ( RCSe - MUC ) / ( ( RCSe + MUR ) * Min( RRSe ,MLU ) ) ) ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + CS ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - Min( ( Min( RCSe ,DS ) + ( RRSe + MUM ) ) ,( MUM * RCSe ) ) )", "obj1": 0.6639676113360324, "obj2": 0.1539631110881802}, {"determining": "( ( Min( ACS ,( MRS - ( ( ( MRS * FirstVNF_CPU ) + FirstVNF_Mem ) + ( Min( ( FirstVNF_CPU_Server - BR ) ,( ARS / CRS ) ) / ARS ) ) ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( MUR / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( ( ( Max( Max( MLU,MLU ),MUR ) - ( ( RCSe * MUM ) + ( MLU - RCSe ) ) ) - MUM ) / MUR ) ) ) )", "obj1": 0.07489878542510121, "obj2": 0.7161564178850454}, {"determining": "( ( PN - MDR ) - ( ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM - RRS ) ) * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) * Max( ( FirstVNF_RAM_Server - ARS ),( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,( ( ( DS / RCSe ) / MUC ) + RRSe ) ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( MLU,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( ( ( MUM * Min( DS ,DS ) ) - MUC ) * MUR ),MUR ) ) ) - ( RMSe - DS ) )", "obj1": 0.7773279352226721, "obj2": 0.08465585572383837}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_RAM * ARS ) ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),PN ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12151880286157171}, {"determining": "( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( ACS * Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * ( RRSe + MUR ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - ( ( RCSe * MLU ) - Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) ,MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.7068558920379311}, {"determining": "( Min( MDR ,PN ) - ( ( Max( Max( FirstVNF_RAM_Server,( Const + RRS ) ),BR ) - ( AMS + ( ( FirstVNF_CPU_Server * CRS ) + FirstVNF_CPU_Server ) ) ) * ( ARS - Const ) ) )", "choosing": "( ( Max( Max( ( MUR + MUR ),Min( RRSe ,DS ) ),RCSe ) * CS ) - ( ( ( RCSe / Min( DS ,MLU ) ) - ( Min( RCSe ,MLU ) - DS ) ) * MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.48731165884926375}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) * MDR ) ) ) - ( ( ( ( CRS / FirstVNF_RAM ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( MUR / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08111760761975331}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( ACS * Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.2834008097165992, "obj2": 0.49113443125150125}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07159350670374517}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,CS ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5116500103388784}, {"determining": "( Max( ( ( FirstVNF_RAM / ACS ) * MDR ),( FirstVNF_Mem + MDR ) ) - Max( Min( CRS ,FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7098032335374682}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5847351351769877}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}], "47": [{"determining": "( ( ( PN - ( RRS + ( DDR * Const ) ) ) - ( ( AMS / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( DDR ,( AMS - Const ) ) )", "choosing": "Min( ( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / Const ) - CRS ) - ACS ) ,( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ) + Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( ( RMSe + MUC ) * DS ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( AMS / FirstVNF_CPU ) + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) / ( MLU * ( CS + ( RRSe + CS ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2578942631157482}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5422128355702723}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_CPU_Server / ACS ) ,MDR ) * ( ( MDR / AMS ) - ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUR ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * Min( MUR ,MUM ) ) )", "obj1": 0.31781376518218624, "obj2": 0.44319099451166405}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13710542804491788}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Max( Const,FirstVNF_CPU_Server ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( Max( ( MUM / CS ),( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( CS + RRSe ) ) * ( MUR * MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5661406856996047}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( PN - MDR ) - ( ( ( PN * CRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU + ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( Min( DS ,MLU ) / RCSe ) / ( MUC / DS ) ),( MUC / MUR ) ) / RCSe ) ,MUC ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.33773211508734796}, {"determining": "( ( PN - MDR ) - ( ( ( ( MDR / AMS ) - CRS ) * ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) ) * ( Max( ( ( AMS * AMS ) - MRS ),AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( CS * ( MLU - ( MUC + RRSe ) ) ) ,DS ) ) ,MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.24702555309939023}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5832132858320467}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - ( Const - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( Max( MDR,( ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,CS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * ( RCSe - RMSe ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5433742527617553}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5786847526335737}, {"determining": "( ( PN - FirstVNF_Mem_Server ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) / Const ) ) ) * ( ( ( Const + MDR ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,( MUC + ( RCSe * RCSe ) ) ) - ( DS + CS ) ) ) ) ) - ( Min( Max( CS,( MLU - ( RCSe * ( ( RMSe * CS ) + CS ) ) ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9210526315789473, "obj2": 0.025956570595371698}, {"determining": "( ( ( Max( AMS,FirstVNF_Mem ) * ( AMS * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( Max( ACS,Const ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / ( MUM / RRSe ) ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( Min( ( ( RMSe + DS ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.6951832513595495}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + Min( MUC ,RMSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.192072183397711}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( ( PN - MDR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - ( ( MDR * Min( FirstVNF_CPU_Server ,ACS ) ) * ( Max( FirstVNF_RAM,BR ) - ( Min( ACS ,( ( ACS * FirstVNF_Mem_Server ) + Const ) ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( ( Min( ( CS / Min( ( RCSe + MUM ) ,( MUR / MLU ) ) ) ,RRSe ) * DS ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2066341725433176}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) - CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( Min( DS ,MLU ) / RCSe ) / ( MUC - DS ) ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.3117408906882591, "obj2": 0.460215500548104}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.4048582995951417, "obj2": 0.3473606046991768}, {"determining": "( ( RRS * Const ) - ( ( AMS - FirstVNF_Mem ) * ( MDR * ( ( ARS - MDR ) - Min( ( ( AMS - MDR ) - DDR ) ,( PN / ( MDR + MDR ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR / MUC ) / Min( MUR ,CS ) ),MUM ),RRSe ) + ( ( RCSe - MUC ) / ( ( RCSe + MUR ) * Min( RRSe ,MLU ) ) ) ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + CS ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - Min( ( Min( RCSe ,DS ) + ( RRSe + MUM ) ) ,( MUM * RCSe ) ) )", "obj1": 0.6639676113360324, "obj2": 0.1539631110881802}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07159350670374517}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( RMSe / MUC ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) / Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( ( MUR - RRSe ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3519660752016941}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( Max( ( ( FirstVNF_RAM / ACS ) * MDR ),( FirstVNF_Mem + MDR ) ) - Max( Min( CRS ,FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7056281263145182}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.29269651689051396}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09569724317588682}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5147606689032751}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( MUR * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6827992828304811}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( ( ACS - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Min( FirstVNF_CPU_Server ,AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_Mem_Server + ARS ) * MDR ) * ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( ( ( MUR + MUC ) - MUM ) + RRSe ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( ( MLU / ( ( MUC / Min( MUR ,MUR ) ) - ( Max( RCSe,RRSe ) * Max( RRSe,CS ) ) ) ) + ( MUC - MUR ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.022707793628291475}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( CRS - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / ARS ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - DS ) ) * RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + DS ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( ( ( MUC - RMSe ) - RCSe ) - ( MLU - MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.09342063561191755}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( ACS * Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.4942703946673955}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( FirstVNF_Mem * Max( ( FirstVNF_Mem / AMS ),FirstVNF_CPU ) ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( DS / CS ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUM / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04310318151351177}, {"determining": "( Min( CRS ,( ARS / DDR ) ) - ( RRS + AMS ) )", "choosing": "( Min( Max( Max( CS,Max( MUR,RMSe ) ),( ( RCSe + CS ) + Min( ( Min( ( MUR * MUM ) ,Min( RRSe ,MUM ) ) + ( MUM - RCSe ) ) ,Min( ( MUM + ( CS - MUR ) ) ,( ( MLU * DS ) + MUC ) ) ) ) ) ,MLU ) - ( ( CS - DS ) * ( ( CS + DS ) * ( ( RRSe + RCSe ) / Min( MUM ,Min( MUM ,Max( MUM,DS ) ) ) ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.2077172589711563}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.2520155841419698}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR + AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) + CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / ( ( MUR / MUR ) * Max( MLU,MUR ) ) ) - ( Max( CS,( RCSe + MLU ) ) * ( ( ( Max( MUR,MLU ) * Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.45872264770242627}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( Min( ( DDR / DDR ) ,ACS ) - ( Min( FirstVNF_Mem_Server ,DDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * Min( ( ( ( ( MLU + CS ) * CS ) + RCSe ) * RRSe ) ,DS ) ) * CS ) - Min( ( ( Min( ( MLU - CS ) ,MLU ) / RCSe ) - ( MUR - DS ) ) ,( MLU - MUC ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5431240322326483}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( ( MDR / AMS ),( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU / RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( MUM / ( ( MLU / MUR ) + Min( MUM ,MUM ) ) ) * ( ( ( Min( MUR ,( Min( DS ,MUM ) / ( MLU / MUR ) ) ) + Max( MUR,MLU ) ) + Min( ( Min( DS ,MLU ) / CS ) ,( MUC - Max( CS,RMSe ) ) ) ) * Max( ( ( DS * Max( RCSe,CS ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.0339061903216834}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS * FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6661829886276571}, {"determining": "( ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) - ( ( ( MDR + FirstVNF_CPU ) + PN ) / ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( RRSe + ( MUR - MUC ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6628136113193571}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6702520492020695}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) * ( DDR + ACS ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( DS,Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.0072768086364147526}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( ( ( PN - ( ( CRS - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) - ( ( RRS + ( DDR * Const ) ) - ( ( AMS - MDR ) - DDR ) ) ) * MDR ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( ( MUC * CS ) - RCSe ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.694331983805668, "obj2": 0.1289920259703728}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( Min( PN ,ACS ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,RRSe ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01218607778807604}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( Min( MDR ,PN ) - ( ( Max( Max( FirstVNF_RAM_Server,( Const + RRS ) ),BR ) - ( AMS + ( ( FirstVNF_CPU_Server * CRS ) + FirstVNF_CPU_Server ) ) ) * ( ARS - Const ) ) )", "choosing": "( ( Max( Max( ( MUR + MUR ),Min( RRSe ,DS ) ),RCSe ) * CS ) - ( ( ( RCSe / Min( DS ,MLU ) ) - ( Min( RCSe ,MLU ) - DS ) ) * MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.48731165884926375}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( DDR + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU - Max( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ),Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06867852286975516}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,CS ) ) ) - ( ( MLU / RMSe ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5116500103388784}, {"determining": "( ( Min( ACS ,AMS ) / FirstVNF_Mem ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Max( ACS,FirstVNF_RAM_Server ) * Min( DDR ,( Const + AMS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) - MUC ) + ( RRSe / RMSe ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) / ( ( MUR * MUR ) / MUM ) ) )", "obj1": 0.7348178137651822, "obj2": 0.1021553740516007}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_RAM * ARS ) ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),PN ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12151880286157171}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( PN - ( Max( MDR,BR ) * ( PN * DDR ) ) ) - ARS ),( ACS * ( ( PN - MDR ) * DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( RRSe ,MUM ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03530561436423422}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) * MDR ) ) ) - ( ( ( ( CRS / FirstVNF_RAM ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( MUR / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08111760761975331}, {"determining": "( ( PN - MDR ) - ( Min( Max( MRS,( ACS * ( ( PN / Max( Const,CRS ) ) / FirstVNF_Mem ) ) ) ,Min( DDR ,( FirstVNF_CPU_Server + ( Const - ( MRS - FirstVNF_RAM_Server ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Max( PN,AMS ) + AMS ) / DDR ) ) ) ) )", "choosing": "( ( DS * ( MUC * ( MLU * MUM ) ) ) - Min( Max( CS,RMSe ) ,( ( ( MUR + ( MLU + MLU ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( ( MUM * MUR ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.11610081765864368}], "48": [{"determining": "Max( ( FirstVNF_RAM_Server * ( ( DDR / DDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,Const ) ) / BR ) )", "choosing": "( ( Max( ( Min( DS ,MLU ) / RCSe ),Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + RRSe ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( DS + MLU ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( RRS + ( DDR * Const ) ) ) - ( ( AMS / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( DDR ,( AMS - Const ) ) )", "choosing": "Min( ( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS * FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.145748987854251, "obj2": 0.6457696460961176}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( AMS / FirstVNF_CPU ) + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) / ( MLU * ( CS + ( RRSe + CS ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2578942631157482}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) - CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / ( ( MUR / MUR ) * Max( MLU,MUR ) ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.4569943352204823}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5268649462615045}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( PN ,( ACS + MDR ) ) * AMS ) / MDR ) ) - ( Min( Min( CRS ,CRS ) ,FirstVNF_CPU ) - PN ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( DS * RCSe ) * ( RMSe + ( ( MUR - RRSe ) / MUR ) ) ) / DS ) ) * ( CS * DS ) ) ,( MUR * ( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7145280223315211}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5832132858320467}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - Min( Max( ( Const * Max( ( Max( MRS,( PN / FirstVNF_CPU ) ) / Const ),Const ) ),FirstVNF_Mem ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MUC ,RRSe ) ) * RMSe ) ) * Max( ( ( Min( RMSe ,( MUM + DS ) ) - MUC ) + ( ( DS - ( MUC * RRSe ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.20338677824644022}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( ACS * Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.4942703946673955}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + Min( MUC ,RMSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.192072183397711}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_CPU_Server / ACS ) ,MDR ) * ( ( MDR / AMS ) - ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUR ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * Min( MUR ,MUM ) ) )", "obj1": 0.31781376518218624, "obj2": 0.44319099451166405}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( ( ( ( MDR / MDR ) * ( MDR + DDR ) ) + PN ) / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( ( DS - RCSe ) + ( MUM + DS ) ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5389458927661368}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13710542804491788}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09270323048200578}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "( ( PN - MDR ) - ( ( ( ( MDR / AMS ) - CRS ) * ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) ) * ( Max( ( ( AMS * AMS ) - MRS ),AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( CS * ( MLU - ( MUC + RRSe ) ) ) ,DS ) ) ,MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.24702555309939023}, {"determining": "( ( ( Max( AMS,FirstVNF_Mem ) * ( AMS * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( Max( ACS,Const ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / ( MUM / RRSe ) ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( Min( ( ( RMSe + DS ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.6951832513595495}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( RMSe / MUC ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) / Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( ( MUR - RRSe ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3519660752016941}, {"determining": "( ( ( RRS * Min( PN ,FirstVNF_RAM_Server ) ) - ( PN * ARS ) ) - ( ( ( MDR + FirstVNF_CPU ) + PN ) / ( ( MDR / AMS ) - ( ACS * Min( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( ( ( RRSe + ( MUR - MUC ) ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( CS,( RMSe * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) ) )", "obj1": 0.13157894736842105, "obj2": 0.6628136113193571}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( ( FirstVNF_Mem * Max( ( FirstVNF_Mem / AMS ),FirstVNF_CPU ) ) / Const ),CRS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe / ( RRSe / MUC ) ) * RMSe ) - ( ( ( MUM - ( ( DS / CS ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( ( MUC * MUC ) - RRSe ) ),MUC ) * ( MUM / Min( MUC ,RRSe ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.04310318151351177}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUC + MUM ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( DS - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5470780018235857}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( Min( MDR ,PN ) - ( ( Max( Max( FirstVNF_RAM_Server,( Const + RRS ) ),BR ) - ( AMS + ( ( FirstVNF_CPU_Server * CRS ) + FirstVNF_CPU_Server ) ) ) * ( ARS - Const ) ) )", "choosing": "( ( Max( Max( ( MUR + MUR ),Min( RRSe ,DS ) ),RCSe ) * CS ) - ( ( ( RCSe / Min( DS ,MLU ) ) - ( Min( RCSe ,MLU ) - DS ) ) * MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.48731165884926375}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( RRS * Const ) - ( ( AMS - FirstVNF_Mem ) * ( MDR * ( ( ARS - MDR ) - Min( ( ( AMS - MDR ) - DDR ) ,( PN / ( MDR + MDR ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR / MUC ) / Min( MUR ,CS ) ),MUM ),RRSe ) + ( ( RCSe - MUC ) / ( ( RCSe + MUR ) * Min( RRSe ,MLU ) ) ) ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + CS ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - Min( ( Min( RCSe ,DS ) + ( RRSe + MUM ) ) ,( MUM * RCSe ) ) )", "obj1": 0.6639676113360324, "obj2": 0.1539631110881802}, {"determining": "( Max( ( ( FirstVNF_RAM / ACS ) * MDR ),( FirstVNF_Mem + MDR ) ) - Max( Min( CRS ,FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7056281263145182}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,DDR ) ) ) * Min( ( PN - MDR ) ,DDR ) ) * ( DDR + ACS ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( DS,Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.0072768086364147526}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5147606689032751}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Max( Const,FirstVNF_CPU_Server ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( Max( ( MUM / CS ),( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( CS + RRSe ) ) * ( MUR * MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5661406856996047}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.34306915484146305}, {"determining": "( ( CRS - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( FirstVNF_CPU / ARS ) ) ,DDR ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08585826432748948}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( Min( DDR ,Min( ARS ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR / ACS ) * MRS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( MLU / RMSe ) - ( ( RMSe + Min( MUC ,RRSe ) ) - Min( MUC ,DS ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MUC ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( ( RMSe * RCSe ) * Min( CS ,( RRSe + DS ) ) ) * MUR ) ) + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9676113360323887, "obj2": 0.01027859608889342}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.19838056680161945, "obj2": 0.5786847526335737}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS * FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6659193196096036}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6702520492020695}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( ( ( PN - ( ( CRS - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) - ( ( RRS + ( DDR * Const ) ) - ( ( AMS - MDR ) - DDR ) ) ) * MDR ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( ( MUC * CS ) - RCSe ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.694331983805668, "obj2": 0.1289920259703728}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_RAM * ARS ) ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),PN ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12151880286157171}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( Min( PN ,ACS ) * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,RRSe ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9615384615384616, "obj2": 0.01218607778807604}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / ( AMS + Max( FirstVNF_Mem_Server,( CRS * Const ) ) ) ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + PN ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( Min( DS ,MUC ) / RCSe ) / ( MUC - DS ) ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.4392712550607287, "obj2": 0.33645865799178604}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / ( ( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Const ) - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ARS * FirstVNF_RAM ) ) / Const ) ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUR ) - MUC ) + Min( ( Max( ( ( Min( DS ,MLU ) / RCSe ) / ( MUC - DS ) ),MUC ) / RCSe ) ,MUC ) ) - ( ( ( RRSe - MLU ) + ( RRSe + CS ) ) * ( ( Max( Max( MUC,MUR ),( MUC / ( RRSe + ( DS / RMSe ) ) ) ) - ( MUC - MUR ) ) * ( MUM + ( ( ( ( DS * MUM ) / MUR ) * Max( Max( RCSe,RRSe ),RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10213775833505878}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( Max( FirstVNF_Mem,AMS ) * ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,Max( MUC,MUR ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( ( CS / MLU ),Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9109311740890689, "obj2": 0.03204135008371352}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07159350670374517}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.25579370247407407}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.29269651689051396}, {"determining": "( ( PN - FirstVNF_Mem_Server ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) / Const ) ) ) * ( ( ( Const + MDR ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,( MUC + ( RCSe * RCSe ) ) ) - ( DS + CS ) ) ) ) ) - ( Min( Max( CS,( MLU - ( RCSe * ( ( RMSe * CS ) + CS ) ) ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9210526315789473, "obj2": 0.025956570595371698}, {"determining": "( ( PN - MDR ) - ( ( ( PN * CRS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU + ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( Min( DS ,MLU ) / RCSe ) / ( MUC / DS ) ),( MUC / MUR ) ) / RCSe ) ,MUC ) ) - ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) )", "obj1": 0.43724696356275305, "obj2": 0.33773211508734796}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( PN - ( Max( MDR,BR ) * ( PN * DDR ) ) ) - ARS ),( ACS * ( ( PN - MDR ) * DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( RRSe ,MUM ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.020887493687234658}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( PN - ( Max( MDR,BR ) * ( PN * DDR ) ) ) - ARS ),( ACS * ( ( PN - MDR ) * DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( RRSe ,MUM ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03530561436423422}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( MUR * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6827992828304811}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / ARS ) ) ) * MDR ) - ( FirstVNF_RAM / AMS ) ) ) - ( PN / BR ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( RCSe / MUR ) ) * MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) * RRSe ) * RRSe ) / ( ( DS * ( ( MUR + CS ) - MUM ) ) + ( CS * DS ) ) ) ) * ( Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) * MUC ) ) )", "obj1": 0.4716599190283401, "obj2": 0.29609267547087414}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.48380566801619435, "obj2": 0.28540106540326826}, {"determining": "( ( PN - MDR ) - ( Min( Max( MRS,( ACS * ( ( PN / Max( Const,CRS ) ) / FirstVNF_Mem ) ) ) ,Min( DDR ,( FirstVNF_CPU_Server + ( Const - ( MRS - FirstVNF_RAM_Server ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Max( PN,AMS ) + AMS ) / DDR ) ) ) ) )", "choosing": "( ( DS * ( MUC * ( MLU * MUM ) ) ) - Min( Max( CS,RMSe ) ,( ( ( MUR + ( MLU + MLU ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( ( MUM * MUR ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.11610081765864368}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUR / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.4817813765182186, "obj2": 0.2873844764439841}], "49": [{"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( RCSe / MUR ) ) * MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) * RRSe ) * RRSe ) / ( ( DS * ( ( MUR + CS ) - MUM ) ) + ( CS * DS ) ) ) ) * ( Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( DDR / DDR ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,Const ) ) / BR ) )", "choosing": "( ( Max( ( Min( DS ,MLU ) / RCSe ),Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + RRSe ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( DS + MLU ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.4939271255060729, "obj2": 0.2815179376131961}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( AMS / FirstVNF_CPU ) + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) / ( MLU * ( CS + ( RRSe + CS ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2578942631157482}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) - CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / ( ( MUR / MUR ) * Max( MLU,MUR ) ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.4569943352204823}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( ( ( ( MDR / MDR ) * ( MDR + DDR ) ) + PN ) / ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( CS,Max( MUR,RCSe ) ) + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( ( DS - RCSe ) + ( MUM + DS ) ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5362533606210862}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5832132858320467}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / MUM ) - Max( CS,Max( MUR,RCSe ) ) ) - ( ( ( Max( DS,Min( MUM ,RMSe ) ) + MUR ) * MUM ) - MLU ) )", "obj1": 0.611336032388664, "obj2": 0.18679933067624016}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( MDR / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.5233506087006279}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUC + MUM ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( DS - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5470780018235857}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( RMSe / MUC ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) / Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( ( MUR - RRSe ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3519660752016941}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( ACS * Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.4942703946673955}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.8076923076923077, "obj2": 0.07159350670374517}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.34306915484146305}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13710542804491788}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.7591093117408907, "obj2": 0.09270323048200578}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.4352226720647773, "obj2": 0.3335428443694863}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Max( Const,FirstVNF_CPU_Server ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( Max( ( MUM / CS ),( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( CS + RRSe ) ) * ( MUR * MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5661406856996047}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( PN - MDR ) - Min( Max( ( Const * Max( ( Max( MRS,( PN / FirstVNF_CPU ) ) / Const ),Const ) ),FirstVNF_Mem ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MUC ,RRSe ) ) * RMSe ) ) * Max( ( ( Min( RMSe ,( MUM + DS ) ) - MUC ) + ( ( DS - ( MUC * RRSe ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.20338677824644022}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( PN - MDR ) - ( ( ( ( MDR / AMS ) - CRS ) * ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) ) * ( Max( ( ( AMS * AMS ) - MRS ),AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( CS * ( MLU - ( MUC + RRSe ) ) ) ,DS ) ) ,MLU ) )", "obj1": 0.5323886639676113, "obj2": 0.24702555309939023}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( ( ( ACS * FirstVNF_CPU ) / ( AMS + Min( FirstVNF_Mem_Server ,( CRS * Const ) ) ) ),AMS ) ) * ( FirstVNF_CPU_Server / ( BR * PN ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( ( RCSe + ( MUM - MUC ) ),CS ),MUM ) ) ) ) - Min( Min( MUC ,DS ) ,MLU ) )", "obj1": 0.14979757085020243, "obj2": 0.640733911410357}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR / ( PN * CRS ) ) + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( ( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.7449392712550608, "obj2": 0.09789643755859599}, {"determining": "( Min( MDR ,PN ) - ( ( Max( Max( FirstVNF_RAM_Server,( Const + RRS ) ),BR ) - ( AMS + ( ( FirstVNF_CPU_Server * CRS ) + FirstVNF_CPU_Server ) ) ) * ( ARS - Const ) ) )", "choosing": "( ( Max( Max( ( MUR + MUR ),Min( RRSe ,DS ) ),RCSe ) * CS ) - ( ( ( RCSe / Min( DS ,MLU ) ) - ( Min( RCSe ,MLU ) - DS ) ) * MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.48731165884926375}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,RCSe ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7273897868473836}, {"determining": "( ( RRS * Const ) - ( ( AMS - FirstVNF_Mem ) * ( MDR * ( ( ARS - MDR ) - Min( ( ( AMS - MDR ) - DDR ) ,( PN / ( MDR + MDR ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR / MUC ) / Min( MUR ,CS ) ),MUM ),RRSe ) + ( ( RCSe - MUC ) / ( ( RCSe + MUR ) * Min( RRSe ,MLU ) ) ) ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + CS ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - Min( ( Min( RCSe ,DS ) + ( RRSe + MUM ) ) ,( MUM * RCSe ) ) )", "obj1": 0.6639676113360324, "obj2": 0.1539631110881802}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - ( Max( ( RRS * Max( Const,( Max( MRS,( CRS * FirstVNF_RAM ) ) / Const ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - ( RMSe + MUC ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MLU,( ( RCSe + MUC ) * ( RCSe * CS ) ) ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) / CS ) ),MUR ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.19763691647290077}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645610029933144}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS * FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.145748987854251, "obj2": 0.6457696460961176}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( MUR * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6827992828304811}, {"determining": "( ( ( Max( AMS,FirstVNF_Mem ) * ( AMS * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( Max( ACS,Const ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / ( MUM / RRSe ) ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( Min( ( ( RMSe + DS ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.6951832513595495}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5147606689032751}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_RAM * ARS ) ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),PN ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12151880286157171}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * Max( ( ( MUC + MUC ) / MUC ),MUC ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.25142779137972326}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( Max( FirstVNF_Mem,AMS ) * ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,Max( MUC,MUR ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( ( CS / MLU ),Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9109311740890689, "obj2": 0.03204135008371352}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_CPU_Server / ACS ) ,MDR ) * ( ( MDR / AMS ) - ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUR ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * Min( MUR ,MUM ) ) )", "obj1": 0.31781376518218624, "obj2": 0.44319099451166405}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + Min( MUC ,RMSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6032388663967612, "obj2": 0.192072183397711}, {"determining": "( ( ( PN - MDR ) - ( ( AMS - FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - Min( ( RRS - CRS ) ,( AMS - Const ) ) )", "choosing": "Min( ( Min( MLU ,( ( MUC / MUC ) + RRSe ) ) + Min( CS ,( RCSe + ( ( RMSe * ( MLU - ( RRSe + RCSe ) ) ) / ( RRSe * CS ) ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.9331983805668016, "obj2": 0.024701862492691823}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6702520492020695}, {"determining": "( ( PN - MDR ) - ( Max( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ),FirstVNF_Mem ) * ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MUC ,RRSe ) ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.771255060728745, "obj2": 0.08674593558724356}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN - MDR ) - ( ( MDR / AMS ) - MDR ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( DS * ( MUC * ( MLU * MUM ) ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.07577836711787488}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( ( ( PN - ( ( CRS - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) - ( ( RRS + ( DDR * Const ) ) - ( ( AMS - MDR ) - DDR ) ) ) * MDR ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( ( MUC * CS ) - RCSe ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.694331983805668, "obj2": 0.1289920259703728}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5161943319838057, "obj2": 0.25579370247407407}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( PN - ( Max( MDR,BR ) * ( PN * DDR ) ) ) - ARS ),( ACS * ( ( PN - MDR ) * DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( RRSe ,MUM ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03530561436423422}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( ( PN - MDR ) - ( Min( Max( MRS,( ACS * ( ( PN / Max( Const,CRS ) ) / FirstVNF_Mem ) ) ) ,Min( DDR ,( FirstVNF_CPU_Server + ( Const - ( MRS - FirstVNF_RAM_Server ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Max( PN,AMS ) + AMS ) / DDR ) ) ) ) )", "choosing": "( ( DS * ( MUC * ( MLU * MUM ) ) ) - Min( Max( CS,RMSe ) ,( ( ( MUR + ( MLU + MLU ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( ( MUM * MUR ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.11610081765864368}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.20040485829959515, "obj2": 0.5776747329798476}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) - MUC ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.8805668016194332, "obj2": 0.04389687078260687}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.47368421052631576, "obj2": 0.29269651689051396}, {"determining": "( ( PN - MDR ) - ( ( DDR * BR ) * ( ( MRS / ( ( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Const ) - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( ARS * FirstVNF_RAM ) ) / Const ) ) ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUR ) - MUC ) + Min( ( Max( ( ( Min( DS ,MLU ) / RCSe ) / ( MUC - DS ) ),MUC ) / RCSe ) ,MUC ) ) - ( ( ( RRSe - MLU ) + ( RRSe + CS ) ) * ( ( Max( Max( MUC,MUR ),( MUC / ( RRSe + ( DS / RMSe ) ) ) ) - ( MUC - MUR ) ) * ( MUM + ( ( ( ( DS * MUM ) / MUR ) * Max( Max( RCSe,RRSe ),RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.7348178137651822, "obj2": 0.10213775833505878}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5140132599070351}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR / MDR ) * ( MDR + ( CRS / DDR ) ) ) ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( RRSe + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7036134399911409}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - FirstVNF_Mem_Server ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) / Const ) ) ) * ( ( ( Const + MDR ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,( MUC + ( RCSe * RCSe ) ) ) - ( DS + CS ) ) ) ) ) - ( Min( Max( CS,( MLU - ( RCSe * ( ( RMSe * CS ) + CS ) ) ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9210526315789473, "obj2": 0.025956570595371698}, {"determining": "( ( ( PN - MDR ) - ( Min( MDR ,AMS ) - ( ( FirstVNF_CPU_Server / ( ( ACS - BR ) + FirstVNF_CPU_Server ) ) * MDR ) ) ) - Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( MUR + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( MLU,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( DS - MUC ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4427900633388876}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + ( FirstVNF_Mem_Server + Min( FirstVNF_CPU_Server ,( ACS / FirstVNF_RAM ) ) ) ) * Min( ( PN - MDR ) ,DDR ) ) * ( DDR + ACS ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Max( Max( DDR,AMS ),Max( FirstVNF_Mem_Server,AMS ) ) ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( Max( ( Max( MUR,RCSe ) + Max( DS,Max( RCSe,( MUC / RRSe ) ) ) ),( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / RCSe ) ) * Max( ( Min( Max( Min( RRSe ,DS ),DS ) ,( MUM + MUR ) ) + RRSe ),MUR ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.0072768086364147526}, {"determining": "( ( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / ARS ) ) ) * MDR ) - ( FirstVNF_RAM / AMS ) ) ) - ( PN / BR ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( RCSe / MUR ) ) * MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) * RRSe ) * RRSe ) / ( ( DS * ( ( MUR + CS ) - MUM ) ) + ( CS * DS ) ) ) ) * ( Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) * MUC ) ) )", "obj1": 0.4716599190283401, "obj2": 0.29609267547087414}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / ( MUM / RRSe ) ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.2867597610042296}], "50": [{"determining": "Min( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ) ,( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( RCSe / MUR ) ) * MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) * RRSe ) * RRSe ) / ( ( DS * ( ( MUR + CS ) - MUM ) ) + ( CS * DS ) ) ) ) * ( Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5832132858320467}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( AMS / FirstVNF_CPU ) + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) / ( MLU * ( CS + ( RRSe + CS ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2578942631157482}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( MDR / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.5233506087006279}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( PN - MDR ) - ( Max( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ),FirstVNF_Mem ) * ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.771255060728745, "obj2": 0.08630268067243489}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( RMSe / MUC ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) / Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( ( MUR - RRSe ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3519660752016941}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.2805099326223827}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( ACS * Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.4942703946673955}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) + Const ) ) ) * ( ( Min( ARS ,( ARS - RRS ) ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),( ( ( MLU / RRSe ) / ( ( DS * RRSe ) / ( RCSe + MUR ) ) ) * CS ) ) ) ) - ( ( CS - RCSe ) - CS ) )", "obj1": 0.9635627530364372, "obj2": 0.01151248525725495}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13710542804491788}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.4352226720647773, "obj2": 0.3335428443694863}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.20040485829959515, "obj2": 0.5776747329798476}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUC + MUM ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( DS - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5470780018235857}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( FirstVNF_RAM_Server + ( ACS + Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ) ) - ( ( Max( MRS,( Min( PN ,FirstVNF_CPU_Server ) * ( MDR * ARS ) ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * Min( FirstVNF_Mem ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) * Min( Max( ( AMS + FirstVNF_RAM_Server ),AMS ) ,DDR ) ) - ( AMS / MDR ) ) ) )", "choosing": "( ( Max( ( DS - DS ),MLU ) / MLU ) - ( Max( ( ( ( ( Min( CS ,RMSe ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS + Max( DS,MUR ) ) ),MUM ) * Min( MUM ,Max( ( MLU + RCSe ),RMSe ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5620174330925021}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Max( Const,FirstVNF_CPU_Server ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( Max( ( MUM / CS ),( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( CS + RRSe ) ) * ( MUR * MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5661406856996047}, {"determining": "( ( PN - MDR ) - Min( Max( ( Const * Max( ( Max( MRS,( PN / FirstVNF_CPU ) ) / Const ),Const ) ),FirstVNF_Mem ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MUC ,RRSe ) ) * RMSe ) ) * Max( ( ( Min( RMSe ,( MUM + DS ) ) - MUC ) + ( ( DS - ( MUC * RRSe ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.20338677824644022}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( AMS,( MDR / ( AMS + Max( FirstVNF_Mem_Server,( CRS * Const ) ) ) ) ) ) * ( FirstVNF_CPU_Server / ( BR * PN ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.14979757085020243, "obj2": 0.6406011283922745}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) - CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / ( ( MUR / MUR ) * Max( MLU,MUR ) ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.4569943352204823}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( ( ( ( MDR / MDR ) * ( MDR + DDR ) ) + PN ) / ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( CS,Max( MUR,RCSe ) ) + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( ( DS - RCSe ) + ( MUM + DS ) ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5362533606210862}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,RCSe ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7273897868473836}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.34306915484146305}, {"determining": "( Min( MDR ,PN ) - ( ( Max( Max( FirstVNF_RAM_Server,( Const + RRS ) ),BR ) - ( AMS + ( ( FirstVNF_CPU_Server * CRS ) + FirstVNF_CPU_Server ) ) ) * ( ARS - Const ) ) )", "choosing": "( ( Max( Max( ( MUR + MUR ),Min( RRSe ,DS ) ),RCSe ) * CS ) - ( ( ( RCSe / Min( DS ,MLU ) ) - ( Min( RCSe ,MLU ) - DS ) ) * MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.48731165884926375}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_RAM * ARS ) ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),PN ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12151880286157171}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( PN - MDR ) - ( Min( Max( MRS,( ACS * ( ( PN / Max( Const,CRS ) ) / FirstVNF_Mem ) ) ) ,Min( DDR ,( FirstVNF_CPU_Server + ( Const - ( MRS - FirstVNF_RAM_Server ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Max( PN,AMS ) + AMS ) / DDR ) ) ) ) )", "choosing": "( ( DS * ( MUC * ( MLU * MUM ) ) ) - Min( Max( CS,RMSe ) ,( ( ( MUR + ( MLU + MLU ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( ( MUM * MUR ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.11610081765864368}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( MUC * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.4614313703608284}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - ( Max( ( RRS * Max( Const,( Max( MRS,( CRS * FirstVNF_RAM ) ) / Const ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - ( RMSe + MUC ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MLU,( ( RCSe + MUC ) * ( RCSe * CS ) ) ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) / CS ) ),MUR ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.19763691647290077}, {"determining": "( ( PN - MDR ) - Max( Max( AMS,FirstVNF_Mem ),( MDR * ( ( Min( RRS ,( MRS - AMS ) ) * AMS ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( ( MLU + CS ) + MLU ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( ( MUC - MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.16721656985873423}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( MDR - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server - RRS ),( Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) * ACS ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( Max( CS,Max( RMSe,RCSe ) ) ,( ( RRSe + MUM ) * Max( MLU,RRSe ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - Max( ( ( MLU - RRSe ) + ( DS + RRSe ) ),Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.1437246963562753, "obj2": 0.6437661430505494}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6827418232270271}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem_Server - RRS ) * AMS ) ) * MDR ) ) * MDR ) ) )", "choosing": "( ( MLU - Max( MLU,Max( RMSe,RCSe ) ) ) - ( CS / RRSe ) )", "obj1": 0.9392712550607287, "obj2": 0.01951682467163833}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR * ( FirstVNF_CPU_Server / ACS ) ) + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6702520492020695}, {"determining": "( ( ( Max( AMS,FirstVNF_Mem ) * ( AMS * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( Max( ACS,Const ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / ( MUM / RRSe ) ) / RRSe ) * RMSe ) / MUR ) ) * ( MUC * Max( Min( ( ( RMSe + DS ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.6951832513595495}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5147606689032751}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( ( ( ( MDR / MDR ) * ( MDR + DDR ) ) + PN ) / ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( CS,Max( MUR,RCSe ) ) + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( ( DS - RCSe ) + ( MUM + DS ) ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5391321444440683}, {"determining": "( ( PN - FirstVNF_Mem_Server ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) / Const ) ) ) * ( ( ( Const + MDR ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,( MUC + ( RCSe * RCSe ) ) ) - ( DS + CS ) ) ) ) ) - ( Min( Max( CS,( MLU - ( RCSe * ( ( RMSe * CS ) + CS ) ) ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9210526315789473, "obj2": 0.025956570595371698}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( Max( FirstVNF_Mem,AMS ) * ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,Max( MUC,MUR ) ) ,MLU ) - ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) ) ) - ( CS * ( CS - ( Max( DS,MLU ) - ( RMSe + CS ) ) ) ) ) - ( ( RMSe + CS ) + Min( Max( ( CS / MLU ),Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.9109311740890689, "obj2": 0.03204135008371352}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_CPU_Server / ACS ) ,MDR ) * ( ( MDR / AMS ) - ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUR ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * Min( MUR ,MUM ) ) )", "obj1": 0.31781376518218624, "obj2": 0.44319099451166405}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS * FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( ( MUC * CS ) - RCSe ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6602884420193521}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * Max( ( ( RRSe + MUC ) / MUC ),MUC ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5344129554655871, "obj2": 0.24386020133876968}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN - MDR ) - ( ( MDR / AMS ) - MDR ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( DS * ( MUC * ( MLU * MUM ) ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.07577836711787488}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR * ( PN / ( MDR - DDR ) ) ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( MLU + CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6664216390592301}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( ( ( PN - ( ( CRS - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ) - ( ( RRS + ( DDR * Const ) ) - ( ( AMS - MDR ) - DDR ) ) ) * MDR ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( ( MUC * CS ) - RCSe ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.694331983805668, "obj2": 0.1289920259703728}, {"determining": "( ( PN - CRS ) - ( ( Max( MDR,( ACS * ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU / AMS ) ) / ( MDR / AMS ) ) ) ) / ( ACS * FirstVNF_RAM_Server ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( MLU,RCSe ) ) ) - ( ( ( ( MUR * CS ) + RRSe ) + ( RRSe + DS ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) - ( MLU + CS ) ) / MUR ) * Max( ( ( Min( ( RRSe / RCSe ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6890199562599721}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( PN - ( Max( MDR,BR ) * ( PN * DDR ) ) ) - ARS ),( ACS * ( ( PN - MDR ) * DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( RRSe ,MUM ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03530561436423422}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + Min( MUC ,RMSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6255060728744939, "obj2": 0.18356032620690532}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645203762560614}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_RAM / DDR ) ) ) * MDR ) ) ) - ( ( ( Max( AMS,FirstVNF_Mem ) / ACS ) * CRS ) * ( Max( ARS,ACS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,ACS ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / Max( Min( ( RCSe - RRSe ) ,RRSe ),MUC ) ) * RRSe ) * DS ) * Min( ( MLU - DS ) ,( ( ( RMSe + RRSe ) * Max( Min( Max( DS,MUC ) ,( RRSe / RRSe ) ),CS ) ) / Max( CS,MUM ) ) ) ) ,( MUR + CS ) )", "obj1": 0.6740890688259109, "obj2": 0.14570339810048552}, {"determining": "( ( ( PN - MDR ) - ( Min( MDR ,AMS ) - ( ( FirstVNF_CPU_Server / ( ( ACS - BR ) + FirstVNF_CPU_Server ) ) * MDR ) ) ) - Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( MUR + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( MLU,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( DS - MUC ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.0068258612365979495}, {"determining": "( ( RRS * Const ) - ( ( AMS - FirstVNF_Mem ) * ( MDR * ( ( ARS - MDR ) - Min( ( ( AMS - MDR ) - DDR ) ,( PN / ( MDR + MDR ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR / MUC ) / Min( MUR ,CS ) ),MUM ),RRSe ) + ( ( RCSe - MUC ) / ( ( RCSe + MUR ) * Min( RRSe ,MLU ) ) ) ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + CS ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - Min( ( Min( RCSe ,DS ) + ( RRSe + MUM ) ) ,( MUM * RCSe ) ) )", "obj1": 0.6639676113360324, "obj2": 0.1539631110881802}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * ( MUM + MUR ) ) / ( ( DS * CS ) / Max( ( RMSe / Max( CS,( MLU * RCSe ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) * MUC ) ,RRSe ) - DS ) ,( MUR * MLU ) ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06918476576625955}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) - MUC ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.8805668016194332, "obj2": 0.04389687078260687}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) + ( RMSe + CS ) ) )", "obj1": 0.9919028340080972, "obj2": 0.002553444390948966}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) ) - ( Max( AMS,MDR ) * ( MDR * ( ( Max( CRS,AMS ) - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ) ) ) ) )", "choosing": "( ( Min( ( ( ( ( CS * ( RMSe - CS ) ) * MUM ) * RRSe ) - MUC ) ,MLU ) - MUC ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( RRSe + MUM ) ) ) ) ) ,DS ) ) )", "obj1": 0.8825910931174089, "obj2": 0.043334081557036976}, {"determining": "( ( ( PN - MDR ) - ( Min( MDR ,AMS ) - ( ( FirstVNF_CPU_Server / ( ( ACS - BR ) + FirstVNF_CPU_Server ) ) * MDR ) ) ) - Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( MUR + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( MLU,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( DS - MUC ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4427900633388876}, {"determining": "( ( PN - MDR ) - ( ( AMS / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( ( RRSe + CS ) + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6720647773279352, "obj2": 0.1466486652854901}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.7611336032388664, "obj2": 0.09200147178123606}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( Min( Max( MRS,( ACS * ( ( PN / Max( Const,FirstVNF_Mem_Server ) ) / AMS ) ) ) ,Min( ( FirstVNF_CPU_Server + ACS ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / MLU ) / ( MUC - DS ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7226720647773279, "obj2": 0.10955346448593235}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( Min( MUR ,MLU ) + RCSe ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5090075778485467}], "51": [{"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ) ,( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,BR ) / ( ( ( Min( Max( ( FirstVNF_RAM - PN ),AMS ) ,FirstVNF_RAM_Server ) - ARS ) - Max( ( Min( DDR ,( FirstVNF_CPU_Server + BR ) ) + ( RRS * FirstVNF_CPU ) ),Max( Min( FirstVNF_RAM_Server ,( PN + RRS ) ),RRS ) ) ) - Max( BR,( FirstVNF_CPU_Server - MRS ) ) ) ),( ( ( FirstVNF_RAM * Min( Const ,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server / RRS ) ) ) - DDR ) )", "choosing": "( ( MUM + ( ( MUC - RCSe ) / MUR ) ) / Max( DS,RCSe ) )", "obj1": 0.05263157894736842, "obj2": 0.7748894482525595}, {"determining": "( ( PN - MDR ) - ( Max( ( RRS * Max( Const,( Max( MRS,( CRS * FirstVNF_RAM ) ) / Const ) ) ),FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - ( RMSe + MUC ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( MLU,( ( RCSe + MUC ) * ( RCSe * CS ) ) ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) / CS ) ),MUR ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.19763691647290077}, {"determining": "( ( Max( FirstVNF_CPU,ACS ) - PN ) - ( ( ( ( ( ACS * Max( ( FirstVNF_RAM_Server - Const ),CRS ) ) - DDR ) * ( FirstVNF_CPU * ( Min( CRS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * FirstVNF_RAM_Server ) * ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server + RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR * MUR ) / ( MUR / MUC ) ),MUM ),RRSe ) + MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + RRSe ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * Max( RRSe,Min( ( ( ( MLU + RMSe ) * MUR ) / RRSe ) ,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.30190948529465433}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( FirstVNF_CPU_Server + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + Min( MUC ,RMSe ) ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6255060728744939, "obj2": 0.18356032620690532}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( ( MDR / AMS ) + AMS ) ) * MDR ) ) ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( RMSe - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) ) )", "obj1": 0.7408906882591093, "obj2": 0.1006453842809312}, {"determining": "( ( ( MDR - PN ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / ( ACS / FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / Const ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( ( ( ACS * MRS ) + CRS ) * ( MDR - ( MDR - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,Max( MUC,( ( MUC + MUC ) / MUC ) ) ) - ( ( ( RMSe * Max( DS,DS ) ) * ( MUM * DS ) ) / ( RCSe + ( CS + ( CS - RRSe ) ) ) ) ) + RRSe ) - ( CS * ( CS - ( ( RMSe + Min( ( RMSe * DS ) ,Max( RRSe,MUM ) ) ) - ( RMSe + CS ) ) ) ) ) - ( ( Max( RRSe,( ( RMSe * RRSe ) + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,MUR ) / MUC ) + RRSe ),MUR ) ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RCSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.38461538461538464, "obj2": 0.38493359569406665}, {"determining": "( Max( ARS,FirstVNF_CPU ) - Max( Min( FirstVNF_RAM_Server ,MRS ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC * Min( ( MUM + ( RCSe / DS ) ) ,MUC ) ),( CS * Min( RRSe ,( MLU / RCSe ) ) ) ) - Max( MUM,MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.31284023179066045}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( DDR * ( PN / ( ( RRS - DDR ) - DDR ) ) ) ) ) - ( ( ( PN / BR ) - ( PN + FirstVNF_RAM ) ) / Max( Const,Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( MUM / RMSe ) ) - Max( ( MUM - RRSe ),( ( ( RCSe - RMSe ) / MUR ) / DS ) ) ) ) / ( RRSe + Min( MUM ,( DS * ( ( ( MUR / RRSe ) * ( DS / CS ) ) - RCSe ) ) ) ) ) - ( Max( CS,( ( Max( Max( ( MLU + RMSe ),RMSe ),RRSe ) * RRSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUM ),RMSe ) * Max( ( ( ( RMSe + ( DS - DS ) ) - MLU ) + RRSe ),MUR ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.3942862730781956}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.7611336032388664, "obj2": 0.09200147178123606}, {"determining": "( ( PN - MDR ) - ( Max( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ),FirstVNF_Mem ) * ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.771255060728745, "obj2": 0.08630268067243489}, {"determining": "( Max( ( PN + FirstVNF_Mem_Server ),( ( Min( ( BR / PN ) ,( MDR * FirstVNF_RAM ) ) * AMS ) / MDR ) ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MLU - Min( Max( MLU,DS ) ,MUR ) ) - Max( CS,Min( RCSe ,RCSe ) ) ) - ( ( RMSe * ( Max( ( MLU / RCSe ),( RRSe - DS ) ) * Max( CS,CS ) ) ) * Max( Min( RRSe ,MUC ),MUC ) ) )", "obj1": 0.5506072874493927, "obj2": 0.2417416825813622}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Max( Const,FirstVNF_CPU_Server ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( Max( ( MUM / CS ),( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( CS + RRSe ) ) * ( MUR * MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5661406856996047}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( RMSe / MUC ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) / Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( ( MUR - RRSe ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3967611336032389, "obj2": 0.3519660752016941}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( MDR / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( Max( RMSe,RCSe ) * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.5233506087006279}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( ACS * Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( CS,( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.4942703946673955}, {"determining": "Min( ( Min( Max( AMS,( CRS + AMS ) ) ,AMS ) * MRS ) ,Max( ( ( Min( MRS ,ACS ) - FirstVNF_CPU ) - Const ),Max( ( FirstVNF_RAM + MRS ),MDR ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) / Max( ( Min( MUC ,MLU ) - RCSe ),DS ) ) - ( DS * MUR ) ) / ( Max( ( DS / MUC ),DS ) + Min( Max( RRSe,( MUM / Min( ( ( MUR / MUR ) * Max( MLU,MUR ) ) ,( MUR + RMSe ) ) ) ) ,( Min( RCSe ,RMSe ) * RMSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.05597901262591402}, {"determining": "Max( ( FirstVNF_RAM - MRS ),( ARS + ( ( Min( ( Const - ( MRS - FirstVNF_RAM_Server ) ) ,AMS ) * ( FirstVNF_Mem / DDR ) ) - Const ) ) )", "choosing": "( ( MUR * DS ) / ( DS * ( MUC * ( MLU * MUM ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7561305144349897}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( FirstVNF_CPU_Server + ( Const - ( MRS - FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) - CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / ( ( MUR / MUR ) * Max( MLU,MUR ) ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( MUR / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.5080971659919028, "obj2": 0.27953942220875344}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( PN - ( PN - MDR ) ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RRSe * DS ) * Max( ( ( RRSe + MUC ) / MUC ),MUC ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.2549215621227722}, {"determining": "( ( PN - MDR ) - ( ( Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / ( CRS * BR ) ) / Const ) ) ) / Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) * ( ( MDR / AMS ) - ( ( ACS + FirstVNF_RAM_Server ) * ( ARS - Min( FirstVNF_CPU_Server ,BR ) ) ) ) ) )", "choosing": "( ( RMSe + MUR ) - ( Max( CS,MUR ) + ( MUC * ( MUM - ( ( CS * ( RRSe - Max( CS,MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6236023127645002}, {"determining": "( ( PN - MDR ) - ( ( AMS / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( ( RRSe + CS ) + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6700404858299596, "obj2": 0.14511475222918213}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1882591093117409, "obj2": 0.5832132858320467}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( AMS / FirstVNF_CPU ) + Max( Const,ACS ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * ( RMSe + RRSe ) ) / DS ) ) / ( MLU * ( CS + ( RRSe + CS ) ) ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5101214574898786, "obj2": 0.2578942631157482}, {"determining": "( Min( ( RRS * FirstVNF_Mem_Server ) ,MDR ) - ( ( AMS / MDR ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( ( ( Min( PN ,MDR ) + Const ) - ( ( AMS - AMS ) / DDR ) ) + FirstVNF_CPU_Server ) ,DDR ) ) ) )", "choosing": "( ( ( ( MLU * RMSe ) * ( ( Max( MUR,MUR ) * ( RMSe / MUM ) ) - ( ( RRSe - MUM ) - MUM ) ) ) / MLU ) - Min( RRSe ,( MUC + DS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4115545531661353}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * MDR ) ,( ( ( ( FirstVNF_RAM_Server - Min( Const ,( Const + ARS ) ) ) - ( CRS * ACS ) ) * Max( FirstVNF_CPU,CRS ) ) * ( Min( ( FirstVNF_CPU_Server + AMS ) ,DDR ) - Min( ACS ,ACS ) ) ) )", "choosing": "( ( Max( RCSe,MUM ) - ( ( ( Min( MUR ,Min( MUR ,RMSe ) ) - ( ( RMSe / MUC ) - CS ) ) / RRSe ) * CS ) ) / ( Max( ( MUM * ( Max( Max( ( RMSe - RRSe ),MUR ),MUC ) / ( Max( Max( MLU,MUC ),MLU ) - ( ( MUC * RRSe ) / RRSe ) ) ) ),MUC ) * ( MUR / Min( MUC ,RRSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.07666024128773186}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / ( Max( Min( PN ,FirstVNF_CPU_Server ),FirstVNF_CPU ) - ARS ) ) - Min( FirstVNF_CPU ,( ACS - PN ) ) ) ) - ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( ( MDR + PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( RMSe * ( ( RRSe / RCSe ) - RRSe ) ) / MUR ) * Max( Min( MLU ,RRSe ),MUR ) ) * ( ( ( Max( MUR,RCSe ) + Max( ( ( DS - MUR ) * ( RMSe - MLU ) ),Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( DS ,( RRSe * ( RCSe + MUM ) ) ) / MLU ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3360323886639676, "obj2": 0.42498190548635373}, {"determining": "( Max( RRS,( BR / ( Max( FirstVNF_RAM_Server,Min( CRS ,BR ) ) / Min( BR ,BR ) ) ) ) - ( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_CPU_Server ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server / Max( ( ACS + MRS ),PN ) ) / AMS ) - Max( ( ( MRS + MDR ) / ACS ),( ( CRS * Const ) - ARS ) ) ) ) )", "choosing": "( ( MUC * ( ( RMSe / ( DS / ( RMSe + MLU ) ) ) / ( ( ( Min( Min( MUC ,CS ) ,RRSe ) * CS ) - MUM ) / MLU ) ) ) - ( ( ( MLU / RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Max( RCSe,Max( ( Min( MUM ,CS ) / MUM ),MUM ) ) + Min( MUM ,( MUR + Min( Min( MLU ,MLU ) ,RCSe ) ) ) ) ) ) )", "obj1": 0.8259109311740891, "obj2": 0.06374763521219133}, {"determining": "( ( ( PN - MDR ) - ( ( AMS / MDR ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( Const * FirstVNF_Mem ) - Min( CRS ,FirstVNF_RAM_Server ) ) ) ) * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( AMS * ( FirstVNF_CPU_Server / Const ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RRSe / RCSe ) / ( MUM / CS ) ) * RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - MUC ) + RRSe ),RCSe ) ) * ( ( ( Min( DS ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) + ( Max( MUR,MLU ) + ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ) ) ) * Max( ( ( Min( MUC ,MLU ) - ( ( MUR - MUR ) * ( MLU - DS ) ) ) + ( RMSe * ( RCSe - ( MLU * DS ) ) ) ),MUR ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.43655650226615}, {"determining": "Min( ( ( ( PN / ( MRS * AMS ) ) - ( ( FirstVNF_Mem * ( ( MDR * Max( AMS,CRS ) ) * FirstVNF_CPU_Server ) ) + ( ( AMS / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - Min( ( Max( MRS,( FirstVNF_CPU_Server - MDR ) ) - Min( MDR ,RRS ) ) ,( FirstVNF_CPU_Server - AMS ) ) ) * Max( ( ( Max( BR,PN ) / RRS ) * MDR ),DDR ) ) ) ,Max( ACS,( ( FirstVNF_Mem_Server * Max( CRS,FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( MLU / MUR ) / CS ) / MUR ) - ( MUC - RRSe ) )", "obj1": 0.854251012145749, "obj2": 0.051839009239088685}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( Max( Min( DDR ,MDR ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUC + MUM ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( DS + RRSe ),MUR ) ) * ( ( DS - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.21862348178137653, "obj2": 0.5486440314569386}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,ARS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,Min( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) ,( ( MUM - RRSe ) - ( Min( ( MLU + MUM ) ,MUR ) * MUR ) ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( ( MUC / MLU ) - MUC ) + ( ( ( DS + MLU ) - ( MUR / RCSe ) ) * MLU ) ),MUR ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.3221200159637612}, {"determining": "( ( PN - MDR ) - Min( Max( ( Const * Max( ( Max( MRS,( PN / FirstVNF_CPU ) ) / Const ),Const ) ),FirstVNF_Mem ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / Min( MUC ,RRSe ) ) * RMSe ) ) * Max( ( ( Min( RMSe ,( MUM + DS ) ) - MUC ) + ( ( DS - ( MUC * RRSe ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.5870445344129555, "obj2": 0.20338677824644022}, {"determining": "( ( ( PN - MDR ) + ( ( AMS / AMS ) + ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) * MDR ) ) ) - ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( DS - Min( ( DS + MUC ) ,( MUM * RCSe ) ) ) / MUM ) * ( MUC * ( RCSe * ( ( MUM + RCSe ) - RMSe ) ) ) ) * Max( ( ( Min( RCSe ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( MUM * CS ) + ( Min( ( MUC * ( MUC + MUM ) ) ,DS ) / RCSe ) ) * Max( Min( ( Min( MLU ,MUC ) - MUC ) ,RRSe ),MUR ) ) ) )", "obj1": 0.8663967611336032, "obj2": 0.04824699002809423}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( ( MUC * CS ) - RCSe ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.4797570850202429, "obj2": 0.28867876816371424}, {"determining": "( ( PN - MDR ) - Max( ( ( ( ( ( ( FirstVNF_RAM * BR ) / MDR ) * ( MDR + ( CRS / DDR ) ) ) + FirstVNF_CPU ) / Const ) / Const ),RRS ) )", "choosing": "( ( MUC * ( MLU - CS ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( MUC - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6167854715482306}, {"determining": "( ( Const + ( BR + FirstVNF_Mem ) ) - ( PN - RRS ) )", "choosing": "( ( ( ( Max( MUR,CS ) + Max( ( RRSe + ( Min( MUC ,MUR ) - MUC ) ),Min( Min( MUC ,Min( MUM ,MUM ) ) ,Max( MLU,RMSe ) ) ) ) + Min( Min( ( Max( RMSe,MLU ) * ( MUM + ( MUC - RRSe ) ) ) ,RMSe ) ,Max( ( RMSe - ( MUC + Max( RCSe,MUC ) ) ),( MUC - ( ( RRSe - MUR ) + DS ) ) ) ) ) - ( RRSe + Max( Max( ( CS * ( ( MUM * MUM ) - Max( MUC,RRSe ) ) ),MUR ),( MLU / DS ) ) ) ) - ( ( Min( MUC ,MUR ) - MUC ) + RRSe ) )", "obj1": 0.3016194331983806, "obj2": 0.47357358198412125}, {"determining": "( ( ( BR / FirstVNF_CPU_Server ) - FirstVNF_CPU ) - ( ( ( BR * FirstVNF_CPU ) * ( ( CRS / AMS ) * MDR ) ) * ( ( MDR * ARS ) - Max( ( Max( FirstVNF_CPU_Server,( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( Const * FirstVNF_Mem_Server ) ) ) * Min( ( BR + FirstVNF_CPU_Server ) ,DDR ) ),( FirstVNF_RAM_Server - ARS ) ) ) ) )", "choosing": "( Max( RMSe,CS ) - ( ( Max( ( RRSe + ( ( MUR + MUC ) - MUM ) ),MUR ) * ( MUR / ( ( ( CS + MUR ) * MLU ) * RMSe ) ) ) * ( ( Max( ( ( RMSe - MUC ) + Max( MUC,Max( DS,MUM ) ) ),RCSe ) + Min( RRSe ,( ( CS / DS ) + RCSe ) ) ) + ( DS + RCSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.21257367695259108}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( MDR - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + RRSe ) + ( Min( Max( CS,Max( RMSe,RCSe ) ) ,( RRSe * ( MUC + MUM ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6371825688315295}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.5976349998694925}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,( CRS * ( BR / DDR ) ) ) ) ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ( ( AMS / Const ) - CRS ) ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * MLU ) - Max( MUR,MLU ) ) ) / ( ( MUR / MUR ) * Max( MLU,MUR ) ) ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.3117408906882591, "obj2": 0.4569943352204823}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ACS - ( Max( Min( CRS ,FirstVNF_Mem ),BR ) / FirstVNF_RAM_Server ) ) + Min( MRS ,DDR ) ) ) - MDR ) - Max( ( FirstVNF_CPU / FirstVNF_RAM ),ARS ) )", "choosing": "( Min( ( Min( DS ,MLU ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( ( DS - ( ( DS + RRSe ) - Max( MLU,RRSe ) ) ) * Min( RCSe ,RCSe ) ) ) - ( MUR / ( ( MUC / RRSe ) * RMSe ) ) ) ) - ( ( MLU - Min( Min( Max( ( MUC - MUR ),( RMSe * MUR ) ) ,DS ) ,MUC ) ) * ( ( CS + DS ) * Max( ( ( ( DS / RCSe ) / MUC ) + RRSe ),( CS - Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.2692307692307692, "obj2": 0.5073123600250069}, {"determining": "( ( ( Max( ( BR - FirstVNF_CPU ),FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / MDR ) + Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) ) ) * ( ( ( ( ARS + FirstVNF_RAM ) / Min( BR ,FirstVNF_CPU_Server ) ) - Const ) * Const ) ) - Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * Max( MUM,MUR ) ) / ( ( DS * CS ) / Min( Max( MUR,RCSe ) ,MUR ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7351840824554033}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( ( CS - RCSe ) - CS ) - ( ( ( RRSe + ( Max( ( ( DS / CS ) / ( RMSe + DS ) ),( ( RCSe - MUR ) - Max( CS,DS ) ) ) / ( MUR - ( MUR + RCSe ) ) ) ) + ( MLU - RRSe ) ) * ( ( CS + DS ) + Max( ( ( ( DS / RCSe ) / MUC ) + RCSe ),MUR ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.01459727030267787}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * AMS ) * Max( ( ( FirstVNF_CPU - ( ACS * FirstVNF_RAM ) ) / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Const ) ),( DDR * FirstVNF_RAM_Server ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.5647773279352226, "obj2": 0.22867361519506696}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( ( Min( ACS ,Max( MDR,FirstVNF_Mem ) ) + ( DDR / ( ACS + FirstVNF_CPU_Server ) ) ) * PN ) ) * ( ARS + AMS ) ) * ( ( FirstVNF_Mem / AMS ) - ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( MLU * DS ) * ( RMSe + RRSe ) ) / MUC ) ) * ( DS * ( ( RRSe * Min( MLU ,DS ) ) + MUC ) ) ) ,Min( ( ( DS / MUM ) / ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.13562753036437247, "obj2": 0.6528683424008879}, {"determining": "Max( ( FirstVNF_RAM_Server * ( ( ( FirstVNF_CPU_Server + BR ) - ( Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) + ( FirstVNF_Mem_Server + ( ( ACS * RRS ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) ) - Max( BR,MDR ) ) ),( ( ( ACS - FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server / Const ) ) / BR ) )", "choosing": "( ( Max( MUC,Max( RRSe,MLU ) ) * ( Max( ( MUC * RRSe ),MLU ) + ( Max( ( MUR + DS ),( RCSe + ( ( DS + MUR ) * MUM ) ) ) * ( ( ( MUM * MLU ) * RMSe ) / Max( ( ( MLU * MUM ) + MUC ),( RCSe / ( RMSe / MUR ) ) ) ) ) ) ) / Max( MUM,MUC ) )", "obj1": 0.06072874493927125, "obj2": 0.7469867605643906}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.4959514170040486, "obj2": 0.28047353558997923}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( ( ( ( MDR / MDR ) * ( MDR + DDR ) ) + PN ) / ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( CS,Max( MUR,RCSe ) ) + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( ( DS - RCSe ) + ( MUM + DS ) ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5362533606210862}, {"determining": "( ( PN - FirstVNF_Mem_Server ) - ( ( Const * Max( FirstVNF_Mem,( ( ARS / ARS ) / Const ) ) ) * ( ( ( Const + MDR ) / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,( MUC + ( RCSe * RCSe ) ) ) - ( DS + CS ) ) ) ) ) - ( Min( Max( CS,( MLU - ( RCSe * ( ( RMSe * CS ) + CS ) ) ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.9210526315789473, "obj2": 0.025956570595371698}, {"determining": "( Min( MDR ,PN ) - ( ( Max( Max( FirstVNF_RAM_Server,( Const + RRS ) ),BR ) - ( AMS + ( ( FirstVNF_CPU_Server * CRS ) + FirstVNF_CPU_Server ) ) ) * ( ARS - Const ) ) )", "choosing": "( ( Max( Max( ( MUR + MUR ),Min( RRSe ,DS ) ),RCSe ) * CS ) - ( ( ( RCSe / Min( DS ,MLU ) ) - ( Min( RCSe ,MLU ) - DS ) ) * MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.48731165884926375}, {"determining": "( ( PN - MDR ) - ( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_CPU_Server ) * ( ( MDR / AMS ) - CRS ) ) * ( ( MDR / AMS ) - ( ARS + Min( ( ( PN - RRS ) - ( ( RRS * ACS ) - FirstVNF_CPU ) ) ,DDR ) ) ) ) )", "choosing": "Min( ( ( ( MLU / RRSe ) - ( ( ( RCSe * DS ) * Max( ( ( RRSe + MUC ) / MUC ),MUC ) ) / DS ) ) * ( CS * DS ) ) ,Min( MUR ,( ( DS / MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.5344129554655871, "obj2": 0.24386020133876968}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.36334388663921824}, {"determining": "( ( PN - MDR ) - ( ( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_RAM * ARS ) ,ACS ) + ( MDR / AMS ) ) ) * Max( ( Max( MRS,PN ) / Const ),PN ) ) * ( ( MDR / AMS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.7064777327935222, "obj2": 0.12151880286157171}, {"determining": "( ( ( Const * Max( ( Max( MRS,( PN * MRS ) ) / Const ),Const ) ) * ( ( MDR / ( Min( Max( AMS,MDR ) ,( BR - AMS ) ) * BR ) ) + Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( AMS ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) ) ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * DS ) - ( ( ( ( MUC - DS ) * ( Min( Max( DS,CS ) ,MLU ) / RCSe ) ) + ( Max( MUR,MLU ) + ( RRSe + MUC ) ) ) - ( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) * Max( ( ( Min( ( CS * MUM ) ,MUR ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.4230769894101977}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( MDR - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_RAM_Server - RRS ),( Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) * ACS ) ) ) ) )", "choosing": "( ( MLU - ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUC / RRSe ) ) ) ) + ( Min( Max( CS,Max( RMSe,RCSe ) ) ,( ( RRSe + MUM ) * Max( MLU,RRSe ) ) ) / RCSe ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) - Max( ( ( MLU - RRSe ) + ( DS + RRSe ) ),Min( ( Max( RMSe,MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.1437246963562753, "obj2": 0.6437661430505494}, {"determining": "( ( ( ( FirstVNF_RAM_Server + Min( PN ,ACS ) ) * ARS ) - MDR ) - ( ( ( FirstVNF_CPU - ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem ) * ( DDR / ARS ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.11336032388663968, "obj2": 0.6827418232270271}, {"determining": "( ( PN - MDR ) - ( ( ( ( PN - MDR ) - ( ( MDR / AMS ) - MDR ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( PN - MDR ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( DS * ( MUC * ( MLU * MUM ) ) ) ) )", "obj1": 0.7975708502024291, "obj2": 0.07577836711787488}, {"determining": "( ( PN - MDR ) - ( Min( Max( MRS,( ACS * ( ( PN / Max( Const,CRS ) ) / FirstVNF_Mem ) ) ) ,Min( DDR ,( FirstVNF_CPU_Server + ( Const - ( MRS - FirstVNF_RAM_Server ) ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * ( ( Max( PN,AMS ) + AMS ) / DDR ) ) ) ) )", "choosing": "( ( DS * ( MUC * ( MLU * MUM ) ) ) - Min( Max( CS,RMSe ) ,( ( ( MUR + ( MLU + MLU ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( ( MUM * MUR ),CS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.7145748987854251, "obj2": 0.11610081765864368}, {"determining": "( ( PN - MDR ) - ( ( Min( Const ,( MDR - MDR ) ) - CRS ) * ( ( MDR / AMS ) + ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( ( ( RRSe + Max( MUR,( MUR * DS ) ) ) * CS ) - ( MLU - ( RRSe / MUR ) ) ) * ( MUR / MUM ) ) / ( MUR / Max( RRSe,( MUR + ( ( MUC + Max( RCSe,CS ) ) + RRSe ) ) ) ) ) - ( Max( CS,MUR ) * ( Max( DS,RRSe ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6071515492400852}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( BR - ( Min( ACS ,FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MLU,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( MUC * ( Max( ( Min( MUC ,MUR ) - MUC ),RMSe ) * Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.4614313703608284}, {"determining": "( ( DDR + ( FirstVNF_CPU - ACS ) ) - ( Max( ( Max( ACS,FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( ( ( ( RRSe - RMSe ) + CS ) * ( Min( RCSe ,DS ) * Max( MUM,RRSe ) ) ) ,( MUC * Min( MUC ,RMSe ) ) ) / RCSe ) ,( MUC - ( ( DS + MUC ) / ( ( ( MUC * RRSe ) - ( RMSe * CS ) ) / ( MLU * Min( MUM ,RRSe ) ) ) ) ) ) + RCSe ) / ( ( Max( ( MUM / ( Max( MUC,( RRSe - MUC ) ) + MUR ) ),CS ) + ( MUM + ( MLU / RMSe ) ) ) / Max( ( RRSe * ( RCSe / Max( DS,MUR ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) - MUC ) ,RMSe ) - DS ) ,( RRSe * MLU ) ) ) ) )", "obj1": 0.3562753036437247, "obj2": 0.4155569561887445}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( MUR / ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) ) * Max( ( ( Min( RMSe ,MUR ) - MUC ) + ( ( DS - ( RRSe * MUC ) ) - RCSe ) ),MUR ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.16286418747992237}, {"determining": "( ( PN - MDR ) - ( ( Const * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( DDR ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,RCSe ) ) - MUC ) ),MUR ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * ( Min( MUM ,DS ) + RCSe ) ) ) )", "obj1": 0.7246963562753036, "obj2": 0.1086798386659634}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( RMSe + CS ) ) )", "obj1": 0.6558704453441295, "obj2": 0.15645203762560614}, {"determining": "( ( ARS - MDR ) - ( ( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_CPU_Server - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) * ( FirstVNF_CPU_Server + PN ) ) * ( Max( MDR,AMS ) - Max( ( FirstVNF_RAM_Server - ARS ),( ACS * Min( ( FirstVNF_CPU_Server + ACS ) ,Max( ( Const / MDR ),FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( MLU - ( CS + Max( RMSe,RCSe ) ) ) - ( ( ( RCSe * MUM ) / MUM ) + DS ) )", "obj1": 0.2975708502024291, "obj2": 0.4844896826856077}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( FirstVNF_CPU,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,RCSe ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Max( ( ( ( RMSe + DS ) - MUC ) + RRSe ),MUR ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7173488090569781}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( ( ( MUM / CS ) / ( RRSe + MUR ) ) + CS ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.4109311740890688, "obj2": 0.34306915484146305}, {"determining": "( ( PN - ( ( FirstVNF_CPU_Server / ( ( ACS - BR ) + FirstVNF_CPU_Server ) ) * MDR ) ) - ( ( FirstVNF_CPU - Max( AMS,( MDR / ( AMS + Max( FirstVNF_Mem_Server,( CRS * Const ) ) ) ) ) ) * ( FirstVNF_CPU_Server / ( BR * PN ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( RCSe ,MUC ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.6680790568437346}, {"determining": "( ( RRS * Const ) - ( ( AMS - FirstVNF_Mem ) * ( MDR * ( ( ARS - MDR ) - Min( ( ( AMS - MDR ) - DDR ) ,( PN / ( MDR + MDR ) ) ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( ( MUR / MUC ) / Min( MUR ,CS ) ),MUM ),RRSe ) + ( ( RCSe - MUC ) / ( ( RCSe + MUR ) * Min( RRSe ,MLU ) ) ) ) / RCSe ) ,( ( Min( MLU ,MLU ) * ( Max( RCSe,RCSe ) * ( DS - ( ( DS + CS ) - Max( RRSe,MLU ) ) ) ) ) - ( ( ( MUC / RRSe ) * RMSe ) - MUR ) ) ) - Min( ( Min( RCSe ,DS ) + ( RRSe + MUM ) ) ,( MUM * RCSe ) ) )", "obj1": 0.6639676113360324, "obj2": 0.1539631110881802}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( ( ( ( MDR / MDR ) * ( MDR + DDR ) ) + PN ) / ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( ( ( Max( CS,Max( MUR,RCSe ) ) + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( ( ( Min( CS ,MUM ) / Max( RMSe,MUM ) ) * RRSe ),( CS * MLU ) ) / RMSe ),Max( ( MUR * ( ( MUM * Min( DS ,DS ) ) - MUC ) ),MUR ) ) ) - ( ( Max( DS,Max( RCSe,( MUC / RRSe ) ) ) + ( ( DS - RCSe ) + ( MUM + DS ) ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.22874493927125505, "obj2": 0.5391321444440683}, {"determining": "( ( PN - MDR ) - ( ( FirstVNF_CPU_Server / ACS ) * ( MDR * ( ( PN - ( PN / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( MUC + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.6842105263157895, "obj2": 0.13710542804491788}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( MDR / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( Min( MLU ,Min( CS ,Min( ( ( ( MLU - MUC ) - MUC ) + ( MUC + RRSe ) ) ,( MLU / ( Max( MUM,( RRSe - RMSe ) ) / MLU ) ) ) ) ) - ( ( ( MLU - RRSe ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( RRSe / MUC ) ),MUR ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.516112234602323}, {"determining": "( ( PN - MDR ) - ( Max( ( Const * ( FirstVNF_Mem / DDR ) ),FirstVNF_Mem ) * ( ( ( ACS * FirstVNF_CPU ) * BR ) + MRS ) ) )", "choosing": "( Max( MUM,( ( ( ( ( ( MLU * RCSe ) + ( MLU + MLU ) ) - ( RCSe - DS ) ) / MUM ) * Min( MUM ,DS ) ) * ( DS * Max( DS,MUR ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( DS + CS ) ) )", "obj1": 0.8117408906882592, "obj2": 0.06960291035169008}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MDR ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( Min( MUR ,MLU ) + RCSe ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + MUM ) + MUR ) ) ) )", "obj1": 0.4817813765182186, "obj2": 0.28543899538933626}, {"determining": "( ( FirstVNF_Mem / DDR ) - ( ( Max( Max( AMS,FirstVNF_CPU_Server ),BR ) * BR ) + MRS ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( ( MUM * CS ) ,MUC ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) / Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.17547551553385743}, {"determining": "Min( ( Max( ( PN - MDR ),( ( ( MDR - ARS ) + ( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,( ACS / DDR ) ) ) ) * ( ( Max( ARS,ARS ) / MDR ) - CRS ) ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( ( Min( ( FirstVNF_Mem / CRS ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_Mem_Server / BR ) + Max( ACS,Const ) ) / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * ( ( ( ( ( RRSe / RCSe ) / RRSe ) / RMSe ) / MUR ) * Max( ( ( Min( MUC ,RRSe ) - DS ) + DS ),MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.22037871058843334}, {"determining": "( ( PN - MDR ) - Min( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( FirstVNF_CPU_Server / Max( MDR,CRS ) ) / AMS ) ) ) ) ,( ( MDR / AMS ) - Max( MRS,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe / ( MUR + CS ) ) + MUM ) ,RCSe ) * RCSe ) - ( MLU - MUM ) ) - Min( MUC ,RRSe ) )", "obj1": 0.17813765182186234, "obj2": 0.6031696370964351}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_CPU_Server / ACS ) ,MDR ) * ( ( MDR / AMS ) - ( ( Const / FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUR ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * Min( MUR ,MUM ) ) )", "obj1": 0.31781376518218624, "obj2": 0.44319099451166405}, {"determining": "( ( PN - MDR ) - ( Min( MDR ,AMS ) - ( ( FirstVNF_CPU_Server / ( ( ACS - BR ) + FirstVNF_CPU_Server ) ) * MDR ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - Max( MUC,( MUR + MUM ) ) )", "obj1": 0.9635627530364372, "obj2": 0.011512485257254948}, {"determining": "( ( ACS * Min( ( FirstVNF_RAM * FirstVNF_Mem ) ,DDR ) ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Min( FirstVNF_RAM_Server ,BR ) ) / ( CRS / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ACS ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( CS * ( CS - ( Max( DS,Min( MUC ,( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) ) ) ) - ( Min( Max( CS,Max( RMSe,RCSe ) ) ,DS ) + ( ( ( ( RMSe * RRSe ) * ( CS * DS ) ) / ( RCSe + ( CS * ( CS - RRSe ) ) ) ) + CS ) ) )", "obj1": 0.4352226720647773, "obj2": 0.3335428443694863}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / AMS ) - ( ( PN - RRS ) - ( ( ( CRS - ( Const * Const ) ) * ACS ) / ( PN * ARS ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,( RCSe / RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( MUM / MUM ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.3620937699924355}, {"determining": "( ( PN - MDR ) - ( ( AMS / ACS ) * ( MDR * ( ( PN - ( ( CRS - ( Const * Const ) ) / FirstVNF_RAM_Server ) ) - Min( ( RRS + ( DDR * Const ) ) ,( ( AMS - MDR ) - DDR ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( MLU - RRSe ) + ( DS + RRSe ) ) * Min( ( Max( ( ( ( RRSe + CS ) + MUC ) / MUC ),MUC ) / RCSe ) ,MUC ) ) )", "obj1": 0.9696356275303644, "obj2": 0.01070353667432222}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - ( ( PN - RRS ) - ( ( RRS * ACS ) - ( PN * ARS ) ) ) ) ) )", "choosing": "( ( MLU - Max( CS,Max( RMSe,RCSe ) ) ) - ( ( ( ( ( ( RCSe / RRSe ) / RRSe ) * RRSe ) / RCSe ) * Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) ) * ( ( ( Max( ( ( RCSe + MUC ) * ( RCSe * CS ) ),MLU ) + ( DS * Max( RCSe,( RCSe / RRSe ) ) ) ) + Min( RMSe ,MUM ) ) * Max( ( ( MUM - MLU ) * ( ( Max( RRSe,MUM ) / ( RMSe * RMSe ) ) - CS ) ),MUR ) ) ) )", "obj1": 0.20040485829959515, "obj2": 0.5776747329798476}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,PN ) / ( ACS + FirstVNF_CPU_Server ) ),Const ) ) * ( ( ( FirstVNF_Mem_Server * RRS ) / AMS ) - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - ( PN + FirstVNF_CPU ) ) ) ),( ACS * Min( ( PN - MDR ) ,( Max( AMS,PN ) / Const ) ) ) ) ) ) )", "choosing": "( Min( ( ( RMSe + CS ) - Min( MUC ,DS ) ) ,Max( ( Max( CS,( DS * Max( MUR,RRSe ) ) ) / RMSe ),( RRSe * ( MUC + MUM ) ) ) ) - ( ( ( MLU - CS ) + ( RRSe + CS ) ) * ( ( CS + DS ) * Max( ( ( MUM * MUM ) + ( ( DS / RCSe ) / MUC ) ),MUR ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.038472599978766724}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + AMS ) ) * ( ( FirstVNF_CPU_Server / ACS ) * MDR ) ) ) ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( RRS + ( DDR * Const ) ) ,( ( ACS - MDR ) - Min( ( DDR - DDR ) ,( PN - MDR ) ) ) ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) - MUC ) - ( ( RMSe + CS ) + Min( Max( CS,Max( RMSe,( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( RRSe + MUM ) ) ) ) ) ,DS ) ) )", "obj1": 0.8805668016194332, "obj2": 0.043555366542583955}, {"determining": "( ( PN * ( Max( PN,RRS ) + Min( ( ACS + FirstVNF_CPU_Server ) ,DDR ) ) ) - ( ( Min( ( FirstVNF_CPU_Server + ACS ) ,DDR ) / Max( MRS,( ACS * ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * MDR ) / MDR ) ) ) ) * ( ( MDR / AMS ) - ( Min( ACS ,FirstVNF_RAM_Server ) * Min( ( Const + AMS ) ,DDR ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( MUM - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( Min( DS ,MLU ) * Max( RCSe,( MUC / RRSe ) ) ),MUR ) * ( ( Min( RRSe ,( ( CS * MUC ) / ( RCSe / ( RCSe * MUM ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,Max( MUC,DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.6837637939873701}, {"determining": "( ( PN - CRS ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / ( PN * CRS ) ) ) ) - MRS ) / Min( ( CRS / FirstVNF_RAM ) ,MRS ) ) * ( ( MDR / ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) ) - Max( Min( PN ,FirstVNF_CPU_Server ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUC + MUM ) ) - ( Max( ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ),Max( ( Min( RCSe ,RRSe ) + RRSe ),MUR ) ) * ( ( DS - RCSe ) + ( MUM + DS ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.5470780018235857}, {"determining": "( ( PN - MDR ) - ( ( ( ( ACS * ( ( FirstVNF_CPU_Server / Const ) / ( MDR / AMS ) ) ) - MRS ) / ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ) * ( ( Min( CRS ,FirstVNF_RAM ) / AMS ) - ( ( PN - RRS ) - ( ( ACS * RRS ) - ( PN * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + ( Min( MUC ,CS ) * Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) * ( ( ( ( RRSe / RCSe ) / RRSe ) * RMSe ) / MUR ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7034839501410303}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( RRS + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,RCSe ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7273897868473836}, {"determining": "( ( ( PN - MDR ) - ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server + ( ACS - BR ) ) ) * MDR ) ) ) - ( ( ( FirstVNF_CPU_Server / ACS ) * MDR ) * ( ( DDR * ( PN / ( MDR - DDR ) ) ) - ( ( FirstVNF_CPU_Server / Const ) / AMS ) ) ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( CS + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( MLU + CS ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( MUC - DS ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.1214574898785425, "obj2": 0.6664216390592301}, {"determining": "( ( PN - MDR ) - ( ( Const * Max( ( Max( MRS,( ACS * FirstVNF_RAM ) ) / Const ),Const ) ) * ( ( MDR / AMS ) - Max( ( ( PN - ( Max( MDR,BR ) * ( PN * DDR ) ) ) - ARS ),( ACS * ( ( PN - MDR ) * DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,( ( Max( MUC,MUR ) * ( RMSe / MUM ) ) - ( ( CS - RRSe ) - MUM ) ) ) / MLU ) - ( Max( ( ( Min( MUC ,MUR ) - MUC ) + RRSe ),MUR ) * ( ( Min( ( Min( DS ,DS ) / RCSe ) ,( MUC - DS ) ) + ( Min( ( MUM - Min( DS ,MUR ) ) ,RMSe ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) ) * Max( ( ( Min( RRSe ,MUM ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.9068825910931174, "obj2": 0.03530561436423422}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( MDR * ( ( PN - MDR ) - Min( ( ( ( FirstVNF_Mem + BR ) / PN ) + ( DDR * Const ) ) ,( ( AMS - MDR ) - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( ( Min( DS ,( MUC * Min( RMSe ,MUC ) ) ) / RCSe ) ,( ( MLU / MUM ) - DS ) ) * ( MUM + MUR ) ) / ( ( DS * CS ) / Max( ( RMSe / Max( CS,( MLU * RCSe ) ) ),Min( ( Min( ( Min( RCSe ,MLU ) * MUC ) ,RRSe ) - DS ) ,( MUR * MLU ) ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.06918476576625955}, {"determining": "( ( MDR - ( Const + PN ) ) - ( ( FirstVNF_CPU - Max( AMS,ACS ) ) * ( FirstVNF_CPU_Server / ( BR * BR ) ) ) )", "choosing": "( ( CS * ( DS - ( RMSe * Max( Max( Min( RCSe ,CS ),CS ),MUM ) ) ) ) - Min( ( ( Min( DS ,MLU ) / RCSe ) - Min( ( ( MUC * ( MUR - Min( MUR ,RRSe ) ) ) * MLU ) ,( ( Max( RMSe,Max( MUC,MUC ) ) + MUM ) * Min( ( RMSe * ( CS + MUM ) ) ,( CS - MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.6963562753036437, "obj2": 0.12719183379374008}, {"determining": "( ( PN - MDR ) - ( Max( AMS,FirstVNF_Mem ) * ( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem_Server - RRS ) * AMS ) ) * MDR ) ) * MDR ) ) )", "choosing": "( ( MLU - Max( MLU,Max( RMSe,RCSe ) ) ) - ( CS / RRSe ) )", "obj1": 0.9392712550607287, "obj2": 0.01951682467163833}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) - MDR ) - ( ( ( ( ( ACS + Min( ( ARS - FirstVNF_RAM ) ,RRS ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + ( ( ACS + FirstVNF_CPU_Server ) / DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / AMS ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( MLU * RMSe ) ,RCSe ) / MLU ) - ( Max( CS,MUR ) * ( ( ( Max( MUR,MLU ) + ( DS * Max( RCSe,( MUM / RRSe ) ) ) ) + Min( ( Min( DS ,( DS * DS ) ) / RCSe ) ,( MUC - DS ) ) ) * Max( ( ( Min( MUC ,MLU ) - MUC ) + RRSe ),MUR ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7273897868473836}, {"determining": "( ( ( PN - MDR ) - ( Min( MDR ,AMS ) - ( ( FirstVNF_CPU_Server / ( ( ACS - BR ) + FirstVNF_CPU_Server ) ) * MDR ) ) ) - Min( FirstVNF_CPU ,BR ) )", "choosing": "( ( Min( ( MLU * ( ( ( MUM * Min( CS ,RCSe ) ) * Max( MUC,( MUR + MUM ) ) ) + ( MUR * MUC ) ) ) ,( ( Max( RCSe,MUR ) * ( RMSe / MUM ) ) - Max( MUR,MLU ) ) ) / MLU ) - ( Max( MLU,MUR ) * ( ( ( Max( MUR,MLU ) + Min( MUR ,( Min( DS ,MUM ) / ( RCSe / MUR ) ) ) ) + Min( ( Min( DS ,MLU ) / RCSe ) ,( DS - MUC ) ) ) * Min( MUC ,MUR ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.4427900633388876}, {"determining": "( ( PN - MDR ) - ( ( ( ( ( ACS + Min( ( DDR - DDR ) ,( PN - MDR ) ) ) - DDR ) * ( PN * ( Min( ACS ,Max( MDR,Const ) ) + Min( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ,DDR ) ) ) ) * ( Const + AMS ) ) * ( ( MDR / FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server - RRS ),( ACS * Min( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_RAM ) ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) )", "choosing": "( ( RRSe - Max( CS,Max( RCSe,RMSe ) ) ) - ( ( ( ( ( Max( RCSe,MLU ) + Max( MUC,Max( MUC,RMSe ) ) ) - RCSe ) + RRSe ) + ( RRSe + MUM ) ) * ( ( Min( ( ( Min( MUR ,MLU ) + RCSe ) - ( RRSe * ( RRSe * DS ) ) ) ,( CS / Min( MUC ,CS ) ) ) / MUR ) * ( ( ( Min( DS ,MUR ) - MUC ) + RRSe ) + MUR ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.5090075778485467}, {"determining": "( ( ( FirstVNF_RAM * ( DDR + Min( ACS ,PN ) ) ) + ( ( MDR / AMS ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / Const ) ) * MDR ) ) ) - ( FirstVNF_Mem + ( AMS - ACS ) ) )", "choosing": "( ( ( RRSe + ( Min( Max( MUC,( ( MUC + MUC ) / MUC ) ) ,Min( Max( ( RMSe / MUC ),MLU ) ,( ( DS / CS ) - MUR ) ) ) - ( ( ( MLU * RMSe ) - ( CS * DS ) ) / ( RCSe + ( ( MLU / MUM ) + ( MUC / MLU ) ) ) ) ) ) - Max( MLU,MLU ) ) - ( ( RMSe * RRSe ) + Min( Max( CS,Max( RMSe,RCSe ) ) ,Min( ( MLU + MUM ) ,MUR ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.33960917566246074}]}