{"1": [{"determining": "( ( ( BR * Min( FirstVNF_Mem ,PN ) ) / Const ) * ( AMS - ACS ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.6153846153846154, "obj2": 0.37099580669654586}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( ( ( Min( FirstVNF_RAM ,MDR ) / Min( FirstVNF_RAM ,ACS ) ) / RRS ) / Const ) ) )", "choosing": "( ( ( Min( CS ,MUR ) + ( MLU - MUM ) ) + CS ) * ( MLU + MUR ) )", "obj1": 0.25101214574898784, "obj2": 0.6227164806959328}, {"determining": "( Min( FirstVNF_RAM ,AMS ) + Max( FirstVNF_RAM_Server,Max( Const,AMS ) ) )", "choosing": "Min( ( RRSe + ( ( ( MUC + ( MLU / MLU ) ) + Max( ( MLU - ( ( RMSe - MUR ) * Max( MUC,MUC ) ) ),MUR ) ) + RCSe ) ) ,( MUM * DS ) )", "obj1": 0.3967611336032389, "obj2": 0.5183060048724617}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( MUR - MUR ) * Min( RRSe ,MUC ) )", "obj1": 0.9817813765182186, "obj2": 0.012549317962120051}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( MLU + DS ) / Min( CS ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( Const / Min( FirstVNF_Mem_Server ,CRS ) ) - Min( CRS ,ACS ) )", "choosing": "( ( ( CS + CS ) - MLU ) / ( Max( Min( RCSe ,( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( Min( RMSe ,( RMSe * RCSe ) ) * RMSe ) ) ),MLU ) * RCSe ) )", "obj1": 0.8866396761133604, "obj2": 0.10426922502055178}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5242914979757085, "obj2": 0.406066660280775}, {"determining": "( ( FirstVNF_RAM_Server + ( DDR / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - ARS ) )", "choosing": "( ( DS + MUM ) * ( ( Max( ( ( ( RCSe * RMSe ) + MUR ) * MLU ),MUC ) / MUC ) * RRSe ) )", "obj1": 0.31376518218623484, "obj2": 0.5890986844697479}, {"determining": "( Min( ARS ,ARS ) / ( Min( ACS ,RRS ) + MDR ) )", "choosing": "Min( Max( ( RCSe - CS ),( RMSe / RMSe ) ) ,( ( RCSe - MLU ) * ( RCSe * MUM ) ) )", "obj1": 0.20040485829959515, "obj2": 0.7014250690500222}, {"determining": "( ( Max( PN,DDR ) / ( ACS * BR ) ) - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "Max( ( RRSe * RCSe ),Min( DS ,RMSe ) )", "obj1": 0.2975708502024291, "obj2": 0.6082523941121999}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 0.3097165991902834, "obj2": 0.5908701624345705}, {"determining": "Max( ( ( RRS / FirstVNF_CPU ) + ( RRS * ACS ) ),Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),( ARS - MRS ) ) )", "choosing": "Max( ( MUM - MUR ),( DS + RMSe ) )", "obj1": 0.3562753036437247, "obj2": 0.5604389851400013}, {"determining": "Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( RCSe / MUM ) ) + ( CS - CS ) )", "obj1": 0.6437246963562753, "obj2": 0.29353666606707435}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 0.7307692307692307, "obj2": 0.25596152517874965}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( DS * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "( Min( ( PN * Const ) ,( ARS * ACS ) ) * Max( ( BR / RRS ),( BR * FirstVNF_RAM ) ) )", "choosing": "( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6475863992736484}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU + ACS ),ARS ) / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Min( MUM ,DS ),Max( CS,RCSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.571944325292363}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( CRS - RRS ),Max( RRS,AMS ) ),( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( ( CS / CS ) ,( RRSe / DS ) ) * ( Min( RCSe ,MUR ) + Min( MLU ,MUM ) ) )", "obj1": 0.3076923076923077, "obj2": 0.6041633631930933}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( ( FirstVNF_CPU_Server - RRS ),( MDR * FirstVNF_CPU_Server ) ) ) + Max( ( ( BR / MRS ) - ( DDR + FirstVNF_CPU_Server ) ),( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM / ( RCSe * Max( MUR,( ( RMSe / CS ) + MUM ) ) ) ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.37574163416419976}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Const ) / AMS ) ,( AMS + Const ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.007385925118857974}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( Const ,AMS ) ,( FirstVNF_Mem - AMS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( CRS + FirstVNF_CPU ) ) ) ,( Max( Min( CRS ,DDR ),( Const / FirstVNF_RAM ) ) / Min( ( ACS * Const ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / RRSe ) / Min( Max( RRSe,CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.06861423469335148}, {"determining": "Min( ( CRS / PN ) ,( DDR * Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,MDR ) ) ,( DDR - AMS ) ) ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ( BR * Min( FirstVNF_Mem ,PN ) ) / Const ) * ( AMS - ACS ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.6153846153846154, "obj2": 0.37099580669654586}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( MUR - MUR ) * Min( RRSe ,MUC ) )", "obj1": 0.9817813765182186, "obj2": 0.012549317962120051}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( MLU + DS ) / Min( CS ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( Const / Min( FirstVNF_Mem_Server ,CRS ) ) - Min( CRS ,ACS ) )", "choosing": "( ( ( CS + CS ) - MLU ) / ( Max( Min( RCSe ,( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( Min( RMSe ,( RMSe * RCSe ) ) * RMSe ) ) ),MLU ) * RCSe ) )", "obj1": 0.8866396761133604, "obj2": 0.10426922502055178}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5242914979757085, "obj2": 0.406066660280775}, {"determining": "( ( FirstVNF_RAM_Server + ( DDR / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - ARS ) )", "choosing": "( ( DS + MUM ) * ( ( Max( ( ( ( RCSe * RMSe ) + MUR ) * MLU ),MUC ) / MUC ) * RRSe ) )", "obj1": 0.31376518218623484, "obj2": 0.5890986844697479}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 0.3097165991902834, "obj2": 0.5908701624345705}, {"determining": "Max( ( ( RRS / FirstVNF_CPU ) + ( RRS * ACS ) ),Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),( ARS - MRS ) ) )", "choosing": "Max( ( MUM - MUR ),( DS + RMSe ) )", "obj1": 0.3562753036437247, "obj2": 0.5604389851400013}, {"determining": "Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( RCSe / MUM ) ) + ( CS - CS ) )", "obj1": 0.6437246963562753, "obj2": 0.29353666606707435}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 0.7307692307692307, "obj2": 0.25596152517874965}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( DS * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU + ACS ),ARS ) / MRS ) / FirstVNF_Mem ) ,( FirstVNF_Mem_Server / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( Min( MUM ,DS ),Max( CS,RCSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.571944325292363}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( ( FirstVNF_CPU_Server - RRS ),( MDR * FirstVNF_CPU_Server ) ) ) + Max( ( ( BR / MRS ) - ( DDR + FirstVNF_CPU_Server ) ),( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM / ( RCSe * Max( MUR,( ( RMSe / CS ) + MUM ) ) ) ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.37574163416419976}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Const ) / AMS ) ,( AMS + Const ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.007385925118857974}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( Const ,AMS ) ,( FirstVNF_Mem - AMS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( CRS + FirstVNF_CPU ) ) ) ,( Max( Min( CRS ,DDR ),( Const / FirstVNF_RAM ) ) / Min( ( ACS * Const ) ,( FirstVNF_Mem_Server - AMS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / RRSe ) / Min( Max( RRSe,CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.06861423469335148}, {"determining": "Min( ( CRS / PN ) ,( DDR * Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,MDR ) ) ,( DDR - AMS ) ) ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7078078682733691}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) - Min( ( MUM / DS ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) + Min( CRS ,DDR ) ) - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( ( DS / RMSe ) / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * RRS ) ,FirstVNF_CPU ) ) ,FirstVNF_RAM ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS / ( ( DS * ( ( ( MUR + MUC ) / CS ) * MUR ) ) * ( RCSe + RMSe ) ) ) - ( ( ( DS * ( DS + RCSe ) ) - RRSe ) + CS ) ) - Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / ( ( ( ( MRS * PN ) + ( BR + BR ) ) + ( ( Const * FirstVNF_Mem ) + Min( BR ,ARS ) ) ) / ( ( ( RRS / DDR ) + Max( Const,MDR ) ) * ( Max( RRS,Const ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( AMS + CRS ) )", "choosing": "( ( RMSe + MLU ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * ( RCSe / MUM ) ) + ( CS - CS ) )", "obj1": 0.6417004048582996, "obj2": 0.3021039789389624}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.01306654739143614}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - Const ) / AMS ) ,( AMS + Const ) )", "choosing": "( Max( ( RMSe - DS ),MUM ) * ( Min( MLU ,RRSe ) * Max( MUC,CS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.005888428629728412}, {"determining": "Min( Min( ( ARS * ACS ) ,Min( RRS ,( ARS * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Max( ( Max( RRSe,Min( RRSe ,RRSe ) ) + MLU ),( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( FirstVNF_RAM_Server - ( Max( ARS,FirstVNF_CPU ) - FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ) / ( ( ( MRS / CRS ) / BR ) * PN ) )", "choosing": "( Max( Max( ( ( ( Max( RMSe,RRSe ) + DS ) - MLU ) - ( MUC - MUR ) ),MUR ),( RCSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,Max( Const,FirstVNF_CPU ) ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / CRS ) ) - ( Min( FirstVNF_RAM ,ARS ) / ( BR + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC + RCSe ) ) / MUR ) / Min( RCSe ,Min( DS ,( MUC + ( DS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( PN,BR ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( ARS + Const ) + ( AMS / ( FirstVNF_CPU / ( FirstVNF_Mem_Server + ( FirstVNF_Mem + ( RRS - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM * DS ) + Min( MUR ,( MUC + ( ( MUR * MLU ) - ( RRSe * CS ) ) ) ) ) * Min( ( DS - RMSe ) ,Max( MLU,( ( ( ( Min( MUR ,DS ) + ( MUM + RCSe ) ) + Min( MUM ,( RCSe * MUM ) ) ) - MUC ) + ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( PN + Min( ( FirstVNF_RAM_Server - RRS ) ,( ( CRS + FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,( MRS * CRS ) ) ) ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( MLU * ( ( Min( MUC ,RCSe ) - MUR ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_RAM_Server ) / ( ACS * Min( ( FirstVNF_CPU_Server + Const ) ,( DDR / FirstVNF_RAM ) ) ) ) - ( Min( ( RRS / Const ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) ) )", "choosing": "Max( ( MLU + MUR ),Min( DS ,( ( CS * MUM ) * Min( DS ,( ( RRSe - CS ) + RRSe ) ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5556251687224714}, {"determining": "( ( ( ( AMS - FirstVNF_RAM ) * FirstVNF_CPU_Server ) - ARS ) + Max( DDR,CRS ) )", "choosing": "Min( ( RCSe * RMSe ) ,( ( CS / ( MUR - MUR ) ) * Max( Min( DS ,MLU ),DS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5071118762905236}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + Const ) ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * ( BR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU + MUR ) + ( ( CS / RMSe ) / ( ( RCSe / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) ) ) - Max( Max( MUC,MUC ),( CS * DS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6039277423156227}, {"determining": "( Max( ARS,Max( ( Const - RRS ),DDR ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( ( Min( MLU ,( Min( RMSe ,DS ) + MUM ) ) + MUR ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3724696356275304, "obj2": 0.5166219445501837}, {"determining": "( Min( Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_Mem - ( Min( Min( Max( Const,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - Max( DDR,FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( RRSe / Max( Min( ( Min( MUC ,MUR ) + MLU ) ,RRSe ),( RRSe * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( ( Max( Const,FirstVNF_CPU ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( ACS * FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( RCSe / MUM ) ,Min( ( CS + ( ( MUR - RRSe ) + CS ) ) ,RRSe ) ) / ( ( RCSe / ( RRSe + RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( CRS ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( RMSe,( ( MUM / CS ) * ( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( FirstVNF_Mem ,Min( DDR ,CRS ) ) ,( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( MDR / FirstVNF_Mem ) ,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( MLU * CS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - BR ) * AMS ) / ( PN / MRS ) )", "choosing": "( Max( CS,RMSe ) + ( MUC / ( Min( RCSe ,MUM ) / ( ( ( MUM + RRSe ) * MLU ) / MUC ) ) ) )", "obj1": 0.3582995951417004, "obj2": 0.5582803006927793}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,( DDR * Min( ( PN + FirstVNF_RAM ) ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + ( ( MUM + MUR ) * RRSe ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,CRS ) / ( PN + ( MDR + ( Const / ARS ) ) ) )", "choosing": "( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) )", "obj1": 0.29554655870445345, "obj2": 0.5942053820600851}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( Max( FirstVNF_Mem,( CRS / MDR ) ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / ( RCSe * MUM ) ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUC ) ) / DS ) - ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "Min( Max( DS,MLU ) ,Max( RCSe,MUM ) )", "obj1": 0.7611336032388664, "obj2": 0.21740871341299517}, {"determining": "Min( Min( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) ) ,Max( Max( Const,RRS ),( FirstVNF_Mem + RRS ) ) ) ,( ( MRS + Const ) + ( ( DDR + PN ) * ( ACS - MDR ) ) ) )", "choosing": "( Min( Max( RCSe,MUC ) ,( ( CS / MUC ) * ( MUC * MLU ) ) ) * ( ( DS / ( CS / RCSe ) ) - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( ( MDR / CRS ) / Max( CRS,ARS ) ) * ( Max( CRS,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * RRS ) ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( Min( RMSe ,RMSe ) * ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.52834008097166, "obj2": 0.3892890309506098}, {"determining": "Min( ( RRS + PN ) ,( ACS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( MUR + DS ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7974212884671318}], "3": [{"determining": "( ( MRS * Max( BR,( ( ( Max( Const,RRS ) + Min( MRS ,CRS ) ) / Const ) / Const ) ) ) / ( ( BR / ( MRS / CRS ) ) * PN ) )", "choosing": "( Max( ( MUM + MUR ),( RCSe * MLU ) ) - ( ( MLU + MUR ) + ( MUC - ( MLU - Max( RMSe,Max( CS,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,( ACS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( MUR + DS ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7974212884671318}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( ( Const - FirstVNF_Mem ) * ( PN - BR ) )", "choosing": "( Max( MUC,MLU ) + ( MLU + DS ) )", "obj1": 0.5242914979757085, "obj2": 0.406066660280775}, {"determining": "Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 0.7307692307692307, "obj2": 0.25596152517874965}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.8522267206477733, "obj2": 0.14173539998473234}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6376518218623481, "obj2": 0.26795355307119434}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "Min( Max( DS,MLU ) ,Max( RCSe,MUM ) )", "obj1": 0.7611336032388664, "obj2": 0.21740871341299517}, {"determining": "( ( ( BR * Min( FirstVNF_Mem ,PN ) ) / Const ) * ( AMS - ACS ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.6153846153846154, "obj2": 0.37099580669654586}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( RRS - CRS ) + ( FirstVNF_RAM / CRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,( MLU + MLU ) ) / ( MLU + DS ) )", "obj1": 0.6174089068825911, "obj2": 0.28628992998088987}, {"determining": "Min( ( ( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( FirstVNF_Mem_Server - RRS ) - Min( MDR ,CRS ) ) ) - Const ) / Min( ( Max( FirstVNF_Mem,Const ) - FirstVNF_CPU ) ,( ARS * BR ) ) ) ,( BR - FirstVNF_CPU ) )", "choosing": "( ( ( ( DS / MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( RRSe + RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6004683221402203}, {"determining": "( ( FirstVNF_CPU - MRS ) * FirstVNF_RAM_Server )", "choosing": "( ( DS * MUR ) / ( DS - MUR ) )", "obj1": 0.07489878542510121, "obj2": 0.776646843076897}, {"determining": "( ( FirstVNF_CPU - MRS ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) / ( DS * Max( DS,CS ) ) )", "obj1": 0.8157894736842105, "obj2": 0.1760468373168866}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( ( FirstVNF_CPU_Server - RRS ),( MDR * FirstVNF_CPU_Server ) ) ) + Max( ( ( BR / MRS ) - ( DDR + FirstVNF_CPU_Server ) ),( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM / ( RCSe * Max( MUR,( ( RMSe / CS ) + MUM ) ) ) ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.37574163416419976}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( DS * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.4190283400809717, "obj2": 0.49217719544071703}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "( Max( ARS,Max( ( Const - RRS ),DDR ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( ( Min( MLU ,( Min( RMSe ,DS ) + MUM ) ) + MUR ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3724696356275304, "obj2": 0.5166219445501837}, {"determining": "( ( Const / Min( FirstVNF_Mem_Server ,CRS ) ) - Min( CRS ,ACS ) )", "choosing": "( ( ( CS + CS ) - MLU ) / ( Max( Min( RCSe ,( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( Min( RMSe ,( RMSe * RCSe ) ) * RMSe ) ) ),MLU ) * RCSe ) )", "obj1": 0.8866396761133604, "obj2": 0.10426922502055178}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( Min( RRS ,ARS ),( MDR * FirstVNF_CPU_Server ) ) ) + ( ( ( DDR + FirstVNF_CPU_Server ) - ( BR / MRS ) ) / ( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.52834008097166, "obj2": 0.3884312485535695}, {"determining": "( ( FirstVNF_RAM_Server + ( DDR / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - ARS ) )", "choosing": "( ( DS + MUM ) * ( ( Max( ( ( ( RCSe * RMSe ) + MUR ) * MLU ),MUC ) / MUC ) * RRSe ) )", "obj1": 0.31376518218623484, "obj2": 0.5890986844697479}, {"determining": "( ( ( ( AMS - FirstVNF_RAM ) * FirstVNF_CPU_Server ) - ARS ) + Max( DDR,CRS ) )", "choosing": "Min( ( RCSe * RMSe ) ,( ( CS / ( MUR - MUR ) ) * Max( Min( DS ,MLU ),DS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5071118762905236}, {"determining": "Min( ( PN - FirstVNF_Mem_Server ) ,Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,( DDR + DDR ) ) )", "choosing": "( ( RMSe + MUC ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.023239541316595502}, {"determining": "( Max( DDR,CRS ) / ( PN + ( MDR + ( Const / ARS ) ) ) )", "choosing": "( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) )", "obj1": 0.29554655870445345, "obj2": 0.5942053820600851}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "Min( Min( Min( Min( Const ,AMS ) ,( FirstVNF_Mem - AMS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * ( CRS + FirstVNF_CPU ) ) ) ,Min( ACS ,Const ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / RRSe ) / Min( Max( ( MLU + DS ),CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9331983805668016, "obj2": 0.06517631982902293}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.07313345499333163}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.09564166879456285}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS + RRS ) - Min( MDR ,CRS ) ) ) ,( FirstVNF_Mem_Server * DDR ) )", "choosing": "Min( Max( Min( Max( RRSe,RCSe ) ,( ( Min( ( RRSe + MUC ) ,RRSe ) + Min( CS ,RCSe ) ) / CS ) ),( Max( RCSe,MUM ) / Min( MUM ,RRSe ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.08450965088558374}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.9838056680161943, "obj2": 0.009074734343182237}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 0.3097165991902834, "obj2": 0.5908701624345705}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( FirstVNF_CPU * ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - Max( BR,DDR ) ) ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( DS * RCSe ) - ( MLU * RMSe ) ) / ( ( RMSe - RCSe ) - ( RMSe - CS ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06920154057712499}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + Max( BR,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.01306654739143614}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08138250054482729}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( Min( ACS ,MDR ) + ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.012500306155768772}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( MLU + DS ) / Min( CS ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "Min( Min( ACS ,Const ) ,( PN - FirstVNF_RAM ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / RRSe ) / Min( Max( RRSe,CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0010104223733134827}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / PN ) ,( DDR * Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,MDR ) ) ,( DDR - AMS ) ) ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) - Min( ( MUM / DS ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) + Min( CRS ,DDR ) ) - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( ( DS / RMSe ) / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * RRS ) ,FirstVNF_CPU ) ) ,FirstVNF_RAM ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS / ( ( DS * ( ( ( MUR + MUC ) / CS ) * MUR ) ) * ( RCSe + RMSe ) ) ) - ( ( ( DS * ( DS + RCSe ) ) - RRSe ) + CS ) ) - Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / ( ( ( ( MRS * PN ) + ( BR + BR ) ) + ( ( Const * FirstVNF_Mem ) + Min( BR ,ARS ) ) ) / ( ( ( RRS / DDR ) + Max( Const,MDR ) ) * ( Max( RRS,Const ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( AMS + CRS ) )", "choosing": "( ( RMSe + MLU ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,Min( RRS ,( ARS * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Max( ( Max( RRSe,Min( RRSe ,RRSe ) ) + MLU ),( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( FirstVNF_RAM_Server - ( Max( ARS,FirstVNF_CPU ) - FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ) / ( ( ( MRS / CRS ) / BR ) * PN ) )", "choosing": "( Max( Max( ( ( ( Max( RMSe,RRSe ) + DS ) - MLU ) - ( MUC - MUR ) ),MUR ),( RCSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,Max( Const,FirstVNF_CPU ) ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / CRS ) ) - ( Min( FirstVNF_RAM ,ARS ) / ( BR + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC + RCSe ) ) / MUR ) / Min( RCSe ,Min( DS ,( MUC + ( DS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( PN,BR ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( ARS + Const ) + ( AMS / ( FirstVNF_CPU / ( FirstVNF_Mem_Server + ( FirstVNF_Mem + ( RRS - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM * DS ) + Min( MUR ,( MUC + ( ( MUR * MLU ) - ( RRSe * CS ) ) ) ) ) * Min( ( DS - RMSe ) ,Max( MLU,( ( ( ( Min( MUR ,DS ) + ( MUM + RCSe ) ) + Min( MUM ,( RCSe * MUM ) ) ) - MUC ) + ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( PN + Min( ( FirstVNF_RAM_Server - RRS ) ,( ( CRS + FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,( MRS * CRS ) ) ) ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( MLU * ( ( Min( MUC ,RCSe ) - MUR ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_Mem - ( Min( Min( Max( Const,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - Max( DDR,FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( RRSe / Max( Min( ( Min( MUC ,MUR ) + MLU ) ,RRSe ),( RRSe * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,FirstVNF_CPU ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( ACS * FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( RCSe / MUM ) ,Min( ( CS + ( ( MUR - RRSe ) + CS ) ) ,RRSe ) ) / ( ( RCSe / ( RRSe + RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( CRS ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( RMSe,( ( MUM / CS ) * ( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( FirstVNF_Mem ,Min( DDR ,CRS ) ) ,( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( MDR / FirstVNF_Mem ) ,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( MLU * CS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,( DDR * Min( ( PN + FirstVNF_RAM ) ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + ( ( MUM + MUR ) * RRSe ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( Max( FirstVNF_Mem,( CRS / MDR ) ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / ( RCSe * MUM ) ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUC ) ) / DS ) - ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) ) ,Max( Max( Const,RRS ),( FirstVNF_Mem + RRS ) ) ) ,( ( MRS + Const ) + ( ( DDR + PN ) * ( ACS - MDR ) ) ) )", "choosing": "( Min( Max( RCSe,MUC ) ,( ( CS / MUC ) * ( MUC * MLU ) ) ) * ( ( DS / ( CS / RCSe ) ) - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( ( MDR / CRS ) / Max( CRS,ARS ) ) * ( Max( CRS,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * RRS ) ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( Min( RMSe ,RMSe ) * ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ,Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),( Min( MLU ,RRSe ) * Max( MUC,CS ) ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( MUC,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,CRS ) ) ,( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( MUM * RCSe ) * RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( FirstVNF_Mem_Server / RRS ),Max( AMS,DDR ) ) ,( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS / RCSe ) / DS ) - ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( Const + ARS ) + ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( DS ,MUM ) + Min( MUR ,MUM ) ) * Min( ( DS - RMSe ) ,Max( MLU,( ( MUR - MUC ) + ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU + Const ),( Min( AMS ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + FirstVNF_CPU ) ) * PN ) ) - Min( ( FirstVNF_RAM_Server + ARS ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ) )", "choosing": "Min( ( Min( ( MUR - RRSe ) ,( MUM - MUM ) ) / Min( Min( RCSe ,( Min( RMSe ,MUM ) - MUM ) ) ,( MLU + MLU ) ) ) ,( Max( Max( MLU,DS ),( MUR - MUR ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) + PN ) / ( FirstVNF_Mem - Min( ( PN * CRS ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ,( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,RCSe ) / Min( ( RCSe / MUM ) ,( ( CS + ( CS + ( MUR - RRSe ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( ( RCSe / MUM ) ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) ) / ( FirstVNF_CPU_Server - Max( BR,DDR ) ) )", "choosing": "( ( ( DS + ( MLU - ( RCSe - RMSe ) ) ) / CS ) * ( MLU + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ARS ) * Max( FirstVNF_RAM,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RMSe * ( MLU * Max( RRSe,( MLU - MUR ) ) ) ) / MUC ) ,Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server / BR ) * PN ) )", "choosing": "( Max( Max( MUM,MUR ),( RCSe * MLU ) ) - ( DS + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ,( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( RCSe - ( MLU + DS ) ) - RCSe ),MUM ) * ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( RRS + PN ) ,( ACS * MRS ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( ( MDR / BR ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS * RRSe ) / Min( RCSe ,Min( ( CS + ( MUM / DS ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - ( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,DS ) + Min( MUR ,MUM ) ) * Min( ( DS - RMSe ) ,Max( MLU,( ( ( ( Min( MUR ,DS ) + CS ) + Min( MUM ,( RCSe * MUM ) ) ) - MUC ) + ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ARS - FirstVNF_CPU ) / Min( Max( Min( ACS ,FirstVNF_RAM ),Min( Max( ( BR + RRS ),( FirstVNF_RAM_Server / MDR ) ) ,FirstVNF_Mem ) ) ,MRS ) )", "choosing": "( Min( Max( ( MLU + ( Min( RRSe ,MUM ) * ( Max( MLU,Max( RCSe,DS ) ) / ( Min( MUM ,MUC ) * ( RCSe + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( Max( MUR,DS ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( BR,( ( ( Max( Const,RRS ) + Min( MRS ,CRS ) ) / Const ) / Const ) ) ) / ( ( BR / ( MRS / CRS ) ) * PN ) )", "choosing": "( Max( ( MUM + MUR ),( RCSe * MLU ) ) - ( ( MLU + MUR ) + ( MUC - ( MLU - Max( RMSe,Max( CS,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,( ACS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( MUR + DS ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7974212884671318}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 0.7307692307692307, "obj2": 0.25596152517874965}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6376518218623481, "obj2": 0.26795355307119434}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "Min( Max( DS,MLU ) ,Max( RCSe,MUM ) )", "obj1": 0.7611336032388664, "obj2": 0.21740871341299517}, {"determining": "( ( ( BR * Min( FirstVNF_Mem ,PN ) ) / Const ) * ( AMS - ACS ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.6153846153846154, "obj2": 0.37099580669654586}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( RRS - CRS ) + ( FirstVNF_RAM / CRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,( MLU + MLU ) ) / ( MLU + DS ) )", "obj1": 0.6174089068825911, "obj2": 0.28628992998088987}, {"determining": "( Min( MRS ,MRS ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( Max( ( ( ( CS - DS ) + ( RMSe / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( MUR - MUC ) + CS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5948146346614634}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( ( FirstVNF_CPU_Server - RRS ),( MDR * FirstVNF_CPU_Server ) ) ) + Max( ( ( BR / MRS ) - ( DDR + FirstVNF_CPU_Server ) ),( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) )", "choosing": "Min( ( Min( ( RMSe - RRSe ) ,( MUM / ( RCSe * Max( MUR,( ( RMSe / CS ) + MUM ) ) ) ) ) / ( Max( CS,RMSe ) / ( MLU + MLU ) ) ) ,( Max( ( MUR - MUR ),Max( MLU,DS ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.37574163416419976}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( DS * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.4190283400809717, "obj2": 0.49217719544071703}, {"determining": "( Max( ARS,Max( ( Const - RRS ),DDR ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( ( Min( MLU ,( Min( RMSe ,DS ) + MUM ) ) + MUR ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3724696356275304, "obj2": 0.5166219445501837}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( ( FirstVNF_RAM_Server + ( DDR / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - ARS ) )", "choosing": "( ( DS + MUM ) * ( ( Max( ( ( ( RCSe * RMSe ) + MUR ) * MLU ),MUC ) / MUC ) * RRSe ) )", "obj1": 0.31376518218623484, "obj2": 0.5890986844697479}, {"determining": "( ( FirstVNF_CPU - MRS ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) / ( DS * Max( DS,CS ) ) )", "obj1": 0.8157894736842105, "obj2": 0.1760468373168866}, {"determining": "Min( ( PN - FirstVNF_Mem_Server ) ,Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,( DDR + DDR ) ) )", "choosing": "( ( RMSe + MUC ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.023239541316595502}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "( Max( DDR,CRS ) / ( PN + ( MDR + ( Const / ARS ) ) ) )", "choosing": "( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) )", "obj1": 0.29554655870445345, "obj2": 0.5942053820600851}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.8421052631578947, "obj2": 0.1654411086443339}, {"determining": "( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( ( Min( MLU ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.38461538461538464, "obj2": 0.504902097364952}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.12974329747364352}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.8522267206477733, "obj2": 0.14173539998473234}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.07313345499333163}, {"determining": "( Max( AMS,BR ) * ( BR * ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - Max( BR,DDR ) ) ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( DS * RCSe ) - ( RMSe * MLU ) ) / ( ( RMSe - RCSe ) - Max( MUR,( ( MUC * RRSe ) * RRSe ) ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06502827966715506}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * RRS ) ) ) ,( ( MDR + Const ) + Const ) )", "choosing": "( ( Min( Max( MUC,( Min( RRSe ,RMSe ) - MLU ) ) ,( MUM * DS ) ) / CS ) * ( MLU / Max( ( MUM - RRSe ),RCSe ) ) )", "obj1": 0.8481781376518218, "obj2": 0.15526441142339067}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Max( ( FirstVNF_CPU * ( PN * ( Max( MDR,FirstVNF_RAM_Server ) * Const ) ) ),( PN - ( ( ( Const - ( FirstVNF_CPU_Server / RRS ) ) * Min( CRS ,PN ) ) * MRS ) ) ) ) )", "choosing": "( Max( MLU,Max( RMSe,( MUC + MUM ) ) ) - Min( RMSe ,CS ) )", "obj1": 0.888663967611336, "obj2": 0.09459846074800742}, {"determining": "( ( Const / Min( FirstVNF_Mem_Server ,CRS ) ) - Min( CRS ,ACS ) )", "choosing": "( ( ( CS + CS ) - MLU ) / ( Max( Min( RCSe ,( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( Min( RMSe ,( RMSe * RCSe ) ) * RMSe ) ) ),MLU ) * RCSe ) )", "obj1": 0.8866396761133604, "obj2": 0.10426922502055178}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( MUM * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08081375665776604}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( CRS - Min( ( Min( ARS ,RRS ) + ARS ) ,ACS ) ) ) )", "choosing": "( ( CS / MUR ) - Min( ( Min( ( CS * RCSe ) ,( DS - RMSe ) ) + DS ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( Min( Min( MUR ,RCSe ) ,( CS - RCSe ) ) * ( ( DS + DS ) * ( MUM + CS ) ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.11756835264215353}, {"determining": "( ( ( ( AMS - FirstVNF_RAM ) * FirstVNF_CPU_Server ) - ARS ) + Max( DDR,CRS ) )", "choosing": "Min( ( RCSe * RMSe ) ,( ( CS / ( MUR - MUR ) ) * Max( Min( DS ,MLU ),DS ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5071118762905236}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) * ( ( RCSe / DS ) / ( MUR + ( RCSe - ( ( Max( RRSe,RRSe ) / ( DS * MLU ) ) + MLU ) ) ) ) ) - ( ( ( MUM / CS ) + ( RRSe / DS ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.11755455454177716}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.9838056680161943, "obj2": 0.009074734343182237}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 0.3097165991902834, "obj2": 0.5908701624345705}, {"determining": "Min( Min( Min( Min( Const ,AMS ) ,( FirstVNF_Mem - AMS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * PN ) ) ,Min( ACS ,Const ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) / Min( Max( ( MLU + DS ),CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06868480092338362}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.08320543244659583}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.01306654739143614}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.08320543244659583}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( Min( ACS ,MDR ) + ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.012500306155768772}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / PN ) ,( DDR * Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,MDR ) ) ,( DDR - AMS ) ) ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) - Min( ( MUM / DS ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) + Min( CRS ,DDR ) ) - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( ( DS / RMSe ) / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * RRS ) ,FirstVNF_CPU ) ) ,FirstVNF_RAM ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS / ( ( DS * ( ( ( MUR + MUC ) / CS ) * MUR ) ) * ( RCSe + RMSe ) ) ) - ( ( ( DS * ( DS + RCSe ) ) - RRSe ) + CS ) ) - Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / ( ( ( ( MRS * PN ) + ( BR + BR ) ) + ( ( Const * FirstVNF_Mem ) + Min( BR ,ARS ) ) ) / ( ( ( RRS / DDR ) + Max( Const,MDR ) ) * ( Max( RRS,Const ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( AMS + CRS ) )", "choosing": "( ( RMSe + MLU ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,Min( RRS ,( ARS * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Max( ( Max( RRSe,Min( RRSe ,RRSe ) ) + MLU ),( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( FirstVNF_RAM_Server - ( Max( ARS,FirstVNF_CPU ) - FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ) / ( ( ( MRS / CRS ) / BR ) * PN ) )", "choosing": "( Max( Max( ( ( ( Max( RMSe,RRSe ) + DS ) - MLU ) - ( MUC - MUR ) ),MUR ),( RCSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,Max( Const,FirstVNF_CPU ) ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / CRS ) ) - ( Min( FirstVNF_RAM ,ARS ) / ( BR + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC + RCSe ) ) / MUR ) / Min( RCSe ,Min( DS ,( MUC + ( DS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( PN,BR ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( ARS + Const ) + ( AMS / ( FirstVNF_CPU / ( FirstVNF_Mem_Server + ( FirstVNF_Mem + ( RRS - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM * DS ) + Min( MUR ,( MUC + ( ( MUR * MLU ) - ( RRSe * CS ) ) ) ) ) * Min( ( DS - RMSe ) ,Max( MLU,( ( ( ( Min( MUR ,DS ) + ( MUM + RCSe ) ) + Min( MUM ,( RCSe * MUM ) ) ) - MUC ) + ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( PN + Min( ( FirstVNF_RAM_Server - RRS ) ,( ( CRS + FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,( MRS * CRS ) ) ) ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( MLU * ( ( Min( MUC ,RCSe ) - MUR ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_Mem - ( Min( Min( Max( Const,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - Max( DDR,FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( RRSe / Max( Min( ( Min( MUC ,MUR ) + MLU ) ,RRSe ),( RRSe * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,FirstVNF_CPU ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( ACS * FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( RCSe / MUM ) ,Min( ( CS + ( ( MUR - RRSe ) + CS ) ) ,RRSe ) ) / ( ( RCSe / ( RRSe + RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( CRS ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( RMSe,( ( MUM / CS ) * ( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( FirstVNF_Mem ,Min( DDR ,CRS ) ) ,( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( MDR / FirstVNF_Mem ) ,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( MLU * CS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,( DDR * Min( ( PN + FirstVNF_RAM ) ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + ( ( MUM + MUR ) * RRSe ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( Max( FirstVNF_Mem,( CRS / MDR ) ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / ( RCSe * MUM ) ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUC ) ) / DS ) - ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( FirstVNF_Mem_Server * MRS ) ) ) ,Max( Max( Const,RRS ),( FirstVNF_Mem + RRS ) ) ) ,( ( MRS + Const ) + ( ( DDR + PN ) * ( ACS - MDR ) ) ) )", "choosing": "( Min( Max( RCSe,MUC ) ,( ( CS / MUC ) * ( MUC * MLU ) ) ) * ( ( DS / ( CS / RCSe ) ) - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( ( MDR / CRS ) / Max( CRS,ARS ) ) * ( Max( CRS,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * RRS ) ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( Min( RMSe ,RMSe ) * ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ,Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Max( Max( CS,MUR ),( Min( MLU ,RRSe ) * Max( MUC,CS ) ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( MUC,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,CRS ) ) ,( ( FirstVNF_RAM - FirstVNF_CPU ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( MUM * RCSe ) * RMSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( FirstVNF_Mem_Server / RRS ),Max( AMS,DDR ) ) ,( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS / RCSe ) / DS ) - ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( Const + ARS ) + ( AMS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( DS ,MUM ) + Min( MUR ,MUM ) ) * Min( ( DS - RMSe ) ,Max( MLU,( ( MUR - MUC ) + ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU + Const ),( Min( AMS ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + FirstVNF_CPU ) ) * PN ) ) - Min( ( FirstVNF_RAM_Server + ARS ) ,Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ) )", "choosing": "Min( ( Min( ( MUR - RRSe ) ,( MUM - MUM ) ) / Min( Min( RCSe ,( Min( RMSe ,MUM ) - MUM ) ) ,( MLU + MLU ) ) ) ,( Max( Max( MLU,DS ),( MUR - MUR ) ) / Min( Max( RCSe,RMSe ) ,( MLU + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) + PN ) / ( FirstVNF_Mem - Min( ( PN * CRS ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ,( Max( Const,FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( ARS - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUC,RCSe ) / Min( ( RCSe / MUM ) ,( ( CS + ( CS + ( MUR - RRSe ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) / Min( Max( Min( ACS ,FirstVNF_RAM ),Min( Max( ( BR + RRS ),( FirstVNF_RAM_Server / MDR ) ) ,FirstVNF_Mem ) ) ,MRS ) )", "choosing": "( Min( Max( ( MLU + ( Min( RRSe ,MUM ) * ( Max( MLU,Max( RCSe,DS ) ) / ( Min( MUM ,MUC ) * ( RCSe + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( Max( MUR,DS ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,( ACS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( MUR + DS ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7974212884671318}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - ( MDR + ( Const / ARS ) ) ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3691231983468263}, {"determining": "Min( Min( Max( FirstVNF_Mem_Server,ARS ) ,( MDR + PN ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,( RRSe + MUM ) ) + ( MUM - MUM ) )", "obj1": 0.7307692307692307, "obj2": 0.25596152517874965}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "Min( Max( DS,MLU ) ,Max( RCSe,MUM ) )", "obj1": 0.7611336032388664, "obj2": 0.21740871341299517}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( Min( MRS ,MRS ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( Max( ( ( ( CS - DS ) + ( RMSe / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( MUR - MUC ) + CS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5948146346614634}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6376518218623481, "obj2": 0.26795355307119434}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.4190283400809717, "obj2": 0.49217719544071703}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "( Max( ARS,( ACS + ( Const / MRS ) ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( MUM * DS ) ,( ( Min( ( ( MUR / RCSe ) / ( MUR + RCSe ) ) ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ) / MUM ) * ( ( MUM - MUC ) + MUR ) )", "obj1": 0.37044534412955465, "obj2": 0.5141679904975773}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "( Min( Max( RMSe,MUC ) ,( DS * RCSe ) ) + Min( ( DS / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7935222672064778, "obj2": 0.18351132664633615}, {"determining": "( ( FirstVNF_RAM_Server + ( DDR / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - ARS ) )", "choosing": "( ( DS + MUM ) * ( ( Max( ( ( ( RCSe * RMSe ) + MUR ) * MLU ),MUC ) / MUC ) * RRSe ) )", "obj1": 0.31376518218623484, "obj2": 0.5890986844697479}, {"determining": "( FirstVNF_CPU_Server / Max( DDR,DDR ) )", "choosing": "( ( Min( ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3805668016194332, "obj2": 0.5048248380370661}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( Max( DDR,CRS ) / ( PN + ( MDR + ( Const / ARS ) ) ) )", "choosing": "( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) )", "obj1": 0.29554655870445345, "obj2": 0.5942053820600851}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( RRS - CRS ) + ( FirstVNF_RAM / CRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,( MLU + MLU ) ) / ( MLU + DS ) )", "obj1": 0.6174089068825911, "obj2": 0.28628992998088987}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( PN ,FirstVNF_CPU ) ) * ( Max( PN,ACS ) - Min( Const ,DDR ) ) )", "choosing": "( Min( ( MUR / DS ) ,( MUR * MUC ) ) + Min( Max( ( MLU + ( ( RRSe + MUM ) * Min( ( RRSe - ( DS + MLU ) ) ,( Min( MUM ,RRSe ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.15815817221200587}, {"determining": "Min( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,AMS ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 0.9655870445344129, "obj2": 0.033092365567610735}, {"determining": "( ( FirstVNF_CPU - MRS ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) / ( DS * Max( DS,CS ) ) )", "obj1": 0.8157894736842105, "obj2": 0.1760468373168866}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.12974329747364352}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6356275303643725, "obj2": 0.27277333268563786}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.07313345499333163}, {"determining": "( Max( AMS,BR ) * ( BR * ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - Max( BR,DDR ) ) ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( DS * RCSe ) - ( RMSe * MLU ) ) / ( ( RMSe - RCSe ) - Max( MUR,( ( MUC * RRSe ) * RRSe ) ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06502827966715506}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Max( ( FirstVNF_CPU * ( PN * ( Max( MDR,FirstVNF_RAM_Server ) * Const ) ) ),( PN - ( ( ( Const - ( FirstVNF_CPU_Server / RRS ) ) * Min( CRS ,PN ) ) * MRS ) ) ) ) )", "choosing": "( Max( MLU,Max( RMSe,( MUC + MUM ) ) ) - Min( RMSe ,CS ) )", "obj1": 0.888663967611336, "obj2": 0.09459846074800742}, {"determining": "Min( ( PN - FirstVNF_Mem_Server ) ,Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,( DDR + DDR ) ) )", "choosing": "( ( RMSe + MUC ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.023239541316595502}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * RRS ) ) ) ,( ( MDR + Const ) + Const ) )", "choosing": "( ( Min( Max( MUC,( Min( RRSe ,RMSe ) - MLU ) ) ,( MUM * DS ) ) / CS ) * ( MLU / Max( ( MUM - RRSe ),RCSe ) ) )", "obj1": 0.8481781376518218, "obj2": 0.15526441142339067}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.1793074663247957}, {"determining": "( ( Max( PN,ACS ) - ( FirstVNF_Mem * ACS ) ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) - Min( AMS ,RRS ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( ( CS / MUC ) ,RCSe ) )", "obj1": 0.854251012145749, "obj2": 0.13974115753691327}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( Max( FirstVNF_RAM,Min( ( RRS + PN ) ,( ACS * MRS ) ) ) / DDR ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( ( Min( RMSe ,MUR ) - ( MUR + DS ) ) - ( DS * RRSe ) ) ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( CRS - Min( ( Min( ARS ,RRS ) + ARS ) ,ACS ) ) ) )", "choosing": "( ( CS / MUR ) - Min( ( Min( ( CS * RCSe ) ,( DS - RMSe ) ) + DS ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( Min( Min( MUR ,RCSe ) ,( CS - RCSe ) ) * ( ( DS + DS ) * ( MUM + CS ) ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.11756835264215353}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.9838056680161943, "obj2": 0.009074734343182237}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.8522267206477733, "obj2": 0.14173539998473234}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 0.3097165991902834, "obj2": 0.5908701624345705}, {"determining": "( ( RRS + ARS ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,RMSe ) / Max( MUM,Max( ( Max( ( ( ( CS - MUM ) + RCSe ) - RRSe ),DS ) - ( MUR + DS ) ),( CS * MUC ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10662429778353971}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) * ( ( RCSe / DS ) / ( MUR + ( RCSe - ( ( Max( RRSe,RRSe ) / ( DS * MLU ) ) + MLU ) ) ) ) ) - ( ( ( MUM / CS ) + ( RRSe / DS ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.11755455454177716}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( ( FirstVNF_CPU_Server - RRS ),( MDR * FirstVNF_CPU_Server ) ) ) + Max( ( ( BR / MRS ) - ( DDR + FirstVNF_CPU_Server ) ),( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08081375665776604}, {"determining": "( ( Const / Min( FirstVNF_Mem_Server ,CRS ) ) - Min( CRS ,ACS ) )", "choosing": "( ( ( CS + CS ) - MLU ) / ( Max( Min( RCSe ,( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( Min( RMSe ,( RMSe * RCSe ) ) * RMSe ) ) ),MLU ) * RCSe ) )", "obj1": 0.8866396761133604, "obj2": 0.10426922502055178}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.08320543244659583}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,MLU ) - Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.01306654739143614}, {"determining": "Min( Min( Min( Min( Const ,AMS ) ,( FirstVNF_Mem - AMS ) ) ,( ( AMS / FirstVNF_CPU_Server ) * PN ) ) ,Min( ACS ,Const ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) / Min( Max( ( MLU + DS ),CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06868480092338362}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( MUM * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08081375665776604}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.08320543244659583}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( Min( ACS ,MDR ) + ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.012500306155768772}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,( CRS * PN ) ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( MUM - MLU ) - DS ) * ( CS / MUM ) ) ,( MUM * DS ) ) * CS ) * Max( MUM,MLU ) )", "obj1": 0.8481781376518218, "obj2": 0.15526441142339067}, {"determining": "Min( Min( Min( Min( Const ,AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) ) ,( ( AMS / FirstVNF_CPU_Server ) * PN ) ) ,Min( ACS ,Const ) )", "choosing": "( ( Min( MUM ,Min( MUM ,MLU ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( Max( MUC,RCSe ) + RCSe ) ) ) ) / Min( Max( ( MLU + DS ),CS ) ,( RRSe - RCSe ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06868480092338362}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( MRS * Max( BR,( ( ( Max( Const,RRS ) + Min( MRS ,CRS ) ) / Const ) / Const ) ) ) / ( ( BR / ( MRS / CRS ) ) * PN ) )", "choosing": "( Max( ( MUM + MUR ),( RCSe * MLU ) ) - ( ( MLU + MUR ) + ( MUC - ( MLU - Max( RMSe,Max( CS,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / PN ) ,( DDR * Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,MDR ) ) ,( DDR - AMS ) ) ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) - Min( ( MUM / DS ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) + Min( CRS ,DDR ) ) - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( ( DS / RMSe ) / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * RRS ) ,FirstVNF_CPU ) ) ,FirstVNF_RAM ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS / ( ( DS * ( ( ( MUR + MUC ) / CS ) * MUR ) ) * ( RCSe + RMSe ) ) ) - ( ( ( DS * ( DS + RCSe ) ) - RRSe ) + CS ) ) - Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / ( ( ( ( MRS * PN ) + ( BR + BR ) ) + ( ( Const * FirstVNF_Mem ) + Min( BR ,ARS ) ) ) / ( ( ( RRS / DDR ) + Max( Const,MDR ) ) * ( Max( RRS,Const ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( AMS + CRS ) )", "choosing": "( ( RMSe + MLU ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,Min( RRS ,( ARS * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Max( ( Max( RRSe,Min( RRSe ,RRSe ) ) + MLU ),( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( ( FirstVNF_RAM_Server - ( Max( ARS,FirstVNF_CPU ) - FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ) / ( ( ( MRS / CRS ) / BR ) * PN ) )", "choosing": "( Max( Max( ( ( ( Max( RMSe,RRSe ) + DS ) - MLU ) - ( MUC - MUR ) ),MUR ),( RCSe * MLU ) ) - Max( CS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,Max( Const,FirstVNF_CPU ) ) ,( FirstVNF_CPU + FirstVNF_RAM ) ) * ( ( Min( MDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / CRS ) ) - ( Min( FirstVNF_RAM ,ARS ) / ( BR + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC + RCSe ) ) / MUR ) / Min( RCSe ,Min( DS ,( MUC + ( DS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( PN,BR ),Max( FirstVNF_Mem,FirstVNF_RAM ) ) - ( ( ARS + Const ) + ( AMS / ( FirstVNF_CPU / ( FirstVNF_Mem_Server + ( FirstVNF_Mem + ( RRS - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM * DS ) + Min( MUR ,( MUC + ( ( MUR * MLU ) - ( RRSe * CS ) ) ) ) ) * Min( ( DS - RMSe ) ,Max( MLU,( ( ( ( Min( MUR ,DS ) + ( MUM + RCSe ) ) + Min( MUM ,( RCSe * MUM ) ) ) - MUC ) + ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM * ( PN + Min( ( FirstVNF_RAM_Server - RRS ) ,( ( CRS + FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,( MRS * CRS ) ) ) ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( MLU * ( ( Min( MUC ,RCSe ) - MUR ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_Mem - ( Min( Min( Max( Const,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( FirstVNF_Mem + FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - Max( DDR,FirstVNF_CPU_Server ) ) ) ) ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( RRSe / Max( Min( ( Min( MUC ,MUR ) + MLU ) ,RRSe ),( RRSe * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,FirstVNF_CPU ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( ACS * FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( RCSe / MUM ) ,Min( ( CS + ( ( MUR - RRSe ) + CS ) ) ,RRSe ) ) / ( ( RCSe / ( RRSe + RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( Min( CRS ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( RMSe,( ( MUM / CS ) * ( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( FirstVNF_Mem ,Min( DDR ,CRS ) ) ,( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( MDR / FirstVNF_Mem ) ,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( MLU * CS ) + ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,( DDR * Min( ( PN + FirstVNF_RAM ) ,( DDR - AMS ) ) ) )", "choosing": "( ( RRSe + MLU ) - Min( ( MUC + Min( MLU ,MLU ) ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( RRSe + ( ( MUM + MUR ) * RRSe ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( ( Max( MDR,( CRS - Min( ( ( Min( BR ,FirstVNF_RAM_Server ) / PN ) + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( Min( MDR ,CRS ) - ( PN - RRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,RCSe ),( MUC - Max( MUR,( ( Max( ( MUC / MUC ),Max( DS,RCSe ) ) / MLU ) * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( Min( RMSe ,( CS * MUC ) ) - ( MUM + MUR ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7949144820960072}, {"determining": "Min( ( ARS - ( FirstVNF_Mem_Server * RRS ) ) ,( ( DDR / AMS ) - FirstVNF_Mem ) )", "choosing": "Min( Max( DS,MLU ) ,Max( RCSe,MUM ) )", "obj1": 0.7611336032388664, "obj2": 0.21740871341299517}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - ( MDR + ( Const / ARS ) ) ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3691231983468263}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5866080956945222}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( BR * MDR ) ,( ARS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( ( RRSe * MUM ) + CS ) ) - ( DS * RRSe ) )", "obj1": 0.06882591093117409, "obj2": 0.7946340474879743}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.4190283400809717, "obj2": 0.49217719544071703}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - ( PN * AMS ) ) / ( FirstVNF_RAM * MDR ) )", "choosing": "( Min( CS ,RMSe ) - Min( Max( RMSe,MUM ) ,MUM ) )", "obj1": 0.12753036437246965, "obj2": 0.6949301823018762}, {"determining": "( Max( ARS,( ACS + ( Const / MRS ) ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( MUM * DS ) ,( ( Min( ( ( MUR / RCSe ) / ( MUR + RCSe ) ) ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ) / MUM ) * ( ( MUM - MUC ) + MUR ) )", "obj1": 0.37044534412955465, "obj2": 0.5141679904975773}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( MUM * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( MUR + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.6116699852721398}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Min( ( Max( RMSe,( RRSe - ( DS + MLU ) ) ) * ( MLU * MUM ) ) ,MUM ) ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.18010207637504408}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( FirstVNF_CPU_Server / Max( DDR,DDR ) )", "choosing": "( ( Min( ( Min( ( RRSe + RRSe ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3805668016194332, "obj2": 0.5048248380370661}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "( ( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ) - ( ( DDR / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,AMS ) * ( Const / PN ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + Max( Min( MUC ,MLU ),MLU ) )", "obj1": 0.9190283400809717, "obj2": 0.07313345499333163}, {"determining": "Min( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,AMS ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 0.9655870445344129, "obj2": 0.033092365567610735}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUC / ( Min( MUM ,RMSe ) - MLU ) ) ,( MUM * DS ) ) / CS ) * Max( MUM,MLU ) )", "obj1": 0.8481781376518218, "obj2": 0.15299102120387448}, {"determining": "( ( FirstVNF_CPU - MRS ) * ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,CS ) / ( DS * Max( DS,CS ) ) )", "obj1": 0.8157894736842105, "obj2": 0.1760468373168866}, {"determining": "Min( ( PN - FirstVNF_Mem_Server ) ,Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,( DDR + DDR ) ) )", "choosing": "( ( RMSe + MUC ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.023239541316595502}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( PN ,FirstVNF_CPU ) ) * ( Max( PN,ACS ) - Min( Const ,DDR ) ) )", "choosing": "( Min( ( MUR / DS ) ,( MUR * MUC ) ) + Min( Max( ( MLU + ( ( RRSe + MUM ) * Min( ( RRSe - ( DS + MLU ) ) ,( Min( MUM ,RRSe ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.15815817221200587}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6376518218623481, "obj2": 0.26795355307119434}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.12974329747364352}, {"determining": "( Max( AMS,BR ) * ( BR * ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - Max( BR,DDR ) ) ) ) )", "choosing": "Min( Max( DS,RCSe ) ,( ( ( DS * RCSe ) - ( RMSe * MLU ) ) / ( ( RMSe - RCSe ) - Max( MUR,( ( MUC * RRSe ) * RRSe ) ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.06502827966715506}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Min( MRS ,MRS ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( Max( ( ( ( CS - DS ) + ( RMSe / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( ( MUR - MUC ) + CS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5948146346614634}, {"determining": "( ( Max( FirstVNF_Mem,Min( PN ,FirstVNF_Mem ) ) * ( RRS * FirstVNF_Mem_Server ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( MLU + MLU ) ) ) ),MUC ) ,( RMSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.8238866396761133, "obj2": 0.16492537858158723}, {"determining": "Min( ( ( FirstVNF_Mem * AMS ) / ( ( FirstVNF_Mem - ( FirstVNF_RAM_Server - ( Max( AMS,( RRS + ARS ) ) - Min( ( CRS * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) ) - ACS ) ) ,( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) - ( DDR + RRS ) ) )", "choosing": "( ( RRSe * ( Max( MUC,( Min( ( Min( RCSe ,MLU ) * Max( MUM,RCSe ) ) ,( MUR * RCSe ) ) * RCSe ) ) * MUR ) ) - ( RMSe + MUC ) )", "obj1": 0.951417004048583, "obj2": 0.03864317127556086}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / MLU ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 0.7995951417004049, "obj2": 0.1791998530814027}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( RRS - CRS ) + ( FirstVNF_RAM / CRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,( MLU + MLU ) ) / ( MLU + DS ) )", "obj1": 0.6174089068825911, "obj2": 0.28628992998088987}, {"determining": "( Min( ( BR - CRS ) ,( MDR / MDR ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RMSe - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.2763844360577306}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( CRS - Min( ( Min( ARS ,RRS ) + ARS ) ,ACS ) ) ) )", "choosing": "( ( CS / MUR ) - Min( ( Min( ( CS * RCSe ) ,( DS - RMSe ) ) + DS ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( Min( Min( MUR ,RCSe ) ,( CS - RCSe ) ) * ( ( DS + DS ) * ( MUM + CS ) ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.11756835264215353}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.13709123779649415}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Max( ( FirstVNF_CPU * ( PN * ( Max( MDR,FirstVNF_RAM_Server ) * Const ) ) ),( PN - ( ( ( Const - ( FirstVNF_CPU_Server / RRS ) ) * Min( CRS ,PN ) ) * MRS ) ) ) ) )", "choosing": "( Max( MLU,Max( RMSe,( MUC + MUM ) ) ) - Min( RMSe ,CS ) )", "obj1": 0.888663967611336, "obj2": 0.09459846074800742}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.8522267206477733, "obj2": 0.14173539998473234}, {"determining": "( ( FirstVNF_CPU - ARS ) * ( FirstVNF_CPU * ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - Max( BR,DDR ) ) ) ) )", "choosing": "Min( ( MUM * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06598867999248177}, {"determining": "( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / Max( DDR,( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) ) ) )", "choosing": "( ( Min( ( ( Min( MLU ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RMSe ) ) / MUM ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3785425101214575, "obj2": 0.5074655413690261}, {"determining": "( ( RRS + ARS ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,RMSe ) / Max( MUM,Max( ( Max( ( ( ( CS - MUM ) + RCSe ) - RRSe ),DS ) - ( MUR + DS ) ),( CS * MUC ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10662429778353971}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( MUM * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08081375665776604}, {"determining": "( ( Const / Min( FirstVNF_Mem_Server ,CRS ) ) - Min( CRS ,ACS ) )", "choosing": "( ( ( CS + CS ) - MLU ) / ( Max( Min( RCSe ,( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( Min( RMSe ,( RMSe * RCSe ) ) * RMSe ) ) ),MLU ) * RCSe ) )", "obj1": 0.8866396761133604, "obj2": 0.10426922502055178}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "Min( ( Max( MDR,MRS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( ( FirstVNF_RAM_Server - PN ) ,Max( ( Const / Max( BR,ACS ) ),FirstVNF_Mem_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( Max( Min( ( MUM - RMSe ) ,MUC ),DS ) / RRSe ) / RMSe ) ,( Min( MUM ,CS ) * ( MUM - MUM ) ) ) / Min( MLU ,( CS / MUM ) ) )", "obj1": 0.8825910931174089, "obj2": 0.11715966876316178}, {"determining": "( ( Max( PN,ACS ) - ( FirstVNF_Mem * ACS ) ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) - Min( AMS ,RRS ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( ( CS / MUC ) ,RCSe ) )", "obj1": 0.854251012145749, "obj2": 0.13974115753691327}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.9838056680161943, "obj2": 0.009074734343182237}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6356275303643725, "obj2": 0.27277333268563786}, {"determining": "Min( ( ARS * Max( CRS,FirstVNF_RAM_Server ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,DS ) ,Min( CS ,Min( ( RMSe / ( DS - RRSe ) ) ,RRSe ) ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.09027629534029975}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Max( ( FirstVNF_CPU * ( PN * ( Max( MDR,FirstVNF_RAM_Server ) * Const ) ) ),( PN - ( ( ( Const - ( FirstVNF_CPU_Server / RRS ) ) * Min( CRS ,PN ) ) * MRS ) ) ) ) )", "choosing": "( Max( MLU,Max( RMSe,( MUC + MUM ) ) ) - Min( RMSe ,CS ) )", "obj1": 0.8947368421052632, "obj2": 0.08752350289653235}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / Max( ( Max( BR,RRS ) - FirstVNF_CPU ),ARS ) )", "choosing": "( RRSe - Min( CS ,( ( Min( MUM ,MLU ) * ( ( CS * RCSe ) + MUR ) ) - ( ( MUR + ( MUC / ( ( RCSe + MUM ) - ( RMSe * RCSe ) ) ) ) * MUM ) ) ) )", "obj1": 0.6295546558704453, "obj2": 0.2737976777899029}, {"determining": "( ( ( PN * DDR ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.006403326636238034}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( ( Max( ( FirstVNF_CPU * CRS ),( FirstVNF_Mem - DDR ) ) / Max( ( FirstVNF_CPU_Server - RRS ),( MDR * FirstVNF_CPU_Server ) ) ) + Max( ( ( BR / MRS ) - ( DDR + FirstVNF_CPU_Server ) ),( Min( MDR ,AMS ) + ( MRS * ACS ) ) ) ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.902834008097166, "obj2": 0.08081375665776604}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.08320543244659583}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( AMS + Const ) )", "choosing": "( ( Min( ( MLU / MUC ) ,( MUM * DS ) ) / ( ( Max( MUC,Min( Max( ( MUM * MUR ),CS ) ,( ( MUM / RRSe ) + RRSe ) ) ) * RCSe ) + DS ) ) * ( RRSe + MUR ) )", "obj1": 0.9919028340080972, "obj2": 0.004626551293806718}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "Min( ( Max( MDR,( CRS - Const ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,CS ),( MUC - Max( MUR,( CS * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.08320543244659583}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) * ( ( RCSe / DS ) / ( MUR + ( RCSe - ( ( Max( RRSe,RRSe ) / ( DS * MLU ) ) + MLU ) ) ) ) ) - ( ( ( MUM / CS ) + ( RRSe / DS ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.11755455454177716}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( ( ( ( FirstVNF_RAM * Const ) - ARS ) + ( FirstVNF_Mem_Server * AMS ) ) / ( ( PN * FirstVNF_RAM_Server ) / ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + ( RCSe / ( ( Min( MUM ,MLU ) + MUC ) - ( RCSe - ( MUM - MUC ) ) ) ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( FirstVNF_Mem_Server - MDR ) + ( FirstVNF_RAM + ARS ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,( RMSe * RRSe ) ) - Min( Min( DS ,RCSe ) ,Min( MUR ,RRSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( ARS - FirstVNF_CPU ) / Min( Max( Min( ACS ,FirstVNF_RAM ),Min( Max( ( BR + RRS ),( FirstVNF_RAM_Server / MDR ) ) ,FirstVNF_Mem ) ) ,MRS ) )", "choosing": "( Min( Max( ( MLU + ( Min( RRSe ,MUM ) * ( Max( MLU,Max( RCSe,DS ) ) / ( Min( MUM ,MUC ) * ( RCSe + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( Max( MUR,DS ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( BR,( ( ( Max( Const,RRS ) + Min( MRS ,CRS ) ) / Const ) / Const ) ) ) / ( ( BR / ( MRS / CRS ) ) * PN ) )", "choosing": "( Max( ( MUM + MUR ),( RCSe * MLU ) ) - ( ( MLU + MUR ) + ( MUC - ( MLU - Max( RMSe,Max( CS,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / PN ) ,( DDR * Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,MDR ) ) ,( DDR - AMS ) ) ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) - Min( ( MUM / DS ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) + Min( CRS ,DDR ) ) - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( ( DS / RMSe ) / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * RRS ) ,FirstVNF_CPU ) ) ,FirstVNF_RAM ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS / ( ( DS * ( ( ( MUR + MUC ) / CS ) * MUR ) ) * ( RCSe + RMSe ) ) ) - ( ( ( DS * ( DS + RCSe ) ) - RRSe ) + CS ) ) - Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / ( ( ( ( MRS * PN ) + ( BR + BR ) ) + ( ( Const * FirstVNF_Mem ) + Min( BR ,ARS ) ) ) / ( ( ( RRS / DDR ) + Max( Const,MDR ) ) * ( Max( RRS,Const ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( AMS + CRS ) )", "choosing": "( ( RMSe + MLU ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,Min( RRS ,( ARS * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Max( ( Max( RRSe,Min( RRSe ,RRSe ) ) + MLU ),( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( PN * ( Min( Const ,RRS ) - ( DDR / FirstVNF_Mem_Server ) ) ) + ( Min( FirstVNF_CPU ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - ARS ) + ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + ( RCSe / ( ( Max( MUR,DS ) + RCSe ) - ( ( MUM * MUC ) - RCSe ) ) ) ) ,( ( RRSe * ( RMSe - MUR ) ) - Max( MLU,MLU ) ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,( CRS - Min( ( ( Min( BR ,FirstVNF_RAM_Server ) / PN ) + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( Min( MDR ,CRS ) - ( PN - RRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,RCSe ),( MUC - Max( MUR,( ( Max( ( MUC / MUC ),Max( DS,RCSe ) ) / MLU ) * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( Min( RMSe ,( CS * MUC ) ) - ( MUM + MUR ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7949144820960072}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.20458644965446576}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - ( MDR + ( Const / ARS ) ) ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3691231983468263}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5866080956945222}, {"determining": "( Max( AMS,( ARS + ARS ) ) / ( BR - RRS ) )", "choosing": "( Max( MLU,( MUC / Min( Min( DS ,( MUM / ( MUR / CS ) ) ) ,MUR ) ) ) - Min( CS ,MUC ) )", "obj1": 0.18016194331983806, "obj2": 0.6698418960473858}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.402834008097166, "obj2": 0.4906769892768774}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "Min( ( BR * MDR ) ,( ARS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( ( RRSe * MUM ) + CS ) ) - ( DS * RRSe ) )", "obj1": 0.06882591093117409, "obj2": 0.7946340474879743}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,Max( RMSe,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) * ( ( FirstVNF_CPU_Server - MRS ) + ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( ( MUM * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( MUR + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.6116699852721398}, {"determining": "( Max( ARS,( ACS + ( Const / MRS ) ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( MUM * DS ) ,( ( Min( ( ( MUR / RCSe ) / ( MUR + RCSe ) ) ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ) / MUM ) * ( ( MUM - MUC ) + MUR ) )", "obj1": 0.37044534412955465, "obj2": 0.5141679904975773}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Min( ( Max( RMSe,( RRSe - ( DS + MLU ) ) ) * ( MLU * MUM ) ) ,MUM ) ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.18010207637504408}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Min( ( Max( RMSe,RMSe ) * ( MLU * MUM ) ) ,MUM ) ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.37654745576453524}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * Max( ( FirstVNF_CPU * ( PN * ( Max( MDR,FirstVNF_RAM_Server ) * Const ) ) ),( PN - ( ( ( Const - ( FirstVNF_CPU_Server / RRS ) ) * Min( CRS ,PN ) ) * MRS ) ) ) ) )", "choosing": "( Max( MLU,Max( RMSe,( MUC + MUM ) ) ) - Min( RMSe ,CS ) )", "obj1": 0.888663967611336, "obj2": 0.09459846074800742}, {"determining": "( FirstVNF_CPU_Server / Max( ( Const / Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,CRS ) ),DDR ) )", "choosing": "( ( Min( ( Min( Min( ( MUC + DS ) ,RMSe ) ,( RCSe - DS ) ) + ( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( RMSe * Min( MUR ,( RMSe * RCSe ) ) ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3765182186234818, "obj2": 0.5039975860567596}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "Min( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,AMS ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 0.9655870445344129, "obj2": 0.033092365567610735}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6376518218623481, "obj2": 0.26795355307119434}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.8360323886639676, "obj2": 0.14966634850619068}, {"determining": "Min( ( PN - FirstVNF_Mem_Server ) ,Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,( DDR + DDR ) ) )", "choosing": "( ( RMSe + MUC ) - ( MLU * ( MUC / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.023239541316595502}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5907962287458853}, {"determining": "Min( ( ( FirstVNF_Mem * AMS ) / ( ( FirstVNF_Mem - ( FirstVNF_RAM_Server - ( Max( AMS,( RRS + ARS ) ) - Min( ( CRS * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) ) - ACS ) ) ,( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) - ( DDR + RRS ) ) )", "choosing": "( ( RRSe * ( Max( MUC,( Min( ( Min( RCSe ,MLU ) * Max( MUM,RCSe ) ) ,( MUR * RCSe ) ) * RCSe ) ) * MUR ) ) - ( RMSe + MUC ) )", "obj1": 0.951417004048583, "obj2": 0.03864317127556086}, {"determining": "( ( Max( FirstVNF_Mem,Min( PN ,FirstVNF_Mem ) ) * ( RRS * FirstVNF_Mem_Server ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( MLU + MLU ) ) ) ),MUC ) ,( RMSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.8238866396761133, "obj2": 0.16492537858158723}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.12974329747364352}, {"determining": "( ( RRS + ARS ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,RMSe ) / Max( MUM,Max( ( Max( ( ( ( CS - MUM ) + RCSe ) - RRSe ),DS ) - ( MUR + DS ) ),( CS * MUC ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10662429778353971}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( PN ,FirstVNF_CPU ) ) * ( Max( PN,ACS ) - Min( Const ,DDR ) ) )", "choosing": "( Min( ( MUR / DS ) ,( MUR * MUC ) ) + Min( Max( ( MLU + ( ( RRSe + MUM ) * Min( ( RRSe - ( DS + MLU ) ) ,( Min( MUM ,RRSe ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.15815817221200587}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.8522267206477733, "obj2": 0.14173539998473234}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ( ( RRS - CRS ) + ( FirstVNF_RAM / CRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,( MLU + MLU ) ) / ( MLU + DS ) )", "obj1": 0.6174089068825911, "obj2": 0.28628992998088987}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.17340320662287834}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.8137651821862348, "obj2": 0.17876783014034942}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + Max( ( Min( FirstVNF_CPU_Server ,( RRS / FirstVNF_CPU ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( MUM * ( ( DS + DS ) * Min( Min( ( ( ( CS / RCSe ) * MUC ) * MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.12048046210898121}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM + BR ) + Max( FirstVNF_RAM,Max( DDR,Const ) ) ) ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + Max( Min( Max( Max( Max( DS,MUR ),( MLU / Max( MUM,( MUC / RMSe ) ) ) ),Min( RMSe ,CS ) ) ,MLU ),MLU ) )", "obj1": 0.8866396761133604, "obj2": 0.09470914309279502}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "Min( ( Max( MDR,MRS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( ( FirstVNF_RAM_Server - PN ) ,Max( ( Const / Max( BR,ACS ) ),FirstVNF_Mem_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( Max( Min( ( MUM - RMSe ) ,MUC ),DS ) / RRSe ) / RMSe ) ,( Min( MUM ,CS ) * ( MUM - MUM ) ) ) / Min( MLU ,( CS / MUM ) ) )", "obj1": 0.8825910931174089, "obj2": 0.11715966876316178}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.13709123779649415}, {"determining": "( ( Max( PN,ACS ) - ( FirstVNF_Mem * ACS ) ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) - Min( AMS ,RRS ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( ( CS / MUC ) ,RCSe ) )", "obj1": 0.854251012145749, "obj2": 0.13974115753691327}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / MLU ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 0.7995951417004049, "obj2": 0.1791998530814027}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.9838056680161943, "obj2": 0.009074734343182237}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / MLU ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 0.7995951417004049, "obj2": 0.1791998530814027}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( CRS - Min( ( Min( ARS ,RRS ) + ARS ) ,ACS ) ) ) )", "choosing": "( ( CS / MUR ) - Min( ( Min( ( CS * RCSe ) ,( DS - RMSe ) ) + DS ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( Min( Min( MUR ,RCSe ) ,( CS - RCSe ) ) * ( ( DS + DS ) * ( MUM + CS ) ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.11756835264215353}, {"determining": "Min( ( ( ( PN - FirstVNF_Mem_Server ) + ( ( MRS * FirstVNF_CPU ) * PN ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( ARS / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem + Const ) )", "choosing": "Min( ( ( Max( MUM,( RCSe * ( ( RMSe / DS ) * RMSe ) ) ) - ( RCSe / Max( Max( MUR,RRSe ),Min( RCSe ,RCSe ) ) ) ) - MLU ) ,( Min( RRSe ,( RCSe - MUR ) ) * ( ( DS + DS ) * ( DS + MUM ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.008397770592015385}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) - Min( MDR ,MRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + Max( ( Min( FirstVNF_CPU_Server ,( RRS / Max( BR,DDR ) ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * MUC ) ) / MUR ) ) ,( CS * ( ( DS + DS ) * Min( Min( ( ( ( CS / RCSe ) * MUC ) * MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.13709123779649415}, {"determining": "( ( ( PN * DDR ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.006403326636238034}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( AMS + Const ) )", "choosing": "( ( Min( ( MLU / MUC ) ,( MUM * DS ) ) / ( ( Max( MUC,Min( Max( ( MUM * MUR ),CS ) ,( ( MUM / RRSe ) + RRSe ) ) ) * RCSe ) + DS ) ) * ( RRSe + MUR ) )", "obj1": 0.9919028340080972, "obj2": 0.004626551293806718}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) * ( ( RCSe / DS ) / ( MUR + ( RCSe - ( ( Max( RRSe,RRSe ) / ( DS * MLU ) ) + MLU ) ) ) ) ) - ( ( ( MUM / CS ) + ( RRSe / DS ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.11755455454177716}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( ( ( ACS - ARS ) + ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + Max( RMSe,MUM ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( ( FirstVNF_RAM * Const ) - ARS ) + ( FirstVNF_Mem_Server * AMS ) ) / ( ( PN * FirstVNF_RAM_Server ) / ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + ( RCSe / ( ( Min( MUM ,MLU ) + MUC ) - ( RCSe - ( MUM - MUC ) ) ) ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) / Min( Max( Min( ACS ,FirstVNF_RAM ),Min( Max( ( BR + RRS ),( FirstVNF_RAM_Server / MDR ) ) ,FirstVNF_Mem ) ) ,MRS ) )", "choosing": "( Min( Max( ( MLU + ( Min( RRSe ,MUM ) * ( Max( MLU,Max( RCSe,DS ) ) / ( Min( MUM ,MUC ) * ( RCSe + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( Max( MUR,DS ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( BR,( ( ( Max( Const,RRS ) + Min( MRS ,CRS ) ) / Const ) / Const ) ) ) / ( ( BR / ( MRS / CRS ) ) * PN ) )", "choosing": "( Max( ( MUM + MUR ),( RCSe * MLU ) ) - ( ( MLU + MUR ) + ( MUC - ( MLU - Max( RMSe,Max( CS,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / PN ) ,( DDR * Min( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,MDR ) ) ,( DDR - AMS ) ) ) )", "choosing": "( ( ( RCSe - MUR ) + RCSe ) - Min( ( MUC / ( RCSe * RMSe ) ) ,( MUC + ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) / ( DDR - MRS ) )", "choosing": "( Max( MLU,RMSe ) - Min( ( MUM / DS ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( FirstVNF_Mem + AMS ) * ( FirstVNF_CPU + Const ) ) ) - ( ( ( FirstVNF_Mem_Server + MDR ) + Min( CRS ,DDR ) ) - RRS ) )", "choosing": "( Min( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) ,( ( RRSe / MUC ) * Min( RRSe ,MUC ) ) ) - ( ( ( MUM / CS ) + ( ( DS / RMSe ) / MUC ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU / Min( ( FirstVNF_Mem_Server * RRS ) ,FirstVNF_CPU ) ) ,FirstVNF_RAM ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS / ( ( DS * ( ( ( MUR + MUC ) / CS ) * MUR ) ) * ( RCSe + RMSe ) ) ) - ( ( ( DS * ( DS + RCSe ) ) - RRSe ) + CS ) ) - Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS + PN ) ,Min( ARS ,DDR ) ) - ( ( FirstVNF_CPU_Server / ( ( ( ( MRS * PN ) + ( BR + BR ) ) + ( ( Const * FirstVNF_Mem ) + Min( BR ,ARS ) ) ) / ( ( ( RRS / DDR ) + Max( Const,MDR ) ) * ( Max( RRS,Const ) * ( FirstVNF_Mem_Server - AMS ) ) ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( AMS + CRS ) )", "choosing": "( ( RMSe + MLU ) + ( ( Max( MUC,MUC ) + ( RRSe * RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( RRS,FirstVNF_RAM_Server ) / ( BR - ACS ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( MLU + MLU ) + Min( CS ,RCSe ) ),Max( Max( RRSe,MUC ),( MUM - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS + Const ),( PN * PN ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( MLU * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,Min( RRS ,( ARS * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Max( ( Max( RRSe,Min( RRSe ,RRSe ) ) + MLU ),( MUR - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem + PN ),( RRS + Min( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * ( PN / Max( FirstVNF_CPU_Server,MRS ) ) ) ) ,AMS ) ) ) - Min( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ACS ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - BR ) ) ,Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUM - ( RCSe / ( MUR - ( ( MUM + MLU ) - CS ) ) ) ) / Min( RCSe ,( MLU - Max( ( CS * CS ),( Min( ( MUC * CS ) ,RCSe ) + Max( ( DS - MUC ),CS ) ) ) ) ) ) ,Max( ( RCSe * RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( BR ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUC ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( Min( Const ,RRS ) - ( DDR / FirstVNF_Mem_Server ) ) ) + ( Min( FirstVNF_CPU ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - ARS ) + ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + ( RCSe / ( ( Max( MUR,DS ) + RCSe ) - ( ( MUM * MUC ) - RCSe ) ) ) ) ,( ( RRSe * ( RMSe - MUR ) ) - Max( MLU,MLU ) ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( Min( RMSe ,( CS * MUC ) ) - ( MUM + MUR ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7949144820960072}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * RRS ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.7368421052631579, "obj2": 0.2404333207432109}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5866080956945222}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - ( MDR + ( Const / ARS ) ) ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( ( MUM * Max( ( MUC / ( ( RRSe * RRSe ) / MUC ) ),( RRSe * RMSe ) ) ) * ( DS + MUM ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3691231983468263}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.30992229413764233}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.6084128668186898}, {"determining": "( Max( ARS,( ACS + ( Const / MRS ) ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( MUM * DS ) ,( ( Min( ( ( MUR / RCSe ) / ( MUR + RCSe ) ) ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ) / MUM ) * ( ( MUM - MUC ) + MUR ) )", "obj1": 0.37044534412955465, "obj2": 0.5141679904975773}, {"determining": "( Max( AMS,( ARS + ARS ) ) / ( BR - RRS ) )", "choosing": "( Max( MLU,( MUC / Min( Min( DS ,( MUM / ( MUR / CS ) ) ) ,MUR ) ) ) - Min( CS ,MUC ) )", "obj1": 0.18016194331983806, "obj2": 0.6698418960473858}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.402834008097166, "obj2": 0.4906769892768774}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.20458644965446576}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6281235811621401}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( Max( PN,ACS ) * Min( Min( MDR ,CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - AMS ) )", "choosing": "( Min( Max( ( Min( ( MLU * ( ( CS - DS ) - CS ) ) ,DS ) + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - DS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7813765182186235, "obj2": 0.1820825797307617}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Min( ( Max( RMSe,RMSe ) * ( MLU * MUM ) ) ,MUM ) ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.37654745576453524}, {"determining": "( ( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + Max( ( Min( FirstVNF_CPU_Server ,( RRS / Max( BR,DDR ) ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + ( ( ( CS - DS ) + ( RMSe * MUC ) ) / MUR ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.09453283169830316}, {"determining": "Min( ( RRS + PN ) ,( ACS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( MUR + DS ) ) - ( DS * RRSe ) )", "obj1": 0.058704453441295545, "obj2": 0.793679379346389}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,Max( RMSe,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.21395632600797113}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * PN ) )", "choosing": "( Max( MLU,Max( RMSe,( MUR * CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6893930150207268}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5907962287458853}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.3967611336032389, "obj2": 0.5038362371773879}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,RMSe ) )", "obj1": 0.6376518218623481, "obj2": 0.26795355307119434}, {"determining": "Min( ( ( Const - FirstVNF_Mem_Server ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) )", "obj1": 0.8157894736842105, "obj2": 0.16031359551331556}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Min( ( CS + Max( RMSe,MUM ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9696356275303644, "obj2": 0.02041543276098684}, {"determining": "Min( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,AMS ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 0.9655870445344129, "obj2": 0.033092365567610735}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.8137651821862348, "obj2": 0.17876783014034942}, {"determining": "( FirstVNF_CPU_Server / Max( ( Const / Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,CRS ) ),DDR ) )", "choosing": "( ( Min( ( Min( Min( ( MUC + DS ) ,RMSe ) ,( RCSe - DS ) ) + ( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( RMSe * Min( MUR ,( RMSe * RCSe ) ) ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3765182186234818, "obj2": 0.5039975860567596}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.12974329747364352}, {"determining": "Min( ( ( FirstVNF_Mem * AMS ) / ( ( FirstVNF_Mem - ( FirstVNF_RAM_Server - ( Max( AMS,( RRS + ARS ) ) - Min( ( CRS * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) ) - ACS ) ) ,( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) - ( DDR + RRS ) ) )", "choosing": "( ( RRSe * ( Max( MUC,( Min( ( Min( RCSe ,MLU ) * Max( MUM,RCSe ) ) ,( MUR * RCSe ) ) * RCSe ) ) * MUR ) ) - ( RMSe + MUC ) )", "obj1": 0.951417004048583, "obj2": 0.03864317127556086}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM ) - Min( PN ,FirstVNF_CPU ) ) * ( Max( PN,ACS ) - Min( Const ,DDR ) ) )", "choosing": "( Min( ( MUR / DS ) ,( MUR * MUC ) ) + Min( Max( ( MLU + ( ( RRSe + MUM ) * Min( ( RRSe - ( DS + MLU ) ) ,( Min( MUM ,RRSe ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) )", "obj1": 0.8299595141700404, "obj2": 0.15815817221200587}, {"determining": "( ( RRS + ARS ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( RRSe ,RMSe ) / Max( MUM,Max( ( Max( ( ( ( CS - MUM ) + RCSe ) - RRSe ),DS ) - ( MUR + DS ) ),( CS * MUC ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10662429778353971}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.5141700404858299, "obj2": 0.3842668928320857}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "Min( ( BR + BR ) ,( AMS + DDR ) )", "choosing": "Min( Min( Max( MUC,RCSe ) ,( MUC - ( ( RRSe * RMSe ) - MLU ) ) ) ,( Min( Min( RCSe ,MUR ) ,( RCSe / CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.14651446118547692}, {"determining": "Min( ( ( Const - DDR ) / Min( Min( MRS ,FirstVNF_Mem ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( ( ( PN * ( ( Const / Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) + ( Max( MDR,BR ) - FirstVNF_Mem_Server ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUM ) / RRSe ) - ( MUM / DS ) ) * ( Min( ( CS + Max( RMSe,CS ) ) ,( ( ( RMSe - MUR ) * RRSe ) - Max( MLU,MLU ) ) ) + MUR ) )", "obj1": 0.8582995951417004, "obj2": 0.13588839740529315}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RRSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( MUC ,RCSe ) )", "obj1": 0.8522267206477733, "obj2": 0.14173539998473234}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + Max( ( Min( FirstVNF_CPU_Server ,( RRS / FirstVNF_CPU ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( MUM * ( ( DS + DS ) * Min( Min( ( ( ( CS / RCSe ) * MUC ) * MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.8744939271255061, "obj2": 0.12048046210898121}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + Min( ( Max( RMSe,( RRSe - ( DS + MLU ) ) ) * ( MLU * MUM ) ) ,MUM ) ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.18010207637504408}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM + BR ) + Max( FirstVNF_RAM,Max( DDR,Const ) ) ) ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + Max( Min( Max( Max( Max( DS,MUR ),( MLU / Max( MUM,( MUC / RMSe ) ) ) ),Min( RMSe ,CS ) ) ,MLU ),MLU ) )", "obj1": 0.8866396761133604, "obj2": 0.09470914309279502}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "Min( ( Max( MDR,MRS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( Min( ( FirstVNF_RAM_Server - PN ) ,Max( ( Const / Max( BR,ACS ) ),FirstVNF_Mem_Server ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( Max( Min( ( MUM - RMSe ) ,MUC ),DS ) / RRSe ) / RMSe ) ,( Min( MUM ,CS ) * ( MUM - MUM ) ) ) / Min( MLU ,( CS / MUM ) ) )", "obj1": 0.8825910931174089, "obj2": 0.11715966876316178}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / MLU ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 0.7995951417004049, "obj2": 0.1791998530814027}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,( BR * MDR ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),Min( RMSe ,MUR ) ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.8360323886639676, "obj2": 0.14966634850619068}, {"determining": "Min( ( Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * RRS ) ) * Max( PN,BR ) ) ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( MDR ,MRS ) ) ) ,Min( Min( FirstVNF_RAM ,Min( Min( ( DDR / CRS ) ,MDR ) ,FirstVNF_CPU ) ) ,ACS ) )", "choosing": "Min( Min( Max( ( MLU + ( ( Min( Max( CS,RCSe ) ,Max( MUR,RRSe ) ) + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) ,( CS * ( ( DS + DS ) * Min( Min( ( ( ( CS / RCSe ) * MUC ) - MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.854251012145749, "obj2": 0.1390060559074377}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.9838056680161943, "obj2": 0.009074734343182237}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / MLU ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 0.7995951417004049, "obj2": 0.1791998530814027}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.8360323886639676, "obj2": 0.14966634850619068}, {"determining": "Min( ( DDR / FirstVNF_Mem_Server ) ,Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,( CRS - Min( ( Min( ARS ,RRS ) + ARS ) ,ACS ) ) ) )", "choosing": "( ( CS / MUR ) - Min( ( Min( ( CS * RCSe ) ,( DS - RMSe ) ) + DS ) ,( ( ( Max( MLU,MLU ) + Min( CS ,RCSe ) ) * ( Min( MUM ,CS ) * ( MUR - MUM ) ) ) / ( Min( ( Min( Min( MUR ,RCSe ) ,( CS - RCSe ) ) * ( ( DS + DS ) * ( MUM + CS ) ) ) ,( RCSe - DS ) ) + ( Max( MUM,DS ) * ( CS + RCSe ) ) ) ) ) )", "obj1": 0.8765182186234818, "obj2": 0.11756835264215353}, {"determining": "Min( ( ( ( PN - FirstVNF_Mem_Server ) + ( ( MRS * FirstVNF_CPU ) * PN ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( ARS / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem + Const ) )", "choosing": "Min( ( ( Max( MUM,( RCSe * ( ( RMSe / DS ) * RMSe ) ) ) - ( RCSe / Max( Max( MUR,RRSe ),Min( RCSe ,RCSe ) ) ) ) - MLU ) ,( Min( RRSe ,( RCSe - MUR ) ) * ( ( DS + DS ) * ( DS + MUM ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.008397770592015385}, {"determining": "( ( ( PN * DDR ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.006403326636238034}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( AMS + Const ) )", "choosing": "( ( Min( ( MLU / MUC ) ,( MUM * DS ) ) / ( ( Max( MUC,Min( Max( ( MUM * MUR ),CS ) ,( ( MUM / RRSe ) + RRSe ) ) ) * RCSe ) + DS ) ) * ( RRSe + MUR ) )", "obj1": 0.9919028340080972, "obj2": 0.004626551293806718}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "Min( ( ( Min( MDR ,DDR ) - ( CRS / AMS ) ) / ( ( AMS - RRS ) - Min( MDR ,CRS ) ) ) ,Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) * ( ( RCSe / DS ) / ( MUR + ( RCSe - ( ( Max( RRSe,RRSe ) / ( DS * MLU ) ) + MLU ) ) ) ) ) - ( ( ( MUM / CS ) + ( RRSe / DS ) ) * Max( ( RCSe + RCSe ),( MLU * MUR ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.11755455454177716}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( ( ( ( FirstVNF_RAM * Const ) - ARS ) + ( FirstVNF_Mem_Server * AMS ) ) / ( ( PN * FirstVNF_RAM_Server ) / ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + ( RCSe / ( ( Min( MUM ,MLU ) + MUC ) - ( RCSe - ( MUM - MUC ) ) ) ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( ACS - ARS ) + ( AMS * FirstVNF_Mem_Server ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + Max( RMSe,MUM ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "Min( ( Max( MDR,( CRS - Min( ( ( Min( BR ,FirstVNF_RAM_Server ) / PN ) + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( Min( MDR ,CRS ) - ( PN - RRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,RCSe ),( MUC - Max( MUR,( ( Max( ( MUC / MUC ),Max( DS,RCSe ) ) / MLU ) * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) / Min( Max( Min( ACS ,FirstVNF_RAM ),Min( Max( ( BR + RRS ),( FirstVNF_RAM_Server / MDR ) ) ,FirstVNF_Mem ) ) ,MRS ) )", "choosing": "( Min( Max( ( MLU + ( Min( RRSe ,MUM ) * ( Max( MLU,Max( RCSe,DS ) ) / ( Min( MUM ,MUC ) * ( RCSe + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( Max( MUR,DS ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( BR,( ( ( Max( Const,RRS ) + Min( MRS ,CRS ) ) / Const ) / Const ) ) ) / ( ( BR / ( MRS / CRS ) ) * PN ) )", "choosing": "( Max( ( MUM + MUR ),( RCSe * MLU ) ) - ( ( MLU + MUR ) + ( MUC - ( MLU - Max( RMSe,Max( CS,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ( ( BR + BR ) * Max( BR,FirstVNF_CPU_Server ) ) ) / Min( DDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Max( MUR,( ( MUM / Min( ( ( MLU + MUR ) * RMSe ) ,MUR ) ) - ( Max( RMSe,CS ) + MLU ) ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_CPU ),( MRS * Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) + ( Const + ARS ) ) )", "choosing": "( Max( ( MUC * Min( MUR ,( ( ( RRSe + Min( RCSe ,RCSe ) ) / MUR ) - DS ) ) ),( RMSe / MUC ) ) * Min( ( DS - RMSe ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( Min( ( CS / ( RRSe / MUR ) ) ,DS ) - ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + PN ) / ( ( PN * ( FirstVNF_Mem + MRS ) ) + Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( DS - Max( RMSe,MUR ) ) - Min( Min( ( ( Min( RRSe ,( MUR / MUM ) ) + DS ) - DS ) ,( CS + ( RCSe / ( ( ( RMSe + MUR ) + MUC ) - ( RCSe - ( MUM * MUC ) ) ) ) ) ) ,Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( AMS / PN ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,Max( RMSe,MLU ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( RRS,FirstVNF_RAM_Server ),Max( BR,Min( ( FirstVNF_CPU_Server - RRS ) ,( ( RRS + ACS ) / RRS ) ) ) ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( ( ( Min( DS ,MUM ) + ( Min( MLU ,CS ) / RMSe ) ) * RRSe ) - DS ) + MLU ) + Min( RCSe ,CS ) ),Max( Max( RRSe,CS ),( ( MUC - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * ACS ) ,( RRS - Const ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( ( CS * CS ),Max( MUR,DS ) ) + Min( ( MUR + MLU ) ,Max( MUC,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + ACS ) ,Min( ARS ,DDR ) ),( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),AMS ) * ( MRS + ACS ) ) + Min( ( FirstVNF_RAM_Server - MDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RMSe,RCSe ),( MUC / RRSe ) ) - ( Max( MUM,RMSe ) / ( ( MUR / RMSe ) * RCSe ) ) ) + ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( ARS ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUR ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Min( FirstVNF_Mem ,MRS ) + ( MRS - FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server - ARS ) - AMS ) ) ,( ( Max( MDR,FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_Mem_Server - BR ) ,( MDR / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / ( RMSe / CS ) ) + ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( ( ( ( MUM * DS ) - ( CS * DS ) ) + ( Max( MUC,MUC ) + ( MUC * RCSe ) ) ) ,( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Min( Min( Max( MUR,CS ) ,Min( RCSe ,DS ) ) ,( CS * CS ) ) - ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ARS + ACS ) )", "choosing": "( ( Max( Min( MUR ,DS ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,( ( ( MUR / MUM ) / CS ) / ( DS - ( ( DS + RMSe ) / RMSe ) ) ) ) + ( DS / DS ) ) ) - ( Min( ( RRSe * RMSe ) ,( CS * MUR ) ) * ( RCSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( BR / FirstVNF_RAM ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( DDR + ( Min( BR ,PN ) - MRS ) ) ) ,( PN * ( RRS - AMS ) ) )", "choosing": "( Min( MUM ,RMSe ) / Max( Max( RCSe,MUC ),( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( Min( RMSe ,( CS * MUC ) ) - ( MUM + MUR ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7949144820960072}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( Min( ( BR - ( ( FirstVNF_RAM - PN ) / ( CRS + FirstVNF_Mem_Server ) ) ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( ARS - MRS ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / Max( Max( MDR,DDR ),PN ) )", "choosing": "( ( RRSe - Min( MUM ,( DS + Min( CS ,( Min( ( MLU - MUC ) ,RCSe ) * MUR ) ) ) ) ) - Min( CS ,Max( RCSe,CS ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3620733220519998}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5811032875760436}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( MLU - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.8744939271255061, "obj2": 0.055993198023163014}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - MUR )", "obj1": 0.708502024291498, "obj2": 0.24298982468696081}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( Max( Max( Min( AMS ,DDR ),( FirstVNF_Mem_Server - RRS ) ),( ( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_RAM - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) + Max( ( Min( FirstVNF_CPU_Server ,( RRS / FirstVNF_CPU ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( MUM * ( ( ( MUC / MLU ) + DS ) * Min( Min( ( ( ( CS / RCSe ) * MUC ) * MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.12376679540795785}, {"determining": "( ( Min( MDR ,( MDR * MRS ) ) - ( FirstVNF_CPU - Min( ( ( FirstVNF_CPU_Server + BR ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - DDR ) ) ,CRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Min( Max( MUC,( Max( MUC,( Min( ( RMSe * MUC ) ,( RMSe + CS ) ) - Max( MUM,MUC ) ) ) + MUC ) ) ,( Min( ( ( RCSe + RRSe ) - Min( RRSe ,RCSe ) ) ,MUM ) + MUR ) ) - Max( MLU,RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.6657285227234888}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.402834008097166, "obj2": 0.4906769892768774}, {"determining": "( Max( ARS,( ACS + ( Const / MRS ) ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( MUM * DS ) ,( ( Min( ( ( MUR / RCSe ) / ( MUR + RCSe ) ) ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ) / MUM ) * ( ( MUM - MUC ) + MUR ) )", "obj1": 0.37044534412955465, "obj2": 0.5141679904975773}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.30992229413764233}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6281235811621401}, {"determining": "( ( Max( PN,ACS ) * Min( Min( MDR ,CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - AMS ) )", "choosing": "( Min( Max( ( Min( ( MLU * ( ( CS - DS ) - CS ) ) ,DS ) + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - DS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7813765182186235, "obj2": 0.1820825797307617}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.20458644965446576}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.6084128668186898}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * RRS ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.7368421052631579, "obj2": 0.2404333207432109}, {"determining": "Min( ( RRS + PN ) ,( ACS * MRS ) )", "choosing": "( ( Min( RMSe ,MUR ) - ( MUR + DS ) ) - ( DS * RRSe ) )", "obj1": 0.058704453441295545, "obj2": 0.793679379346389}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.21395632600797113}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.3967611336032389, "obj2": 0.5038362371773879}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * MRS ) ) + Min( Min( ARS ,( AMS * FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ,( FirstVNF_CPU_Server - RRS ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( CS + MUC ) - ( Min( Max( MUM,MUR ) ,Min( RCSe ,( ( ( ( RRSe - MUR ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) )", "obj1": 0.5931174089068826, "obj2": 0.2999945418294156}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Min( ( CS + Max( RMSe,MUM ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9696356275303644, "obj2": 0.02041543276098684}, {"determining": "Min( ( ( Const - FirstVNF_Mem_Server ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) )", "obj1": 0.8157894736842105, "obj2": 0.16031359551331556}, {"determining": "Min( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,AMS ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 0.9655870445344129, "obj2": 0.033092365567610735}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU / FirstVNF_RAM ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / DDR ) ) ) )", "choosing": "Min( ( RMSe - Min( RCSe ,( Min( ( DS + MUM ) ,MLU ) + MUC ) ) ) ,Max( Min( RRSe ,( RCSe - CS ) ),( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.1730793499569222}, {"determining": "( ( BR - CRS ) / ( FirstVNF_RAM * RRS ) )", "choosing": "Min( ( MUM * ( RRSe + ( RMSe / CS ) ) ) ,( Max( MUR,RRSe ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.2653244654086663}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.805668016194332, "obj2": 0.16658778126346888}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( ( FirstVNF_Mem * AMS ) / ( ( FirstVNF_Mem - ( FirstVNF_RAM_Server - ( Max( AMS,( RRS + ARS ) ) - Min( ( CRS * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) ) - ACS ) ) ,( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) - ( DDR + RRS ) ) )", "choosing": "( ( RRSe * ( Max( MUC,( Min( ( Min( RCSe ,MLU ) * Max( MUM,RCSe ) ) ,( MUR * RCSe ) ) * RCSe ) ) * MUR ) ) - ( RMSe + MUC ) )", "obj1": 0.951417004048583, "obj2": 0.03864317127556086}, {"determining": "( ( AMS * Const ) * ( ( FirstVNF_Mem_Server + ACS ) - PN ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( RCSe + CS ) ,( MUR * MUC ) ) )", "obj1": 0.8259109311740891, "obj2": 0.1498405519125941}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( FirstVNF_CPU_Server / Max( ( Const / Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,CRS ) ),DDR ) )", "choosing": "( ( Min( ( Min( Min( ( MUC + DS ) ,RMSe ) ,( RCSe - DS ) ) + ( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( RMSe * Min( MUR ,( RMSe * RCSe ) ) ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3765182186234818, "obj2": 0.5039975860567596}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.13765182186234817, "obj2": 0.6835800645838617}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5769230769230769, "obj2": 0.30992229413764233}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / ( ( AMS - RRS ) * Min( RRS ,MRS ) ) ) ,( ( Const + ACS ) * ARS ) )", "choosing": "Min( Max( Min( ( RRSe - RCSe ) ,( MUC / CS ) ),( ( ( CS - DS ) + ( RMSe * ( RMSe - RCSe ) ) ) / ( ( MUM * ( MLU + CS ) ) + RMSe ) ) ) ,Max( CS,( ( DS + DS ) * Min( Min( Min( ( ( CS / RCSe ) * MUC ) ,MUM ) ,RRSe ) ,Max( ( RMSe - MUR ),RCSe ) ) ) ) )", "obj1": 0.868421052631579, "obj2": 0.12974329747364352}, {"determining": "Min( ( ( Const - DDR ) / Min( Min( MRS ,FirstVNF_Mem ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( ( ( PN * ( ( Const / Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) + ( Max( MDR,BR ) - FirstVNF_Mem_Server ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUM ) / RRSe ) - ( MUM / DS ) ) * ( Min( ( CS + Max( RMSe,CS ) ) ,( ( ( RMSe - MUR ) * RRSe ) - Max( MLU,MLU ) ) ) + MUR ) )", "obj1": 0.8582995951417004, "obj2": 0.13588839740529315}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,Max( RMSe,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5866080956945222}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( Min( ACS ,( DDR / ( PN + AMS ) ) ) + ARS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + ( DS * RCSe ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5967522288857356}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - MDR ) / FirstVNF_RAM ) ,( AMS + Const ) )", "choosing": "Min( ( RCSe + RMSe ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( RCSe + Max( Min( DS ,MUR ),( MUR + ( RCSe / ( RRSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.5994678368227452}, {"determining": "( Max( Max( PN,FirstVNF_Mem ),Min( Min( MDR ,CRS ) ,DDR ) ) * ( ( ( ( FirstVNF_RAM - BR ) / FirstVNF_Mem_Server ) / Min( Min( MRS ,Min( FirstVNF_RAM_Server ,CRS ) ) ,PN ) ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( RMSe + ( ( MUM - RRSe ) * ( ( ( RCSe * RRSe ) / MLU ) / ( Min( MUM ,MUC ) * CS ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7834008097165992, "obj2": 0.17990263546360719}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5907962287458853}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( PN * ( Max( DDR,DDR ) / FirstVNF_CPU_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server / ( MRS - AMS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( ( MUR + MLU ) / MLU ) + RCSe ) )", "obj1": 0.37449392712550605, "obj2": 0.5115443622180644}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6012145748987854, "obj2": 0.295358397182515}, {"determining": "Min( ( ( Const - DDR ) / ( Min( Max( MDR,( ( ( BR / FirstVNF_CPU ) / Const ) / FirstVNF_Mem ) ) ,CRS ) * BR ) ) ,( ARS * ACS ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * ( Min( MUM ,MLU ) - MLU ) ) ,( ( ( DS + DS ) * ( Max( MUC,RCSe ) + RCSe ) ) * Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.20668119844667607}, {"determining": "Min( ( AMS + Const ) ,( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( RRS * BR ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * BR ) ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),Max( DS,Max( CS,RMSe ) ) ) ) / Min( MUM ,Max( RRSe,( ( MUM + Max( RRSe,MUR ) ) + DS ) ) ) ),Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.1415630730189862}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - PN ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( CS ,( ( ( ( MUM / CS ) + ( CS / ( ( RMSe / RMSe ) / ( RCSe / MUM ) ) ) ) * Max( ( RCSe + RCSe ),( RCSe + Max( RMSe,MUM ) ) ) ) - MUR ) ) )", "obj1": 0.6214574898785425, "obj2": 0.2802899031231067}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * PN ) )", "choosing": "( Max( MLU,Max( RMSe,( MUR * CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6893930150207268}, {"determining": "( ( ( ACS / ARS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,Const ) ) ) ) * FirstVNF_RAM ) * PN ) )", "choosing": "( Max( MLU,Max( RMSe,( ( MUM - Max( RRSe,RRSe ) ) * CS ) ) ) - Min( RMSe ,CS ) )", "obj1": 0.13562753036437247, "obj2": 0.6857523361464124}, {"determining": "( Min( ( BR - CRS ) ,( Max( ( FirstVNF_CPU / ( RRS - ARS ) ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Min( ( DS / ( MUC + ( RRSe + MUC ) ) ) ,MUR ) - RRSe )", "obj1": 0.6336032388663968, "obj2": 0.27105380149818237}, {"determining": "Min( ( BR + BR ) ,( AMS + DDR ) )", "choosing": "Min( Min( Max( MUC,RCSe ) ,( MUC - ( ( RRSe * RMSe ) - MLU ) ) ) ,( Min( Min( RCSe ,MUR ) ,( RCSe / CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.14651446118547692}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( AMS ,Const ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( Max( RCSe,CS ) + MUM ) / CS ) ) ) / Min( MUM ,CS ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.13646608672505592}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU + MUR ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.9838056680161943, "obj2": 0.009074734343182237}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,( BR * MDR ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),Min( RMSe ,MUR ) ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.8360323886639676, "obj2": 0.14966634850619068}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,Max( ( Min( FirstVNF_CPU_Server ,( RRS / Max( BR,DDR ) ) ) * FirstVNF_RAM ),FirstVNF_RAM_Server ) ) ) ,( AMS + Const ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Min( ( CS - DS ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.13744847596524265}, {"determining": "( ( ( PN * DDR ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.006403326636238034}, {"determining": "Min( ( ( ( PN - FirstVNF_Mem_Server ) + ( ( MRS * FirstVNF_CPU ) * PN ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + ( ARS / FirstVNF_Mem ) ) ) ,( FirstVNF_Mem + Const ) )", "choosing": "Min( ( ( Max( MUM,( RCSe * ( ( RMSe / DS ) * RMSe ) ) ) - ( RCSe / Max( Max( MUR,RRSe ),Min( RCSe ,RCSe ) ) ) ) - MLU ) ,( Min( RRSe ,( RCSe - MUR ) ) * ( ( DS + DS ) * ( DS + MUM ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.008397770592015385}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( AMS * RRS ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "Min( Max( Max( MUC,RCSe ),( MUC - Max( MUR,( ( Max( ( MUC / MUC ),Max( DS,RCSe ) ) / MLU ) * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.14887238824713822}, {"determining": "( ( ( Max( MRS,ACS ) - RRS ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * ( ( RMSe * MUM ) - ( RCSe + RMSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),CS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04345992733302909}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "( ( ( ( FirstVNF_RAM * Const ) - ARS ) + ( FirstVNF_Mem_Server * AMS ) ) / ( ( PN * FirstVNF_RAM_Server ) / ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + ( RCSe / ( ( Min( MUM ,MLU ) + MUC ) - ( RCSe - ( MUM - MUC ) ) ) ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) / ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + Max( RMSe,MUM ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - ( MUR + ( MUC * RCSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) ) - Min( ( MUC / MLU ) ,RCSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( Max( PN,ACS ) - Min( Const ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.8360323886639676, "obj2": 0.14966634850619068}, {"determining": "( ( ( PN * ( Min( Const ,RRS ) - ( DDR / FirstVNF_Mem_Server ) ) ) + ( Min( FirstVNF_CPU ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem_Server - ARS ) + ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( ( CS + ( RCSe / ( ( Max( MUR,DS ) + RCSe ) - ( ( MUM * MUC ) - RCSe ) ) ) ) ,( ( RRSe * ( RMSe - MUR ) ) - Max( MLU,MLU ) ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,( CRS - Min( ( ( Min( BR ,FirstVNF_RAM_Server ) / PN ) + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( Min( MDR ,CRS ) - ( PN - RRS ) ) ) ,( ( ( ACS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server - DDR ) ) * ( ( FirstVNF_CPU_Server - MRS ) - ( FirstVNF_RAM_Server - AMS ) ) ) )", "choosing": "Min( Max( Max( MUC,RCSe ),( MUC - Max( MUR,( ( Max( ( MUC / MUC ),Max( DS,RCSe ) ) / MLU ) * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + ( MUC * RCSe ) ) / MUR ) / Min( RCSe ,Min( ( CS + MLU ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - FirstVNF_CPU ) / Min( Max( Min( ACS ,FirstVNF_RAM ),Min( Max( ( BR + RRS ),( FirstVNF_RAM_Server / MDR ) ) ,FirstVNF_Mem ) ) ,MRS ) )", "choosing": "( Min( Max( ( MLU + ( Min( RRSe ,MUM ) * ( Max( MLU,Max( RCSe,DS ) ) / ( Min( MUM ,MUC ) * ( RCSe + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( Max( MUR,DS ) ,( MUC * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * Max( BR,( ( ( Max( Const,RRS ) + Min( MRS ,CRS ) ) / Const ) / Const ) ) ) / ( ( BR / ( MRS / CRS ) ) * PN ) )", "choosing": "( Max( ( MUM + MUR ),( RCSe * MLU ) ) - ( ( MLU + MUR ) + ( MUC - ( MLU - Max( RMSe,Max( CS,MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS / FirstVNF_CPU_Server ) - Min( MRS ,( ( ( BR / FirstVNF_RAM ) + Max( BR,FirstVNF_CPU ) ) / MRS ) ) ) ,( Min( DDR ,MDR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - MUC ) * Max( Min( RCSe ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + PN ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( Min( RMSe ,( CS * MUC ) ) - ( MUM + MUR ) ) - ( DS * RRSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7949144820960072}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( Min( DDR ,BR ) ,( CRS + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUC ) / RRSe ) - ( MUM + DS ) ) * ( ( ( ( Max( MUR,MUM ) - RCSe ) * ( CS * ( RCSe / ( ( MUM + MUR ) / ( RMSe * DS ) ) ) ) ) / ( RMSe * ( MUR - DS ) ) ) + MUR ) )", "obj1": 0.4291497975708502, "obj2": 0.4633395200189534}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( Min( ( BR - ( ( FirstVNF_RAM - PN ) / ( CRS + FirstVNF_Mem_Server ) ) ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( ARS - MRS ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / Max( Max( MDR,DDR ),PN ) )", "choosing": "( ( RRSe - Min( MUM ,( DS + Min( CS ,( Min( ( MLU - MUC ) ,RCSe ) * MUR ) ) ) ) ) - Min( CS ,Max( RCSe,CS ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3620733220519998}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5774113149157699}, {"determining": "( ( AMS * Const ) * ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( CS + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / Max( ( RCSe / MUC ),( MUC + CS ) ) ) ,( MUR * MUC ) ) )", "obj1": 0.8623481781376519, "obj2": 0.11867440292136104}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "( ( Min( MDR ,( MDR * MRS ) ) - ( FirstVNF_CPU - Min( ( ( FirstVNF_CPU_Server + BR ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - DDR ) ) ,CRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Min( Max( MUC,( Max( MUC,( Min( ( RMSe * MUC ) ,( RMSe + CS ) ) - Max( MUM,MUC ) ) ) + MUC ) ) ,( Min( ( ( RCSe + RRSe ) - Min( RRSe ,RCSe ) ) ,MUM ) + MUR ) ) - Max( MLU,RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.6657285227234888}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) * MRS ) ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( MLU - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( CS + MUC ) )", "obj1": 0.5769230769230769, "obj2": 0.3096062411966027}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.402834008097166, "obj2": 0.4906769892768774}, {"determining": "( Max( ARS,( ACS + ( Const / MRS ) ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( MUM * DS ) ,( ( Min( ( ( MUR / RCSe ) / ( MUR + RCSe ) ) ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ) / MUM ) * ( ( MUM - MUC ) + MUR ) )", "obj1": 0.37044534412955465, "obj2": 0.5141679904975773}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / FirstVNF_RAM )", "choosing": "( Min( Max( ( ( Max( MLU,RMSe ) - Min( CS ,RMSe ) ) + ( ( ( MUM + RRSe ) + MUM ) * ( ( MLU - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.8744939271255061, "obj2": 0.055993198023163014}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6281235811621401}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - MUR )", "obj1": 0.708502024291498, "obj2": 0.24298982468696081}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RMSe * CS ) * MUR ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.6084128668186898}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * RRS ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.7368421052631579, "obj2": 0.2404333207432109}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.21395632600797113}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( Max( ( ACS + Const ),( ( FirstVNF_RAM + CRS ) * PN ) ) - Min( Min( ( Max( ( FirstVNF_RAM + ACS ),( FirstVNF_RAM - RRS ) ) * ACS ) ,( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - BR ) ) ,( FirstVNF_RAM_Server + ARS ) ) )", "choosing": "( ( ( ( MUC + RCSe ) / ( ( MLU + RCSe ) * MLU ) ) / ( ( RCSe * RCSe ) - MUR ) ) / ( Min( ( ( Max( DS,RRSe ) / Min( RCSe ,RCSe ) ) - ( Min( MUM ,MUC ) / ( MUR - RRSe ) ) ) ,( Min( ( MUM - MUR ) ,( MUR + RRSe ) ) - ( ( RRSe * MLU ) * Min( RMSe ,MUR ) ) ) ) / MUM ) )", "obj1": 0.3967611336032389, "obj2": 0.5038362371773879}, {"determining": "( ( Max( PN,ACS ) * Min( Min( MDR ,CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - AMS ) )", "choosing": "( Min( Max( ( Min( ( MLU * ( ( CS - DS ) - CS ) ) ,DS ) + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - DS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7692307692307693, "obj2": 0.19121633337603466}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.7651821862348178, "obj2": 0.20356081600364956}, {"determining": "Min( ( ( Const - FirstVNF_Mem_Server ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,Min( ( MUR * MUM ) ,Min( DS ,RCSe ) ) )", "obj1": 0.8157894736842105, "obj2": 0.16031359551331556}, {"determining": "Min( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) ,AMS ) ,( ( FirstVNF_Mem * AMS ) / ( FirstVNF_Mem - ACS ) ) )", "choosing": "Min( ( RCSe - CS ) ,( RRSe - MLU ) )", "obj1": 0.9635627530364372, "obj2": 0.02697526355720033}, {"determining": "( ( BR - CRS ) / ( FirstVNF_RAM * RRS ) )", "choosing": "Min( ( MUM * ( RRSe + ( RMSe / CS ) ) ) ,( Max( MUR,RRSe ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.2653244654086663}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( ( Const - DDR ) / Min( Min( MRS ,FirstVNF_Mem ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( ( ( PN * ( ( Const / Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) + ( Max( MDR,BR ) - FirstVNF_Mem_Server ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUM ) / RRSe ) - ( MUM / DS ) ) * ( Min( ( CS + Max( RMSe,CS ) ) ,( ( ( RMSe - MUR ) * RRSe ) - Max( MLU,MLU ) ) ) + MUR ) )", "obj1": 0.8582995951417004, "obj2": 0.13588839740529315}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Min( ( CS + Max( RMSe,MUM ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9696356275303644, "obj2": 0.02041543276098684}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( Max( MUC,RCSe ) + RCSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.031419361802628186}, {"determining": "( ( AMS * Const ) * ( ( FirstVNF_Mem_Server + ACS ) - PN ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( RCSe + CS ) ,( MUR * MUC ) ) )", "obj1": 0.8259109311740891, "obj2": 0.1498405519125941}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "( FirstVNF_CPU_Server / Max( ( Const / Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,CRS ) ),DDR ) )", "choosing": "( ( Min( ( Min( Min( ( MUC + DS ) ,RMSe ) ,( RCSe - DS ) ) + ( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( RMSe * Min( MUR ,( RMSe * RCSe ) ) ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3765182186234818, "obj2": 0.5039975860567596}, {"determining": "Min( ( AMS + Const ) ,( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( RRS * BR ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * BR ) ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),Max( DS,Max( CS,RMSe ) ) ) ) / Min( MUM ,Max( RRSe,( ( MUM + Max( RRSe,MUR ) ) + DS ) ) ) ),Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.24276833410854043}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.13765182186234817, "obj2": 0.6835800645838617}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( ( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) + Max( MUR,MUC ) ) - Max( MUC,CS ) )", "obj1": 0.805668016194332, "obj2": 0.16658778126346888}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( ( Max( PN,ACS ) * Min( Min( MDR ,CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - AMS ) )", "choosing": "( Min( Max( ( Min( ( MLU * ( ( CS - DS ) - CS ) ) ,DS ) + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - DS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7813765182186235, "obj2": 0.1820825797307617}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( Min( ACS ,( DDR / ( PN + AMS ) ) ) + ARS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + ( DS * RCSe ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5967522288857356}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - MDR ) / FirstVNF_RAM ) ,( AMS + Const ) )", "choosing": "Min( ( RCSe + RMSe ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( RCSe + Max( Min( DS ,MUR ),( MUR + ( RCSe / ( RRSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.5994678368227452}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.12348178137651822, "obj2": 0.6948327187847377}, {"determining": "( Max( Max( PN,FirstVNF_Mem ),Min( Min( MDR ,CRS ) ,DDR ) ) * ( ( ( ( FirstVNF_RAM - BR ) / FirstVNF_Mem_Server ) / Min( Min( MRS ,Min( FirstVNF_RAM_Server ,CRS ) ) ,PN ) ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( RMSe + ( ( MUM - RRSe ) * ( ( ( RCSe * RRSe ) / MLU ) / ( Min( MUM ,MUC ) * CS ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7834008097165992, "obj2": 0.17990263546360719}, {"determining": "Min( ( Min( MDR ,MDR ) / ( Const - DDR ) ) ,( AMS + Const ) )", "choosing": "Min( ( MUM * Min( RCSe ,( ( Max( MUM,Min( MUC ,CS ) ) + Max( MUR,RRSe ) ) * MUR ) ) ) ,( Min( RMSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.20458644965446576}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.5907962287458853}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.5789473684210527, "obj2": 0.30832650838441283}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( PN * ( Max( DDR,DDR ) / FirstVNF_CPU_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server / ( MRS - AMS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( ( MUR + MLU ) / MLU ) + RCSe ) )", "obj1": 0.37449392712550605, "obj2": 0.5115443622180644}, {"determining": "Min( ( ( Const - DDR ) / ( Min( Max( MDR,( ( ( BR / FirstVNF_CPU ) / Const ) / FirstVNF_Mem ) ) ,CRS ) * BR ) ) ,( ARS * ACS ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * ( Min( MUM ,MLU ) - MLU ) ) ,( ( ( DS + DS ) * ( Max( MUC,RCSe ) + RCSe ) ) * Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.20668119844667607}, {"determining": "Min( ( BR + BR ) ,( AMS + DDR ) )", "choosing": "Min( Min( Max( MUC,RCSe ) ,( MUC - ( ( RRSe * RMSe ) - MLU ) ) ) ,( Min( Min( RCSe ,MUR ) ,( RCSe / CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.14651446118547692}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ARS * BR ) ) ) ,( AMS + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / Max( MUR,RRSe ) ) ) ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.13963438093757258}, {"determining": "( ( Max( PN,MDR ) - Min( Min( MDR ,CRS ) ,DDR ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.17034941397651396}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( ACS - ( FirstVNF_CPU + ( FirstVNF_CPU_Server / MDR ) ) ) - RRS ) - RRS ) - Min( ( PN * Max( FirstVNF_Mem,AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( DS - Min( CS ,( Min( Min( MUM ,CS ) ,Min( DS ,RRSe ) ) - Min( CS ,( Min( RRSe ,( RRSe / MUM ) ) - MUC ) ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * Min( ( DS + ( ( DS * ( ( MUC * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) ,( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5859388376895336}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( MLU - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.8744939271255061, "obj2": 0.055993198023163014}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),CRS ) ) * FirstVNF_RAM ) * PN ) )", "choosing": "( Max( MLU,Max( RMSe,( MUR * CS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6893930150207268}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( ACS / ARS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( Min( FirstVNF_CPU_Server ,Max( Max( AMS,BR ),( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,Const ) ) ) ) * FirstVNF_RAM ) * PN ) )", "choosing": "( Max( MLU,Max( RMSe,( ( MUM - Max( RRSe,RRSe ) ) * CS ) ) ) - Min( RMSe ,CS ) )", "obj1": 0.13562753036437247, "obj2": 0.6857523361464124}, {"determining": "( Min( ( BR - CRS ) ,( Max( ( FirstVNF_CPU / ( RRS - ARS ) ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Min( ( DS / ( MUC + ( RRSe + MUC ) ) ) ,MUR ) - RRSe )", "obj1": 0.6336032388663968, "obj2": 0.27105380149818237}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) * ( FirstVNF_CPU_Server / ( ARS + ACS ) ) ) + ( FirstVNF_Mem_Server - PN ) ) / ( ( CRS / ARS ) + ( Max( MRS,ACS ) - MDR ) ) )", "choosing": "( ( ( ( DS - DS ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( Max( MUC,MLU ) / ( RCSe / ( ( Max( MUM,RCSe ) * DS ) * MUC ) ) ) - Min( DS ,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6012145748987854, "obj2": 0.295358397182515}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( AMS ,Const ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( Max( RCSe,CS ) + MUM ) / CS ) ) ) / Min( MUM ,CS ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.13646608672505592}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.03714278672060027}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ARS * BR ) ) ) ,( AMS + Const ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * CS ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.8360323886639676, "obj2": 0.1496372515227079}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9838056680161943, "obj2": 0.008818328234988106}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU / FirstVNF_RAM ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / DDR ) ) ) )", "choosing": "Min( ( RMSe - Min( RCSe ,( Min( ( DS + MUM ) ,MLU ) + MUC ) ) ) ,Max( Min( RRSe ,( RCSe - CS ) ),( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.1730793499569222}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * MRS ) ) + Min( Min( ARS ,( AMS * FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ,( FirstVNF_CPU_Server - RRS ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( CS + MUC ) - ( Min( Max( MUM,MUR ) ,Min( RCSe ,( ( ( ( RRSe - MUR ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) )", "obj1": 0.5931174089068826, "obj2": 0.2999945418294156}, {"determining": "Min( ( AMS + Const ) ,( Max( Max( ( Const / FirstVNF_CPU_Server ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * FirstVNF_RAM ) ) / DDR ) ) ) )", "choosing": "Min( Max( MUM,( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - RMSe ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ) ) ,Max( Min( RRSe ,( RCSe - CS ) ),( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.1730793499569222}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,RRS ) * ARS ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "( ( AMS * Const ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.7955465587044535, "obj2": 0.17210607360536367}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( DS * RRSe ) - RMSe ),RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.9878542510121457, "obj2": 0.006785305548941522}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( AMS * RRS ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ARS * BR ) ) ) ,( AMS + Const ) )", "choosing": "Min( Max( ( ( ( CS - DS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( RCSe * MUC ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.1374080639716962}, {"determining": "( ( ( Max( MRS,ACS ) - RRS ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * ( ( RMSe * MUM ) - ( RCSe + RMSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),CS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04345992733302909}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "Min( Max( Max( MUC,RCSe ),( MUC - Max( MUR,( ( Max( ( MUC / MUC ),Max( DS,RCSe ) ) / MLU ) * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.14887238824713822}, {"determining": "( ( ( PN * DDR ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( BR / ( MDR - DDR ) ) + ( ARS / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * ( ( CS - Min( MLU ,RRSe ) ) * MUR ) ) * ( RCSe * RMSe ) ) ) ) - ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / CS ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) + ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) )", "obj1": 0.9898785425101214, "obj2": 0.006403326636238034}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}], "11": [{"determining": "( ( AMS * Const ) * ( ( ( ( ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) - ( Max( MRS,FirstVNF_CPU ) * AMS ) ) / DDR ) - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / Max( ( RCSe / RCSe ),( MUC + CS ) ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "( ( AMS * Const ) * ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( CS + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / Max( ( RCSe / MUC ),( MUC + CS ) ) ) ,( MUR * MUC ) ) )", "obj1": 0.8623481781376519, "obj2": 0.11867440292136104}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.402834008097166, "obj2": 0.4906769892768774}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUR ),CS ) ) ) / ( DS - MUR ) )", "obj1": 0.8724696356275303, "obj2": 0.05728658451782696}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5668016194331984, "obj2": 0.357383382036534}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( RCSe + MLU ) ) / ( Min( MUM ,MUC ) * CS ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7793522267206477, "obj2": 0.1632637882716751}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "( Max( ARS,( ACS + ( Const / MRS ) ) ) / Max( DDR,DDR ) )", "choosing": "( ( Min( ( MUM * DS ) ,( ( Min( ( ( MUR / RCSe ) / ( MUR + RCSe ) ) ,( Min( RMSe ,DS ) + MUM ) ) + CS ) + ( MUM * ( ( ( MUR * MUR ) / ( DS * RCSe ) ) / MUM ) ) ) ) / MUM ) * ( ( MUM - MUC ) + MUR ) )", "obj1": 0.37044534412955465, "obj2": 0.5141679904975773}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( ( BR - ( ( FirstVNF_RAM - PN ) / ( CRS + FirstVNF_Mem_Server ) ) ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( ARS - MRS ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / Max( Max( MDR,DDR ),PN ) )", "choosing": "( ( RRSe - Min( MUM ,( DS + Min( CS ,( Min( ( MLU - MUC ) ,RCSe ) * MUR ) ) ) ) ) - Min( CS ,Max( RCSe,CS ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3620733220519998}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( ( Max( Min( DS ,MUR ),( MUR + ( CS / ( RRSe / MUR ) ) ) ) + ( Max( MUC,RCSe ) + ( DS / DS ) ) ) - ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6281235811621401}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) * MRS ) ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( MLU - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( CS + MUC ) )", "obj1": 0.5769230769230769, "obj2": 0.3096062411966027}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - MUR )", "obj1": 0.7004048582995951, "obj2": 0.24616268703798408}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,PN ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Max( CRS,( FirstVNF_CPU_Server - ( FirstVNF_Mem * PN ) ) ) + ACS ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,CS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( CS * Min( Min( Min( CS ,RRSe ) ,MUM ) ,MUM ) ) / ( Min( RMSe ,CS ) - MUM ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "( ( Max( PN,ACS ) * Min( Min( MDR ,CRS ) ,DDR ) ) * ( FirstVNF_CPU_Server - AMS ) )", "choosing": "( Min( Max( ( Min( ( MLU * ( ( CS - DS ) - CS ) ) ,DS ) + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( ( RCSe - DS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.7692307692307693, "obj2": 0.19121633337603466}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,DDR ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + ( DS * RCSe ) ) ) ) )", "obj1": 0.8117408906882592, "obj2": 0.1589509840355689}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * RRS ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( MLU + ( ( ( MUM + RRSe ) + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.7368421052631579, "obj2": 0.2404333207432109}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( MUM ,MUM ) + MUR ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6654310412435327}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Min( ( CS + Max( RMSe,MUM ) ) ,( ( RRSe * ( RMSe - MUR ) ) - DS ) ) ,Min( MUR ,RRSe ) ) - Max( DS,Max( RMSe,MUR ) ) )", "obj1": 0.9696356275303644, "obj2": 0.02041543276098684}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.21395632600797113}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( ( PN * ( Max( DDR,DDR ) / FirstVNF_CPU_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server / ( MRS - AMS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( ( MUR + MLU ) / MLU ) + RCSe ) )", "obj1": 0.38461538461538464, "obj2": 0.5016140619813776}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe - Min( MUR ,CS ) ) - Min( CS ,Max( RRSe,CS ) ) )", "obj1": 0.7591093117408907, "obj2": 0.2004374003454803}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( Min( ACS ,MDR ) + ARS ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / Max( ( RCSe / MLU ),( MUC + CS ) ) ) ,( MUR * MUC ) ) )", "obj1": 0.8259109311740891, "obj2": 0.14904765653573127}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.39792531204723547}, {"determining": "Min( ( ( Const - DDR ) / Min( Min( MRS ,FirstVNF_Mem ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( ( ( PN * ( ( Const / Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) + ( Max( MDR,BR ) - FirstVNF_Mem_Server ) ) + FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( MUR ,( DS * MLU ) ) - MUM ) / RRSe ) - ( MUM / DS ) ) * ( Min( ( CS + Max( RMSe,CS ) ) ,( ( ( RMSe - MUR ) * RRSe ) - Max( MLU,MLU ) ) ) + MUR ) )", "obj1": 0.8582995951417004, "obj2": 0.13588839740529315}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( AMS + Const ) ,( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( RRS * BR ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * BR ) ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),Max( DS,Max( CS,RMSe ) ) ) ) / Min( MUM ,Max( RRSe,( ( MUM + Max( RRSe,MUR ) ) + DS ) ) ) ),Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.7125506072874493, "obj2": 0.24276833410854043}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.39792531204723547}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - MDR ) / FirstVNF_RAM ) ,( AMS + Const ) )", "choosing": "Min( ( RCSe + RMSe ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( RCSe + Max( Min( DS ,MUR ),( MUR + ( RCSe / ( RRSe / MUR ) ) ) ) ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.5994678368227452}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),Max( MUR,Max( RMSe,CS ) ) ) ) / Min( MUM ,RRSe ) ),Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.26291087941624236}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( MUM ,MUM ) + MUR ) ) )", "obj1": 0.1720647773279352, "obj2": 0.6694688050960658}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( ( MUR * ( MUM / MUC ) ) * RMSe ) + MUR ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6748486628367991}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "Min( ( Min( MDR ,MDR ) / ( Const - DDR ) ) ,( AMS + Const ) )", "choosing": "Min( ( MUM * Min( RCSe ,( ( Max( MUM,Min( MUC ,CS ) ) + Max( MUR,RRSe ) ) * MUR ) ) ) ,( Min( RMSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7449392712550608, "obj2": 0.20458644965446576}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.12348178137651822, "obj2": 0.6948327187847377}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( Max( MUC,RCSe ) + RCSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.031419361802628186}, {"determining": "( FirstVNF_CPU_Server / Max( ( Const / Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,CRS ) ),DDR ) )", "choosing": "( ( Min( ( Min( Min( ( MUC + DS ) ,RMSe ) ,( RCSe - DS ) ) + ( Min( ( ( MUR - RCSe ) - MUM ) ,MUM ) + ( RMSe * Min( MUR ,( RMSe * RCSe ) ) ) ) ) ,( MUM * DS ) ) / CS ) * ( MLU + MUR ) )", "obj1": 0.3765182186234818, "obj2": 0.5039975860567596}, {"determining": "Min( ( RRS + PN ) ,( ACS * MRS ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - RMSe ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5897873595992875}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,RRS ) * ARS ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "Min( ( ( Const - MDR ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ( RRS - FirstVNF_CPU_Server ) * RRS ) ) ) ,( AMS + Const ) )", "choosing": "Min( Max( Max( MUC,RCSe ),( MUC - Max( MUR,( ( Max( ( MUC / MUC ),Max( DS,RCSe ) ) / MLU ) * RCSe ) ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( DS + RCSe ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.14887238824713822}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.5789473684210527, "obj2": 0.30832650838441283}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( ACS - ( FirstVNF_CPU + ( FirstVNF_CPU_Server / MDR ) ) ) - RRS ) - RRS ) - Min( ( PN * Max( FirstVNF_Mem,AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( DS - Min( CS ,( Min( Min( MUM ,CS ) ,Min( DS ,RRSe ) ) - Min( CS ,( Min( RRSe ,( RRSe / MUM ) ) - MUC ) ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * Min( ( DS + ( ( DS * ( ( MUC * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) ,( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5859388376895336}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( PN * ( Max( DDR,DDR ) / FirstVNF_CPU_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server / ( MRS - AMS ) ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) - ( CS / ( ( DS * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( ( MUR + MLU ) / MLU ) + RCSe ) )", "obj1": 0.37449392712550605, "obj2": 0.5115443622180644}, {"determining": "Min( ( ( Const - DDR ) / ( Min( Max( MDR,( ( ( BR / FirstVNF_CPU ) / Const ) / FirstVNF_Mem ) ) ,CRS ) * BR ) ) ,( ARS * ACS ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * ( Min( MUM ,MLU ) - MLU ) ) ,( ( ( DS + DS ) * ( Max( MUC,RCSe ) + RCSe ) ) * Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.20668119844667607}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ARS * BR ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.840080971659919, "obj2": 0.14373007414845598}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( Min( ACS ,( DDR / ( PN + AMS ) ) ) + ARS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + ( DS * RCSe ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.25101214574898784, "obj2": 0.5967522288857356}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - MUR )", "obj1": 0.708502024291498, "obj2": 0.24298982468696081}, {"determining": "( ( BR - CRS ) / ( FirstVNF_RAM * RRS ) )", "choosing": "Min( ( MUM * ( RRSe + ( RMSe / CS ) ) ) ,( Max( MUR,RRSe ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.2653244654086663}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( Min( ( BR - CRS ) ,( Max( ( FirstVNF_CPU / ( RRS - ARS ) ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( MDR * FirstVNF_Mem ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Min( ( DS / ( MUC + ( RRSe + MUC ) ) ) ,MUR ) - RRSe )", "obj1": 0.6336032388663968, "obj2": 0.27105380149818237}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) * ( FirstVNF_CPU_Server / ( ARS + ACS ) ) ) + ( FirstVNF_Mem_Server - PN ) ) / ( ( CRS / ARS ) + ( Max( MRS,ACS ) - MDR ) ) )", "choosing": "( ( ( ( DS - DS ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( Max( MUC,MLU ) / ( RCSe / ( ( Max( MUM,RCSe ) * DS ) * MUC ) ) ) - Min( DS ,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6012145748987854, "obj2": 0.295358397182515}, {"determining": "Min( ( Const * AMS ) ,( FirstVNF_CPU / AMS ) )", "choosing": "( ( ( Max( ( DS + Min( MUC ,Min( Max( RCSe,CS ) ,Max( MUR,DS ) ) ) ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUR,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.03681551384890658}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Min( AMS ,Const ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( Max( RCSe,CS ) + MUM ) / CS ) ) ) / Min( MUM ,CS ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8481781376518218, "obj2": 0.13646608672505592}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ARS * BR ) ) ) ,( AMS + ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / Max( MUR,RRSe ) ) ) ) / Min( MUM ,RRSe ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.8441295546558705, "obj2": 0.13963438093757258}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9838056680161943, "obj2": 0.008818328234988106}, {"determining": "( ( Min( MDR ,( MDR * MRS ) ) - ( FirstVNF_CPU - Min( ( ( FirstVNF_CPU_Server + BR ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - DDR ) ) ,CRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Min( Max( MUC,( Max( MUC,( Min( ( RMSe * MUC ) ,( RMSe + CS ) ) - Max( MUM,MUC ) ) ) + MUC ) ) ,( Min( ( ( RCSe + RRSe ) - Min( RRSe ,RCSe ) ) ,MUM ) + MUR ) ) - Max( MLU,RMSe ) )", "obj1": 0.17611336032388664, "obj2": 0.6657285227234888}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) - Min( CS ,( Min( ( Min( MUC ,MUR ) * RCSe ) ,RRSe ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "Min( ( FirstVNF_Mem + DDR ) ,( AMS * Const ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),RRSe ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7066533136481985}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( AMS * RRS ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "Min( ( ( ( ( PN * ( Min( MRS ,Const ) / ( ( FirstVNF_Mem / PN ) / FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( RMSe - MLU ) - Min( ( DS - MLU ) ,MUM ) )", "obj1": 0.8744939271255061, "obj2": 0.055109251786353376}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * MRS ) ) + Min( Min( ARS ,( AMS * FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ,( FirstVNF_CPU_Server - RRS ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( CS + MUC ) - ( Min( Max( MUM,MUR ) ,Min( RCSe ,( ( ( ( RRSe - MUR ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) )", "obj1": 0.5931174089068826, "obj2": 0.2999945418294156}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7074641043197619}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( DS * RRSe ) - RMSe ),RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.9878542510121457, "obj2": 0.006785305548941522}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / Min( ( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ,( ARS * BR ) ) ) ,( AMS + Const ) )", "choosing": "Min( Max( ( ( ( CS - DS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( RCSe * MUC ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.1374080639716962}, {"determining": "( ( ( Max( MRS,ACS ) - RRS ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * ( ( RMSe * MUM ) - ( RCSe + RMSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),CS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04345992733302909}], "12": [{"determining": "( ( AMS * Const ) * ( ( ( ( ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) - ( Max( MRS,FirstVNF_CPU ) * AMS ) ) / DDR ) - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / Max( ( RCSe / RCSe ),( MUC + CS ) ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUR ),CS ) ) ) / ( DS - MUR ) )", "obj1": 0.8724696356275303, "obj2": 0.05728658451782696}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5668016194331984, "obj2": 0.357383382036534}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( ( BR - ( ( FirstVNF_RAM - PN ) / ( CRS + FirstVNF_Mem_Server ) ) ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( ARS - MRS ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / Max( Max( MDR,DDR ),PN ) )", "choosing": "( ( RRSe - Min( MUM ,( DS + Min( CS ,( Min( ( MLU - MUC ) ,RCSe ) * MUR ) ) ) ) ) - Min( CS ,Max( RCSe,CS ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3620733220519998}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) * MRS ) ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( MLU - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( CS + MUC ) )", "obj1": 0.5769230769230769, "obj2": 0.3096062411966027}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,PN ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Max( CRS,( FirstVNF_CPU_Server - ( FirstVNF_Mem * PN ) ) ) + ACS ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,CS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( CS * Min( Min( Min( CS ,RRSe ) ,MUM ) ,MUM ) ) / ( Min( RMSe ,CS ) - MUM ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.21395632600797113}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.39792531204723547}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.39792531204723547}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( ( MUR * ( MUM / MUC ) ) * RMSe ) + MUR ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6748486628367991}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( Max( MUC,RCSe ) + RCSe ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.031419361802628186}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,RRS ) * ARS ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.5789473684210527, "obj2": 0.30832650838441283}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( ACS - ( FirstVNF_CPU + ( FirstVNF_CPU_Server / MDR ) ) ) - RRS ) - RRS ) - Min( ( PN * Max( FirstVNF_Mem,AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( DS - Min( CS ,( Min( Min( MUM ,CS ) ,Min( DS ,RRSe ) ) - Min( CS ,( Min( RRSe ,( RRSe / MUM ) ) - MUC ) ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * Min( ( DS + ( ( DS * ( ( MUC * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) ,( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5859388376895336}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) * ( FirstVNF_CPU_Server / ( ARS + ACS ) ) ) + ( FirstVNF_Mem_Server - PN ) ) / ( ( CRS / ARS ) + ( Max( MRS,ACS ) - MDR ) ) )", "choosing": "( ( ( ( DS - DS ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( Max( MUC,MLU ) / ( RCSe / ( ( Max( MUM,RCSe ) * DS ) * MUC ) ) ) - Min( DS ,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6012145748987854, "obj2": 0.295358397182515}, {"determining": "Min( ( Const * AMS ) ,( FirstVNF_CPU / AMS ) )", "choosing": "( ( ( Max( ( DS + Min( MUC ,Min( Max( RCSe,CS ) ,Max( MUR,DS ) ) ) ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUR,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.03681551384890658}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9838056680161943, "obj2": 0.008818328234988106}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) - Min( CS ,( Min( ( Min( MUC ,MUR ) * RCSe ) ,RRSe ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( AMS * RRS ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "Min( ( ( ( ( PN * ( Min( MRS ,Const ) / ( ( FirstVNF_Mem / PN ) / FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( RMSe - MLU ) - Min( ( DS - MLU ) ,MUM ) )", "obj1": 0.8744939271255061, "obj2": 0.055109251786353376}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * MRS ) ) + Min( Min( ARS ,( AMS * FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ,( FirstVNF_CPU_Server - RRS ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( CS + MUC ) - ( Min( Max( MUM,MUR ) ,Min( RCSe ,( ( ( ( RRSe - MUR ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) )", "obj1": 0.5931174089068826, "obj2": 0.2999945418294156}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( DS * RRSe ) - RMSe ),RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.9878542510121457, "obj2": 0.006785305548941522}, {"determining": "( ( ( Max( MRS,ACS ) - RRS ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * ( ( RMSe * MUM ) - ( RCSe + RMSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),CS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04345992733302909}, {"determining": "( ( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( ( MUR * ( MUM / Max( RRSe,MUC ) ) ) * RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS + ARS ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7051830636211764}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5258789056052766}, {"determining": "( ( FirstVNF_CPU * CRS ) - ( PN - ( ARS + Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,RRS ) ) ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( Min( RRSe ,( MUR * Max( ( CS + RRSe ),Max( MUC,( CS - RMSe ) ) ) ) ) + Max( RRSe,MUM ) ) + Max( ( MUC + CS ),( RCSe / MUC ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7037025064777135}, {"determining": "( ( Const / ( CRS * RRS ) ) / ( Max( Const,MDR ) * PN ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.09716599190283401, "obj2": 0.7031000746436781}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014753718704482825}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "( ( ( PN + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Max( FirstVNF_CPU,( DDR * FirstVNF_CPU_Server ) ) ) / ( ( ( Max( Const,Const ) + ( ( RRS * Const ) * MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Max( ( ( CS + ( MUR * MUC ) ) / RRSe ),DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( Min( CS ,( ( RMSe * MUC ) + Max( RRSe,RCSe ) ) ) ,( MUR + MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ARS,PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / Min( MLU ,( MUM / CS ) ) ) ,Max( RCSe,( RRSe * ( RMSe / MUR ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.08438154996481695}, {"determining": "( Max( PN,Max( AMS,( Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Const ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MLU - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( ( ( CS - Min( ( ( RRSe / RRSe ) * RRSe ) ,MLU ) ) * ( MUM + MUR ) ) + ( CS / RRSe ) ) + ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5964557981193549}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.41943957258723485}, {"determining": "( ( ( Max( MRS,FirstVNF_RAM ) - MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( ACS * ( ( DDR / ( RRS + FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe + ( CS - ( Max( CS,DS ) / ( Min( ( CS * ( MUR - RRSe ) ) ,Min( ( MUC * RMSe ) ,( MLU * MUR ) ) ) / MUR ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS * ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe + ( MUM + CS ) ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MUC + RRSe ) + ( Min( Min( MUC ,( ( DS - MLU ) - Max( MUR,MUM ) ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.10042332029472857}, {"determining": "( Min( ( BR - CRS ) ,( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( Max( MRS,ACS ) - MDR ) * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( ( ( Min( CS ,RMSe ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) * MUR ) + MUR ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( FirstVNF_CPU - Max( Max( FirstVNF_RAM,FirstVNF_Mem ),ACS ) ) ) ) / PN )", "choosing": "( Max( ( ( ( MUC / MUC ) * RRSe ) - RMSe ),RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.22874493927125505, "obj2": 0.6127497168057274}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.007351201017611436}, {"determining": "( Max( ( FirstVNF_RAM_Server / BR ),DDR ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( Max( DS,MUC ) ,( ( ( MUR * ( MUM / MUC ) ) * RMSe ) + Max( ( ( RRSe - MUR ) / MUC ),( MUC + CS ) ) ) ) )", "obj1": 0.1700404858299595, "obj2": 0.6640536815891408}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / ( ( Const + ( FirstVNF_RAM - CRS ) ) + Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_RAM ),Max( FirstVNF_RAM,BR ) ) ) ) ,( AMS + ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / MLU ) + Max( ( MLU / MLU ),CS ) ) + ( ( ( RCSe - DS ) / DS ) - ( RCSe * MUC ) ) )", "obj1": 0.6923076923076923, "obj2": 0.23711467214193804}, {"determining": "( ( ARS * FirstVNF_Mem ) - ( ( ( ACS + BR ) + ARS ) - PN ) )", "choosing": "Min( ( RRSe * Min( RMSe ,CS ) ) ,( ( MLU * MUM ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RCSe + DS ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5872144930148946}, {"determining": "Min( ( AMS + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + Max( MLU,RMSe ) ),MUC ) ,( RCSe * DS ) ) + ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.006689030886184664}, {"determining": "( ( AMS * Const ) * ( ( ( ( ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) - ( AMS * FirstVNF_RAM ) ) / DDR ) - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( RMSe + Min( ( MUR / Max( ( RCSe / MUC ),( MUC + CS ) ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( ( ACS * ( FirstVNF_Mem_Server + AMS ) ),Max( ( FirstVNF_CPU / Const ),FirstVNF_CPU_Server ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / ( MRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - MUC ) ) - ( Min( MUR ,MLU ) + Min( MUR ,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( MUR ,RMSe ) )", "obj1": 0.4311740890688259, "obj2": 0.4371733906620327}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( Max( RRSe,MUC ) + ( Min( Min( MUC ,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.11538461538461539, "obj2": 0.694534100146331}, {"determining": "Min( ( AMS - Max( ( ACS * ( FirstVNF_Mem_Server + AMS ) ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( Max( ( ( ( CS - ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( RCSe * MUC ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ),Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( MDR * MRS ) ) - ( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) - Min( ( Max( ARS,FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - DDR ) ) ,CRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) ) - Min( Max( MUC,( Max( MUC,( Min( ( RMSe * CS ) ,( RMSe + CS ) ) - Max( DS,MUC ) ) ) + MUC ) ) ,( Min( ( ( RCSe + RRSe ) - Min( RRSe ,RCSe ) ) ,MUM ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( PN - ( ( AMS * ( FirstVNF_Mem_Server - CRS ) ) + MDR ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Min( RRSe ,( CS * RCSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( ( ( MLU / MLU ) + MLU ) + ( RCSe * CS ) ) + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,MDR ) / ( Const - DDR ) ) ,( AMS + Const ) )", "choosing": "Min( ( MUM * Min( RCSe ,( ( Max( MUM,Min( MUC ,CS ) ) + Max( MUR,RRSe ) ) * MUR ) ) ) ,( Min( RMSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5258327481299794}], "13": [{"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Const ) * ( ( ( ( ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) - ( Max( MRS,FirstVNF_CPU ) * AMS ) ) / DDR ) - FirstVNF_RAM ) - ( AMS * RRS ) ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / Max( ( RCSe / RCSe ),( MUC + CS ) ) ) ,( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.213305434657746}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MUC + RRSe ) + ( Min( Min( MUC ,( ( DS - MLU ) - Max( MUR,MUM ) ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10077600810344264}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / ( ( Const + ( FirstVNF_RAM - CRS ) ) + Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_RAM ),Max( FirstVNF_RAM,BR ) ) ) ) ,( AMS + ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / MLU ) + Max( ( MLU / MLU ),CS ) ) + ( ( ( RCSe - DS ) / DS ) - ( RCSe * MUC ) ) )", "obj1": 0.6923076923076923, "obj2": 0.23711467214193804}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "( Min( ( BR - ( ( FirstVNF_RAM - PN ) / ( CRS + FirstVNF_Mem_Server ) ) ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( ARS - MRS ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / Max( Max( MDR,DDR ),PN ) )", "choosing": "( ( RRSe - Min( MUM ,( DS + Min( CS ,( Min( ( MLU - MUC ) ,RCSe ) * MUR ) ) ) ) ) - Min( CS ,Max( RCSe,CS ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3620733220519998}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MUC + RRSe ) + ( Min( Min( MUC ,( ( DS - MLU ) - Max( MUR,MUM ) ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.10042332029472857}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.41943957258723485}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.661310604093019}, {"determining": "Min( ( Min( MDR ,MDR ) / ( Const - DDR ) ) ,( AMS + Const ) )", "choosing": "Min( ( MUM * Min( RCSe ,( ( Max( MUM,Min( MUC ,CS ) ) + Max( MUR,RRSe ) ) * MUR ) ) ) ,( Min( RMSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.5258327481299794}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( Min( ( BR - CRS ) ,Min( ( Max( ( CRS - BR ),AMS ) - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) * ( PN + ( CRS / MDR ) ) ) )", "choosing": "( Max( ( ( ( CS - ( ( MLU - MUR ) - MUR ) ) * Min( DS ,( CS / MUM ) ) ) - RMSe ),RMSe ) - Max( CS,RMSe ) )", "obj1": 0.5748987854251012, "obj2": 0.3526424675176249}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,PN ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Max( CRS,( FirstVNF_CPU_Server - ( FirstVNF_Mem * PN ) ) ) + ACS ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,CS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( CS * Min( Min( Min( CS ,RRSe ) ,MUM ) ,MUM ) ) / ( Min( RMSe ,CS ) - MUM ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5692489459677486}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) * MRS ) ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( MLU - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( CS + MUC ) )", "obj1": 0.5769230769230769, "obj2": 0.3096062411966027}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( ( ACS * ( FirstVNF_Mem_Server + AMS ) ),Max( ( FirstVNF_CPU / Const ),FirstVNF_CPU_Server ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / ( MRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - MUC ) ) - ( Min( MUR ,MLU ) + Min( MUR ,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( MUR ,RMSe ) )", "obj1": 0.4311740890688259, "obj2": 0.4371733906620327}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,PN ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - PN ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Max( CRS,( FirstVNF_CPU_Server - ( FirstVNF_Mem * PN ) ) ) + ACS ) )", "choosing": "( ( ( ( Max( RRSe,MUM ) - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,CS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( CS * Min( Min( Min( CS ,RRSe ) ,MUM ) ,MUM ) ) / ( Min( RMSe ,CS ) - MUM ) ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5585502344860992}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( FirstVNF_CPU - Max( Max( FirstVNF_RAM,FirstVNF_Mem ),ACS ) ) ) ) / PN )", "choosing": "( Max( ( ( ( MUC / MUC ) * RRSe ) - RMSe ),RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.22874493927125505, "obj2": 0.6127497168057274}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014753718704482822}, {"determining": "Min( Max( ( ( ACS * BR ) * ARS ),ACS ) ,Max( Max( Min( AMS ,MDR ),( FirstVNF_Mem_Server - RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe + ( ( CS - Max( Max( ( MUC / MUC ),MUM ),( RRSe - ( ( MLU - RCSe ) / DS ) ) ) ) / ( DS + ( RMSe * MUR ) ) ) ) / ( Min( ( RRSe + RRSe ) ,( RCSe - ( MLU / Max( ( RRSe + MUR ),( RMSe - MLU ) ) ) ) ) / ( Max( MUM,DS ) * ( RCSe + MUC ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.041522316896358456}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5964557981193549}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.39792531204723547}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.13157894736842105, "obj2": 0.6789376677610677}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,RRS ) * ARS ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "( ( ARS * FirstVNF_Mem ) - ( ( ( ACS + BR ) + ARS ) - PN ) )", "choosing": "Min( ( RRSe * Min( RMSe ,CS ) ) ,( ( MLU * MUM ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RCSe + DS ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5872144930148946}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.39792531204723547}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5668016194331984, "obj2": 0.357383382036534}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5258789056052766}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RRSe ) ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.42105263157894735, "obj2": 0.4436745375066701}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "Min( ( Const * AMS ) ,( FirstVNF_CPU / AMS ) )", "choosing": "( ( ( Max( ( DS + Min( MUC ,Min( Max( RCSe,CS ) ,Max( MUR,DS ) ) ) ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUR,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9412955465587044, "obj2": 0.03681551384890658}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2902787446114204}, {"determining": "( ( ( PN + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Max( FirstVNF_CPU,( DDR * FirstVNF_CPU_Server ) ) ) / ( ( ( Max( Const,Const ) + ( ( RRS * Const ) * MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Max( ( ( CS + ( MUR * MUC ) ) / RRSe ),DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( Min( CS ,( ( RMSe * MUC ) + Max( RRSe,RCSe ) ) ) ,( MUR + MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( ( Max( BR,FirstVNF_CPU ) - AMS ) - FirstVNF_Mem_Server ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( Max( MRS,ACS ),MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( MLU * ( RCSe + RMSe ) ),Max( MLU,RMSe ) ) ,( Min( ( MUR / RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02282930911774528}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( ACS - ( FirstVNF_CPU + ( FirstVNF_CPU_Server / MDR ) ) ) - RRS ) - RRS ) - Min( ( PN * Max( FirstVNF_Mem,AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( DS - Min( CS ,( Min( Min( MUM ,CS ) ,Min( DS ,RRSe ) ) - Min( CS ,( Min( RRSe ,( RRSe / MUM ) ) - MUC ) ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * Min( ( DS + ( ( DS * ( ( MUC * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) ,( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5859388376895336}, {"determining": "Min( ( ARS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( CRS + Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( MUR - RRSe ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + RMSe ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( Max( MRS,FirstVNF_RAM ) - MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( ACS * ( ( DDR / ( RRS + FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe + ( CS - ( Max( CS,DS ) / ( Min( ( CS * ( MUR - RRSe ) ) ,Min( ( MUC * RMSe ) ,( MLU * MUR ) ) ) / MUR ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS * ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe + ( MUM + CS ) ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( Min( ( BR / CRS ) ,( Max( ARS,Max( ( MDR * Max( CRS,ACS ) ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( ( ( Max( ( RCSe - MLU ),MUR ) - ( ( RMSe / RCSe ) * CS ) ) * MUM ) ,RCSe ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.5809716599190283, "obj2": 0.3078412033135819}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) * ( FirstVNF_CPU_Server / ( ARS + ACS ) ) ) + ( FirstVNF_Mem_Server - PN ) ) / ( ( CRS / ARS ) + ( Max( MRS,ACS ) - MDR ) ) )", "choosing": "( ( ( ( DS - DS ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( Max( MUC,MLU ) / ( RCSe / ( ( Max( MUM,RCSe ) * DS ) * MUC ) ) ) - Min( DS ,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) - Min( CS ,( Min( ( Min( MUC ,MUR ) * RCSe ) ,RRSe ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6012145748987854, "obj2": 0.295358397182515}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( AMS * RRS ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "Min( ( ( ACS + ARS ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7051830636211764}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * MRS ) ) + Min( Min( ARS ,( AMS * FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ,( FirstVNF_CPU_Server - RRS ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( CS + MUC ) - ( Min( Max( MUM,MUR ) ,Min( RCSe ,( ( ( ( RRSe - MUR ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) )", "obj1": 0.5931174089068826, "obj2": 0.2999945418294156}, {"determining": "Min( ( ( ( ( PN * ( Min( MRS ,Const ) / ( ( FirstVNF_Mem / PN ) / FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( RMSe - MLU ) - Min( ( DS - MLU ) ,MUM ) )", "obj1": 0.8744939271255061, "obj2": 0.055109251786353376}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( PN - MRS ) - ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Max( ( MLU + ( ( RRSe + MUM ) * ( ( RRSe - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + Min( ( MUR / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9838056680161943, "obj2": 0.008818328234988106}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.006530427596181643}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "Min( ( Const * AMS ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( DDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,CS ) ) * ( Min( MUM ,CS ) * Max( MUC,MUR ) ) ) / Min( MLU ,( MUM / CS ) ) )", "obj1": 0.9392712550607287, "obj2": 0.039618147826425844}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,PN ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Max( CRS,( FirstVNF_CPU_Server - ( FirstVNF_Mem * PN ) ) ) + ACS ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,CS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( CS * Min( Min( Min( CS ,RRSe ) ,MUM ) ,MUM ) ) / ( Min( RMSe ,CS ) - MUM ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "( ( FirstVNF_CPU * CRS ) - ( PN - ( ARS + Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,RRS ) ) ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( Min( RRSe ,( MUR * Max( ( CS + RRSe ),Max( MUC,( CS - RMSe ) ) ) ) ) + Max( RRSe,MUM ) ) + Max( ( MUC + CS ),( RCSe / MUC ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7037025064777135}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( ( Max( MRS,ACS ) - RRS ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * ( ( RMSe * MUM ) - ( RCSe + RMSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),CS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04345992733302909}, {"determining": "( ( Const / ( CRS * RRS ) ) / ( Max( Const,MDR ) * PN ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.09716599190283401, "obj2": 0.7031000746436781}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.007351201017611436}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( ARS / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Min( MLU ,MUM ) * ( RRSe / MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "( Min( ( BR - CRS ) ,( ( ACS / FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( Max( MRS,ACS ) - MDR ) * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( ( ( Min( CS ,RMSe ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) * MUR ) + MUR ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.5789473684210527, "obj2": 0.30832650838441283}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) + ( FirstVNF_Mem_Server + CRS ) ) / Max( Max( ( Min( ( DDR - FirstVNF_RAM ) ,( MRS / BR ) ) * DDR ),Min( ( FirstVNF_CPU + Max( ARS,BR ) ) ,Min( MDR ,Const ) ) ),CRS ) )", "choosing": "( ( ( DS - MUR ) * ( Max( RCSe,( MUC - Max( CS,( MUC / RRSe ) ) ) ) - Max( MUR,RMSe ) ) ) - ( ( MLU + MUR ) + ( ( ( ( MLU * MLU ) / Min( RRSe ,DS ) ) / ( ( RCSe * RMSe ) - MUR ) ) / ( CS / ( Min( MUC ,( RCSe / RMSe ) ) + ( ( ( RCSe / MLU ) * ( DS - RRSe ) ) - MUC ) ) ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0016663991875926502}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MUC + RRSe ) + ( Min( Min( MUC ,( ( DS - MLU ) - Max( MUR,MUM ) ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10077600810344264}, {"determining": "( ( ( BR / FirstVNF_RAM ) - AMS ) - ( ACS / BR ) )", "choosing": "( ( DS / RRSe ) - ( RRSe * ( ( MUM * ( ( ( ( DS - MUC ) * Min( MUM ,MUM ) ) + ( MUM - MUC ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( Min( ( FirstVNF_CPU + CRS ) ,Min( ( RRS - BR ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( FirstVNF_RAM_Server / MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( MLU - MUC ),CS ) - Min( Max( Min( MUC ,( CS / RMSe ) ),( MUC / RMSe ) ) ,RRSe ) ),Min( Min( RRSe ,RCSe ) ,( ( ( Max( ( MUC * DS ),CS ) / MLU ) - MUM ) / CS ) ) ) ,( ( Min( MUR ,RCSe ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.213305434657746}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MUC + RRSe ) + ( Min( Min( MUC ,( ( DS - MLU ) - Max( MUR,MUM ) ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10077600810344264}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / ( ( Const + ( FirstVNF_RAM - CRS ) ) + Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_RAM ),Max( FirstVNF_RAM,BR ) ) ) ) ,( AMS + ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / MLU ) + Max( ( MLU / MLU ),CS ) ) + ( ( ( RCSe - DS ) / DS ) - ( RCSe * MUC ) ) )", "obj1": 0.6923076923076923, "obj2": 0.23711467214193804}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ) + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5254745926255985}, {"determining": "( Min( ( BR - ( ( FirstVNF_RAM - PN ) / ( CRS + FirstVNF_Mem_Server ) ) ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,( ARS - MRS ) ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / Max( Max( MDR,DDR ),PN ) )", "choosing": "( ( RRSe - Min( MUM ,( DS + Min( CS ,( Min( ( MLU - MUC ) ,RCSe ) * MUR ) ) ) ) ) - Min( CS ,Max( RCSe,CS ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3620733220519998}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.41943957258723485}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.661310604093019}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.22118133962353254}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08561037085935429}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03237426567422182}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( Min( ( BR - CRS ) ,Min( ( Max( ( CRS - BR ),AMS ) - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) * ( PN + ( CRS / MDR ) ) ) )", "choosing": "( Max( ( ( ( CS - ( ( MLU - MUR ) - MUR ) ) * Min( DS ,( CS / MUM ) ) ) - RMSe ),RMSe ) - Max( CS,RMSe ) )", "obj1": 0.5748987854251012, "obj2": 0.3526424675176249}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3922893498816849}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) * MRS ) ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( MLU - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( CS + MUC ) )", "obj1": 0.5769230769230769, "obj2": 0.3096062411966027}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( ( ACS * ( FirstVNF_Mem_Server + AMS ) ),Max( ( FirstVNF_CPU / Const ),FirstVNF_CPU_Server ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / ( MRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - MUC ) ) - ( Min( MUR ,MLU ) + Min( MUR ,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( MUR ,RMSe ) )", "obj1": 0.4311740890688259, "obj2": 0.4371733906620327}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MUC + RRSe ) + ( Min( Min( MUC ,( ( DS - MLU ) - Max( MUR,MUM ) ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.10042332029472857}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( Max( Max( Min( FirstVNF_Mem ,ARS ),MRS ),AMS ),DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const * DDR ) ) ) ) ) / ( ( ( MRS * ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUM ),CS ) ) ) / Max( ( RMSe / Max( MUC,( MUM / Min( RMSe ,MUC ) ) ) ),MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.6088408270409893}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ,( Max( Max( ( ( AMS + Const ) - FirstVNF_Mem_Server ),MRS ),FirstVNF_RAM ) * ( ( FirstVNF_RAM + Max( AMS,( FirstVNF_CPU_Server / Const ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / ( ( MLU - MUR ) - MUR ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( MUC ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( MUC - ( ( ( ( MLU + DS ) - MUR ) * RCSe ) + RRSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014753718704482822}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( FirstVNF_Mem_Server + Const ) ,( Max( AMS,( FirstVNF_RAM_Server / ARS ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( RRSe - MUC ) ) - ( Max( MLU,CS ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RCSe ,( MUM - MUM ) ) )", "obj1": 0.4190283400809717, "obj2": 0.44861052597487294}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.13157894736842105, "obj2": 0.6789376677610677}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5964557981193549}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "( ( ( ACS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,RRS ) * ARS ) ) / PN )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.12550607287449392, "obj2": 0.6900768267114414}, {"determining": "( ( ARS * FirstVNF_Mem ) - ( ( ( ACS + BR ) + ARS ) - PN ) )", "choosing": "Min( ( RRSe * Min( RMSe ,CS ) ) ,( ( MLU * MUM ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RCSe + DS ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5872144930148946}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5668016194331984, "obj2": 0.357383382036534}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RRSe ) ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.42105263157894735, "obj2": 0.4436745375066701}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "( Min( ( ( CRS * ( Max( Min( ACS ,FirstVNF_CPU ),RRS ) / ( ( Const * Max( CRS,FirstVNF_RAM_Server ) ) - DDR ) ) ) - CRS ) ,Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( RCSe + MUC ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * Min( ( DS + DS ) ,( Min( ( MUM - DS ) ,MUC ) + Max( ( MUR + ( RCSe / ( RCSe / MUR ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25784784936513666}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( ( Max( BR,FirstVNF_CPU ) - AMS ) - FirstVNF_Mem_Server ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( Max( MRS,ACS ),MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( MLU * ( RCSe + RMSe ) ),Max( MLU,RMSe ) ) ,( Min( ( MUR / RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02282930911774528}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( ACS - ( FirstVNF_CPU + ( FirstVNF_CPU_Server / MDR ) ) ) - RRS ) - RRS ) - Min( ( PN * Max( FirstVNF_Mem,AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( DS - Min( CS ,( Min( Min( MUM ,CS ) ,Min( DS ,RRSe ) ) - Min( CS ,( Min( RRSe ,( RRSe / MUM ) ) - MUC ) ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * Min( ( DS + ( ( DS * ( ( MUC * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) ,( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5859388376895336}, {"determining": "Min( ( ARS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( CRS + Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( MUR - RRSe ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + RMSe ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Min( ( CRS - BR ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( CRS - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,RRS ) ) - DDR ) ) ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC + MLU ) * RRSe ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( MUC + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5999631429313661}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( Min( ( BR / CRS ) ,( Max( ARS,Max( ( MDR * Max( CRS,ACS ) ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( ( ( Max( ( RCSe - MLU ),MUR ) - ( ( RMSe / RCSe ) * CS ) ) * MUM ) ,RCSe ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.5809716599190283, "obj2": 0.3078412033135819}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) - Min( CS ,( Min( ( Min( MUC ,MUR ) * RCSe ) ,RRSe ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) * ( FirstVNF_CPU_Server / ( ARS + ACS ) ) ) + ( FirstVNF_Mem_Server - PN ) ) / ( ( CRS / ARS ) + ( Max( MRS,ACS ) - MDR ) ) )", "choosing": "( ( ( ( DS - DS ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( Max( MUC,MLU ) / ( RCSe / ( ( Max( MUM,RCSe ) * DS ) * MUC ) ) ) - Min( DS ,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( ( MUR * MUR ) + MUR ) ) )", "obj1": 0.6012145748987854, "obj2": 0.295358397182515}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}, {"determining": "Min( ( ( ACS + ARS ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7051830636211764}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * MRS ) ) + Min( Min( ARS ,( AMS * FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ,( FirstVNF_CPU_Server - RRS ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( CS + MUC ) - ( Min( Max( MUM,MUR ) ,Min( RCSe ,( ( ( ( RRSe - MUR ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) )", "obj1": 0.5931174089068826, "obj2": 0.2999945418294156}, {"determining": "Min( ( ( ( ( PN * ( Min( MRS ,Const ) / ( ( FirstVNF_Mem / PN ) / FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( RMSe - MLU ) - Min( ( DS - MLU ) ,MUM ) )", "obj1": 0.8744939271255061, "obj2": 0.055109251786353376}, {"determining": "( ( ( Max( MRS,FirstVNF_RAM ) - MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( ACS * ( ( DDR / ( RRS + FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe + ( CS - ( Max( CS,DS ) / ( Min( ( CS * ( MUR - RRSe ) ) ,Min( ( MUC * RMSe ) ,( MLU * MUR ) ) ) / MUR ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS * ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe + ( MUM + CS ) ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,PN ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Max( CRS,( FirstVNF_CPU_Server - ( FirstVNF_Mem * PN ) ) ) + ACS ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,CS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( CS * Min( Min( Min( CS ,RRSe ) ,MUM ) ,MUM ) ) / ( Min( RMSe ,CS ) - MUM ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "( ( FirstVNF_CPU * CRS ) - ( PN - ( ARS + Min( Max( FirstVNF_RAM,CRS ) ,Min( ACS ,RRS ) ) ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( Min( RRSe ,( MUR * Max( ( CS + RRSe ),Max( MUC,( CS - RMSe ) ) ) ) ) + Max( RRSe,MUM ) ) + Max( ( MUC + CS ),( RCSe / MUC ) ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7037025064777135}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( ( Max( MRS,ACS ) - RRS ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * ( ( RMSe * MUM ) - ( RCSe + RMSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),CS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04345992733302909}, {"determining": "( ( Const / ( CRS * RRS ) ) / ( Max( Const,MDR ) * PN ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.09716599190283401, "obj2": 0.7031000746436781}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.0056651055063788956}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.007351201017611436}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Const / RRS ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) * ( MUC - DS ) ) - Max( DS,MUM ) ) - ( ( Min( RRSe ,RRSe ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002446396174565057}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),DDR ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( MLU + MUR ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( CRS + FirstVNF_CPU ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.5789473684210527, "obj2": 0.30832650838441283}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9878542510121457, "obj2": 0.006530427596181643}, {"determining": "Min( ( ( MDR * ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,DDR ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RRSe / MUR ) * CS ) ) * Min( MUC ,MUC ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}, {"determining": "( ( ( PN + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Max( FirstVNF_CPU,( DDR * FirstVNF_CPU_Server ) ) ) / ( ( ( Max( Const,Const ) + ( ( RRS * Const ) * MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Max( ( ( CS + ( MUR * MUC ) ) / RRSe ),DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( Min( CS ,( ( RMSe * MUC ) + Max( RRSe,RCSe ) ) ) ,( MUR + MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "( ( ( PN * ( ( ( FirstVNF_Mem_Server - PN ) - MDR ) / ( ( FirstVNF_CPU_Server / Max( DDR,( MRS / AMS ) ) ) * RRS ) ) ) + ( PN * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM / ARS ) + ( Max( CRS,ACS ) - MDR ) ) )", "choosing": "( ( Max( MUM,MUR ) - Max( CS,Min( ( CS + Min( Min( Min( MUR ,RRSe ) ,MUM ) ,MUM ) ) ,RMSe ) ) ) - Min( ( MUR * MUC ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( AMS * RRS ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( ( ( RCSe - CS ) / DS ) ,( MUR * MUC ) ) )", "obj1": 0.9919028340080972, "obj2": 0.0038523054398086074}], "15": [{"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * ( ( ( MUR / MLU ) - ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + CRS ) ,Min( ( RRS - BR ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( FirstVNF_RAM_Server / MDR ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( Max( ( MLU - MUC ),CS ) - Min( Max( Min( MUC ,( CS / RMSe ) ),( MUC / RMSe ) ) ,RRSe ) ),Min( Min( RRSe ,RCSe ) ,( ( ( Max( ( MUC * DS ),CS ) / MLU ) - MUM ) / CS ) ) ) ,( ( Min( MUR ,RCSe ) / ( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.213305434657746}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( RCSe,MUC ) - ( ( ( MUC + RRSe ) + ( Min( Min( MUC ,( ( DS - MLU ) - Max( MUR,MUM ) ) ) ,( RRSe / RRSe ) ) - CS ) ) + Max( Max( RRSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.10077600810344264}, {"determining": "Min( ( ( ARS / Max( BR,FirstVNF_Mem ) ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( ( Max( MRS,ACS ) - CRS ) * FirstVNF_CPU ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,Min( MLU ,RMSe ) ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( MUR / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.08034132824159973}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / ( ( Const + ( FirstVNF_RAM - CRS ) ) + Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_RAM ),Max( FirstVNF_RAM,BR ) ) ) ) ,( AMS + ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / MLU ) + Max( ( MLU / MLU ),CS ) ) + ( ( ( RCSe - DS ) / DS ) - ( RCSe * MUC ) ) )", "obj1": 0.6923076923076923, "obj2": 0.23711467214193804}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ) + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5254745926255985}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.661310604093019}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.22118133962353254}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.3481781376518219, "obj2": 0.4941978381632288}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03237426567422182}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3922893498816849}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / Max( CRS,CRS ) ) ) ) / ( FirstVNF_RAM * DDR ) )", "choosing": "Min( ( RCSe + RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MLU + CS ) ) * Min( ( DS + DS ) ,( RCSe + Max( Min( DS ,MUR ),( MUR + ( MLU - ( RCSe - CS ) ) ) ) ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2391543287845214}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( ( MUC - RCSe ),RRSe ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( ( RCSe * RCSe ) - Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.4311740890688259, "obj2": 0.43070028730618504}, {"determining": "Min( ( ( Max( RRS,MRS ) * FirstVNF_Mem_Server ) - Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),FirstVNF_Mem ),BR ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( MUR / DS ) / ( ( ( MUR + RCSe ) + MUR ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7732793522267206, "obj2": 0.08775262198560266}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( ( FirstVNF_RAM - CRS ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( Max( ( RMSe - CS ),MLU ) * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.742914979757085, "obj2": 0.09905248794980435}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ,( Max( Max( ( ( AMS + Const ) - FirstVNF_Mem_Server ),MRS ),FirstVNF_RAM ) * ( ( FirstVNF_RAM + Max( AMS,( FirstVNF_CPU_Server / Const ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / ( ( MLU - MUR ) - MUR ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( MUC ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( MUC - ( ( ( ( MLU + DS ) - MUR ) * RCSe ) + RRSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "Min( ( Max( MDR,ACS ) / ( Max( FirstVNF_CPU,MRS ) - ( ( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / Max( ( RMSe / MUC ),MUR ) ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * RRSe ) ) - ( ( Min( RRSe ,RRSe ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.48130142352919947}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.41943957258723485}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.22469635627530365, "obj2": 0.6150592285076582}, {"determining": "( Min( ( ( ( Min( FirstVNF_RAM_Server ,MRS ) / FirstVNF_Mem ) - FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( Max( MLU,Max( ( RRSe / ( DS * CS ) ),MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RRSe ) ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.42105263157894735, "obj2": 0.4436745375066701}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.13157894736842105, "obj2": 0.6789376677610677}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.42350589851034615}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5964557981193549}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014753718704482822}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - ( Max( MRS,ACS ) - ( Max( Min( Max( FirstVNF_Mem,DDR ) ,( BR * AMS ) ),FirstVNF_CPU_Server ) + DDR ) ) ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6899469107235643}, {"determining": "( ( ARS * FirstVNF_Mem ) - ( ( ( ACS + BR ) + ARS ) - PN ) )", "choosing": "Min( ( RRSe * Min( RMSe ,CS ) ) ,( ( MLU * MUM ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RCSe + DS ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.5872144930148946}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( Max( Max( Min( FirstVNF_Mem ,ARS ),MRS ),AMS ),DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const * DDR ) ) ) ) ) / ( ( ( MRS * ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUM ),CS ) ) ) / Max( ( RMSe / Max( MUC,( MUM / Min( RMSe ,MUC ) ) ) ),MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.6088408270409893}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( ( Max( BR,FirstVNF_CPU ) - AMS ) - FirstVNF_Mem_Server ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( Max( MRS,ACS ),MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( MLU * ( RCSe + RMSe ) ),Max( MLU,RMSe ) ) ,( Min( ( MUR / RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02282930911774528}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( ACS - ( FirstVNF_CPU + ( FirstVNF_CPU_Server / MDR ) ) ) - RRS ) - RRS ) - Min( ( PN * Max( FirstVNF_Mem,AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( DS - Min( CS ,( Min( Min( MUM ,CS ) ,Min( DS ,RRSe ) ) - Min( CS ,( Min( RRSe ,( RRSe / MUM ) ) - MUC ) ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * Min( ( DS + ( ( DS * ( ( MUC * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) ,( DS + RCSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.5859388376895336}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08505919504993642}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Max( ( AMS - MRS ),Const ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RRSe ) ) - ( Min( MUR ,MLU ) + Min( MUR ,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( CS ,( Min( Max( ( Min( ( MUM + RRSe ) ,MUC ) / RMSe ),( RCSe * ( MUR + CS ) ) ) ,( ( RRSe * ( MUR - RMSe ) ) - Min( DS ,( RRSe + DS ) ) ) ) * ( RRSe * RCSe ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.2597930751343705}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Min( ( CRS - BR ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( CRS - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,RRS ) ) - DDR ) ) ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC + MLU ) * RRSe ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( MUC + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5999631429313661}, {"determining": "( ( ( Max( MRS,FirstVNF_RAM ) - MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( ACS * ( ( DDR / ( RRS + FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe + ( CS - ( Max( CS,DS ) / ( Min( ( CS * ( MUR - RRSe ) ) ,Min( ( MUC * RMSe ) ,( MLU * MUR ) ) ) / MUR ) ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS * ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe + ( MUM + CS ) ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) - Min( CS ,( Min( ( Min( MUC ,MUR ) * RCSe ) ,RRSe ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) * ( FirstVNF_CPU_Server / ( ARS + ACS ) ) ) + ( FirstVNF_Mem_Server - PN ) ) / ( ( CRS / ARS ) + ( Max( MRS,ACS ) - MDR ) ) )", "choosing": "( ( ( ( DS - DS ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( Max( MUC,MLU ) / ( RCSe / ( ( Max( MUM,RCSe ) * DS ) * MUC ) ) ) - Min( DS ,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( Min( ( BR - CRS ) ,( CRS * RRS ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2951684755532113}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}, {"determining": "Min( ( ARS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( CRS + Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( MUR - RRSe ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + RMSe ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.25634646545723894}, {"determining": "( ( Min( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * MRS ) ) + Min( Min( ARS ,( AMS * FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) / ( Min( ( BR - CRS ) ,Min( ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ,( FirstVNF_CPU_Server - RRS ) ) ) * ( PN + ( CRS / MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( ( CS + MUC ) - ( Min( Max( MUM,MUR ) ,Min( RCSe ,( ( ( ( RRSe - MUR ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) )", "obj1": 0.5931174089068826, "obj2": 0.2999945418294156}, {"determining": "Min( ( ( ( ( PN * ( Min( MRS ,Const ) / ( ( FirstVNF_Mem / PN ) / FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( RMSe - MLU ) - Min( ( DS - MLU ) ,MUM ) )", "obj1": 0.8744939271255061, "obj2": 0.055109251786353376}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "Min( ( ( ACS + ARS ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( DS - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.7051830636211764}, {"determining": "( Min( ( BR - CRS ) ,( Max( ARS,Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( ( MUR + RCSe ) ,Max( ( DS * MUR ),RMSe ) ) / MUM ) ) )", "obj1": 0.6032388663967612, "obj2": 0.29378584751684245}, {"determining": "( ( ( PN + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Max( FirstVNF_CPU,( DDR * FirstVNF_CPU_Server ) ) ) / ( ( ( Max( Const,Const ) + ( ( RRS * Const ) * MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Max( ( ( CS + ( MUR * MUC ) ) / RRSe ),DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( Min( CS ,( ( RMSe * MUC ) + Max( RRSe,RCSe ) ) ) ,( MUR + MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08561037085935429}, {"determining": "( ( Const / ( CRS * RRS ) ) / ( Max( Const,MDR ) * PN ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.09716599190283401, "obj2": 0.7031000746436781}, {"determining": "Min( ( AMS / MDR ) ,( Const * AMS ) )", "choosing": "( Max( ( ( RCSe + MLU ) * Max( RCSe,( RCSe / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / ( MUM * MLU ) ),( MUC + CS ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7031058899996879}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( MDR ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6752870425796689}, {"determining": "( ( ( Max( MRS,ACS ) - RRS ) + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * ( ( RMSe * MUM ) - ( RCSe + RMSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),CS ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04345992733302909}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),( Max( ( BR + BR ),( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server - RRS ) ) ) + CRS ) ) * ( DDR * ( MDR - Max( MRS,ACS ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( RCSe - CS ) ) * ( ( Max( MUR,Max( RCSe,CS ) ) + DS ) * ( RMSe * RCSe ) ) ) ,Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( CS * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.0056651055063788956}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.9858299595141701, "obj2": 0.007351201017611436}, {"determining": "Min( ( ( MDR * ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,DDR ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RRSe / MUR ) * CS ) ) * Min( MUC ,MUC ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0008866081101817185}], "16": [{"determining": "( ( ARS * FirstVNF_Mem ) - ( ( ( ACS + BR ) + ARS ) - PN ) )", "choosing": "Min( ( RRSe * Min( RMSe ,CS ) ) ,( ( MLU * MUM ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RCSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * ( ( ( MUR / MLU ) - ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + Const ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.213305434657746}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7388663967611336, "obj2": 0.10077194542971735}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RCSe * RRSe ) - RMSe ),Min( MLU ,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.5364372469635628, "obj2": 0.3568915809808972}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "Min( ( ( ( FirstVNF_Mem / PN ) - Const ) / ( ( Const + ( FirstVNF_RAM - CRS ) ) + Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_RAM ),Max( FirstVNF_RAM,BR ) ) ) ) ,( AMS + ( AMS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / MLU ) + Max( ( MLU / MLU ),CS ) ) + ( ( ( RCSe - DS ) / DS ) - ( RCSe * MUC ) ) )", "obj1": 0.6923076923076923, "obj2": 0.23711467214193804}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.661310604093019}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "Min( ( ( Const - DDR ) / Min( ( FirstVNF_CPU_Server - ARS ) ,Max( AMS,( DDR / RRS ) ) ) ) ,( AMS + ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ) )", "choosing": "Min( ( Max( ( DS + MUM ),MLU ) * MUR ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) + DS ) * ( DS + RCSe ) ) ) )", "obj1": 0.7327935222672065, "obj2": 0.22118133962353254}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.3481781376518219, "obj2": 0.4941978381632288}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.4048582995951417, "obj2": 0.4488434437501784}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / Max( CRS,CRS ) ) ) ) / ( FirstVNF_RAM * DDR ) )", "choosing": "Min( ( RCSe + RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MLU + CS ) ) * Min( ( DS + DS ) ,( RCSe + Max( Min( DS ,MUR ),( MUR + ( MLU - ( RCSe - CS ) ) ) ) ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2391543287845214}, {"determining": "Min( ( ( ARS / Max( BR,FirstVNF_Mem ) ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( ( Max( MRS,ACS ) - CRS ) * FirstVNF_CPU ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,Min( MLU ,RMSe ) ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( MUR / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.08034132824159973}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( ( MUC - RCSe ),RRSe ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( ( RCSe * RCSe ) - Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.4311740890688259, "obj2": 0.43070028730618504}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ) + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5254745926255985}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.917004048582996, "obj2": 0.035773811461435934}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( AMS * RRS ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Min( CS ,RMSe ) ) - Min( CS ,RMSe ) )", "obj1": 0.1437246963562753, "obj2": 0.6672524785676819}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ACS ) - Min( AMS ,ARS ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( Max( ( RCSe / MUR ),RCSe ) ,( MUC / CS ) ),( ( ( DS - CS ) + ( ( Max( ( MLU * RMSe ),Min( MUC ,MLU ) ) + ( MUC * Min( MLU ,MLU ) ) ) / MUC ) ) / ( ( CS - CS ) / ( MUC / RCSe ) ) ) ) ,( Max( Min( MUR ,RCSe ),( RCSe - CS ) ) * ( ( ( MUR - MUC ) + CS ) * ( DS + DS ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.25126360387556523}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3922893498816849}, {"determining": "Min( ( Max( MDR,ACS ) / ( Max( FirstVNF_CPU,MRS ) - ( ( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / Max( ( RMSe / MUC ),MUR ) ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * RRSe ) ) - ( ( Min( RRSe ,RRSe ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.48130142352919947}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.41434655274890303}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ,( Max( Max( ( ( AMS + Const ) - FirstVNF_Mem_Server ),MRS ),FirstVNF_RAM ) * ( ( FirstVNF_RAM + Max( AMS,( FirstVNF_CPU_Server / Const ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / ( ( MLU - MUR ) - MUR ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( MUC ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( MUC - ( ( ( ( MLU + DS ) - MUR ) * RCSe ) + RRSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03237426567422182}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - ( ( AMS * MDR ) + ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUM / ( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ) ) - MUC ) * ( DS - ( ( MUC - Min( DS ,CS ) ) + MLU ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5834431389558975}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.42350589851034615}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RCSe ) ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.41700404858299595, "obj2": 0.4420315036476587}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( Max( Max( Min( FirstVNF_Mem ,ARS ),MRS ),AMS ),DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const * DDR ) ) ) ) ) / ( ( ( MRS * ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUM ),CS ) ) ) / Max( ( RMSe / Max( MUC,( MUM / Min( RMSe ,MUC ) ) ) ),MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.6088408270409893}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM * ( ( RMSe / CS ) + MUM ) ) ,( ( MUM / MUM ) * ( ( DS + ( ( DS * ( ( RCSe / CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5964557981193549}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "Min( ( ( CRS * Min( MRS ,AMS ) ) / Const ) ,( AMS + CRS ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( RMSe * RMSe ) ) / CS ),Max( CS,Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( DS ,RCSe ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5298340124284483}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( Min( RRSe ,( CS - RCSe ) ) - ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * CS ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9554655870445344, "obj2": 0.017840376472683817}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM * ( ( DS + Max( DS,Max( RMSe,CS ) ) ) + Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( ( RRSe * CS ) * Min( CS ,RMSe ) ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ) ) ) ,( Min( RRSe ,( Max( MUM,( ( ( CS - CS ) * ( MLU / RCSe ) ) - MUR ) ) - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RRSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5254745926255985}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - ( Max( MRS,ACS ) - ( Max( Min( Max( FirstVNF_Mem,DDR ) ,( BR * AMS ) ),FirstVNF_CPU_Server ) + DDR ) ) ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6899469107235643}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( ( ( MDR / Const ) / ARS ) + Const ) / ( MRS + ( RRS * MDR ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6956812744182954}, {"determining": "( Min( ( CRS - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) / DDR ) ) ) ) / ( FirstVNF_RAM * Min( PN ,AMS ) ) )", "choosing": "( MUC - Min( CS ,( ( ( RCSe - ( ( MLU / DS ) + Max( DS,MUR ) ) ) + MUC ) - MUR ) ) )", "obj1": 0.6295546558704453, "obj2": 0.27111149387169947}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08505919504993642}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.13157894736842105, "obj2": 0.6789376677610677}, {"determining": "( Min( Max( ( AMS - MRS ),Const ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RRSe ) ) - ( Min( MUR ,MLU ) + Min( MUR ,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( CS ,( Min( Max( ( Min( ( MUM + RRSe ) ,MUC ) / RMSe ),( RCSe * ( MUR + CS ) ) ) ,( ( RRSe * ( MUR - RMSe ) ) - Min( DS ,( RRSe + DS ) ) ) ) * ( RRSe * RCSe ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.2597930751343705}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Min( ( CRS - BR ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( CRS - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,RRS ) ) - DDR ) ) ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC + MLU ) * RRSe ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( MUC + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5999631429313661}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014753718704482822}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) - Min( CS ,( Min( ( Min( MUC ,MUR ) * RCSe ) ,RRSe ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.29053116158062486}, {"determining": "( Min( ( DDR * AMS ) ,( ( CRS / FirstVNF_Mem_Server ) - DDR ) ) / ( PN * FirstVNF_RAM ) )", "choosing": "( ( ( DS - ( MLU + ( ( MUR * RMSe ) + MUC ) ) ) * MUR ) - RRSe )", "obj1": 0.6234817813765182, "obj2": 0.273533748092781}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( DDR - Const ) / ( ( PN * MDR ) + FirstVNF_Mem ) ) ,Max( Min( ( Const + AMS ) ,( PN - MDR ) ),( ( MRS - FirstVNF_RAM_Server ) * RRS ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( MLU - Min( RRSe ,MLU ) ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7692307692307693, "obj2": 0.08955923311741618}, {"determining": "( ( ( ( FirstVNF_RAM - RRS ) * ( FirstVNF_CPU_Server / ( ARS + ACS ) ) ) + ( FirstVNF_Mem_Server - PN ) ) / ( ( CRS / ARS ) + ( Max( MRS,ACS ) - MDR ) ) )", "choosing": "( ( ( ( DS - DS ) * ( MUC - DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( Max( MUC,MLU ) / ( RCSe / ( ( Max( MUM,RCSe ) * DS ) * MUC ) ) ) - Min( DS ,MLU ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( FirstVNF_CPU_Server * Max( ( PN / RRS ),AMS ) ),DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( MDR - ( MRS / ACS ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) - Max( RMSe,( CS - DS ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.8927125506072875, "obj2": 0.04424805074389716}, {"determining": "( ( ( PN + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Max( FirstVNF_CPU,( DDR * FirstVNF_CPU_Server ) ) ) / ( ( ( Max( Const,Const ) + ( ( RRS * Const ) * MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Max( ( ( CS + ( MUR * MUC ) ) / RRSe ),DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( Min( CS ,( ( RMSe * MUC ) + Max( RRSe,RCSe ) ) ) ,( MUR + MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_RAM - CRS ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( Max( ( RMSe - CS ),MLU ) * CS ) ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.13157894736842105, "obj2": 0.6789376677610677}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.0056651055063788956}, {"determining": "( Min( ( BR - CRS ) ,( CRS * RRS ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2951684755532113}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( ( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,FirstVNF_CPU ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.9959514170040485, "obj2": 0.0019928116135002295}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02282930911774528}, {"determining": "Min( ( ( Max( RRS,MRS ) * FirstVNF_Mem_Server ) - Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),FirstVNF_Mem ),BR ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( MUR / DS ) / ( ( ( MUR + RCSe ) + MUR ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7732793522267206, "obj2": 0.08775262198560266}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}, {"determining": "Min( ( ( FirstVNF_RAM - CRS ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( Min( MLU ,( RRSe * MUM ) ),MUR ) ) * ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( Max( ( RMSe - CS ),MLU ) * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.742914979757085, "obj2": 0.09905248794980435}, {"determining": "Min( Max( ACS,MRS ) ,( ( ( FirstVNF_CPU_Server - ( ( ( FirstVNF_Mem_Server * ARS ) * Min( Min( ACS ,DDR ) ,PN ) ) - ( Min( ACS ,MDR ) + ARS ) ) ) - ( Max( MRS,ACS ) - CRS ) ) / ( RRS * FirstVNF_CPU ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe + RMSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,RCSe ),DS ) ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) ) )", "obj1": 0.11740890688259109, "obj2": 0.6910952217294378}, {"determining": "Min( ( ARS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( CRS + Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( MUR - RRSe ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + RMSe ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6417004048582996, "obj2": 0.25634646545723894}], "17": [{"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( FirstVNF_CPU_Server - CRS ) - ( Max( Max( FirstVNF_RAM_Server,Max( MDR,( PN - ACS ) ) ),( FirstVNF_CPU / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,( RCSe - ( CS + ( ( DS - CS ) - MUM ) ) ) ) ),RMSe ) - Min( CS ,( ( MLU + ( ( ( MUC / MUR ) - ( CS * Max( MUC,MUR ) ) ) * RMSe ) ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * FirstVNF_Mem ) - ( ( ( ACS + BR ) + ARS ) - PN ) )", "choosing": "Min( ( RRSe * Min( RMSe ,CS ) ) ,( ( MLU * MUM ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RCSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,DS ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7388663967611336, "obj2": 0.10077194542971735}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / Max( CRS,CRS ) ) ) ) / ( FirstVNF_RAM * DDR ) )", "choosing": "Min( ( RCSe + RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MLU + CS ) ) * Min( ( DS + DS ) ,( RCSe + Max( Min( DS ,MUR ),( MUR + ( MLU - ( RCSe - CS ) ) ) ) ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2391543287845214}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RCSe * RRSe ) - RMSe ),Min( MLU ,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.5364372469635628, "obj2": 0.3568915809808972}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.4048582995951417, "obj2": 0.4488434437501784}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "Min( ( ( ARS / Max( BR,FirstVNF_Mem ) ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( ( Max( MRS,ACS ) - CRS ) * FirstVNF_CPU ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,Min( MLU ,RMSe ) ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( MUR / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.08034132824159973}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4954012540170416}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( PN - FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / MUM ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * MUC ) ) - ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.655597910048383}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUR ),CS ) ) ) / ( DS - MUR ) )", "obj1": 0.5101214574898786, "obj2": 0.36687168590822117}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3922893498816849}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( ( MUC - RCSe ),RRSe ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( ( RCSe * RCSe ) - Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.4311740890688259, "obj2": 0.43070028730618504}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ) + ( DS + Max( DS,Max( RMSe,CS ) ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5254745926255985}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.661310604093019}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( ( FirstVNF_CPU / ACS ) * ( FirstVNF_RAM - CRS ) )", "choosing": "( ( MUR - Min( ( RRSe * MUR ) ,( ( MUC - RRSe ) + ( MUM - ( Min( ( MUC / MUR ) ,( MUM / RCSe ) ) / ( DS * MUC ) ) ) ) ) ) / Min( MUM ,MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( AMS * RRS ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Min( CS ,RMSe ) ) - Min( CS ,RMSe ) )", "obj1": 0.1437246963562753, "obj2": 0.6672524785676819}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.42350589851034615}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( Max( Max( Min( FirstVNF_Mem ,ARS ),MRS ),AMS ),DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const * DDR ) ) ) ) ) / ( ( ( MRS * ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUM ),CS ) ) ) / Max( ( RMSe / Max( MUC,( MUM / Min( RMSe ,MUC ) ) ) ),MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.6088408270409893}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02282930911774528}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.917004048582996, "obj2": 0.035773811461435934}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03237426567422182}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5840515455672536}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Min( ( CRS - BR ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( CRS - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,RRS ) ) - DDR ) ) ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC + MLU ) * RRSe ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( MUC + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5999631429313661}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ,( Max( Max( ( ( AMS + Const ) - FirstVNF_Mem_Server ),MRS ),FirstVNF_RAM ) * ( ( FirstVNF_RAM + Max( AMS,( FirstVNF_CPU_Server / Const ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / ( ( MLU - MUR ) - MUR ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( MUC ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( MUC - ( ( ( ( MLU + DS ) - MUR ) * RCSe ) + RRSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( Min( RRSe ,( CS - RCSe ) ) - ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * CS ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9554655870445344, "obj2": 0.017840376472683817}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( Min( MUC ,Max( Max( RMSe,MUR ),CS ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.41434655274890303}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - ( ( AMS * MDR ) + ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUM / ( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ) ) - MUC ) * ( DS - ( ( MUC - Min( DS ,CS ) ) + MLU ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5834431389558975}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08505919504993642}, {"determining": "Min( ( ( ACS + ( ( RRS + PN ) / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6777416739784651}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( ( Max( MDR,ACS ) / ( Max( FirstVNF_CPU,MRS ) - ( ( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / Max( ( RMSe / MUC ),MUR ) ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * RRSe ) ) - ( ( Min( RRSe ,RRSe ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.48130142352919947}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.8906882591093117, "obj2": 0.04639899550712702}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( RMSe / CS ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( ( ( MUC - MUR ) + Min( ( DS - MUC ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.36639676113360325, "obj2": 0.4832422418107208}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - ( Max( MRS,ACS ) - ( Max( Min( Max( FirstVNF_Mem,DDR ) ,( BR * AMS ) ),FirstVNF_CPU_Server ) + DDR ) ) ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6899469107235643}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( FirstVNF_CPU + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.2987696150858471}, {"determining": "( Min( ( BR * CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( FirstVNF_Mem_Server + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / RRS ) ) ) ) ,Min( FirstVNF_RAM ,PN ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( CS,MUM ),( ( CS * Max( Max( Max( ( MUR + MUM ),RCSe ),DS ),( RMSe + ( Min( CS ,MUC ) * Min( RRSe ,RRSe ) ) ) ) ) * CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.2710619129557722}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / PN )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9898785425101214, "obj2": 0.005665105506378895}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2947111927082002}, {"determining": "Min( ( ARS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( CRS + Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( MUR - RRSe ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + RMSe ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "Min( ( BR - FirstVNF_CPU ) ,( ( Const - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM * ( ( DS + Max( DS,Max( RMSe,CS ) ) ) + Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( ( RRSe * CS ) * Min( CS ,RMSe ) ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ) ) ) ,( Min( RRSe ,( Max( MUM,( ( ( CS - CS ) * ( MLU / RCSe ) ) - MUR ) ) - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RRSe ) * ( RRSe * CS ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.5254745926255985}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU - MRS ) * Max( MRS,DDR ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * MUR ) / ( DS - MUR ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( Min( Max( ( AMS - MRS ),Const ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RRSe ) ) - ( Min( MUR ,MLU ) + Min( MUR ,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( CS ,( Min( Max( ( Min( ( MUM + RRSe ) ,MUC ) / RMSe ),( RCSe * ( MUR + CS ) ) ) ,( ( RRSe * ( MUR - RMSe ) ) - Min( DS ,( RRSe + DS ) ) ) ) * ( RRSe * RCSe ) ) ) )", "obj1": 0.6396761133603239, "obj2": 0.2597930751343705}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( DDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( ( Min( Max( CS,MUR ) ,Min( RCSe ,( ( ( ( RCSe - MLU ) - MUR ) - CS ) * MUM ) ) ) * ( CS * CS ) ) - ( RRSe + MUC ) )", "obj1": 0.3481781376518219, "obj2": 0.4941978381632288}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RCSe ) ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.41700404858299595, "obj2": 0.4420315036476587}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014753718704482822}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( ( Max( RRS,MRS ) * FirstVNF_Mem_Server ) - Max( Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),FirstVNF_Mem ),BR ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / RRS ),PN ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( MUR / DS ) / ( ( ( MUR + RCSe ) + MUR ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7732793522267206, "obj2": 0.08775262198560266}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.41434655274890303}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( DDR - Const ) / ( ( PN * MDR ) + FirstVNF_Mem ) ) ,Max( Min( ( Const + AMS ) ,( PN - MDR ) ),( ( MRS - FirstVNF_RAM_Server ) * RRS ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( MLU - Min( RRSe ,MLU ) ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7692307692307693, "obj2": 0.08955923311741618}, {"determining": "( ( ( PN + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Max( FirstVNF_CPU,( DDR * FirstVNF_CPU_Server ) ) ) / ( ( ( Max( Const,Const ) + ( ( RRS * Const ) * MDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( ( ( DS - MUC ) * Max( ( ( CS + ( MUR * MUC ) ) / RRSe ),DS ) ) + Max( CS,Min( RMSe ,RMSe ) ) ) - Min( Min( CS ,( ( RMSe * MUC ) + Max( RRSe,RCSe ) ) ) ,( MUR + MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6026566715566819}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6133603238866396, "obj2": 0.2842349427262918}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( Max( CS,MLU ) - Min( CS ,( ( ( DS / MLU ) * ( RRSe * ( MLU - MUM ) ) ) + MUR ) ) )", "obj1": 0.7510121457489879, "obj2": 0.09704188310270857}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}], "18": [{"determining": "( Min( ACS ,MDR ) * ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( BR / ACS ) ) ,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( Max( MLU,( ( ( ( ( CS * RRSe ) * MLU ) - RMSe ) - RCSe ) / MUR ) ) / CS ) - ( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( FirstVNF_CPU_Server - CRS ) - ( Max( Max( FirstVNF_RAM_Server,Max( MDR,( PN - ACS ) ) ),( FirstVNF_CPU / FirstVNF_RAM ) ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,( RCSe - ( CS + ( ( DS - CS ) - MUM ) ) ) ) ),RMSe ) - Min( CS ,( ( MLU + ( ( ( MUC / MUR ) - ( CS * Max( MUC,MUR ) ) ) * RMSe ) ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / Max( CRS,CRS ) ) ) ) / ( FirstVNF_RAM * DDR ) )", "choosing": "Min( ( RCSe + RMSe ) ,( Min( Min( MUR ,RCSe ) ,( MLU + CS ) ) * Min( ( DS + DS ) ,( RCSe + Max( Min( DS ,MUR ),( MUR + ( MLU - ( RCSe - CS ) ) ) ) ) ) ) )", "obj1": 0.6720647773279352, "obj2": 0.2391543287845214}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RCSe * RRSe ) - RMSe ),Min( MLU ,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.5364372469635628, "obj2": 0.3568915809808972}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( ( ARS / Max( BR,FirstVNF_Mem ) ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( ( Max( MRS,ACS ) - CRS ) * FirstVNF_CPU ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,Min( MLU ,RMSe ) ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( MUR / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.08034132824159973}, {"determining": "Min( ( Max( MDR,ACS ) / ( Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server - ACS ) + FirstVNF_RAM ) ) / ( ( ( AMS * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) - ( ( ( MDR - Const ) / ( ( DDR - AMS ) / ARS ) ) - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( MLU / DS ) / ( RCSe - Max( RRSe,MUC ) ) ) ),( RMSe - MUC ) ) + ( DS + Max( Max( RMSe,CS ),DS ) ) ) ) ,( Min( RRSe ,( RMSe - CS ) ) * ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( RMSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.340080971659919, "obj2": 0.5183111174910838}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( PN - FirstVNF_Mem_Server ) ) / FirstVNF_RAM ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / MUM ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * MUC ) ) - ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.1680161943319838, "obj2": 0.655597910048383}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU + Min( ( BR - FirstVNF_Mem ) ,( RRS / RRS ) ) ) ) / ( Const - FirstVNF_RAM_Server ) ) / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) )", "choosing": "( ( ( RCSe * MUM ) * MUR ) / ( DS - MUR ) )", "obj1": 0.5101214574898786, "obj2": 0.3662261754389884}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( ( MUC - RCSe ),RRSe ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( ( RCSe * RCSe ) - Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.4311740890688259, "obj2": 0.43070028730618504}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 0.5566801619433198, "obj2": 0.3243880710251861}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( MRS,ACS ) - MDR ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( ( ( ( MUC * MUM ) * CS ) * CS ) / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ARS - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4473684210526316, "obj2": 0.42350589851034615}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( RCSe / RMSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3922893498816849}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Min( Const ,AMS ) ,( PN - MDR ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( ( MUR + RCSe ) * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.10155822121184538}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4954012540170416}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( Max( Max( Min( FirstVNF_Mem ,ARS ),MRS ),AMS ),DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const * DDR ) ) ) ) ) / ( ( ( MRS * ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUM ),CS ) ) ) / Max( ( RMSe / Max( MUC,( MUM / Min( RMSe ,MUC ) ) ) ),MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.6088408270409893}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUM ) / ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.917004048582996, "obj2": 0.035773811461435934}, {"determining": "Min( ( ( Const - DDR ) / ( BR - PN ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( Max( DDR,PN ) - Min( RRS ,AMS ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.48380566801619435, "obj2": 0.3750880615551274}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( Max( MDR,ACS ) + ( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,BR ) ) ) + ( PN - MDR ) ) - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( MDR / MDR ) ) )", "choosing": "Min( Max( ( Max( ( ( MUM / Min( MLU ,( RRSe * MUM ) ) ) * CS ),( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),( ( MUR / DS ) / ( ( RRSe + DS ) - ( MUR - ( ( ( RMSe - RMSe ) / Max( DS,RCSe ) ) / RCSe ) ) ) ) ) ,Min( RMSe ,CS ) )", "obj1": 0.4493927125506073, "obj2": 0.41294190378205636}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5840515455672536}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - ( Max( MRS,ACS ) - ( Max( Min( Max( FirstVNF_Mem,DDR ) ,( BR * AMS ) ),FirstVNF_CPU_Server ) + DDR ) ) ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6899469107235643}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Min( ( CRS - BR ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( CRS - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,RRS ) ) - DDR ) ) ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC + MLU ) * RRSe ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( MUC + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5999631429313661}, {"determining": "Min( ( ( ACS + ( ( RRS + PN ) / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6777416739784651}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( ( AMS * FirstVNF_Mem ) - ( PN - ( RRS * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - ARS ) ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RMSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( MUM * MUM ) + CS ) ) ) - ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.7081094873369491}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Max( Max( ( ( AMS + Const ) - DDR ),MRS ),FirstVNF_RAM ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( Min( ( BR * CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( FirstVNF_Mem_Server + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / RRS ) ) ) ) ,Min( FirstVNF_RAM ,PN ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( CS,MUM ),( ( CS * Max( Max( Max( ( MUR + MUM ),RCSe ),DS ),( RMSe + ( Min( CS ,MUC ) * Min( RRSe ,RRSe ) ) ) ) ) * CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.2710619129557722}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( Min( RRSe ,( CS - RCSe ) ) - ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * CS ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9554655870445344, "obj2": 0.017840376472683817}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.40679453783765984}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - ( ( AMS * MDR ) + ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUM / ( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ) ) - MUC ) * ( DS - ( ( MUC - Min( DS ,CS ) ) + MLU ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5834431389558975}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( Max( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) / Min( MUM ,RRSe ) ),Max( MLU,RMSe ) ) ,( Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.9433198380566802, "obj2": 0.02282930911774528}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03237426567422182}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2947111927082002}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( ( Max( MDR,ACS ) / ( Max( FirstVNF_CPU,MRS ) - ( ( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / Max( ( RMSe / MUC ),MUR ) ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * RRSe ) ) - ( ( Min( RRSe ,RRSe ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.48130142352919947}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( ( ( MUC - MUR ) + Min( ( DS - MUC ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.36639676113360325, "obj2": 0.4832422418107208}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( AMS - Max( BR,DDR ) ) - ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,MDR ),FirstVNF_Mem ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( Max( ( ( ( MUM * RCSe ) + ( ( RMSe / MUM ) + DS ) ) / CS ),MUR ) / Max( Max( ( Max( Max( RRSe,RMSe ),Min( MUC ,DS ) ) * ( ( DS / DS ) / ( RCSe - RRSe ) ) ),( RMSe - MUC ) ),MUR ) ) / DS ) - ( MUR / MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.3993469220903257}, {"determining": "Min( ( Max( MDR,Max( MDR,( MRS - MDR ) ) ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,PN ) - CRS ) + RRS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( MUM + ( RMSe / CS ) ) ) ,( ( RRSe - ( CS - RCSe ) ) * ( ( DS + ( ( DS * ( ( MLU * MLU ) * Min( CS ,RMSe ) ) ) * Min( ( ( RMSe - RRSe ) * MUM ) ,MLU ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.40335044481425014}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.7005790378686}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6643423391413779}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08505919504993642}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.8866396761133604, "obj2": 0.0477784685393014}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( ( BR * ( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),FirstVNF_RAM_Server ),MDR ) / FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) / ( ( MUM + RRSe ) + MUM ) ) ) ) ,( RCSe * MLU ) ) + ( ( MUR / ( DS + ( ( DS * ( ( RCSe / RMSe ) * Min( CS ,RMSe ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ) / ( MUR * MUC ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7136920582806371}, {"determining": "Min( ( ARS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( CRS + Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( MUR - RRSe ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + RMSe ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.661310604093019}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( RCSe - MLU ) - ( MUR - Min( ( MUR - CS ) ,MLU ) ) )", "obj1": 0.8906882591093117, "obj2": 0.04639899550712702}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "( ( ( ( MDR / Const ) * ( PN - ( ACS + ( FirstVNF_CPU_Server / Max( DDR,Min( RRS ,PN ) ) ) ) ) ) + FirstVNF_RAM ) / ( MRS + RRS ) )", "choosing": "( ( ( MUC - ( MUC * Max( ( MUM * Min( RMSe ,RMSe ) ),RCSe ) ) ) * DS ) - ( MUC - Max( Min( MUR ,CS ),MLU ) ) )", "obj1": 0.9412955465587044, "obj2": 0.027734736241765284}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.16194331983805668, "obj2": 0.6607980965216704}, {"determining": "( Min( ( BR - CRS ) ,Min( ( PN - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RRSe ) ) - ( Min( MUR ,MLU ) + Min( MUR ,MUR ) ) ),( RMSe + ( Min( RCSe ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.9919028340080972, "obj2": 0.004328900861686451}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( RRSe,( MUC - RCSe ) ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.41700404858299595, "obj2": 0.4420315036476587}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1417004048582996, "obj2": 0.668028520178598}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( AMS ,( ARS + Min( ( RRS + PN ) ,( ACS + MRS ) ) ) ) ,( PN - ACS ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - Min( ( PN + Const ) ,( ARS * MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,RCSe ) * ( RCSe - RRSe ) ) + CS ) - MUM ) - ( CS / MUR ) )", "obj1": 0.742914979757085, "obj2": 0.09929581557143102}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}], "19": [{"determining": "Min( ( Max( MDR,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,ARS ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - ( ( MUC * MUM ) * CS ) ) * Min( MUC ,RMSe ) ) ) + RMSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,MDR ) * ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( BR / ACS ) ) ,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( Max( MLU,( ( ( ( ( CS * RRSe ) * MLU ) - RMSe ) - RCSe ) / MUR ) ) / CS ) - ( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RCSe * RRSe ) - RMSe ),Min( MLU ,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.5364372469635628, "obj2": 0.3568915809808972}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.498700202553334}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( Max( ACS,MDR ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_RAM * MDR ),ARS ) + ( MRS / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( CS / ( Max( DS,( Min( MUM ,( RMSe / MUC ) ) * ( RCSe + MUM ) ) ) / MLU ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5698697872907024}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.07755606171192368}, {"determining": "Min( ( AMS * Const ) ,Min( ( AMS + Const ) ,( ( RRS + Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,CRS ) ) / Min( Max( CRS,CRS ) ,( PN * ( ( ( Const - ARS ) / MDR ) - PN ) ) ) ) ) )", "choosing": "( ( RCSe / ( RCSe + Max( Min( DS ,Min( CS ,RMSe ) ),( MUR + ( MLU - Max( Max( RRSe,MUM ),RMSe ) ) ) ) ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUM + CS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6545421791269227}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( ( ( FirstVNF_CPU - ( FirstVNF_CPU + Min( ( BR - FirstVNF_Mem ) ,( RRS / RRS ) ) ) ) / ( Const - FirstVNF_RAM_Server ) ) / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) )", "choosing": "( ( ( RCSe * MUM ) * MUR ) / ( DS - MUR ) )", "obj1": 0.5101214574898786, "obj2": 0.3662261754389884}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 0.5566801619433198, "obj2": 0.3243880710251861}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( AMS / FirstVNF_RAM ) * ( DDR - ( PN / ( BR * ( FirstVNF_RAM / Const ) ) ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,Max( ( RMSe / CS ),MLU ) ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.38466168726801375}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2947111927082002}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.40679453783765984}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( Max( Max( Min( FirstVNF_Mem ,ARS ),MRS ),AMS ),DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const * DDR ) ) ) ) ) / ( ( ( MRS * ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUM ),CS ) ) ) / Max( ( RMSe / Max( MUC,( MUM / Min( RMSe ,MUC ) ) ) ),MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.6088408270409893}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "Min( ( CRS + Min( ( Min( AMS ,( ARS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) + ( ARS * Min( MDR ,FirstVNF_Mem ) ) ) ,( ACS * MRS ) ) ) ,( MDR * Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * MUC ) / ( ( ( ( MUC - RCSe ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( ( RRSe / RCSe ) / ( ( ( MUC * MUM ) * CS ) * RRSe ) ) * MUR ) ),MUM ) ,( ( ( ( RRSe - RRSe ) * DS ) / Max( RMSe,RMSe ) ) * ( ( DS + ( ( MLU * ( MUM * ( MUC / RMSe ) ) ) / ( MUM / ( RRSe + MLU ) ) ) ) * ( RCSe + RMSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( ( FirstVNF_RAM - Const ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( CS,RRSe ),MUM ),( Min( CS ,Max( ( Max( ( MUC - RCSe ),RRSe ) - ( Min( MUR ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( ( RCSe * RCSe ) - Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.4311740890688259, "obj2": 0.43070028730618504}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - ( Max( MRS,ACS ) - ( Max( Min( Max( FirstVNF_Mem,DDR ) ,( BR * AMS ) ),FirstVNF_CPU_Server ) + DDR ) ) ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6899469107235643}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( ( ( ACS + ( ( RRS + PN ) / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6777416739784651}, {"determining": "Min( ( ( ( Max( Min( FirstVNF_Mem ,( BR - RRS ) ),Min( Max( PN,FirstVNF_CPU ) ,PN ) ) + CRS ) - Min( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) / Max( MDR,ACS ) ) ,( ( RRS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR * ( CS + ( RMSe / CS ) ) ) ,( Min( ( RCSe - CS ) ,RRSe ) * ( ( RRSe + ( ( DS * ( DS / MUM ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.42648003582007493}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4954012540170416}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5840515455672536}, {"determining": "( Min( ( BR * CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( FirstVNF_Mem_Server + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / RRS ) ) ) ) ,Min( FirstVNF_RAM ,PN ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( CS,MUM ),( ( CS * Max( Max( Max( ( MUR + MUM ),RCSe ),DS ),( RMSe + ( Min( CS ,MUC ) * Min( RRSe ,RRSe ) ) ) ) ) * CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.2710619129557722}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "Min( ( Max( MDR,ACS ) + ( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,BR ) ) ) + ( PN - MDR ) ) - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( MDR / MDR ) ) )", "choosing": "Min( Max( ( Max( ( ( MUM / Min( MLU ,( RRSe * MUM ) ) ) * CS ),( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),( ( MUR / DS ) / ( ( RRSe + DS ) - ( MUR - ( ( ( RMSe - RMSe ) / Max( DS,RCSe ) ) / RCSe ) ) ) ) ) ,Min( RMSe ,CS ) )", "obj1": 0.4493927125506073, "obj2": 0.41294190378205636}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.612461243665602}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - ( ( AMS * MDR ) + ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUM / ( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ) ) - MUC ) * ( DS - ( ( MUC - Min( DS ,CS ) ) + MLU ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5834431389558975}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) / ( Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.037674449947106524}, {"determining": "Min( Min( ( MDR - Max( ( ( FirstVNF_Mem / ACS ) - RRS ),ACS ) ) ,( FirstVNF_RAM / ARS ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( Max( RMSe,MUR ),CS ) / ( ( RRSe + DS ) - ( MUR - MUM ) ) ) ,Max( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ),CS ) )", "obj1": 0.4473684210526316, "obj2": 0.41947685860189293}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03237426567422182}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( BR * PN ) / ( ACS + ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( RCSe,RCSe ) - ( Min( CS ,RCSe ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5990669964690869}, {"determining": "Min( ( Max( MDR,ACS ) / ( Max( FirstVNF_CPU,MRS ) - ( ( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / Max( ( RMSe / MUC ),MUR ) ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * RRSe ) ) - ( ( Min( RRSe ,RRSe ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.48130142352919947}, {"determining": "( ( ( ( ( ( AMS * DDR ) + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) - FirstVNF_CPU ) - ( Min( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( ( AMS / CRS ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( FirstVNF_RAM ,ARS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ) * Max( PN,( ACS / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe - ( RCSe / ( CS / MUC ) ) ) + ( CS / MLU ) )", "obj1": 0.058704453441295545, "obj2": 0.7545461268795975}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1417004048582996, "obj2": 0.668028520178598}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6643423391413779}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU / ( FirstVNF_RAM - ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( MUM / ( ( RMSe / CS ) - MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) * ( Min( ( MLU / MUC ) ,( MUM * ( ( Max( RCSe,MUC ) * ( MUM - RCSe ) ) / RRSe ) ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.5819162493035199}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - Min( Max( MRS,( MDR - FirstVNF_RAM_Server ) ) ,PN ) ) ,( DDR / MDR ) ) ) / ( ( RRS / FirstVNF_RAM ) * ( Const + FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( Min( Max( MUR,RCSe ) ,( CS - MLU ) ) * Min( ( DS + RCSe ) ,( RCSe + Max( ( CS / Max( CS,( RRSe * RRSe ) ) ),Min( DS ,MUR ) ) ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2552080866228826}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( Min( ( BR - CRS ) ,( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( Max( RMSe,MUM ),( Min( CS ,Max( ( CS - Min( MUC ,RMSe ) ),( RMSe + ( Min( RCSe ,MUC ) * Min( RRSe ,MUC ) ) ) ) ) * CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6396761133603239, "obj2": 0.2597930751343705}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( Min( RRSe ,( CS - RCSe ) ) - ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * CS ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9554655870445344, "obj2": 0.017840376472683817}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,BR ) ,( ( ( Max( Max( AMS,DDR ),Max( MDR,( PN - ACS ) ) ) - DDR ) / ( ( FirstVNF_CPU * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * RRS ) ) / ( FirstVNF_CPU_Server - ( ( DDR - FirstVNF_CPU ) * Max( ARS,( Max( MRS,FirstVNF_CPU ) + MDR ) ) ) ) ) ) / ( FirstVNF_RAM * ( ( PN - PN ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( Min( ( DS - MUC ) ,( MUC - DS ) ) - Min( RMSe ,( MUM * Min( Min( ( MUR * CS ) ,Max( MUR,CS ) ) ,( RRSe * DS ) ) ) ) ),RMSe ) - Min( CS ,( ( MUR * ( ( RMSe + MLU ) * CS ) ) - MUM ) ) )", "obj1": 0.6194331983805668, "obj2": 0.27566556619433175}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( PN,RRS ) - Min( ACS ,( ( ( MRS - PN ) - FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ) ) ) ,( ( ( BR * ( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),FirstVNF_RAM_Server ),MDR ) / FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Min( Max( MUC,( ( RMSe / MUM ) + ( ( ( Min( RCSe ,CS ) - Max( DS,MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) / ( ( MUM + RRSe ) + MUM ) ) ) ) ,( RCSe * MLU ) ) + ( ( MUR / ( DS + ( ( DS * ( ( RCSe / RMSe ) * Min( CS ,RMSe ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ) / ( MUR * MUC ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7136920582806371}, {"determining": "Min( ( ARS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( CRS + Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( MUR - RRSe ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + RMSe ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.5805608147942702}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08505919504993642}, {"determining": "Min( ( ( Const - DDR ) / ( BR - PN ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( Max( DDR,PN ) - Min( RRS ,AMS ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.48380566801619435, "obj2": 0.3750880615551274}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "Min( ( ( ( ACS - CRS ) + ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( MLU - Max( MUM,DS ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR / RCSe ) + MUM ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.706072336630517}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.15789473684210525, "obj2": 0.661310604093019}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( MDR / ARS ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * ( ( DDR + MDR ) / Max( DDR,MDR ) ) ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( ( MUM / MUC ) + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.022090659234970215}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + Min( ( CRS - BR ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( CRS - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU ,RRS ) ) - DDR ) ) ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUC + MLU ) * RRSe ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( ( MUC + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.5999631429313661}, {"determining": "( ( ( ( MDR / Const ) * ( PN - ( ACS + ( FirstVNF_CPU_Server / Max( DDR,Min( RRS ,PN ) ) ) ) ) ) + FirstVNF_RAM ) / ( MRS + RRS ) )", "choosing": "( ( ( MUC - ( MUC * Max( ( MUM * Min( RMSe ,RMSe ) ),RCSe ) ) ) * DS ) - ( MUC - Max( Min( MUR ,CS ),MLU ) ) )", "obj1": 0.9412955465587044, "obj2": 0.027734736241765284}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( AMS ,( ARS + Min( ( RRS + PN ) ,( ACS + MRS ) ) ) ) ,( PN - ACS ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - Min( ( PN + Const ) ,( ARS * MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,RCSe ) * ( RCSe - RRSe ) ) + CS ) - MUM ) - ( CS / MUR ) )", "obj1": 0.742914979757085, "obj2": 0.09929581557143102}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( ( ( MUC - MUR ) + Min( ( DS - MUC ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ,RMSe ) )", "obj1": 0.3643724696356275, "obj2": 0.4850618150516594}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}], "20": [{"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( MDR,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,ARS ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - ( ( MUC * MUM ) * CS ) ) * Min( MUC ,RMSe ) ) ) + RMSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,( RRSe / MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40686025236713036}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RCSe * RRSe ) - RMSe ),Min( MLU ,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.5364372469635628, "obj2": 0.3568915809808972}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.498700202553334}, {"determining": "( PN / ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU + FirstVNF_RAM ) - Max( RRS,PN ) ) ) ) )", "choosing": "( Max( DS,MUR ) - Min( CS ,RMSe ) )", "obj1": 0.38461538461538464, "obj2": 0.47733338288541743}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.07755606171192368}, {"determining": "Min( ( Max( ACS,MDR ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_RAM * MDR ),ARS ) + ( MRS / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( CS / ( Max( DS,( Min( MUM ,( RMSe / MUC ) ) * ( RCSe + MUM ) ) ) / MLU ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.5698697872907024}, {"determining": "Min( ( CRS + Min( ( Min( AMS ,( ARS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) + ( ARS * Min( MDR ,FirstVNF_Mem ) ) ) ,( ACS * MRS ) ) ) ,( MDR * Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * MUC ) / ( ( ( ( MUC - RCSe ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( ( RRSe / RCSe ) / ( ( ( MUC * MUM ) * CS ) * RRSe ) ) * MUR ) ),MUM ) ,( ( ( ( RRSe - RRSe ) * DS ) / Max( RMSe,RMSe ) ) * ( ( DS + ( ( MLU * ( MUM * ( MUC / RMSe ) ) ) / ( MUM / ( RRSe + MLU ) ) ) ) * ( RCSe + RMSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.40679453783765984}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( ARS - FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_Mem_Server * ( Min( CRS ,PN ) / MDR ) ) - ACS ) + FirstVNF_Mem_Server ) / ( ( ACS * DDR ) + Const ) ) )", "choosing": "( ( DS - MUR ) / ( RRSe + ( ( ( ( MUM - Max( Max( RMSe,RRSe ),Min( RRSe ,RCSe ) ) ) - RCSe ) / ( Max( CS,RRSe ) - RRSe ) ) / CS ) ) )", "obj1": 0.5101214574898786, "obj2": 0.36354652288338035}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 0.5566801619433198, "obj2": 0.3243880710251861}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( AMS / FirstVNF_RAM ) * ( DDR - ( PN / ( BR * ( FirstVNF_RAM / Const ) ) ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,Max( ( RMSe / CS ),MLU ) ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.38466168726801375}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6643423391413779}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( MLU,RMSe ) - Min( CS ,( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.2947111927082002}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( AMS + ( MRS * PN ) ) ,( ( AMS + ( ( FirstVNF_Mem * FirstVNF_Mem ) / MRS ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - PN ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Min( Max( ( Max( MUC,MUR ) - DS ),RCSe ) ,MUR ) ) - Max( ( ( MLU + RCSe ) - Max( RCSe,( CS / ( ( ( MUM - RCSe ) * CS ) * Max( Max( MUC,MUC ),MUC ) ) ) ) ),Max( CS,MUR ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5795803616077266}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) / ( Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.037674449947106524}, {"determining": "Min( ( Min( MDR ,Max( ( ( MDR * MRS ) / FirstVNF_CPU ),FirstVNF_RAM ) ) / ( Min( CRS ,( ( ( PN * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( ARS ,Min( FirstVNF_Mem ,MDR ) ) + Max( FirstVNF_RAM,( Const - FirstVNF_CPU ) ) ) ) ) - ( PN - RRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Max( RCSe,MUC ) - Max( ( ( RCSe + ( ( MUC - RRSe ) * Min( MUC ,Min( MUC ,MUR ) ) ) ) + MLU ),CS ) )", "obj1": 0.11133603238866396, "obj2": 0.6932253805809465}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( MDR,FirstVNF_CPU ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) + MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( ( ( RCSe - CS ) / MLU ) * CS ) ) ) * ( Min( RMSe ,CS ) * ( MUC + ( ( RRSe + Max( RCSe,RMSe ) ) / ( RMSe / CS ) ) ) ) ) / ( ( ( Min( Max( CS,RRSe ) ,( ( MUM * RCSe ) * RRSe ) ) + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( ( MUM / MLU ) - CS ) )", "obj1": 0.888663967611336, "obj2": 0.04689399324475029}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( Min( FirstVNF_CPU ,Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * ( ( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( MDR / MRS ) ,ARS ) ) * Max( DDR,FirstVNF_Mem_Server ) ) ) ) ) / ( BR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( DS * RRSe ) - RMSe ) + CS ) / ( CS / ( ( ( CS * RRSe ) * Min( MUM ,Max( MUC,( MUC - MUR ) ) ) ) * ( RCSe / RMSe ) ) ) ) - ( ( Max( ( RMSe - ( MUC - ( ( CS / CS ) * RRSe ) ) ),( MUM - ( CS + Max( ( MUM - MUC ),CS ) ) ) ) / MLU ) + Min( ( ( DS + ( MLU - ( MUR + ( RMSe + MUM ) ) ) ) + MUC ) ,RMSe ) ) )", "obj1": 0.9777327935222672, "obj2": 0.00925565870911773}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - ( Max( MRS,ACS ) - ( Max( Min( Max( FirstVNF_Mem,DDR ) ,( BR * AMS ) ),FirstVNF_CPU_Server ) + DDR ) ) ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6899469107235643}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( ( ( MDR / ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_Mem * AMS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Min( Min( MUM ,( CS + ( MUR / Max( RMSe,( CS + ( Max( MUR,CS ) / DS ) ) ) ) ) ) ,( ( ( RRSe + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) * Min( ( RCSe - CS ) ,RRSe ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5407271219892857}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6756993233462557}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4954012540170416}, {"determining": "Min( ( Max( MDR,ACS ) / ( Max( FirstVNF_CPU,MRS ) - ( ( ( ( PN - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / ( ( Max( MRS,ACS ) - CRS ) + ( FirstVNF_RAM / ARS ) ) ) * CRS ) ) ) ,( ( ( FirstVNF_Mem * ( CRS / FirstVNF_RAM_Server ) ) - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUR + RRSe ) * ( MUM / Max( ( RMSe / MUC ),MUR ) ) ) - ( RRSe + Min( ( DS - RCSe ) ,( MUM / ( RCSe - MUR ) ) ) ) ) + MUC ) - ( Max( RCSe,Min( ( Min( MLU ,MLU ) * ( ( MUR - MLU ) - ( MUR + RMSe ) ) ) ,MUR ) ) * RRSe ) ) - ( ( Min( RRSe ,RRSe ) + Max( MLU,MUC ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.37044534412955465, "obj2": 0.48130142352919947}, {"determining": "Min( ( ( ( ACS - CRS ) + ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( MLU - Max( MUM,DS ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR / RCSe ) + MUM ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.706072336630517}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5840515455672536}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( Max( Max( Min( FirstVNF_Mem ,ARS ),MRS ),AMS ),DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const * DDR ) ) ) ) ) / ( ( ( MRS * ACS ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( MUM * Min( MUC ,Max( Max( RMSe,MUM ),CS ) ) ) / Max( ( RMSe / Max( MUC,( MUM / Min( RMSe ,MUC ) ) ) ),MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.6088408270409893}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / ( MRS + FirstVNF_CPU ) )", "choosing": "( ( Max( CS,Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) ) - ( ( Max( RRSe,DS ) + Max( RRSe,MUC ) ) + Max( ( ( CS / Max( RRSe,RCSe ) ) / MLU ),( MUC + CS ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6117922889323909}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) - MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( MUM * ( ( ( Max( ( CS / MUC ),MUC ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( Min( RRSe ,( RCSe - CS ) ) - ( ( DS + ( ( DS * ( ( RMSe * CS ) * CS ) ) * ( RCSe / RMSe ) ) ) * ( DS + ( ( RRSe + MUM ) * Max( MLU,MUC ) ) ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.03237426567422182}, {"determining": "( ( BR * PN ) / ( ACS + ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( RCSe,RCSe ) - ( Min( CS ,RCSe ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5990669964690869}, {"determining": "( AMS * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUR ) / ( ( MLU - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7514892367933046}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( Min( RRSe ,( CS - RCSe ) ) - ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * CS ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9554655870445344, "obj2": 0.017840376472683817}, {"determining": "( ( ( ( MDR / Const ) * ( PN - ( ACS + ( FirstVNF_CPU_Server / Max( DDR,Min( RRS ,PN ) ) ) ) ) ) + FirstVNF_RAM ) / ( MRS + RRS ) )", "choosing": "( ( ( MUC - ( MUC * Max( ( MUM * Min( RMSe ,RMSe ) ),RCSe ) ) ) * DS ) - ( MUC - Max( Min( MUR ,CS ),MLU ) ) )", "obj1": 0.9412955465587044, "obj2": 0.027734736241765284}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) - RRS ) + Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( DS / MUR ) / ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9878542510121457, "obj2": 0.0052720192046034255}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( AMS ,( ARS + Min( ( RRS + PN ) ,( ACS + MRS ) ) ) ) ,( PN - ACS ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - Min( ( PN + Const ) ,( ARS * MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,RCSe ) * ( RCSe - RRSe ) ) + CS ) - MUM ) - ( CS / MUR ) )", "obj1": 0.742914979757085, "obj2": 0.09929581557143102}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( ( ( MUC - MUR ) + Min( ( DS - MUC ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ,RMSe ) )", "obj1": 0.3643724696356275, "obj2": 0.4850618150516594}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1417004048582996, "obj2": 0.668028520178598}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - ( ( AMS * MDR ) + ARS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( ( MUM / ( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ) ) - MUC ) * ( DS - ( ( MUC - Min( DS ,CS ) ) + MLU ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.24493927125506074, "obj2": 0.5834431389558975}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08505359303635496}, {"determining": "Min( ( ( Const - DDR ) / ( BR - PN ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( Max( DDR,PN ) - Min( RRS ,AMS ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.48380566801619435, "obj2": 0.3750880615551274}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0023443438317577166}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,( PN - ARS ) ) + ARS ) ) ) ,( MDR / ( ( FirstVNF_Mem + Const ) - FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( MUC ,RCSe ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),RCSe ) )", "obj1": 0.5890688259109311, "obj2": 0.3044157995372541}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( MDR / ARS ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * ( ( DDR + MDR ) / Max( DDR,MDR ) ) ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( ( MUM / MUC ) + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.022090659234970215}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( Max( RRS,( AMS + ( Min( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,MDR ) ,PN ) / BR ) ) ) - ( AMS - AMS ) ) )", "choosing": "( ( Min( ( MLU - MUR ) ,Min( RCSe ,( Max( RCSe,RCSe ) * RRSe ) ) ) * ( CS * CS ) ) - ( CS + ( ( RMSe - RCSe ) - RMSe ) ) )", "obj1": 0.18218623481781376, "obj2": 0.6277745612657569}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2548388982550077}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.275329735210682}, {"determining": "Min( ( Max( MDR,ACS ) / ( FirstVNF_RAM - Min( MRS ,( RRS * FirstVNF_RAM ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - ( ( CS - DS ) - MLU ) ) ) ) / Min( MUM ,RRSe ) ),Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ) ) ,( ( ( DS + DS ) * ( DS + CS ) ) * Min( Min( MUR ,RCSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6045692347808694}], "21": [{"determining": "Min( ( CRS + FirstVNF_RAM ) ,( FirstVNF_Mem * ( PN - ACS ) ) )", "choosing": "Min( ( ( MUM + ( MLU / CS ) ) * MUM ) ,Min( DS ,( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RCSe * RRSe ) - RMSe ),Min( MLU ,MUM ) ) - Min( CS ,RMSe ) )", "obj1": 0.5364372469635628, "obj2": 0.3568915809808972}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.07755606171192368}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5652111008278919}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( ARS - FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_Mem_Server * ( Min( CRS ,PN ) / MDR ) ) - ACS ) + FirstVNF_Mem_Server ) / ( ( ACS * DDR ) + Const ) ) )", "choosing": "( ( DS - MUR ) / ( RRSe + ( ( ( ( MUM - Max( Max( RMSe,RRSe ),Min( RRSe ,RCSe ) ) ) - RCSe ) / ( Max( CS,RRSe ) - RRSe ) ) / CS ) ) )", "obj1": 0.5101214574898786, "obj2": 0.36354652288338035}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.503325034114658}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 0.5566801619433198, "obj2": 0.3243880710251861}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "( ( BR * PN ) / ( ACS + ( FirstVNF_RAM + MDR ) ) )", "choosing": "( Max( RCSe,RCSe ) - ( Min( CS ,RCSe ) + Max( Max( RCSe,MUC ),( MUC + CS ) ) ) )", "obj1": 0.23481781376518218, "obj2": 0.5990669964690869}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( AMS / FirstVNF_RAM ) * ( DDR - ( PN / ( BR * ( FirstVNF_RAM / Const ) ) ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,Max( ( RMSe / CS ),MLU ) ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.38466168726801375}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6037135462736718}, {"determining": "Min( ( CRS + Min( ( Min( AMS ,( ARS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) + ( ARS * Min( MDR ,FirstVNF_Mem ) ) ) ,( ACS * MRS ) ) ) ,( MDR * Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * MUC ) / ( ( ( ( MUC - RCSe ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( ( RRSe / RCSe ) / ( ( ( MUC * MUM ) * CS ) * RRSe ) ) * MUR ) ),MUM ) ,( ( ( ( RRSe - RRSe ) * DS ) / Max( RMSe,RMSe ) ) * ( ( DS + ( ( MLU * ( MUM * ( MUC / RMSe ) ) ) / ( MUM / ( RRSe + MLU ) ) ) ) * ( RCSe + RMSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( AMS + ( MRS * PN ) ) ,( ( AMS + ( ( FirstVNF_Mem * FirstVNF_Mem ) / MRS ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - PN ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Min( Max( ( Max( MUC,MUR ) - DS ),RCSe ) ,MUR ) ) - Max( ( ( MLU + RCSe ) - Max( RCSe,( CS / ( ( ( MUM - RCSe ) * CS ) * Max( Max( MUC,MUC ),MUC ) ) ) ) ),Max( CS,MUR ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5795803616077266}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( MDR,FirstVNF_CPU ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) + MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( ( ( RCSe - CS ) / MLU ) * CS ) ) ) * ( Min( RMSe ,CS ) * ( MUC + ( ( RRSe + Max( RCSe,RMSe ) ) / ( RMSe / CS ) ) ) ) ) / ( ( ( Min( Max( CS,RRSe ) ,( ( MUM * RCSe ) * RRSe ) ) + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( ( MUM / MLU ) - CS ) )", "obj1": 0.888663967611336, "obj2": 0.04689399324475029}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem / ( Const / FirstVNF_RAM_Server ) ) ) - ( MDR / MDR ) ) * PN ) )", "choosing": "( ( Min( RRSe ,( CS - RCSe ) ) * Max( CS,Min( ( Min( CS ,RRSe ) * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6549413465175837}, {"determining": "Min( ( ( MDR / ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_Mem * AMS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Min( Min( MUM ,( CS + ( MUR / Max( RMSe,( CS + ( Max( MUR,CS ) / DS ) ) ) ) ) ) ,( ( ( RRSe + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) * Min( ( RCSe - CS ) ,RRSe ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5407271219892857}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6756993233462557}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4954012540170416}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5840515455672536}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6643423391413779}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( Min( RRSe ,( CS - RCSe ) ) - ( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / ( MUC - DS ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * CS ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9554655870445344, "obj2": 0.017840376472683817}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem * ( ARS / Max( AMS,FirstVNF_Mem ) ) ) ) - MDR ) * PN ) )", "choosing": "( Max( RMSe,MLU ) - Min( ( Min( RCSe ,( MLU + MUC ) ) / CS ) ,( RMSe - RMSe ) ) )", "obj1": 0.5910931174089069, "obj2": 0.30439746584655836}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / ( MRS + FirstVNF_CPU ) )", "choosing": "( ( Max( CS,Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) ) - ( ( Max( RRSe,DS ) + Max( RRSe,MUC ) ) + Max( ( ( CS / Max( RRSe,RCSe ) ) / MLU ),( MUC + CS ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6117922889323909}, {"determining": "( AMS * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( ( MUM + RRSe ) + MUR ) / ( ( MLU - ( DS + MLU ) ) / ( Min( MUM ,MUC ) * ( MUR + RRSe ) ) ) ) ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7514892367933046}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.275329735210682}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) / ( Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.037674449947106524}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( AMS ,( ARS + Min( ( RRS + PN ) ,( ACS + MRS ) ) ) ) ,( PN - ACS ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - Min( ( PN + Const ) ,( ARS * MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,RCSe ) * ( RCSe - RRSe ) ) + CS ) - MUM ) - ( CS / MUR ) )", "obj1": 0.742914979757085, "obj2": 0.09929581557143102}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.33805668016194335, "obj2": 0.498700202553334}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( ( ( ACS - CRS ) + ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( MLU - Max( MUM,DS ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR / RCSe ) + MUM ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.706072336630517}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1417004048582996, "obj2": 0.668028520178598}, {"determining": "Min( ( ( ACS + ( ARS - AMS ) ) - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( CS - Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( RMSe - DS ) - DS ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6933631184970739}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( MDR / ARS ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * ( ( DDR + MDR ) / Max( DDR,MDR ) ) ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( ( MUM / MUC ) + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.022090659234970215}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - ( Max( MRS,ACS ) - ( Max( Min( Max( FirstVNF_Mem,DDR ) ,( BR * AMS ) ),FirstVNF_CPU_Server ) + DDR ) ) ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( Min( RRSe ,( ( RCSe / MUM ) - Min( MLU ,MLU ) ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6899469107235643}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.7793522267206477, "obj2": 0.08505359303635496}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "Min( ( ( Const - DDR ) / ( BR - PN ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( Max( DDR,PN ) - Min( RRS ,AMS ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.48380566801619435, "obj2": 0.3750880615551274}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0023443438317577166}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "Min( ( ( ( Max( ACS,MRS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ACS + ( DDR + MRS ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( CS - RCSe ) ),( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / Min( MUM ,Min( MUR ,MUC ) ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * ( ( RMSe * CS ) * CS ) ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9089068825910931, "obj2": 0.042596142793869}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,( PN - ARS ) ) + ARS ) ) ) ,( MDR / ( ( FirstVNF_Mem + Const ) - FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( Max( ( RMSe - MUR ),RMSe ) - Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * CS ) / ( ( ( ( MUC - MUR ) + Min( MUC ,RCSe ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),RCSe ) )", "obj1": 0.5890688259109311, "obj2": 0.3044157995372541}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "Min( ( ( ( FirstVNF_RAM / ARS ) + ( Max( MRS,ACS ) * MDR ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) * ( DDR + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MLU / RRSe ) ) ) * CS ) - ( MUR / ( MUC * CS ) ) )", "obj1": 0.9433198380566802, "obj2": 0.0251575368697049}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.645748987854251, "obj2": 0.2548388982550077}], "22": [{"determining": "Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS + RRS ) ) / DDR ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe * MLU ) + Min( ( DS - MUC ) ,MUC ) ) + Min( ( MUM * ( MLU + RRSe ) ) ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS + FirstVNF_RAM ) ,( FirstVNF_Mem * ( PN - ACS ) ) )", "choosing": "Min( ( ( MUM + ( MLU / CS ) ) * MUM ) ,Min( DS ,( MUC - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.07755606171192368}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.454568856909463}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.5652111008278919}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6037135462736718}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.503325034114658}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( AMS + ( MRS * PN ) ) ,( ( AMS + ( ( FirstVNF_Mem * FirstVNF_Mem ) / MRS ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - PN ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Min( Max( ( Max( MUC,MUR ) - DS ),RCSe ) ,MUR ) ) - Max( ( ( MLU + RCSe ) - Max( RCSe,( CS / ( ( ( MUM - RCSe ) * CS ) * Max( Max( MUC,MUC ),MUC ) ) ) ) ),Max( CS,MUR ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5795803616077266}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( ARS - FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_Mem_Server * ( Min( CRS ,PN ) / MDR ) ) - ACS ) + FirstVNF_Mem_Server ) / ( ( ACS * DDR ) + Const ) ) )", "choosing": "( ( DS - MUR ) / ( RRSe + ( ( ( ( MUM - Max( Max( RMSe,RRSe ),Min( RRSe ,RCSe ) ) ) - RCSe ) / ( Max( CS,RRSe ) - RRSe ) ) / CS ) ) )", "obj1": 0.5101214574898786, "obj2": 0.36354652288338035}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 0.5566801619433198, "obj2": 0.3243880710251861}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( AMS / FirstVNF_RAM ) * ( DDR - ( PN / ( BR * ( FirstVNF_RAM / Const ) ) ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,Max( ( RMSe / CS ),MLU ) ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.38466168726801375}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem / ( Const / FirstVNF_RAM_Server ) ) ) - ( MDR / MDR ) ) * PN ) )", "choosing": "( ( Min( RRSe ,( CS - RCSe ) ) * Max( CS,Min( ( Min( CS ,RRSe ) * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6549413465175837}, {"determining": "Min( ( ( MDR / ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_Mem * AMS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Min( Min( MUM ,( CS + ( MUR / Max( RMSe,( CS + ( Max( MUR,CS ) / DS ) ) ) ) ) ) ,( ( ( RRSe + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) * Min( ( RCSe - CS ) ,RRSe ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5407271219892857}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6756993233462557}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4954012540170416}, {"determining": "Min( ( ( ACS + ( ARS - AMS ) ) - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( CS - Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( RMSe - DS ) - DS ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6933631184970739}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.05322295035801036}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6643423391413779}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "Min( ( CRS + Min( ( Min( AMS ,( ARS + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) + ( ARS * Min( MDR ,FirstVNF_Mem ) ) ) ,( ACS * MRS ) ) ) ,( MDR * Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / MUM ) * MUC ) / ( ( ( ( MUC - RCSe ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( ( RRSe / RCSe ) / ( ( ( MUC * MUM ) * CS ) * RRSe ) ) * MUR ) ),MUM ) ,( ( ( ( RRSe - RRSe ) * DS ) / Max( RMSe,RMSe ) ) * ( ( DS + ( ( MLU * ( MUM * ( MUC / RMSe ) ) ) / ( MUM / ( RRSe + MLU ) ) ) ) * ( RCSe + RMSe ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5723512683239543}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( MDR,FirstVNF_CPU ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) + MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.979757085020243, "obj2": 0.007546011927416462}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ARS / DDR ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29928835842452367}, {"determining": "( ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) / ( MRS + FirstVNF_CPU ) )", "choosing": "( ( Max( CS,Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) ) - ( ( Max( RRSe,DS ) + Max( RRSe,MUC ) ) + Max( ( ( CS / Max( RRSe,RCSe ) ) / MLU ),( MUC + CS ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6117922889323909}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.275329735210682}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) / ( Min( Min( BR ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.9109311740890689, "obj2": 0.037674449947106524}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( MDR,FirstVNF_CPU ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) + MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( ( ( RCSe - CS ) / MLU ) * CS ) ) ) * ( Min( RMSe ,CS ) * ( MUC + ( ( RRSe + Max( RCSe,RMSe ) ) / ( RMSe / CS ) ) ) ) ) / ( ( ( Min( Max( CS,RRSe ) ,( ( MUM * RCSe ) * RRSe ) ) + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( ( MUM / MLU ) - CS ) )", "obj1": 0.888663967611336, "obj2": 0.04689399324475029}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,FirstVNF_Mem ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0023443438317577166}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1417004048582996, "obj2": 0.668028520178598}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( MDR / ARS ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * ( ( DDR + MDR ) / Max( DDR,MDR ) ) ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( ( MUM / MUC ) + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.022090659234970215}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const * RRS ) ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.7793522267206477, "obj2": 0.0847803770187813}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "Min( ( ( Const - DDR ) / ( BR - PN ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( Max( DDR,PN ) - Min( RRS ,AMS ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.48380566801619435, "obj2": 0.3750880615551274}, {"determining": "Min( ( ( ( ACS - CRS ) + ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( MLU - Max( MUM,DS ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR / RCSe ) + MUM ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.706072336630517}, {"determining": "( AMS * Max( PN,Min( ( ( ( FirstVNF_RAM / ARS ) + ( Max( MRS,ACS ) * MDR ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) * ( DDR + FirstVNF_CPU ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + MLU ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7514892367933046}, {"determining": "Min( ( ( ( Max( ACS,MRS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ACS + ( DDR + MRS ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( CS - RCSe ) ),( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / Min( MUM ,Min( MUR ,MUC ) ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * ( ( RMSe * CS ) * CS ) ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9089068825910931, "obj2": 0.042596142793869}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "Min( ( ( ( FirstVNF_RAM / ARS ) + ( Max( MRS,ACS ) * MDR ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) * ( DDR + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MLU / RRSe ) ) ) * CS ) - ( MUR / ( MUC * CS ) ) )", "obj1": 0.9433198380566802, "obj2": 0.0251575368697049}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( MDR - FirstVNF_RAM_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUM * ( CS + ( RMSe / CS ) ) ) ,( Min( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) - CS ) ,RRSe ) * ( ( RRSe + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.6281536353403996}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}], "23": [{"determining": "Min( Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( ( DS + MUM ) - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS + RRS ) ) / DDR ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe * MLU ) + Min( ( DS - MUC ) ,MUC ) ) + Min( ( MUM * ( MLU + RRSe ) ) ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.503325034114658}, {"determining": "( ( FirstVNF_Mem - Const ) / ( ( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * MRS ) + FirstVNF_CPU_Server ) + Const ) + ( Min( FirstVNF_RAM_Server ,( MDR + FirstVNF_Mem ) ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( ( DS * Min( ( Max( MUC,MUM ) * ( RCSe - MLU ) ) ,Max( DS,MLU ) ) ) * CS ) / ( MUC - Min( RMSe ,( RRSe + RRSe ) ) ) ) / ( ( CS - ( RMSe * MUM ) ) * MUR ) ) - Min( CS ,MUR ) )", "obj1": 0.5769230769230769, "obj2": 0.30773574820704885}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.07755606171192368}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.454568856909463}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6037135462736718}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 0.5566801619433198, "obj2": 0.3243880710251861}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( AMS / FirstVNF_RAM ) * ( DDR - ( PN / ( BR * ( FirstVNF_RAM / Const ) ) ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,Max( ( RMSe / CS ),MLU ) ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.38466168726801375}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "( ( ( AMS - Max( ( ACS * ( FirstVNF_RAM_Server - AMS ) ),Max( FirstVNF_CPU_Server,( BR / Max( ( MDR / MDR ),MDR ) ) ) ) ) * ( DDR * ( MRS * FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server * MDR ) )", "choosing": "( Min( ( ( Min( RCSe ,RRSe ) / DS ) - ( Min( Min( MUM ,MUM ) ,RCSe ) - MLU ) ) ,RCSe ) - ( CS - ( RCSe / RRSe ) ) )", "obj1": 0.3562753036437247, "obj2": 0.48928576945909336}, {"determining": "Min( ( ( ACS + ( ARS - AMS ) ) - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( CS - Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( RMSe - DS ) - DS ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6933631184970739}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem / ( Const / FirstVNF_RAM_Server ) ) ) - ( MDR / MDR ) ) * PN ) )", "choosing": "( ( Min( RRSe ,( CS - RCSe ) ) * Max( CS,Min( ( Min( CS ,RRSe ) * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6549413465175837}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ACS ) ) ,Max( Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,Const ) * ( DDR - ( Min( ( MRS / Const ) ,( MRS / RRS ) ) / DDR ) ) ) ),Min( Min( Const ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.36206159638160873}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Min( Max( ( ( FirstVNF_CPU_Server - RRS ) - Min( FirstVNF_RAM ,ARS ) ),( PN - ( ( ( FirstVNF_RAM_Server / BR ) + FirstVNF_CPU_Server ) + AMS ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) + ( Min( MUR ,MUR ) * MUC ) ) + ( ( RCSe * Min( MLU ,Max( RMSe,Max( ( RCSe * MUM ),RCSe ) ) ) ) / DS ) ) - ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RCSe * MUM ) / CS ) ) ) - MUC ) * ( ( ( CS / MUC ) * Min( DS ,( ( MUC / MUC ) + Min( DS ,MLU ) ) ) ) - MUC ) ) + Max( Max( CS,( RMSe / ( RCSe + DS ) ) ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.30237872845894065}, {"determining": "Min( ( ( MDR / ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( AMS * DDR ),ARS ) + ( FirstVNF_Mem * AMS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - Const ) ) )", "choosing": "Min( Min( MUM ,( CS + ( MUR / Max( RMSe,( CS + ( Max( MUR,CS ) / DS ) ) ) ) ) ) ,( ( ( RRSe + ( ( DS * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * Min( RRSe ,RRSe ) ) ) * ( DS + RMSe ) ) * Min( ( RCSe - CS ) ,RRSe ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5407271219892857}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( PN - RRS ) - Min( Min( ( ( FirstVNF_Mem + PN ) / ARS ) ,AMS ) ,CRS ) ) ) ,Min( BR ,( ACS / Min( FirstVNF_Mem ,ARS ) ) ) )", "choosing": "( ( Min( MUM ,Min( MUM ,Min( Max( Min( RMSe ,MLU ),MUC ) ,RRSe ) ) ) * RMSe ) - ( ( Max( DS,MUC ) + ( Min( Min( ( Min( MUC ,MUM ) * RMSe ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) + Max( Max( RRSe,MUC ),( CS - MUC ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6809131720935471}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6756993233462557}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "Min( ( AMS + Const ) ,( ( AMS - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.34615384615384615, "obj2": 0.4954012540170416}, {"determining": "Min( ( ( ( ACS - CRS ) + ( FirstVNF_CPU_Server / Max( FirstVNF_CPU_Server,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) * ( MLU - Max( MUM,DS ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR / RCSe ) + MUM ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.706072336630517}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.0512463436069593}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) ,( MDR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6643423391413779}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( CS + ( RMSe / CS ) ),( MUC + CS ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.611083399161802}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( MDR / ARS ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * ( ( DDR + MDR ) / Max( DDR,MDR ) ) ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( ( MUM / MUC ) + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.022090659234970215}, {"determining": "( AMS * Max( PN,Min( ( ( ( FirstVNF_RAM / ARS ) + ( Max( MRS,ACS ) * MDR ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) * ( DDR + FirstVNF_CPU ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + MLU ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7514892367933046}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ARS / DDR ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29928835842452367}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.275329735210682}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + RCSe ) + MUR ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.5778713000023243}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "( ( ( ( FirstVNF_Mem / ( ( FirstVNF_RAM_Server / ACS ) + FirstVNF_RAM ) ) * Max( BR,AMS ) ) + ( PN * Min( CRS ,MRS ) ) ) / ( ARS / DDR ) )", "choosing": "( ( Max( ( MLU + MUM ),Min( Max( MUM,( ( Min( DS ,MUR ) / RCSe ) + MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.8987854251012146, "obj2": 0.042829844366721305}, {"determining": "Min( ( AMS + ( MRS * PN ) ) ,( ( AMS + ( ( FirstVNF_Mem * FirstVNF_Mem ) / MRS ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - PN ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Min( Max( ( Max( MUC,MUR ) - DS ),RCSe ) ,MUR ) ) - Max( ( ( MLU + RCSe ) - Max( RCSe,( CS / ( ( ( MUM - RCSe ) * CS ) * Max( Max( MUC,MUC ),MUC ) ) ) ) ),Max( CS,MUR ) ) )", "obj1": 0.25303643724696356, "obj2": 0.5795803616077266}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1417004048582996, "obj2": 0.668028520178598}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( ARS - FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_Mem_Server * ( Min( CRS ,PN ) / MDR ) ) - ACS ) + FirstVNF_Mem_Server ) / ( ( ACS * DDR ) + Const ) ) )", "choosing": "( ( DS - MUR ) / ( RRSe + ( ( ( ( MUM - Max( Max( RMSe,RRSe ),Min( RRSe ,RCSe ) ) ) - RCSe ) / ( Max( CS,RRSe ) - RRSe ) ) / CS ) ) )", "obj1": 0.5101214574898786, "obj2": 0.36354652288338035}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,FirstVNF_RAM )", "choosing": "( Max( MLU,RMSe ) - ( ( Min( RMSe ,MUR ) * CS ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.10526315789473684, "obj2": 0.7006354817912405}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "Min( ( ( Const - DDR ) / ( BR - PN ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( Max( DDR,PN ) - Min( RRS ,AMS ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.48380566801619435, "obj2": 0.3750880615551274}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( ( ( Max( ACS,MRS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ACS + ( DDR + MRS ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( CS - RCSe ) ),( ( DS + ( ( DS * ( Min( CS ,RMSe ) * ( RRSe * CS ) ) ) * ( Min( CS ,RMSe ) / Min( MUM ,Min( MUR ,MUC ) ) ) ) ) * ( ( ( MUC * MUM ) * CS ) * ( ( RMSe * CS ) * CS ) ) ) ) ,( RMSe * MLU ) )", "obj1": 0.9089068825910931, "obj2": 0.042596142793869}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( MDR,FirstVNF_CPU ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,ACS ) + MDR ) + ( FirstVNF_RAM / ARS ) ) )", "choosing": "Min( ( ( ( Max( ( DS + MUM ),MLU ) / Min( RCSe ,( ( ( RCSe - CS ) / MLU ) * CS ) ) ) * ( Min( RMSe ,CS ) * ( MUC + ( ( RRSe + Max( RCSe,RMSe ) ) / ( RMSe / CS ) ) ) ) ) / ( ( ( Min( Max( CS,RRSe ) ,( ( MUM * RCSe ) * RRSe ) ) + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( ( MUM / MLU ) - CS ) )", "obj1": 0.888663967611336, "obj2": 0.04689399324475029}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}], "24": [{"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( ( DS + MUM ) - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.503325034114658}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU * RRS ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) / CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( MUM * RRSe ),( RRSe - RMSe ) ) ) / Min( MUM ,RRSe ) ),Min( Max( ( RRSe + RMSe ),RCSe ) ,( MUC / CS ) ) ) ,( Min( Min( MUR ,Min( RCSe ,DS ) ) ,( MUM - CS ) ) * ( ( DS + DS ) * ( DS + CS ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5539092126836379}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.454568856909463}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.07755606171192368}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( Max( ( DDR / ( FirstVNF_RAM_Server * ARS ) ),ACS ) / ( ( PN - RRS ) - Min( ( ( ( FirstVNF_RAM_Server * Max( ACS,FirstVNF_RAM_Server ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( Max( MRS,MDR ) - CRS ) + ( DDR / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe * ( RCSe - ( RCSe / ( RMSe - MUM ) ) ) ) * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) - Min( CS ,MUC ) )", "obj1": 0.4109311740890688, "obj2": 0.4443214499707197}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( AMS / FirstVNF_RAM ) * ( DDR - ( PN / ( BR * ( FirstVNF_RAM / Const ) ) ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,Max( ( RMSe / CS ),MLU ) ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.38466168726801375}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( BR - CRS ) ,( Min( Max( FirstVNF_Mem_Server,Max( ( Max( FirstVNF_Mem_Server,Min( ARS ,ACS ) ) / ( ACS / ARS ) ),MRS ) ) ,ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe * MUM ) / CS ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( Max( MUC,RRSe ) * RCSe ) ) + Max( ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ),MUM ) ) + ( ( ( CS - RRSe ) * DS ) * ( Max( ( MUC - MUM ),RCSe ) / MUC ) ) ) )", "obj1": 0.5748987854251012, "obj2": 0.31008797559071494}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( Max( ( FirstVNF_Mem * BR ),PN ) / Min( Max( ( ( AMS - ( ( MRS / ACS ) / ACS ) ) * AMS ),( AMS / Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,Const ) )", "choosing": "( ( ( ( Max( Min( ( Min( RMSe ,RCSe ) / MUM ) ,DS ),Min( DS ,MUR ) ) * RCSe ) - ( MUC * Max( RCSe,Min( ( Min( DS ,DS ) - MUM ) ,MUR ) ) ) ) * DS ) - ( MUC - Max( ( MUR - CS ),MLU ) ) )", "obj1": 0.5566801619433198, "obj2": 0.3243880710251861}, {"determining": "( ( BR * PN ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( MUC - DS ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6037135462736718}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6797904875927985}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( Min( RRSe ,( RRSe - Min( RRSe ,( Max( ( CS + CS ),Min( ( MUR * DS ) ,DS ) ) / DS ) ) ) ) - RRSe )", "obj1": 0.902834008097166, "obj2": 0.04011596321048388}, {"determining": "Min( ( ( ACS + ( ARS - AMS ) ) - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( CS - Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( RMSe - DS ) - DS ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6933631184970739}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ACS ) ) ,Max( Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,Const ) * ( DDR - ( Min( ( MRS / Const ) ,( MRS / RRS ) ) / DDR ) ) ) ),Min( Min( Const ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.36206159638160873}, {"determining": "Min( ( FirstVNF_RAM / RRS ) ,( Const * BR ) )", "choosing": "( ( ( ( MUR / RRSe ) + ( DS + ( Min( RCSe ,( Max( RMSe,RCSe ) + RRSe ) ) / ( MUR - MLU ) ) ) ) + ( ( ( MUM + MLU ) * RRSe ) + ( MUC + CS ) ) ) - ( RRSe / Min( MUM ,( ( MLU * Max( RRSe,RRSe ) ) * RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5388189201600645}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.0512463436069593}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( Max( MLU,( RRSe / RMSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.2408906882591093, "obj2": 0.5787341815684719}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem / ( Const / FirstVNF_RAM_Server ) ) ) - ( MDR / MDR ) ) * PN ) )", "choosing": "( ( Min( RRSe ,( CS - RCSe ) ) * Max( CS,Min( ( Min( CS ,RRSe ) * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6549413465175837}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( AMS * Max( PN,Min( ( ( ( FirstVNF_RAM / ARS ) + ( Max( MRS,ACS ) * MDR ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) * ( DDR + FirstVNF_CPU ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + MLU ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7514892367933046}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Min( Max( ( ( FirstVNF_CPU_Server - RRS ) - Min( FirstVNF_RAM ,ARS ) ),( PN - ( ( ( FirstVNF_RAM_Server / BR ) + FirstVNF_CPU_Server ) + AMS ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) + ( Min( MUR ,MUR ) * MUC ) ) + ( ( RCSe * Min( MLU ,Max( RMSe,Max( ( RCSe * MUM ),RCSe ) ) ) ) / DS ) ) - ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RCSe * MUM ) / CS ) ) ) - MUC ) * ( ( ( CS / MUC ) * Min( DS ,( ( MUC / MUC ) + Min( DS ,MLU ) ) ) ) - MUC ) ) + Max( Max( CS,( RMSe / ( RCSe + DS ) ) ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.30237872845894065}, {"determining": "Min( ( BR - ( ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_Mem_Server ) + RRS ) ) ,( ( FirstVNF_RAM_Server + Max( MDR,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( RRSe + Max( DS,( MLU * RRSe ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR + RCSe ) + RCSe ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),Min( RRSe ,( CS - Min( Max( RRSe,RCSe ) ,( MUC / Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29841337314993627}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.275329735210682}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.04499015996046085}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,( Min( BR ,FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) / ( ( PN - RRS ) / Min( CRS ,( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( Min( ( MUM * Max( MLU,( ( MLU * CS ) - ( MUM + RRSe ) ) ) ) ,MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "( ( ( AMS + FirstVNF_CPU ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( ( ( BR - MDR ) / FirstVNF_CPU ) - FirstVNF_Mem ) ) ) ) ) / ( ( ( ACS / BR ) - MDR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - Max( DS,( ( ( MUM - MUC ) - RRSe ) - CS ) ) ) + Max( CS,Min( MLU ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + ( Max( MUR,( ( MLU - ( CS - RRSe ) ) * Max( Min( Max( MLU,RMSe ) ,( RCSe / DS ) ),Max( RCSe,( DS / MLU ) ) ) ) ) / Max( RMSe,( ( RRSe * MUM ) / MLU ) ) ) ) )", "obj1": 0.20850202429149797, "obj2": 0.614527008909978}, {"determining": "( ( AMS * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) - ( RRS - Max( Min( AMS ,( RRS * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - ARS ) ) ) ) )", "choosing": "( Min( CS ,( ( ( MUM / MLU ) * ( RRSe * ( MLU - ( ( DS / RMSe ) * Max( MUC,RRSe ) ) ) ) ) + ( ( Max( ( RCSe - MUC ),Max( ( MUM + RCSe ),DS ) ) - RRSe ) - MLU ) ) ) - Max( CS,MLU ) )", "obj1": 0.5040485829959515, "obj2": 0.3698970164478702}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( MDR / ARS ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * ( ( DDR + MDR ) / Max( DDR,MDR ) ) ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( ( MUM / MUC ) + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.022090659234970215}, {"determining": "( ( ( ( PN - Min( ( ARS * ACS ) ,FirstVNF_CPU_Server ) ) * ( Max( PN,Const ) / Const ) ) * Const ) / ( MRS + RRS ) )", "choosing": "( Min( MUC ,MUC ) - ( Max( MUM,Min( Max( ( ( MUR * ( MUR - CS ) ) * ( Min( MUM ,MLU ) / ( MUC + RCSe ) ) ),RCSe ) ,Min( ( ( ( MLU + DS ) * ( RRSe * MUM ) ) + ( RMSe * MUR ) ) ,( MUC / Min( MUM ,MLU ) ) ) ) ) - ( RCSe * ( ( ( MLU - MLU ) / DS ) - ( Min( RCSe ,Max( RMSe,Max( RCSe,RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.32540932995711475}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_CPU_Server * CRS ) + ACS ) ) ,Max( Min( Min( Const ,( ( DDR / Max( FirstVNF_Mem_Server,PN ) ) - PN ) ) ,( PN + FirstVNF_RAM_Server ) ),Max( FirstVNF_Mem,ACS ) ) )", "choosing": "Min( ( MUC + ( ( ( MUR * MUC ) + ( MUM - ( RRSe * MLU ) ) ) * ( CS + MUR ) ) ) ,( Min( Max( DS,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.5, "obj2": 0.37356054924481524}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( ARS - FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_Mem_Server * ( Min( CRS ,PN ) / MDR ) ) - ACS ) + FirstVNF_Mem_Server ) / ( ( ACS * DDR ) + Const ) ) )", "choosing": "( ( DS - MUR ) / ( RRSe + ( ( ( ( MUM - Max( Max( RMSe,RRSe ),Min( RRSe ,RCSe ) ) ) - RCSe ) / ( Max( CS,RRSe ) - RRSe ) ) / CS ) ) )", "obj1": 0.5101214574898786, "obj2": 0.36354652288338035}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7854251012145749, "obj2": 0.0840385372014374}, {"determining": "Min( Min( MDR ,( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),BR ) + Max( ACS,Max( AMS,AMS ) ) ) ) ,FirstVNF_RAM )", "choosing": "( Max( MLU,RMSe ) - ( ( Min( RMSe ,MUR ) * CS ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.10526315789473684, "obj2": 0.7006354817912405}, {"determining": "Min( ( ( Const - DDR ) / ( BR - PN ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( Max( DDR,PN ) - Min( RRS ,AMS ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.48380566801619435, "obj2": 0.3750880615551274}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Min( Max( ( ( FirstVNF_CPU_Server - RRS ) - Min( FirstVNF_RAM ,ARS ) ),( PN - ( ( ( FirstVNF_RAM_Server / BR ) + FirstVNF_CPU_Server ) + AMS ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) + ( Min( MUR ,MUR ) * MUC ) ) + ( ( RCSe * Min( MLU ,Max( RMSe,Max( ( RCSe * MUM ),RCSe ) ) ) ) / DS ) ) - ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RCSe * MUM ) / CS ) ) ) - MUC ) * ( ( ( CS / MUC ) * Min( DS ,( ( MUC / MUC ) + Min( DS ,MLU ) ) ) ) - MUC ) ) + Max( Max( CS,( RMSe / ( RCSe + DS ) ) ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.3056424550693918}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( Min( ( BR - CRS ) ,( MDR / ARS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ( ACS + ( ARS + CRS ) ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( RCSe + MUM ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - ( ( Max( RMSe,MUC ) + CS ) * ( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( ( DDR - Const ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( FirstVNF_Mem * ( ( FirstVNF_CPU_Server + PN ) + ACS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * ( RMSe / ( RRSe * RCSe ) ) ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( DS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.48785425101214575, "obj2": 0.37399897606598387}, {"determining": "( ( ( ( ACS + ( FirstVNF_CPU_Server / Max( DDR,DDR ) ) ) - FirstVNF_CPU_Server ) * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) ) - ( MUR / MUM ) ),( MUC + CS ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.6057612101744975}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.023536712852672524}], "25": [{"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "( ( ( CRS * Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) ) / Const ) / Max( ( Min( Const ,AMS ) + ( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( DDR + Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS + BR ) ) ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ) * ( CS - Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( ( MLU * RMSe ) ,Max( MUR,RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12376424534777729}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.5987889952833026}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ACS ) ) ,Max( Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,Const ) * ( DDR - ( Min( ( MRS / Const ) ,( MRS / RRS ) ) / DDR ) ) ) ),Min( Min( Const ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.36206159638160873}, {"determining": "Min( ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),Max( CRS,DDR ) ) + Min( ( PN + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,Min( ( ( RRS - ( AMS - BR ) ) / ( Min( ( MRS + MDR ) ,Min( Const ,AMS ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( Const * RRS ) ) )", "choosing": "Min( ( ( MUR + MUR ) - Min( MUR ,( ( RRSe + ( MUM / DS ) ) * CS ) ) ) ,( ( Max( ( ( Min( RCSe ,MUC ) + ( ( MUC - MUR ) + ( RCSe * MUC ) ) ) - ( RMSe * RRSe ) ),DS ) * ( MLU + MUR ) ) * Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.307225453123081}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.5464889349015537}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( AMS + Const ) ,( ( ( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),PN ) / DDR ) ) ) - Max( Max( ARS,FirstVNF_RAM ),Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) )", "choosing": "( Max( ( ( MLU + RCSe ) * Max( RCSe,( CS / ( Max( ( MUC / MUC ),MUC ) * ( Min( RMSe ,MUR ) * CS ) ) ) ) ),Max( CS,MUR ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( ( MUR + RCSe ) + MUM ) ) ) )", "obj1": 0.3319838056680162, "obj2": 0.503325034114658}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4543164923421593}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "( ( ( ( Const - RRS ) * ( FirstVNF_CPU_Server / ( DDR + FirstVNF_CPU_Server ) ) ) + ( PN - ( Max( ( MRS / FirstVNF_Mem ),RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( MUC - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( ( ( ( ( MUC - ( RCSe + DS ) ) + MLU ) / MUR ) * ( MUM * MUM ) ) + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.3631578863634776}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6797904875927985}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ( ( Max( AMS,Max( ARS,FirstVNF_CPU_Server ) ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),CRS ) / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,( FirstVNF_CPU / CRS ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( ( MLU * RRSe ) + Min( Max( CS,MLU ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) + ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,MUM ) )", "obj1": 0.4109311740890688, "obj2": 0.44201531476206346}, {"determining": "( ( ( ( MRS / Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ),FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) - ( Min( Min( Max( Const,FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server + PN ) / ( FirstVNF_Mem - RRS ) ) ) * ( ( Min( FirstVNF_Mem ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server / MDR ) ) - ( Min( ARS ,FirstVNF_RAM ) / Min( FirstVNF_RAM ,RRS ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + ( ( Max( MUM,RRSe ) + MUM ) / ( ( MLU - ( DS + MLU ) ) / ( ( MUR + RRSe ) * Min( MUM ,MUC ) ) ) ) ),MUC ) ,( Max( MUM,MUC ) - RCSe ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7496621749849725}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.367750123657228}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( Const + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( MUM,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( FirstVNF_CPU_Server / Const ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.34210526315789475, "obj2": 0.4922161766795962}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( Min( RRSe ,( RRSe - Min( RRSe ,( Max( ( CS + CS ),Min( ( MUR * DS ) ,DS ) ) / DS ) ) ) ) - RRSe )", "obj1": 0.902834008097166, "obj2": 0.04011596321048388}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Min( Max( ( ( FirstVNF_CPU_Server - RRS ) - Min( FirstVNF_RAM ,ARS ) ),( PN - ( ( ( FirstVNF_RAM_Server / BR ) + FirstVNF_CPU_Server ) + AMS ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) + ( Min( MUR ,MUR ) * MUC ) ) + ( ( RCSe * Min( MLU ,Max( RMSe,Max( ( RCSe * MUM ),RCSe ) ) ) ) / DS ) ) - ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RCSe * MUM ) / CS ) ) ) - MUC ) * ( ( ( CS / MUC ) * Min( DS ,( ( MUC / MUC ) + Min( DS ,MLU ) ) ) ) - MUC ) ) + Max( Max( CS,( RMSe / ( RCSe + DS ) ) ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.5809716599190283, "obj2": 0.3056424550693918}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( ( ( ACS + ( ARS - AMS ) ) - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( CS - Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( RMSe - DS ) - DS ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6933631184970739}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( Max( Min( PN ,PN ),ACS ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) - ( ( ( RRSe + MUC ) + ( Max( ( MLU * ( MUC + RMSe ) ),MLU ) + ( MUR * MLU ) ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5767885578573132}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "Min( ( FirstVNF_RAM / RRS ) ,( Const * BR ) )", "choosing": "( ( ( ( MUR / RRSe ) + ( DS + ( Min( RCSe ,( Max( RMSe,RCSe ) + RRSe ) ) / ( MUR - MLU ) ) ) ) + ( ( ( MUM + MLU ) * RRSe ) + ( MUC + CS ) ) ) - ( RRSe / Min( MUM ,( ( MLU * Max( RRSe,RRSe ) ) * RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5388189201600645}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.0512463436069593}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( Max( DS,MUR ) / ( MUR * MUC ) ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.0773386308854038}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.8866396761133604, "obj2": 0.04499015996046085}, {"determining": "( AMS * Max( PN,Min( ( ( ( FirstVNF_RAM / ARS ) + ( Max( MRS,ACS ) * MDR ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) * ( DDR + FirstVNF_CPU ) ) ,CRS ) ) ) ) ) )", "choosing": "( Min( Max( ( ( RMSe / MUM ) + MLU ),MUC ) ,( RCSe * DS ) ) + ( ( MUR / DS ) / ( MUR * MUC ) ) )", "obj1": 0.058704453441295545, "obj2": 0.7514892367933046}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Min( Max( ( ( FirstVNF_CPU_Server - RRS ) - Min( FirstVNF_RAM ,ARS ) ),( PN - ( ( ( FirstVNF_RAM_Server / BR ) + FirstVNF_CPU_Server ) + AMS ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,( CS * RCSe ) ) + ( Min( MUR ,MUR ) * MUC ) ) + ( ( RCSe * Min( MLU ,Max( RMSe,Max( ( RCSe * MUM ),RCSe ) ) ) ) / DS ) ) - ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RCSe * MUM ) / CS ) ) ) - MUC ) * ( ( ( CS / MUC ) * Min( DS ,( ( MUC / MUC ) + Min( DS ,MLU ) ) ) ) - MUC ) ) + Max( Max( CS,( RMSe / ( RCSe + DS ) ) ),Min( RMSe ,RMSe ) ) ) )", "obj1": 0.5890688259109311, "obj2": 0.30237872845894065}, {"determining": "Min( ( BR - ( ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_Mem_Server ) + RRS ) ) ,( ( FirstVNF_RAM_Server + Max( MDR,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( RRSe + Max( DS,( MLU * RRSe ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR + RCSe ) + RCSe ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),Min( RRSe ,( CS - Min( Max( RRSe,RCSe ) ,( MUC / Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29841337314993627}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.275329735210682}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,( Min( BR ,FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) / ( ( PN - RRS ) / Min( CRS ,( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( Min( ( MUM * Max( MLU,( ( MLU * CS ) - ( MUM + RRSe ) ) ) ) ,MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem / ( Const / FirstVNF_RAM_Server ) ) ) - ( MDR / MDR ) ) * PN ) )", "choosing": "( ( Min( RRSe ,( CS - RCSe ) ) * Max( CS,Min( ( Min( CS ,RRSe ) * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6549413465175837}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.771255060728745, "obj2": 0.08867464125585167}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( Min( ( BR - CRS ) ,( MDR / ARS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ( ACS + ( ARS + CRS ) ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( RCSe + MUM ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - ( ( Max( RMSe,MUC ) + CS ) * ( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( MDR / ARS ) ) / ( ( PN - FirstVNF_Mem_Server ) + ( PN * ( ( DDR + MDR ) / Max( DDR,MDR ) ) ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( ( MUM / MUC ) + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9493927125506073, "obj2": 0.022090659234970215}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7854251012145749, "obj2": 0.0840385372014374}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) * ( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( Min( MUM ,( RMSe * ( MUR / RRSe ) ) ) * CS ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( MUR ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.023536712852672524}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( Min( RRSe ,( MUC / ( RMSe + MUR ) ) ) - ( ( MLU / DS ) * ( ( CS + Min( MUR ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.0459725492006476}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( Min( RRSe ,( RRSe - Min( RRSe ,( Max( ( CS + CS ),Min( ( MUR * DS ) ,DS ) ) / DS ) ) ) ) - RRSe )", "obj1": 0.9089068825910931, "obj2": 0.03801766711024602}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( Min( RRSe ,( RRSe - Min( RRSe ,( Max( ( CS + CS ),Min( ( MUR * DS ) ,DS ) ) / DS ) ) ) ) - RRSe )", "obj1": 0.9089068825910931, "obj2": 0.03801766711024602}], "26": [{"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( MDR ,FirstVNF_RAM ) ),DDR ) ) ) + ( FirstVNF_Mem_Server - PN ) ) ) / ( Min( Min( ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,DS ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + Min( ( MUR * MUR ) ,Min( MUC ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "( ( ( CRS * Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) ) / Const ) / Max( ( Min( Const ,AMS ) + ( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( DDR + Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS + BR ) ) ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ) * ( CS - Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( ( MLU * RMSe ) ,Max( MUR,RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12376424534777729}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.5987889952833026}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ACS ) ) ,Max( Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,Const ) * ( DDR - ( Min( ( MRS / Const ) ,( MRS / RRS ) ) / DDR ) ) ) ),Min( Min( Const ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.36206159638160873}, {"determining": "Min( ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),Max( CRS,DDR ) ) + Min( ( PN + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,Min( ( ( RRS - ( AMS - BR ) ) / ( Min( ( MRS + MDR ) ,Min( Const ,AMS ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( Const * RRS ) ) )", "choosing": "Min( ( ( MUR + MUR ) - Min( MUR ,( ( RRSe + ( MUM / DS ) ) * CS ) ) ) ,( ( Max( ( ( Min( RCSe ,MUC ) + ( ( MUC - MUR ) + ( RCSe * MUC ) ) ) - ( RMSe * RRSe ) ),DS ) * ( MLU + MUR ) ) * Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.307225453123081}, {"determining": "Min( ( Min( ( RRS + PN ) ,( ACS * MRS ) ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Max( PN,DDR ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe / ( ( RRSe + Min( RRSe ,MUR ) ) + Max( MLU,Min( Max( CS,MUC ) ,( Min( MUM ,MLU ) + DS ) ) ) ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.48945152201640046}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.5464889349015537}, {"determining": "( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( BR ,ARS ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Max( AMS,( ( AMS / MRS ) - BR ) ) ) ) ) ) * Max( PN,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) / ( MUR * MUC ) ) + Max( ( RMSe - Min( MUM ,RCSe ) ),Min( Max( MLU,( ( ( ( CS / MLU ) - ( RMSe * CS ) ) * CS ) + ( RMSe + MLU ) ) ) ,MUM ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7446168771556363}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4543164923421593}, {"determining": "( ( ( ( Const - RRS ) * ( FirstVNF_CPU_Server / ( DDR + FirstVNF_CPU_Server ) ) ) + ( PN - ( Max( ( MRS / FirstVNF_Mem ),RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( MUC - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( ( ( ( ( MUC - ( RCSe + DS ) ) + MLU ) / MUR ) * ( MUM * MUM ) ) + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.3631578863634776}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.5728744939271255, "obj2": 0.29937865269530317}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( AMS * RRS ) ,Max( ( ACS * Max( MRS,PN ) ),MDR ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / Max( DS,RRSe ) ) ) ) ,DS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6769279221741951}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( ( Max( AMS,Max( ARS,FirstVNF_CPU_Server ) ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),CRS ) / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,( FirstVNF_CPU / CRS ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( ( MLU * RRSe ) + Min( Max( CS,MLU ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) + ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,MUM ) )", "obj1": 0.4109311740890688, "obj2": 0.44201531476206346}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.367750123657228}, {"determining": "Min( ( MRS + ARS ) ,( AMS + ( ( RRS + PN ) / ( ACS * MRS ) ) ) )", "choosing": "Min( ( Min( MLU ,Min( MUR ,RMSe ) ) + MUR ) ,( RRSe * Min( RMSe ,CS ) ) )", "obj1": 0.819838056680162, "obj2": 0.08047020241931703}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( BR - ( ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_Mem_Server ) + RRS ) ) ,( ( FirstVNF_RAM_Server + Max( MDR,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( RRSe + Max( DS,( MLU * RRSe ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR + RCSe ) + RCSe ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),Min( RRSe ,( CS - Min( Max( RRSe,RCSe ) ,( MUC / Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29841337314993627}, {"determining": "( Min( Min( Max( AMS,CRS ) ,RRS ) ,Min( Max( FirstVNF_CPU_Server,( PN * ( FirstVNF_Mem / RRS ) ) ) ,( RRS / RRS ) ) ) / ( ( FirstVNF_RAM / ARS ) + Max( ( AMS * DDR ),Min( MRS ,( RRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( ( RRSe + Max( DS,RCSe ) ) / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + MUR ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( RCSe + DS ),MUC ) ) ,RRSe ) ,( CS * MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( MRS,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( ARS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,RCSe ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),MUM ) ) - ( ( MUR + MUC ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( Const + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( MUM,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) ) - Min( ACS ,MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * ( Max( MRS,ACS ) - CRS ) ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( MLU ,( RRSe * MUM ) ) / Max( MUC,RRSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ) + ( ( Max( DS,MUR ) / ( MUR * MUC ) ) * MUR ) ),MUM ) ,( RRSe * ( ( DS + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.8279352226720648, "obj2": 0.0773386308854038}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / DDR ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( DDR - DDR ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUM * DS ) ,( ( RRSe * ( ( MUC / MUM ) + Max( RMSe,MUM ) ) ) / MLU ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( Max( MLU,DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( ( RRSe / MUM ) + MUM ) / CS ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem / ( Const / FirstVNF_RAM_Server ) ) ) - ( MDR / MDR ) ) * PN ) )", "choosing": "( ( Min( RRSe ,( CS - RCSe ) ) * Max( CS,Min( ( Min( CS ,RRSe ) * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6549413465175837}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "Min( ( ( ACS + ( ARS - AMS ) ) - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( CS - Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( RMSe - DS ) - DS ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6933631184970739}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,( Min( Max( FirstVNF_Mem_Server,Max( ( ( ACS / ARS ) / ( Const / FirstVNF_Mem ) ),CRS ) ) ,ARS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.0931174089068826, "obj2": 0.7070220236792186}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + FirstVNF_RAM ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6518218623481782, "obj2": 0.25029201893199426}, {"determining": "Min( Max( Min( PN ,PN ),ACS ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) - ( ( ( RRSe + MUC ) + ( Max( ( MLU * ( MUC + RMSe ) ),MLU ) + ( MUR * MLU ) ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5767885578573132}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( ( FirstVNF_RAM / RRS ) ,( Const * BR ) )", "choosing": "( ( ( ( MUR / RRSe ) + ( DS + ( Min( RCSe ,( Max( RMSe,RCSe ) + RRSe ) ) / ( MUR - MLU ) ) ) ) + ( ( ( MUM + MLU ) * RRSe ) + ( MUC + CS ) ) ) - ( RRSe / Min( MUM ,( ( MLU * Max( RRSe,RRSe ) ) * RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5388189201600645}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.275329735210682}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,( Min( BR ,FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) / ( ( PN - RRS ) / Min( CRS ,( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( Min( ( MUM * Max( MLU,( ( MLU * CS ) - ( MUM + RRSe ) ) ) ) ,MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "Min( ( AMS + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( ( ( RRS - DDR ) / ( Max( PN,RRS ) - Min( ACS ,MDR ) ) ) ,( MDR / ( FirstVNF_CPU_Server + ARS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) + ( FirstVNF_RAM * RRS ) ) / DDR ) ) ) )", "choosing": "( ( CS - MLU ) - Min( CS ,( ( ( DS / MLU ) * Min( ( MLU - ( Max( RRSe,CS ) / MUM ) ) ,MUM ) ) + MUR ) ) )", "obj1": 0.7631578947368421, "obj2": 0.09192741337585245}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),RCSe ) ) )", "obj1": 0.1194331983805668, "obj2": 0.6921368716876418}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7854251012145749, "obj2": 0.0840385372014374}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "( Min( ( BR - CRS ) ,( MDR / ARS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ( ACS + ( ARS + CRS ) ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( RCSe + MUM ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - ( ( Max( RMSe,MUC ) + CS ) * ( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.6265466582847353}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( Min( RRSe ,( MUC / ( RMSe + MUR ) ) ) - ( ( MLU / DS ) * ( ( CS + Min( MUR ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.0459725492006476}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + CRS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * ( CS - MUR ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( Min( RRSe ,( RRSe - Min( RRSe ,( Max( ( CS + CS ),Min( ( MUR * DS ) ,DS ) ) / DS ) ) ) ) - RRSe )", "obj1": 0.9089068825910931, "obj2": 0.03801766711024602}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) ) )", "choosing": "( Min( RRSe ,( RRSe - Min( RRSe ,( Max( ( CS + CS ),Min( ( MUR * DS ) ,DS ) ) / DS ) ) ) ) - RRSe )", "obj1": 0.902834008097166, "obj2": 0.04011596321048388}, {"determining": "Min( ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( CS + CS ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.8947368421052632, "obj2": 0.04253448246782471}, {"determining": "Min( ( ( PN / ( CRS / Const ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem - FirstVNF_Mem ) / Max( AMS,DDR ) ) + ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,Max( ( MUM + ( MUC * DS ) ),( Min( RRSe ,( ( CS - RMSe ) - CS ) ) * ( ( DS / RMSe ) * ( ( CS - ( RMSe / RCSe ) ) - RCSe ) ) ) ) ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.0512463436069593}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( Min( RMSe ,RMSe ),MUR ) ) )", "obj1": 0.8785425101214575, "obj2": 0.0512463436069593}], "27": [{"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * Min( ( RRS + PN ) ,( ACS * MRS ) ) ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( MDR ,FirstVNF_RAM ) ),DDR ) ) ) + ( FirstVNF_Mem_Server - PN ) ) ) / ( Min( Min( ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,DS ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * ( RMSe + Min( ( MUR * MUR ) ,Min( MUC ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "( Min( ( AMS - AMS ) ,Min( ( FirstVNF_CPU_Server - ( ( Min( ACS ,( FirstVNF_Mem_Server * BR ) ) + ARS ) - PN ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * ( BR / ( DDR * ( Min( FirstVNF_Mem_Server ,MDR ) / BR ) ) ) ) )", "choosing": "( Max( Max( MLU,CS ),( Min( Max( ( Max( ( MUM / MUC ),( MUC - RCSe ) ) - ( Min( RCSe ,MLU ) + Max( MUR,MUR ) ) ),( RMSe + ( Min( MLU ,MUC ) * Min( RRSe ,MUC ) ) ) ) ,CS ) * CS ) ) - Min( RMSe ,CS ) )", "obj1": 0.6720647773279352, "obj2": 0.22773249502139148}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "( ( ( CRS * Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) ) / Const ) / Max( ( Min( Const ,AMS ) + ( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( DDR + Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS + BR ) ) ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ) * ( CS - Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( ( MLU * RMSe ) ,Max( MUR,RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12376424534777729}, {"determining": "Min( ( ( Const - DDR ) / ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ACS ) ) ,Max( Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,Const ) * ( DDR - ( Min( ( MRS / Const ) ,( MRS / RRS ) ) / DDR ) ) ) ),Min( Min( Const ,AMS ) ,( PN - MDR ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.36206159638160873}, {"determining": "Min( ( Min( ( RRS + PN ) ,( ACS * MRS ) ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Max( PN,DDR ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe / ( ( RRSe + Min( RRSe ,MUR ) ) + Max( MLU,Min( Max( CS,MUC ) ,( Min( MUM ,MLU ) + DS ) ) ) ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.48945152201640046}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( ( MUC / MUM ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.6477732793522267, "obj2": 0.22977384864785502}, {"determining": "( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( BR ,ARS ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Max( AMS,( ( AMS / MRS ) - BR ) ) ) ) ) ) * Max( PN,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) / ( MUR * MUC ) ) + Max( ( RMSe - Min( MUM ,RCSe ) ),Min( Max( MLU,( ( ( ( CS / MLU ) - ( RMSe * CS ) ) * CS ) + ( RMSe + MLU ) ) ) ,MUM ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7446168771556363}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0746014520242911}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.5464889349015537}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4543164923421593}, {"determining": "( ( ( ( Const - RRS ) * ( FirstVNF_CPU_Server / ( DDR + FirstVNF_CPU_Server ) ) ) + ( PN - ( Max( ( MRS / FirstVNF_Mem ),RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( MUC - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( ( ( ( ( MUC - ( RCSe + DS ) ) + MLU ) / MUR ) * ( MUM * MUM ) ) + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.3631578863634776}, {"determining": "Min( ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),Max( CRS,DDR ) ) + Min( ( PN + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,Min( ( ( RRS - ( AMS - BR ) ) / ( Min( ( MRS + MDR ) ,Min( Const ,AMS ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( Const * RRS ) ) )", "choosing": "Min( ( ( MUR + MUR ) - Min( MUR ,( ( RRSe + ( MUM / DS ) ) * CS ) ) ) ,( ( Max( ( ( Min( RCSe ,MUC ) + ( ( MUC - MUR ) + ( RCSe * MUC ) ) ) - ( RMSe * RRSe ) ),DS ) * ( MLU + MUR ) ) * Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.307225453123081}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * ( ARS - MRS ) ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( MLU ,RCSe ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( RRSe + ( MUR / RRSe ) ) )", "obj1": 0.5668016194331984, "obj2": 0.29926594182309924}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "Min( ( AMS * RRS ) ,Max( ( ACS * Max( MRS,PN ) ),MDR ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / Max( DS,RRSe ) ) ) ) ,DS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6769279221741951}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.5987889952833026}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4251012145748988, "obj2": 0.4068714267895038}, {"determining": "( Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - ( PN - ( Min( ACS ,MDR ) + ARS ) ) ) ,( MDR / RRS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( DS + DS ) * MUR ) ) )", "obj1": 0.6437246963562753, "obj2": 0.25659674131350846}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( BR - ( ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_Mem_Server ) + RRS ) ) ,( ( FirstVNF_RAM_Server + Max( MDR,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( RRSe + Max( DS,( MLU * RRSe ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR + RCSe ) + RCSe ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),Min( RRSe ,( CS - Min( Max( RRSe,RCSe ) ,( MUC / Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29841337314993627}, {"determining": "Min( ( ( ( Max( AMS,Max( ARS,FirstVNF_CPU_Server ) ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),CRS ) / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,( FirstVNF_CPU / CRS ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( ( MLU * RRSe ) + Min( Max( CS,MLU ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) + ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,MUM ) )", "obj1": 0.4109311740890688, "obj2": 0.44201531476206346}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.367750123657228}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "( ( ( FirstVNF_CPU - ( MDR / Const ) ) / ( Const - FirstVNF_RAM_Server ) ) / ( PN - Min( FirstVNF_RAM ,( ( ( FirstVNF_RAM - ( PN + DDR ) ) / FirstVNF_Mem ) - ( AMS * RRS ) ) ) ) )", "choosing": "( ( RCSe * Max( Max( MUC,( Min( Max( RMSe,( RMSe * MLU ) ) ,( Min( RMSe ,RRSe ) + CS ) ) * Max( MLU,( RRSe + RMSe ) ) ) ),DS ) ) - ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( ( Min( ( MUM * CS ) ,RMSe ) - RCSe ) * MUC ) * MUR ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3298054570001431}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - FirstVNF_Mem ),Max( AMS,DDR ) ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ACS * ( MRS - ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( Max( RCSe,Max( Min( RMSe ,MUR ),RMSe ) ) + Min( RRSe ,DS ) ) + ( MUM + ( MUC * DS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6365247082170982}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,ARS ) ,( PN - MDR ) ),( MDR - Const ) ) )", "choosing": "( MLU - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,( Max( MUC,DS ) * DS ) ) ) - CS ) ) ) )", "obj1": 0.8340080971659919, "obj2": 0.06878255733315085}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),( ( MDR / DDR ) / BR ) ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MLU ,MUR ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - RMSe ) ),( Max( DS,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( Min( FirstVNF_Mem ,Max( MDR,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.20445344129554655, "obj2": 0.6050154143398698}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( ( FirstVNF_CPU_Server / RRS ) / ( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem / ( Const / FirstVNF_RAM_Server ) ) ) - ( MDR / MDR ) ) * PN ) )", "choosing": "( ( Min( RRSe ,( CS - RCSe ) ) * Max( CS,Min( ( Min( CS ,RRSe ) * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.6549413465175837}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "Min( ( ( ACS + ( ARS - AMS ) ) - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( ( CS - Min( MUR ,RMSe ) ) + ( ( DS - MUC ) * ( ( RMSe - DS ) - DS ) ) ) - ( Max( Max( RCSe,MUC ),( MUC + CS ) ) + Min( CS ,RCSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6933631184970739}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "Min( Max( Min( PN ,PN ),ACS ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) - ( ( ( RRSe + MUC ) + ( Max( ( MLU * ( MUC + RMSe ) ),MLU ) + ( MUR * MLU ) ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5767885578573132}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + AMS ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,( MUC + ( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( ( MUR - MUM ) + RCSe ) ) ) ),RRSe ) ) )", "obj1": 0.9898785425101214, "obj2": 0.005662989946311603}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const - DDR ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7672064777327935, "obj2": 0.09029831371499066}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RMSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11740890688259109, "obj2": 0.6888861523486658}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ( BR - CRS ) ,( MDR / ARS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ( ACS + ( ARS + CRS ) ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( RCSe + MUM ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - ( ( Max( RMSe,MUC ) + CS ) * ( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * DDR ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( Max( RRSe,MUC ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.7854251012145749, "obj2": 0.0840385372014374}, {"determining": "Min( Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( BR * ( ( FirstVNF_Mem_Server - CRS ) / ( FirstVNF_Mem_Server + ACS ) ) ) ) * FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( FirstVNF_Mem_Server + ARS ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe + RCSe ) ) * Max( CS,Min( ( MUM * Max( MLU,( RMSe / MUR ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.6995903754535548}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03605492262719984}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "Min( ( FirstVNF_RAM / RRS ) ,( Const * BR ) )", "choosing": "( ( ( ( MUR / RRSe ) + ( DS + ( Min( RCSe ,( Max( RMSe,RCSe ) + RRSe ) ) / ( MUR - MLU ) ) ) ) + ( ( ( MUM + MLU ) * RRSe ) + ( MUC + CS ) ) ) - ( RRSe / Min( MUM ,( ( MLU * Max( RRSe,RRSe ) ) * RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5388189201600645}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( ( CS * MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( Max( MUC,RRSe ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.541955448557751}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,( Min( BR ,FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) / ( ( PN - RRS ) / Min( CRS ,( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( Min( ( MUM * Max( MLU,( ( MLU * CS ) - ( MUM + RRSe ) ) ) ) ,MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.6265466582847353}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( Const + ( PN - FirstVNF_Mem_Server ) ) ) ,( Max( MDR,( PN - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( Max( MLU,RMSe ) - ( ( ( DS - ( MLU - Max( ( RRSe - MUM ),RCSe ) ) ) * ( MUC - DS ) ) + Max( MUM,MUR ) ) )", "obj1": 0.9939271255060729, "obj2": 0.002799832813349947}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.704594859189643}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( MRS ,Max( Min( Min( Max( DDR,FirstVNF_CPU_Server ) ,ARS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + FirstVNF_CPU_Server ) ,( Max( AMS,Min( DDR ,ACS ) ) * ( DDR - ( Max( ( Const / MRS ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( MUR ,( RMSe * ( Max( ( ( CS * RMSe ) + MUR ),RMSe ) - ( ( ( MUR * RCSe ) * ( RMSe / RRSe ) ) - ( RCSe * CS ) ) ) ) ) * CS ) - Max( ( MUM * ( CS / ( MLU / RRSe ) ) ),( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,Min( RRSe ,CS ) ) ) - CS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.0938053062932524}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,Min( FirstVNF_CPU_Server ,ACS ) ) ) ,Max( MRS,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( ARS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,RCSe ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),MUM ) ) - ( ( MUR + MUC ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,MDR ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.6072874493927125, "obj2": 0.2878162383747774}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}], "28": [{"determining": "( ( ( PN * ( FirstVNF_CPU / FirstVNF_RAM ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( DS - ( ( ( RCSe + MLU ) / MUR ) + Min( ( ( ( DS + MUM ) * ( ( MUC / MUM ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * Min( ( RRS + PN ) ,( ACS * MRS ) ) ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.22068306935204424}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( ( CRS * Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) ) / Const ) / Max( ( Min( Const ,AMS ) + ( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( DDR + Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS + BR ) ) ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ) * ( CS - Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( ( MLU * RMSe ) ,Max( MUR,RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12376424534777729}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + MUR ) - ( RCSe - RCSe ) ),( MUC + CS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3550421066255927}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Min( ( RRS + PN ) ,( ACS * MRS ) ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Max( PN,DDR ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe / ( ( RRSe + Min( RRSe ,MUR ) ) + Max( MLU,Min( Max( CS,MUC ) ,( Min( MUM ,MLU ) + DS ) ) ) ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.48945152201640046}, {"determining": "( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( BR ,ARS ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Max( AMS,( ( AMS / MRS ) - BR ) ) ) ) ) ) * Max( PN,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) / ( MUR * MUC ) ) + Max( ( RMSe - Min( MUM ,RCSe ) ),Min( Max( MLU,( ( ( ( CS / MLU ) - ( RMSe * CS ) ) * CS ) + ( RMSe + MLU ) ) ) ,MUM ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7446168771556363}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( MUM / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM + ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( Max( RMSe,( ( RMSe * ( RCSe + RRSe ) ) - CS ) ) / RRSe ) ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.5464889349015537}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4543164923421593}, {"determining": "Min( ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),Max( CRS,DDR ) ) + Min( ( PN + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,Min( ( ( RRS - ( AMS - BR ) ) / ( Min( ( MRS + MDR ) ,Min( Const ,AMS ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( Const * RRS ) ) )", "choosing": "Min( ( ( MUR + MUR ) - Min( MUR ,( ( RRSe + ( MUM / DS ) ) * CS ) ) ) ,( ( Max( ( ( Min( RCSe ,MUC ) + ( ( MUC - MUR ) + ( RCSe * MUC ) ) ) - ( RMSe * RRSe ) ),DS ) * ( MLU + MUR ) ) * Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.307225453123081}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "Min( ( AMS * RRS ) ,Max( ( ACS * Max( MRS,PN ) ),MDR ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / Max( DS,RRSe ) ) ) ) ,DS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6769279221741951}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.5987889952833026}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4251012145748988, "obj2": 0.4068714267895038}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03605492262719984}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( ( ( Max( AMS,Max( ARS,FirstVNF_CPU_Server ) ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),CRS ) / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,( FirstVNF_CPU / CRS ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( ( MLU * RRSe ) + Min( Max( CS,MLU ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) + ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,MUM ) )", "obj1": 0.4109311740890688, "obj2": 0.44201531476206346}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( DS - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) )", "obj1": 0.4676113360323887, "obj2": 0.36475257505047465}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.06882591093117409, "obj2": 0.7248374680338614}, {"determining": "( ( ( FirstVNF_CPU - ( MDR / Const ) ) / ( Const - FirstVNF_RAM_Server ) ) / ( PN - Min( FirstVNF_RAM ,( ( ( FirstVNF_RAM - ( PN + DDR ) ) / FirstVNF_Mem ) - ( AMS * RRS ) ) ) ) )", "choosing": "( ( RCSe * Max( Max( MUC,( Min( Max( RMSe,( RMSe * MLU ) ) ,( Min( RMSe ,RRSe ) + CS ) ) * Max( MLU,( RRSe + RMSe ) ) ) ),DS ) ) - ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( ( Min( ( MUM * CS ) ,RMSe ) - RCSe ) * MUC ) * MUR ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3298054570001431}, {"determining": "Min( ( BR - ( ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_Mem_Server ) + RRS ) ) ,( ( FirstVNF_RAM_Server + Max( MDR,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( RRSe + Max( DS,( MLU * RRSe ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( ( ( ( MUR + RCSe ) + RCSe ) - ( MUR - MUM ) ),MUM ) ) + Max( ( RCSe / MUC ),Min( RRSe ,( CS - Min( Max( RRSe,RCSe ) ,( MUC / Max( MUM,RMSe ) ) ) ) ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29841337314993627}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - FirstVNF_Mem ),Max( AMS,DDR ) ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ACS * ( MRS - ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( Max( RCSe,Max( Min( RMSe ,MUR ),RMSe ) ) + Min( RRSe ,DS ) ) + ( MUM + ( MUC * DS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6365247082170982}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( Min( FirstVNF_Mem ,Max( MDR,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.20445344129554655, "obj2": 0.6050154143398698}, {"determining": "Min( ( ( ( Max( MRS,( FirstVNF_Mem / RRS ) ) * MDR ) + ( FirstVNF_RAM / ( ARS * AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,DDR ) ) * PN ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( DDR * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( RRSe * Max( Min( RRSe ,( ( MUM + RRSe ) - ( MUC * MLU ) ) ),MUM ) ) ,( RCSe * CS ) ) * Max( MUC,MUC ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03605492262719984}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * DDR ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( Max( RRSe,MUC ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / Max( ( MLU + DS ),MUC ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.14777327935222673, "obj2": 0.6539568142975631}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * ( MUC / MLU ) ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.2992582611709717}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( ( DDR * DDR ) * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.704594859189643}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "Min( ( ( ACS + ( FirstVNF_RAM_Server * CRS ) ) / ( Const - DDR ) ) ,Max( Min( Max( Max( BR,ACS ),AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const - DDR ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / ( BR / RRS ) ) ) ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) / ( ( ( MUR + RCSe ) + MUM ) - ( Max( ( ( RCSe - RRSe ) - MLU ),( MUM * MLU ) ) - MUC ) ) ) ,( Min( Max( MUC,( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) ,( RMSe / RRSe ) ) - CS ) )", "obj1": 0.7672064777327935, "obj2": 0.09029831371499064}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "Min( Max( Min( PN ,PN ),ACS ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) - ( ( ( RRSe + MUC ) + ( Max( ( MLU * ( MUC + RMSe ) ),MLU ) + ( MUR * MLU ) ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5767885578573132}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( ( ( MRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server - PN ) ) / ( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( Max( MUM,( ( ( Max( ( CS / MUC ),Max( CS,MUR ) ) / ( DS * ( MUC * RCSe ) ) ) * ( MUC / Min( MUR ,( ( RRSe + RRSe ) * DS ) ) ) ) + MUM ) ) ,( ( DS / RRSe ) - Min( RRSe ,( RCSe - CS ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.687207448031849}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * ( ARS - MRS ) ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( MLU ,RCSe ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( RRSe + ( MUR / RRSe ) ) )", "obj1": 0.5668016194331984, "obj2": 0.29926594182309924}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( ( Const / AMS ) ,( PN - MDR ) ),Min( ( BR + ( FirstVNF_Mem * CRS ) ) ,( ( DDR - ( ACS / DDR ) ) * Max( AMS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,RMSe ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( MUR * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * ( MUM / ( RMSe * CS ) ) ) * RMSe ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07973782347385008}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0746014520242911}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( DDR + AMS ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,( MUC + ( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( ( MUR - MUM ) + RCSe ) ) ) ),RRSe ) ) )", "obj1": 0.9898785425101214, "obj2": 0.005662989946311603}, {"determining": "Min( ( ( Const - DDR ) / ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ) ,Max( Min( Min( Const ,ARS ) ,( PN - MDR ) ),( MDR - Const ) ) )", "choosing": "( MLU - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,( MUR * DS ) ) ) - CS ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.06180185842450618}, {"determining": "Min( MRS ,Max( Min( Min( Max( DDR,FirstVNF_CPU_Server ) ,ARS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const / MRS ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( MUR ,( RMSe * ( DS / RRSe ) ) ) * CS ) - ( ( MUM * ( CS / ( MLU / RRSe ) ) ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,Min( RRSe ,CS ) ) ) - CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.1002399901327765}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "( Min( ( BR - CRS ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ACS * DDR ) - ( ( ( MDR + CRS ) * ( FirstVNF_RAM + ACS ) ) - Min( ( Min( ( BR - FirstVNF_Mem_Server ) ,FirstVNF_Mem ) + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / MUR ) + MUR ) ) ) ,( ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( RRSe + DS ) ) * Min( Max( RMSe,( ( Min( CS ,Max( RMSe,MUC ) ) - RCSe ) / Min( ( MLU * DS ) ,( DS + RRSe ) ) ) ) ,MUC ) ) )", "obj1": 0.5991902834008097, "obj2": 0.29023810476224815}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / DDR ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( ( RCSe * RCSe ) / ( MUC - DS ) ) ) ) ,( Min( Max( ( RMSe * ( RCSe + RRSe ) ),( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.8218623481781376, "obj2": 0.0693876064037579}, {"determining": "Min( MRS ,Max( Min( Min( Max( DDR,FirstVNF_CPU_Server ) ,ARS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + FirstVNF_CPU_Server ) ,( Max( AMS,Min( DDR ,ACS ) ) * ( DDR - ( Max( ( Const / MRS ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( MUR ,( RMSe * ( Max( ( ( CS * RMSe ) + MUR ),RMSe ) - ( ( ( MUR * RCSe ) * ( RMSe / RRSe ) ) - ( RCSe * CS ) ) ) ) ) * CS ) - Max( ( MUM * ( CS / ( MLU / RRSe ) ) ),( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,Min( RRSe ,CS ) ) ) - CS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.0938053062932524}, {"determining": "( ( ( ( Const - RRS ) * ( FirstVNF_CPU_Server / ( DDR + FirstVNF_CPU_Server ) ) ) + ( PN - ( Max( ( MRS / FirstVNF_Mem ),RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( MUC - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( ( ( ( ( MUC - ( RCSe + DS ) ) + MLU ) / MUR ) * ( MUM * MUM ) ) + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.3631578863634776}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ( BR - CRS ) ,( MDR / ARS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ( ACS + ( ARS + CRS ) ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( RCSe + MUM ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - ( ( Max( RMSe,MUC ) + CS ) * ( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "Min( Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( BR * ( ( FirstVNF_Mem_Server - CRS ) / ( FirstVNF_Mem_Server + ACS ) ) ) ) * FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( FirstVNF_Mem_Server + ARS ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe + RCSe ) ) * Max( CS,Min( ( MUM * Max( MLU,( RMSe / MUR ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.6995903754535548}, {"determining": "Min( ( Max( MDR,( ( Max( Min( ( Const + FirstVNF_RAM_Server ) ,FirstVNF_RAM ),BR ) * Max( MRS,PN ) ) + FirstVNF_Mem ) ) - ( FirstVNF_RAM - Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( Max( ( Min( MUC ,( CS + MUM ) ) * CS ),( CS - Min( MUC ,RMSe ) ) ) - Max( ( RRSe - ( ( CS - DS ) - MLU ) ),( MUM * RRSe ) ) ) / Min( MUM ,RRSe ) ),( Min( RRSe ,RCSe ) / ( Min( RCSe ,RRSe ) / CS ) ) ) ,( ( DS - MUM ) + MUR ) )", "obj1": 0.791497975708502, "obj2": 0.08089654457153983}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( Max( ( FirstVNF_CPU_Server / Const ),Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( ( FirstVNF_RAM * RRS ) / DDR ) - DDR ) ) ) ) )", "choosing": "Min( ( MUM * Max( Max( ( CS + ( CS + CS ) ),RCSe ),RMSe ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Max( ( MUC / MLU ),( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07206620371860951}, {"determining": "Min( ( FirstVNF_RAM / RRS ) ,( Const * BR ) )", "choosing": "( ( ( ( MUR / RRSe ) + ( DS + ( Min( RCSe ,( Max( RMSe,RCSe ) + RRSe ) ) / ( MUR - MLU ) ) ) ) + ( ( ( MUM + MLU ) * RRSe ) + ( MUC + CS ) ) ) - ( RRSe / Min( MUM ,( ( MLU * Max( RRSe,RRSe ) ) * RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5388189201600645}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( ( ( CS * MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( Max( MUC,RRSe ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.541955448557751}, {"determining": "( Max( ( BR - ( MRS * CRS ) ),( FirstVNF_CPU_Server / MRS ) ) / ( FirstVNF_Mem - DDR ) )", "choosing": "Min( ( ( ( MUM * RMSe ) * MUM ) + Min( Min( ( CS - ( Max( MUM,RRSe ) + RRSe ) ) ,MLU ) ,( MUR + MUC ) ) ) ,( MUC - MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.28581440972311195}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.18421052631578946, "obj2": 0.6265466582847353}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),( ( MDR / DDR ) / BR ) ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MLU ,MUR ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - RMSe ) ),( Max( DS,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RMSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11740890688259109, "obj2": 0.6888861523486658}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,( Min( BR ,FirstVNF_Mem ) * Max( CRS,FirstVNF_Mem_Server ) ) ) / ( ( PN - RRS ) / Min( CRS ,( MRS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( Min( ( MUM * Max( MLU,( ( MLU * CS ) - ( MUM + RRSe ) ) ) ) ,MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}], "29": [{"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( ( RRSe + MUM ) / CS ) - ( ( Max( RRSe,MUC ) + Min( DS ,RRSe ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( FirstVNF_CPU / FirstVNF_RAM ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( DS - ( ( ( RCSe + MLU ) / MUR ) + Min( ( ( ( DS + MUM ) * ( ( MUC / MUM ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.22068306935204424}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( ( CRS * Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) ) / Const ) / Max( ( Min( Const ,AMS ) + ( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( DDR + Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS + BR ) ) ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ) * ( CS - Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( ( MLU * RMSe ) ,Max( MUR,RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12376424534777729}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( ( FirstVNF_CPU_Server / Const ),FirstVNF_CPU_Server ) ) ) ,Max( Max( FirstVNF_CPU,( Max( ( ARS + FirstVNF_CPU ),Min( ( PN - MDR ) ,RRS ) ) * Const ) ),Const ) )", "choosing": "Min( ( MLU - RMSe ) ,( Min( ( RRSe / RRSe ) ,( ( RMSe * ( RCSe + RRSe ) ) / ( CS - DS ) ) ) - CS ) )", "obj1": 0.52834008097166, "obj2": 0.353355136541292}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Min( ( RRS + PN ) ,( ACS * MRS ) ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Max( PN,DDR ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe / ( ( RRSe + Min( RRSe ,MUR ) ) + Max( MLU,Min( Max( CS,MUC ) ,( Min( MUM ,MLU ) + DS ) ) ) ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.48945152201640046}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) + CS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.044757818271136104}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( ( Const - DDR ) * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,( ( BR * FirstVNF_Mem ) / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( RCSe / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM / ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( ( Max( RMSe,( ( RMSe * ( MLU + RRSe ) ) - CS ) ) / RRSe ) ,Max( MUC,( CS - DS ) ) ) - CS ) )", "obj1": 0.29554655870445345, "obj2": 0.5400069218391619}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + MUR ) - ( RCSe - RCSe ) ),( MUC + CS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3550421066255927}, {"determining": "( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( BR ,ARS ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Max( AMS,( ( AMS / MRS ) - BR ) ) ) ) ) ) * Max( PN,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) / ( MUR * MUC ) ) + Max( ( RMSe - Min( MUM ,RCSe ) ),Min( Max( MLU,( ( ( ( CS / MLU ) - ( RMSe * CS ) ) * CS ) + ( RMSe + MLU ) ) ) ,MUM ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7446168771556363}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4543164923421593}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.5987889952833026}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29397185147081445}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "Min( ( AMS * RRS ) ,Max( ( ACS * Max( MRS,PN ) ),MDR ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / Max( DS,RRSe ) ) ) ) ,DS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6769279221741951}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4251012145748988, "obj2": 0.4068714267895038}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( ( ( Max( AMS,Max( ARS,FirstVNF_CPU_Server ) ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),CRS ) / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,( FirstVNF_CPU / CRS ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( ( MLU * RRSe ) + Min( Max( CS,MLU ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) + ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,MUM ) )", "obj1": 0.4109311740890688, "obj2": 0.44201531476206346}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( DS - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.36477109611775266}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - FirstVNF_Mem ),Max( AMS,DDR ) ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ACS * ( MRS - ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( Max( RCSe,Max( Min( RMSe ,MUR ),RMSe ) ) + Min( RRSe ,DS ) ) + ( MUM + ( MUC * DS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6365247082170982}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * ( MUC / MLU ) ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.2992582611709717}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( MDR ,FirstVNF_RAM ) ),( Const * PN ) ) ) ) + ( FirstVNF_Mem_Server - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - ( ( DS + DS ) * ( Min( RRSe ,( MLU / ( ( Max( CS,RRSe ) + RRSe ) + MUM ) ) ) + CS ) ) )", "obj1": 0.06680161943319839, "obj2": 0.72641981133936}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "( ( ( FirstVNF_CPU - ( MDR / Const ) ) / ( Const - FirstVNF_RAM_Server ) ) / ( PN - Min( FirstVNF_RAM ,( ( ( FirstVNF_RAM - ( PN + DDR ) ) / FirstVNF_Mem ) - ( AMS * RRS ) ) ) ) )", "choosing": "( ( RCSe * Max( Max( MUC,( Min( Max( RMSe,( RMSe * MLU ) ) ,( Min( RMSe ,RRSe ) + CS ) ) * Max( MLU,( RRSe + RMSe ) ) ) ),DS ) ) - ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( ( Min( ( MUM * CS ) ,RMSe ) - RCSe ) * MUC ) * MUR ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3298054570001431}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( ( AMS * RRS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( ( MLU + RRSe ),RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.28407548610026984}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( Min( FirstVNF_Mem ,Max( MDR,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.20445344129554655, "obj2": 0.6050154143398698}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( ( ( ( ( BR * FirstVNF_Mem_Server ) * ( ( PN / ( Min( FirstVNF_CPU ,AMS ) / ACS ) ) * MDR ) ) * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem - Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( DDR ,( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( RCSe ,DS ) - ( RCSe * MUC ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5526315789473685, "obj2": 0.3096840169191546}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.704594859189643}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - FirstVNF_Mem_Server ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6928811798582215}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03605492262719984}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "Min( Max( Min( PN ,PN ),ACS ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) - ( ( ( RRSe + MUC ) + ( Max( ( MLU * ( MUC + RMSe ) ),MLU ) + ( MUR * MLU ) ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5767885578573132}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "Min( ( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),Max( CRS,DDR ) ) + Min( ( PN + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,Min( ( ( RRS - ( AMS - BR ) ) / ( Min( ( MRS + MDR ) ,Min( Const ,AMS ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( Const * RRS ) ) )", "choosing": "Min( ( ( MUR + MUR ) - Min( MUR ,( ( RRSe + ( MUM / DS ) ) * CS ) ) ) ,( ( Max( ( ( Min( RCSe ,MUC ) + ( ( MUC - MUR ) + ( RCSe * MUC ) ) ) - ( RMSe * RRSe ) ),DS ) * ( MLU + MUR ) ) * Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) ) )", "obj1": 0.5546558704453441, "obj2": 0.307225453123081}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( DDR ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * ( ARS - MRS ) ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( RCSe + Min( RCSe ,MUC ) ) + Min( MLU ,RCSe ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( RRSe + ( MUR / RRSe ) ) )", "obj1": 0.5668016194331984, "obj2": 0.29926594182309924}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0746014520242911}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),( ( MDR / DDR ) / BR ) ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MLU ,MUR ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - RMSe ) ),( Max( DS,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( ( Const - DDR ) / ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ) ,Max( Min( Min( Const ,ARS ) ,( PN - MDR ) ),( MDR - Const ) ) )", "choosing": "( MLU - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,( MUR * DS ) ) ) - CS ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.06180185842450618}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( ( Const / AMS ) ,( PN - MDR ) ),Min( ( BR + ( FirstVNF_Mem * CRS ) ) ,( ( DDR - ( ACS / DDR ) ) * Max( AMS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,RMSe ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( MUR * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * ( MUM / ( RMSe * CS ) ) ) * RMSe ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07973782347385008}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "( Min( Min( DDR ,FirstVNF_CPU ) ,( MDR / FirstVNF_CPU_Server ) ) / ( ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( Max( MRS,FirstVNF_Mem ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ) * RCSe ) + ( RCSe + MLU ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "Min( ( FirstVNF_RAM / RRS ) ,( Const * BR ) )", "choosing": "( ( ( ( MUR / RRSe ) + ( DS + ( Min( RCSe ,( Max( RMSe,RCSe ) + RRSe ) ) / ( MUR - MLU ) ) ) ) + ( ( ( MUM + MLU ) * RRSe ) + ( MUC + CS ) ) ) - ( RRSe / Min( MUM ,( ( MLU * Max( RRSe,RRSe ) ) * RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5388189201600645}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RMSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11740890688259109, "obj2": 0.6888861523486658}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + AMS ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( RCSe + MLU ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( ( MUR - MUM ) + RCSe ) ) ) ),RRSe ) ) )", "obj1": 0.9898785425101214, "obj2": 0.005662989946311602}, {"determining": "( ( FirstVNF_Mem_Server / Max( Max( MDR,FirstVNF_Mem ),( ( DDR * DDR ) / ( ( Max( ARS,BR ) - BR ) * ( FirstVNF_CPU_Server * BR ) ) ) ) ) * ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,ACS ) + ( ( ACS / ARS ) * ( MDR - RRS ) ) ) ) )", "choosing": "( ( MUM * MUR ) / Max( ( Max( ( RCSe * RMSe ),RRSe ) * ( ( MUR * MUR ) - MLU ) ),Max( MUR,Max( Min( MUC ,Min( MUC ,RCSe ) ),( DS + RMSe ) ) ) ) )", "obj1": 0.0708502024291498, "obj2": 0.7232376903161695}, {"determining": "( Min( ( BR - CRS ) ,( MDR / ARS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( ( ( ( MDR + CRS ) - ( FirstVNF_RAM + ACS ) ) - ( ( ( ACS + ( ARS + CRS ) ) + FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,MRS ) ) ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( Max( ( RRSe - Min( MUC ,RMSe ) ),( Min( MUC ,( ( RCSe + MUM ) + ( RRSe + ( MUC + RMSe ) ) ) ) * CS ) ) - ( ( Max( RMSe,MUC ) + CS ) * ( RRSe / RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.5425101214574899, "obj2": 0.3398866031115248}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,Min( ( MUM * ( MLU + RRSe ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5465587044534413, "obj2": 0.33354849226355593}, {"determining": "Min( Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( BR * ( ( FirstVNF_Mem_Server - CRS ) / ( FirstVNF_Mem_Server + ACS ) ) ) ) * FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( FirstVNF_Mem_Server + ARS ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe + RCSe ) ) * Max( CS,Min( ( MUM * Max( MLU,( RMSe / MUR ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.10121457489878542, "obj2": 0.6995903754535548}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / ARS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * DDR ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( Max( RRSe,MUC ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / ( Min( RRSe ,MUR ) + MUR ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "Min( ( Min( Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( BR * MRS ) ) * FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / Max( MLU,( RRSe / RMSe ) ) ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08343829734432015}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,( ACS - ARS ) ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( Max( ( FirstVNF_CPU + PN ),( ACS * MRS ) ) - ( PN / DDR ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( ( RCSe * ( MUR - ( ( RMSe - RMSe ) / MUR ) ) ) / ( MUC - DS ) ) ) ) ,( Min( Max( ( DS * ( RCSe + RRSe ) ),( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.8259109311740891, "obj2": 0.06829002539965079}, {"determining": "Min( ( ( ( Max( MRS,( FirstVNF_Mem / RRS ) ) * MDR ) + ( FirstVNF_RAM / ( ARS * AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,DDR ) ) * PN ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( DDR * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( RRSe * Max( Min( RRSe ,( ( MUM + RRSe ) - ( MUC * MLU ) ) ),MUM ) ) ,( RCSe * CS ) ) * Max( MUC,MUC ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03605492262719984}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869962549774319}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( Max( ( FirstVNF_CPU_Server / Const ),Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( ( FirstVNF_RAM * RRS ) / DDR ) - DDR ) ) ) ) )", "choosing": "Min( ( MUM * Max( Max( ( CS + ( CS + CS ) ),RCSe ),RMSe ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Max( ( MUC / MLU ),( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07206620371860951}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6527971105459706}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,( ACS / DDR ) ) / RRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + RCSe ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + MUR ) - ( RCSe - RCSe ) ),( MUC + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3576338211015458}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "( ( ( ( Const - RRS ) * ( FirstVNF_CPU_Server / ( DDR + FirstVNF_CPU_Server ) ) ) + ( PN - ( Max( ( MRS / FirstVNF_Mem ),RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( MUC - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( ( ( ( ( MUC - ( RCSe + DS ) ) + MLU ) / MUR ) * ( MUM * MUM ) ) + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.3631578863634776}, {"determining": "Min( MRS ,Max( Min( Min( Max( DDR,FirstVNF_CPU_Server ) ,ARS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const / MRS ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( MUR ,( RMSe * ( DS / RRSe ) ) ) * CS ) - ( ( MUM * ( CS / ( MLU / RRSe ) ) ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,Min( RRSe ,CS ) ) ) - CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.1002399901327765}, {"determining": "Min( MRS ,Max( Min( Min( Max( DDR,FirstVNF_CPU_Server ) ,ARS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + FirstVNF_CPU_Server ) ,( Max( AMS,Min( DDR ,ACS ) ) * ( DDR - ( Max( ( Const / MRS ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( MUR ,( RMSe * ( Max( ( ( CS * RMSe ) + MUR ),RMSe ) - ( ( ( MUR * RCSe ) * ( RMSe / RRSe ) ) - ( RCSe * CS ) ) ) ) ) * CS ) - Max( ( MUM * ( CS / ( MLU / RRSe ) ) ),( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,Min( RRSe ,CS ) ) ) - CS ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.0938053062932524}, {"determining": "Min( ( ( ACS + ( FirstVNF_RAM_Server * CRS ) ) / ( Const - DDR ) ) ,Max( Min( Max( Max( BR,ACS ),AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const - DDR ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / ( BR / RRS ) ) ) ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) / ( ( ( MUR + RCSe ) + MUM ) - ( Max( ( ( RCSe - RRSe ) - MLU ),( MUM * MLU ) ) - MUC ) ) ) ,( Min( Max( MUC,( ( MLU + CS ) + Max( RMSe,RRSe ) ) ) ,( RMSe / RRSe ) ) - CS ) )", "obj1": 0.7692307692307693, "obj2": 0.08955923311741618}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( ( DDR * DDR ) * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}], "30": [{"determining": "Min( ( ( ( ( BR * FirstVNF_Mem_Server ) * ( ( PN / ( Min( FirstVNF_CPU ,AMS ) / ACS ) ) * MDR ) ) * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem - Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( DDR ,( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( RCSe ,DS ) - ( RCSe * MUC ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( ( RRSe + MUM ) / CS ) - ( ( Max( RRSe,MUC ) + Min( DS ,RRSe ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.22068306935204424}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe + MUM ) / CS ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.3504986787988595}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5404858299595142, "obj2": 0.30595086336481775}, {"determining": "( ( ( CRS * Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) ) / Const ) / Max( ( Min( Const ,AMS ) + ( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( DDR + Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS + BR ) ) ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ) * ( CS - Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( ( MLU * RMSe ) ,Max( MUR,RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12376424534777729}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) )", "obj1": 0.5607287449392713, "obj2": 0.29876088338836065}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Min( ( RRS + PN ) ,( ACS * MRS ) ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Max( PN,DDR ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe / ( ( RRSe + Min( RRSe ,MUR ) ) + Max( MLU,Min( Max( CS,MUC ) ,( Min( MUM ,MLU ) + DS ) ) ) ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.48945152201640046}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( ( Const - DDR ) * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,( ( BR * FirstVNF_Mem ) / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( RCSe / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM / ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( ( Max( RMSe,( ( RMSe * ( MLU + RRSe ) ) - CS ) ) / RRSe ) ,Max( MUC,( CS - DS ) ) ) - CS ) )", "obj1": 0.29554655870445345, "obj2": 0.5400069218391619}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + MUR ) - ( RCSe - RCSe ) ),( MUC + CS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3550421066255927}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29397185147081445}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4543164923421593}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.5987889952833026}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "Min( ( AMS * RRS ) ,Max( ( ACS * Max( MRS,PN ) ),MDR ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / Max( DS,RRSe ) ) ) ) ,DS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6769279221741951}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4251012145748988, "obj2": 0.4068714267895038}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( ( ( Max( AMS,Max( ARS,FirstVNF_CPU_Server ) ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),CRS ) / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,( FirstVNF_CPU / CRS ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( ( MLU * RRSe ) + Min( Max( CS,MLU ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) + ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,MUM ) )", "obj1": 0.4109311740890688, "obj2": 0.44201531476206346}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( DS - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.36477109611775266}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) + CS ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.044757818271136104}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( BR ,ARS ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Max( AMS,( ( AMS / MRS ) - BR ) ) ) ) ) ) * Max( PN,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) / ( MUR * MUC ) ) + Max( ( RMSe - Min( MUM ,RCSe ) ),Min( Max( MLU,( ( ( ( CS / MLU ) - ( RMSe * CS ) ) * CS ) + ( RMSe + MLU ) ) ) ,MUM ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7446168771556363}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( ( Const / AMS ) ,( PN - MDR ) ),Min( ( BR + ( FirstVNF_Mem * CRS ) ) ,( ( DDR - ( ACS / DDR ) ) * Max( AMS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,RMSe ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( MUR * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * ( MUM / ( RMSe * CS ) ) ) * RMSe ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07973782347385008}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( ( AMS * RRS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( ( MLU + RRSe ),RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.28407548610026984}, {"determining": "Min( ( ( ( Max( MRS,( FirstVNF_Mem / RRS ) ) * MDR ) + ( FirstVNF_RAM / ( ARS * AMS ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( PN,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( MUM * MUM ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( Min( RCSe ,MUC ) + ( ( MUC - MUR ) + ( RCSe * MUC ) ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04331514943755231}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( Min( FirstVNF_Mem ,Max( MDR,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.20445344129554655, "obj2": 0.6050154143398698}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - AMS ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( ( RMSe * MLU ) ,( MUM / MUM ) ) ) ) + ( ( MUR / DS ) / ( MUR * RMSe ) ) )", "obj1": 0.06477732793522267, "obj2": 0.7412231422233133}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6527971105459706}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.704594859189643}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "Min( ( Min( Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( BR * MRS ) ) * FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / Max( MLU,( RRSe / RMSe ) ) ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08343829734432015}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( MRS ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( DS - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.40151744278410073}, {"determining": "Min( Max( Min( PN ,PN ),ACS ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) - ( ( ( RRSe + MUC ) + ( Max( ( MLU * ( MUC + RMSe ) ),MLU ) + ( MUR * MLU ) ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5767885578573132}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869962549774319}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( MDR ,FirstVNF_RAM ) ),( Const * PN ) ) ) ) + ( FirstVNF_Mem_Server - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - ( ( DS + DS ) * ( Min( RRSe ,( MLU / ( ( Max( CS,RRSe ) + RRSe ) + MUM ) ) ) + CS ) ) )", "obj1": 0.06680161943319839, "obj2": 0.72641981133936}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0746014520242911}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RMSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11740890688259109, "obj2": 0.6888861523486658}, {"determining": "Min( ( ( Const - DDR ) / ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ) ,Max( Min( Min( Const ,ARS ) ,( PN - MDR ) ),( MDR - Const ) ) )", "choosing": "( MLU - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,( MUR * DS ) ) ) - CS ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.06180185842450618}, {"determining": "Min( MRS ,Max( Min( Min( Max( DDR,FirstVNF_CPU_Server ) ,ARS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const / MRS ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( MUR ,( RMSe * ( DS / RRSe ) ) ) * CS ) - ( ( MUM * ( CS / ( MLU / RRSe ) ) ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,Min( RRSe ,CS ) ) ) - CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.1002399901327765}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),( ( MDR / DDR ) / BR ) ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MLU ,MUR ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - RMSe ) ),( Max( DS,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "( ( Min( FirstVNF_RAM ,PN ) - RRS ) * ( FirstVNF_CPU - Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( Max( RRS,FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( CS - MUR ) / ( Min( MUC ,DS ) * Max( CS,( RCSe / Max( MUR,MUR ) ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7146622053695851}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3097165991902834, "obj2": 0.5339601921093623}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( ( FirstVNF_RAM / RRS ) ,( Const * BR ) )", "choosing": "( ( ( ( MUR / RRSe ) + ( DS + ( Min( RCSe ,( Max( RMSe,RCSe ) + RRSe ) ) / ( MUR - MLU ) ) ) ) + ( ( ( MUM + MLU ) * RRSe ) + ( MUC + CS ) ) ) - ( RRSe / Min( MUM ,( ( MLU * Max( RRSe,RRSe ) ) * RCSe ) ) ) )", "obj1": 0.305668016194332, "obj2": 0.5388189201600645}, {"determining": "Min( ( BR / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - FirstVNF_Mem ) / Max( AMS,DDR ) ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RRSe ) + RRSe ) / Min( ( MUC * MUM ) ,MUM ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + ( MUM + ( MUC * DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6388941789536697}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - FirstVNF_Mem_Server ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6928811798582215}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - FirstVNF_Mem ),Max( AMS,DDR ) ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ACS * ( MRS - ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( Max( RCSe,Max( Min( RMSe ,MUR ),RMSe ) ) + Min( RRSe ,DS ) ) + ( MUM + ( MUC * DS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6365247082170982}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03605492262719984}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( MUC * DS ) - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) + CS ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.6586929860694659}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / ARS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * DDR ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( Max( RRSe,MUC ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( ( ( Const - RRS ) * ( FirstVNF_CPU_Server / ( DDR + FirstVNF_CPU_Server ) ) ) + ( PN - ( Max( ( MRS / FirstVNF_Mem ),RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( MUC - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( ( ( ( ( MUC - ( RCSe + DS ) ) + MLU ) / MUR ) * ( MUM * MUM ) ) + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.3631578863634776}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( Max( ( FirstVNF_CPU_Server / Const ),Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( ( FirstVNF_RAM * RRS ) / DDR ) - DDR ) ) ) ) )", "choosing": "Min( ( MUM * Max( Max( ( CS + ( CS + CS ) ),RCSe ),RMSe ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Max( ( MUC / MLU ),( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07206620371860951}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( MDR ,FirstVNF_RAM ) ),( Const * PN ) ) ) ) + ( FirstVNF_Mem_Server - PN ) ) ) / ( Min( ( ( ( FirstVNF_Mem - FirstVNF_Mem ) / Max( AMS,DDR ) ) + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - ( ( DS + DS ) * ( Min( RRSe ,( MLU / ( ( Max( MUM,RRSe ) + RRSe ) + MUM ) ) ) + CS ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7218053921488631}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,( ACS / DDR ) ) / RRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + RCSe ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + MUR ) - ( RCSe - RCSe ) ),( MUC + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3576338211015458}, {"determining": "Min( ( ( Const - DDR ) / ( ( ( AMS - BR ) - FirstVNF_CPU_Server ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ) ,Max( Min( Min( Const ,ARS ) ,( PN - MDR ) ),( MDR - Const ) ) )", "choosing": "( MLU - ( ( MUM * RRSe ) + ( Max( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ),MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,( MUR * DS ) ) ) - CS ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.028096803097785367}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + AMS ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( RCSe + MLU ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( ( MUR - MUM ) + RCSe ) ) ) ),RRSe ) ) )", "obj1": 0.9898785425101214, "obj2": 0.005662989946311602}, {"determining": "Min( ( ( ( Max( MRS,( FirstVNF_Mem / RRS ) ) * MDR ) + ( FirstVNF_RAM / ( ARS * AMS ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( PN,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( ( DDR * Min( ( FirstVNF_RAM / CRS ) ,MRS ) ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( Min( ( ( MUC - MUR ) + ( RCSe * MUC ) ) ,( ( MUM + RRSe ) - ( MUC * MLU ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.9129554655870445, "obj2": 0.03605492262719984}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_RAM + ACS ) / AMS ) - BR ) ) / Min( Const ,FirstVNF_RAM_Server ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * Min( MRS ,FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU * MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6980466302706639}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,( ACS - ARS ) ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( Max( ( FirstVNF_CPU + PN ),( ACS * MRS ) ) - ( PN / DDR ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( ( RCSe * ( MUR - ( ( RMSe - RMSe ) / MUR ) ) ) / ( MUC - DS ) ) ) ) ,( Min( Max( ( DS * ( RCSe + RRSe ) ),( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.8259109311740891, "obj2": 0.06829002539965079}, {"determining": "( ( ( MRS / MRS ) + ( PN - FirstVNF_CPU ) ) / Min( ( CRS / FirstVNF_Mem_Server ) ,Min( Const ,AMS ) ) )", "choosing": "Min( Max( Min( MLU ,Max( MUR,CS ) ),MUM ) ,( Min( RRSe ,( RCSe - CS ) ) * ( ( MUC + DS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.08524516554132068}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "Min( ( ( ACS + ( FirstVNF_RAM_Server * CRS ) ) / ( Const - DDR ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const - DDR ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / ( BR / RRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.0904818932748092}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / ARS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * DDR ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( Max( RRSe,MUC ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / ( Min( RRSe ,MUR ) + MUR ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( ( Const / AMS ) ,( PN - MDR ) ),Min( ( BR + ( FirstVNF_Mem * CRS ) ) ,( ( DDR - ( ACS / DDR ) ) * Max( AMS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,RMSe ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( MUR * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * ( MUM / ( RMSe * CS ) ) ) * RMSe ) ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08801951898626897}], "31": [{"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + AMS ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem - Const ) ) ) ) - FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( RCSe + MLU ) - ( DS / Max( Max( MUC,Max( MLU,( Max( Min( CS ,RMSe ),( MUC * DS ) ) + ( ( MUR - MUM ) + RCSe ) ) ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( BR * FirstVNF_Mem_Server ) * ( ( PN / ( Min( FirstVNF_CPU ,AMS ) / ACS ) ) * MDR ) ) * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem - Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( DDR ,( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( RCSe ,DS ) - ( RCSe * MUC ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,ACS ) - ( ( Const + ( RRS / ACS ) ) / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( RRSe ,( MUM / MUC ) ) ) ) + ( ( DS / MUR ) / ( MUR * ( MLU + ( RRSe - CS ) ) ) ) )", "obj1": 0.05060728744939271, "obj2": 0.7775988487446742}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6356275303643725, "obj2": 0.22068306935204424}, {"determining": "( ( PN - Min( FirstVNF_RAM ,( ( FirstVNF_CPU - FirstVNF_RAM ) - ( AMS * RRS ) ) ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe + MUM ) / CS ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.52834008097166, "obj2": 0.3504986787988595}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.680161943319838, "obj2": 0.175849872553211}, {"determining": "Min( ( ( Const - DDR ) / ( CRS / AMS ) ) ,( Min( ( Min( CRS ,Min( ( Min( FirstVNF_CPU ,PN ) + PN ) ,FirstVNF_Mem_Server ) ) + Const ) ,Max( RRS,ARS ) ) * Min( Min( Const ,AMS ) ,( MDR + AMS ) ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.6963562753036437, "obj2": 0.17155211920264016}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.5404858299595142, "obj2": 0.30595086336481775}, {"determining": "( ( ( CRS * Min( ( ACS * MRS ) ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( RRS * FirstVNF_CPU ) ) ) ) / Const ) / Max( ( Min( Const ,AMS ) + ( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( ( DDR + Min( Min( FirstVNF_CPU ,FirstVNF_Mem ) ,( AMS + BR ) ) ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ) * ( CS - Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( ( MLU * RMSe ) ,Max( MUR,RRSe ) ) )", "obj1": 0.7125506072874493, "obj2": 0.12376424534777729}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) )", "obj1": 0.5607287449392713, "obj2": 0.29876088338836065}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / RRS ) ) ) / ( Const - ( ACS + ( ( Max( CRS,( ( RRS / CRS ) + ( FirstVNF_RAM / MDR ) ) ) / ( BR + ( ( FirstVNF_RAM / AMS ) / AMS ) ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( Min( Min( RRSe ,RCSe ) ,( MUC / CS ) ),( Max( Max( Min( ( RMSe - ( RRSe + MLU ) ) ,MUM ),Min( ( MUC + RCSe ) ,Min( ( MUC - RRSe ) ,( RRSe + MUC ) ) ) ),CS ) - ( DS + RRSe ) ) ) ,Max( RRSe,( MUM + Max( MUR,RMSe ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.2626065862107043}, {"determining": "Min( ( Min( ( RRS + PN ) ,( ACS * MRS ) ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Max( PN,DDR ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe / ( ( RRSe + Min( RRSe ,MUR ) ) + Max( MLU,Min( Max( CS,MUC ) ,( Min( MUM ,MLU ) + DS ) ) ) ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC + CS ) ) ) )", "obj1": 0.32793522267206476, "obj2": 0.48945152201640046}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + MUR ) - ( RCSe - RCSe ) ),( MUC + CS ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.3550421066255927}, {"determining": "( Min( CRS ,MDR ) * ( FirstVNF_Mem_Server / RRS ) )", "choosing": "Min( ( MUM + ( MUC * DS ) ) ,( Min( RRSe ,Max( DS,Max( Max( DS,RRSe ),RMSe ) ) ) * ( ( DS / RMSe ) * ( ( ( MUC / ( RRSe / CS ) ) - RMSe ) - RCSe ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.5278195795485982}, {"determining": "Min( ( AMS + Const ) ,( ( ( Min( Min( FirstVNF_CPU ,PN ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) / RRS ) - Max( Max( FirstVNF_CPU_Server,( AMS / Const ) ),( ( Max( MRS,Min( ARS ,FirstVNF_CPU ) ) - MDR ) + ( FirstVNF_RAM - ARS ) ) ) ) * ( Max( MDR,DDR ) * ( ( ( RRS - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,( MUM - ( RRSe + ( Max( MLU,MLU ) * ( RCSe * DS ) ) ) ) ),( ( RRSe + MUM ) * ( ( MUM * MUR ) / Max( RMSe,Min( RRSe ,CS ) ) ) ) ) * ( CS * DS ) ) - Min( RMSe ,Min( RMSe ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4371057355864069}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.29397185147081445}, {"determining": "( ( ( PN * ( ( DDR * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( AMS * RRS ) ) / DDR ) ) / Max( DDR,DDR ) ) ) + Min( ( BR - CRS ) ,Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - DDR ) ) ) ) ) / ( Min( ( FirstVNF_CPU_Server - RRS ) ,( MDR / ( Const - Max( AMS,FirstVNF_Mem ) ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS - MUC ) * ( ( CS / RCSe ) * MUR ) ) + Max( CS,Min( MUR ,RMSe ) ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( ( RCSe / MUC ),Max( CS,Min( MLU ,RMSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.4543164923421593}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Max( ( ( AMS * RRS ) - ( FirstVNF_CPU * ( ACS + BR ) ) ),DDR ) ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4456174490687788}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.5569725114404461}, {"determining": "Min( ( ( MDR + BR ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR / Min( ( MDR - Max( ( BR + FirstVNF_Mem ),( AMS + Max( RRS,FirstVNF_CPU ) ) ) ) ,DDR ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) + ( ( ( ( ( ( RMSe - MUM ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.3441295546558704, "obj2": 0.4875526505821507}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / Min( Max( ( BR * FirstVNF_CPU ),ARS ) ,( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Min( CS ,Min( ( MUM * Max( RCSe,CS ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.23076923076923078, "obj2": 0.587244500385671}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,BR ) / RRS ) ) ) / ( ( Max( ACS,MRS ) - MDR ) + ( FirstVNF_RAM / Max( Max( ( Const / CRS ),Min( MDR ,( ( FirstVNF_Mem * DDR ) / ( ACS * FirstVNF_Mem ) ) ) ),BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - DS ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / Max( ( MLU * Min( CS ,( DS + ( ( MLU / MUR ) / MUM ) ) ) ),MUC ) )", "obj1": 0.8724696356275303, "obj2": 0.05715837405355242}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( ( ( Max( ( FirstVNF_Mem + AMS ),MRS ) / CRS ) / Const ) - MDR ) )", "choosing": "( ( Min( Min( RMSe ,CS ) ,Min( ( Min( ( ( MLU - RCSe ) + MUM ) ,MUC ) + ( MUC - Max( Max( DS,MUC ),RCSe ) ) ) ,( MUC * ( CS - ( ( DS - DS ) - ( CS + MUR ) ) ) ) ) ) * Max( ( ( MUM * ( Min( ( MUC - DS ) ,( MLU + DS ) ) + ( RRSe * MLU ) ) ) - MUR ),CS ) ) - Min( CS ,RMSe ) )", "obj1": 0.20850202429149797, "obj2": 0.5987889952833026}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,ARS ) / ( Max( ( ARS - MDR ),RRS ) - Min( FirstVNF_Mem ,( ( ( MRS - PN ) - Min( CRS ,FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( Min( MUR ,MUR ) + ( Max( DS,MUR ) / ( MUR * MUC ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7636974090948936}, {"determining": "( Min( ( CRS - BR ) ,( DDR + Max( ARS,AMS ) ) ) / ( FirstVNF_RAM * PN ) )", "choosing": "( RRSe - Min( MUR ,( RMSe * ( ( MUM / Min( ( RMSe + RCSe ) ,RMSe ) ) + MLU ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.2818778682839668}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( ( Const - DDR ) * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,( ( BR * FirstVNF_Mem ) / FirstVNF_Mem_Server ) ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( DS + Min( MUC ,( RCSe / MLU ) ) ),MLU ) / Min( RCSe ,( RMSe * CS ) ) ) ) / ( ( MUM / ( MUR + RCSe ) ) - ( MUR - MUM ) ) ) ,( Min( ( Max( RMSe,( ( RMSe * ( MLU + RRSe ) ) - CS ) ) / RRSe ) ,Max( MUC,( CS - DS ) ) ) - CS ) )", "obj1": 0.29554655870445345, "obj2": 0.5400069218391619}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4251012145748988, "obj2": 0.4068714267895038}, {"determining": "Min( ( AMS * RRS ) ,Max( ( ACS * Max( MRS,PN ) ),MDR ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / Max( DS,RRSe ) ) ) ) ,DS ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12955465587044535, "obj2": 0.6769279221741951}, {"determining": "Min( ( ( ( Max( AMS,Max( ARS,FirstVNF_CPU_Server ) ) * ( DDR - ( Max( Max( FirstVNF_Mem_Server,ARS ),CRS ) / DDR ) ) ) - ( Max( ARS,FirstVNF_RAM ) * Max( FirstVNF_CPU_Server,( AMS / Const ) ) ) ) * ( Max( MDR,( FirstVNF_CPU / CRS ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( RRS * ( FirstVNF_RAM_Server + ACS ) ) ) / DDR ) ) ) ,( AMS + Const ) )", "choosing": "( ( Min( ( ( ( ( MLU * RRSe ) + Min( Max( CS,MLU ) ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RMSe ) ) ,( RCSe - CS ) ) + ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - Min( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) ,MUM ) )", "obj1": 0.4109311740890688, "obj2": 0.44201531476206346}, {"determining": "Min( ( ( ( Max( MRS,ACS ) * MDR ) + ( FirstVNF_RAM / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( FirstVNF_RAM + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( DS + ( DS - RMSe ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.04380537846705975}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ACS + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( ( ( ( BR - ACS ) * Const ) - DDR ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( DS / CS ) - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + ( ( ( ( MUR + MUC ) + MUR ) - ( MUR / MUM ) ) / ( MUC + CS ) ) ) )", "obj1": 0.27125506072874495, "obj2": 0.5633765504366836}, {"determining": "Min( PN ,( FirstVNF_Mem_Server + Min( Max( FirstVNF_Mem_Server,Max( Min( FirstVNF_RAM ,Max( ( DDR + FirstVNF_CPU ),FirstVNF_CPU_Server ) ),DDR ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM / CS ) + Max( ( DS - ( RCSe + ( ( MUC - CS ) - ( MUR - RCSe ) ) ) ),Max( CS,MUR ) ) ) - ( ( Min( RRSe ,Min( CS ,RCSe ) ) + Max( Max( MUC,CS ),RRSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) / MUM ) + CS ) ) ) )", "obj1": 0.3643724696356275, "obj2": 0.47672658543880037}, {"determining": "( ( ( Const + DDR ) + ARS ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( Max( ( Min( RRSe ,RMSe ) / RCSe ),RMSe ) / DS ) + RRSe ) - DS ) + ( Max( MUM,MLU ) / DS ) ) - Min( CS ,RMSe ) )", "obj1": 0.6255060728744939, "obj2": 0.26811269548490657}, {"determining": "( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - Min( BR ,ARS ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) / Max( AMS,( ( AMS / MRS ) - BR ) ) ) ) ) ) * Max( PN,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) / ( MUR * MUC ) ) + Max( ( RMSe - Min( MUM ,RCSe ) ),Min( Max( MLU,( ( ( ( CS / MLU ) - ( RMSe * CS ) ) * CS ) + ( RMSe + MLU ) ) ) ,MUM ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7446168771556363}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( MRS,FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( Const ,MDR ) ,( PN - MDR ) ) ,Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / DDR ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - Max( RMSe,CS ) ) * ( MUC - ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( RCSe / MUC ) ) ) ) ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( MUR,MUM ) ) + Max( ( RCSe / MUC ),( DS / RRSe ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.39098092110235255}, {"determining": "Min( ( ( ( DDR + FirstVNF_RAM ) - CRS ) / ( ACS + Max( MDR,FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( MDR ,AMS ) ,( PN - MDR ) ),Min( ( Min( ARS ,FirstVNF_Mem_Server ) * ( BR + ( FirstVNF_RAM + MDR ) ) ) ,( ( FirstVNF_CPU_Server * MDR ) + ( ( Max( CRS,( MDR - MDR ) ) + ARS ) / ( ARS - CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / ( MUM - DS ) ) + MUR ) / Min( ( CS / Max( Max( MUR,MUR ),Max( MUC,MUC ) ) ) ,( MLU - MLU ) ) ) ,Min( ( MUM / RRSe ) ,CS ) )", "obj1": 0.7530364372469636, "obj2": 0.09686185032100696}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( DS - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.3747384115381037}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.8380566801619433, "obj2": 0.06725652294160123}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,( Min( Min( AMS ,Const ) ,( MDR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_RAM ,ARS ) / DDR ) + ( Max( ( CRS / FirstVNF_CPU_Server ),MRS ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( MUC ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUR / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.4758995860698774}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( ( Const / AMS ) ,( PN - MDR ) ),Min( ( BR + ( FirstVNF_Mem * CRS ) ) ,( ( DDR - ( ACS / DDR ) ) * Max( AMS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,RMSe ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( MUR * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * ( MUM / ( RMSe * CS ) ) ) * RMSe ) ) ) )", "obj1": 0.7995951417004049, "obj2": 0.07973782347385008}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + Min( PN ,Min( ( ( ( AMS - BR ) - RRS ) / ( Min( ( AMS * RRS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) ,( ( CRS * FirstVNF_Mem_Server ) * ( DDR * Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) - MDR ) ,DDR ) ) ) )", "choosing": "Min( Max( ( ( ( ( MUR * Min( RRSe ,RMSe ) ) * CS ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) ) + ( ( CS / RCSe ) * MUR ) ),MUR ) ,( Min( ( Max( ( Max( ( MLU + RRSe ),RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,MLU ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.5991902834008097, "obj2": 0.28403348786802946}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),( ( MDR / DDR ) / BR ) ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MLU ,MUR ) ) ) - Max( ( ( MUM - RMSe ) * ( MLU - RMSe ) ),( Max( DS,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.1396761133603239, "obj2": 0.6594340980039031}, {"determining": "Min( ( Const / ( ( ( Max( FirstVNF_CPU,( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - RRS ) * ( ( MRS / ACS ) - MDR ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe + MUM ) / CS ) - Min( ( Max( MLU,( ( CS / ( MLU / RRSe ) ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) )", "obj1": 0.30364372469635625, "obj2": 0.5314987716455715}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Min( ( MRS / MDR ) ,CRS ) ) - Min( ( ( ( ARS * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server / Const ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RRSe + MUM ) ,CS ) - Min( RRSe ,MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.5736264971332231}, {"determining": "Min( ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Const ) + Min( ( RRS + PN ) ,( ACS * MRS ) ) ) ,( Min( MDR ,DDR ) * ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server + RRS ) * BR ) * RRS ) ) / DDR ) * DDR ) ) )", "choosing": "Min( ( MUM * ( ( Max( Max( ( CS / MUC ),MUC ),Min( DS ,( MUC * RCSe ) ) ) * ( Min( MUR ,( ( RRSe + MUR ) * DS ) ) * MUC ) ) + ( RCSe + Max( Max( DS,RMSe ),Min( ( ( MUC - MUC ) - CS ) ,MUC ) ) ) ) ) ,( MUM - RCSe ) )", "obj1": 0.7348178137651822, "obj2": 0.10200858246813536}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( CRS ,FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / PN ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( Max( ( MLU - MUM ),Min( Max( MUM,Max( MUC,( Min( DS ,MUR ) / Min( MUR ,DS ) ) ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( RCSe + ( MUR * MUR ) ) ) ) ),RRSe ) ) )", "obj1": 0.9757085020242915, "obj2": 0.008280492379284562}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( ( ( Max( PN,FirstVNF_RAM ) - Min( ( MRS + Min( PN ,ACS ) ) ,Max( ( RRS * BR ),BR ) ) ) * Min( Max( RRS,ACS ) ,( FirstVNF_RAM_Server / ( ARS + FirstVNF_RAM_Server ) ) ) ) ,( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( Max( ( DS - DS ),( DS - MUC ) ) + Max( Max( CS,MUR ),( RMSe * RMSe ) ) ) - ( ( ( RRSe - ( Min( ( RRSe - RCSe ) ,MUM ) / CS ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( Max( ( Max( MLU,MUC ) / ( DS * ( RMSe * MUM ) ) ),( MUC - ( RRSe - Max( MLU,CS ) ) ) ) / RMSe ) ) ) )", "obj1": 0.1720647773279352, "obj2": 0.628495494963497}, {"determining": "Min( ( ( ACS + ( FirstVNF_RAM_Server * CRS ) ) / ( Const - DDR ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const - DDR ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) / ( BR / RRS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe - CS ) * RCSe ) - RRSe ) + Max( MUC,RMSe ) ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),MLU ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + Min( RCSe ,MUC ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.0904818932748092}, {"determining": "Min( ( Max( Const,ACS ) + Max( ( RRS + PN ),( ACS * MRS ) ) ) ,( ( CRS * AMS ) * ( ( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / DDR ) * DDR ) ) )", "choosing": "( ( Min( Min( ( Min( RCSe ,MUC ) + ( ( RRSe * MLU ) + ( MLU + ( MUC * MUC ) ) ) ) ,( Max( MUR,( ( CS - MUC ) + Max( RCSe,RMSe ) ) ) * RMSe ) ) ,( RCSe - CS ) ) * ( ( DS + RCSe ) * ( RCSe + RMSe ) ) ) - ( ( ( ( MUR * RCSe ) + MUM ) - ( MUR - MUM ) ) * RMSe ) )", "obj1": 0.7267206477732794, "obj2": 0.11419188971221479}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( AMS * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / AMS ) ) ) - ( Min( Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ,Min( RRS ,ARS ) ) * ( ( ( FirstVNF_RAM_Server / MDR ) - AMS ) - ( Min( FirstVNF_RAM ,ARS ) / Max( AMS,( ( MRS / AMS ) - BR ) ) ) ) ) ) * Max( PN,BR ) )", "choosing": "( Min( ( RCSe * DS ) ,Min( DS ,Min( ( RMSe * MLU ) ,( MUM / MUM ) ) ) ) + ( ( MUR / DS ) / ( MUR * RMSe ) ) )", "obj1": 0.06477732793522267, "obj2": 0.7412231422233133}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( MDR ,FirstVNF_RAM ) ),( Const * PN ) ) ) ) + ( FirstVNF_Mem_Server - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - ( ( DS + DS ) * ( Min( RRSe ,( MLU / ( ( Max( CS,RRSe ) + RRSe ) + MUM ) ) ) + CS ) ) )", "obj1": 0.06680161943319839, "obj2": 0.72641981133936}, {"determining": "Min( Min( ( ARS * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ,( Max( MDR,ACS ) + ( ( FirstVNF_Mem - RRS ) - Min( ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ,CRS ) ) ) )", "choosing": "Min( RRSe ,( MLU + MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.01766039835019962}, {"determining": "( ( FirstVNF_Mem_Server * Min( FirstVNF_Mem ,( FirstVNF_CPU_Server + DDR ) ) ) / ( ( ( BR / CRS ) / ARS ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / CRS ) ) )", "choosing": "( ( Min( ( ( CS / ( Max( MLU,MUC ) + DS ) ) + ( Min( Max( RRSe,Min( MUM ,CS ) ) ,( Min( MUR ,MLU ) - ( MLU + MLU ) ) ) - Min( ( ( MLU + DS ) + DS ) ,RRSe ) ) ) ,Min( Max( MUM,Min( RRSe ,MUC ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( MLU + MUR ) )", "obj1": 0.854251012145749, "obj2": 0.06235105707324869}, {"determining": "Min( ( Max( ( ( ( FirstVNF_RAM - DDR ) * ( CRS + FirstVNF_Mem ) ) - ACS ),ACS ) / ( ( FirstVNF_Mem - Min( PN ,FirstVNF_Mem ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_CPU * DDR ) * ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUM ,Max( MUC,CS ) ) ) - ( Max( ( RCSe / MLU ),( MUC + CS ) ) + Min( ( ( MUC + MUC ) / DS ) ,DS ) ) )", "obj1": 0.1862348178137652, "obj2": 0.6260219999802369}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_RAM ) * PN ) / ( ( BR / Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) + ( ( BR - CRS ) + Min( ( FirstVNF_CPU_Server - RRS ) ,( Min( ( FirstVNF_Mem * ARS ) ,FirstVNF_RAM ) / ( Const - DDR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS + Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + MUM ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( ( RCSe - MUM ) * RRSe ) ) + ( RRSe - MUM ) ) + ( ( ( Max( MUC,Min( ( MUR / MLU ) ,MUR ) ) * RRSe ) * RMSe ) + MUR ) ) )", "obj1": 0.26720647773279355, "obj2": 0.5710859351746047}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,( ACS - ARS ) ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( Max( ( FirstVNF_CPU + PN ),( ACS * MRS ) ) - ( PN / DDR ) ) ) ) ) )", "choosing": "Min( ( DS + ( ( ( MUM - RRSe ) * ( ( RRSe * CS ) * Min( CS ,RMSe ) ) ) * ( ( RCSe * ( MUR - ( ( RMSe - RMSe ) / MUR ) ) ) / ( MUC - DS ) ) ) ) ,( Min( Max( ( DS * ( RCSe + RRSe ) ),( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) )", "obj1": 0.8259109311740891, "obj2": 0.06829002539965079}, {"determining": "Min( ( ( ( Max( MRS,( FirstVNF_Mem / RRS ) ) * MDR ) + ( FirstVNF_RAM / ( ARS * AMS ) ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( PN,DDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( ( ( FirstVNF_CPU_Server * CRS ) + ACS ) + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "Min( ( MUM * MUM ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe - CS ) ) * ( ( ( ( Min( RCSe ,MUC ) + ( ( MUC - MUR ) + ( RCSe * MUC ) ) ) - ( RMSe * RRSe ) ) + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.8967611336032388, "obj2": 0.04331514943755231}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + AMS ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( RCSe + MLU ) - ( DS / Max( Max( MUC,Max( MLU,( Max( DS,( MUC * DS ) ) + ( ( MUR - MUM ) + RCSe ) ) ) ),RRSe ) ) )", "obj1": 0.9898785425101214, "obj2": 0.005662989946311602}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( MRS ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( DS - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4392712550607287, "obj2": 0.40151744278410073}, {"determining": "Min( Max( Min( PN ,PN ),ACS ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RRSe ) / CS ) - ( ( ( RRSe + MUC ) + ( Max( ( MLU * ( MUC + RMSe ) ),MLU ) + ( MUR * MLU ) ) ) + Max( ( MLU + ( MUC * RRSe ) ),( MUC + CS ) ) ) )", "obj1": 0.2408906882591093, "obj2": 0.5767885578573132}, {"determining": "Min( ( ( MDR - MDR ) / ( ( DDR - AMS ) / ARS ) ) ,( ( CRS - DDR ) + Const ) )", "choosing": "( ( Max( ( RRSe * MUR ),Min( RMSe ,MUM ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( ( RRSe / DS ) + Max( RRSe,MUC ) ) + Min( ( MUM - ( Max( Min( MUM ,MLU ),Max( CS,RCSe ) ) + DS ) ) ,Min( Max( Min( RRSe ,RMSe ),MLU ) ,( ( MUC * MUR ) - ( RCSe * Min( ( RMSe + RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.19433198380566802, "obj2": 0.6153330996144966}, {"determining": "Min( ( ( ACS * Max( PN,( ( ( Min( MRS ,PN ) / Const ) / CRS ) + BR ) ) ) * ( ( MDR - Max( MRS,ACS ) ) + ( ARS / FirstVNF_RAM ) ) ) ,( FirstVNF_Mem * ( PN - CRS ) ) )", "choosing": "Min( ( MLU * ( ( MUC / RCSe ) * RRSe ) ) ,( Max( RRSe,( ( MUC / RCSe ) * MUC ) ) * ( ( DS + ( ( RMSe - MUR ) * ( ( RCSe * RCSe ) / ( DS - MUC ) ) ) ) * ( ( RMSe * CS ) * CS ) ) ) )", "obj1": 0.9655870445344129, "obj2": 0.012858821036618244}, {"determining": "( Min( ( Min( Const ,ARS ) / ( FirstVNF_Mem * Max( BR,ARS ) ) ) ,ARS ) * ( Min( CRS ,BR ) - ( AMS * AMS ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * RRSe ) ,( CS * MUR ) ) * ( Min( RRSe ,MUR ) + MUR ) ) ) ,( ( MLU * DS ) * ( ( DS + RCSe ) * Min( ( MUC / MLU ) ,( MUM * RRSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.5291475845650236}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU / Min( Const ,RRS ) ) * ( FirstVNF_CPU_Server * AMS ) ) ) * FirstVNF_RAM_Server )", "choosing": "( ( MUM * Max( RMSe,Min( RRSe ,DS ) ) ) / ( ( Max( MUC,Min( ( MUR * MLU ) ,RCSe ) ) - MLU ) - Min( Max( ( MUC - RMSe ),RRSe ) ,MUR ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7117946123885447}, {"determining": "Min( Max( PN,MDR ) ,( Min( Min( Max( Min( ACS ,CRS ),FirstVNF_CPU_Server ) ,ARS ) ,Min( PN ,MDR ) ) / Min( ( ( FirstVNF_CPU_Server / Const ) - Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ( BR * MDR ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RMSe * ( DS / RRSe ) ) ,MUR ) * CS ) - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( ( Max( CS,RRSe ) - MUC ) + Min( DS ,MUM ) ) / Min( RMSe ,Max( RRSe,CS ) ) ) - CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.3933581545685805}, {"determining": "( ( Const / ( CRS * RRS ) ) / Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( Min( Const ,AMS ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUM ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - Min( CS ,MUR ) )", "obj1": 0.7206477732793523, "obj2": 0.11699394696663874}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( RMSe ,CS ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( RCSe * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0746014520242911}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,RRS ) - Min( ACS ,( MRS / ARS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * DDR ) ) )", "choosing": "Min( ( ( ( Max( MUC,MLU ) * Min( RMSe ,( Min( RRSe ,DS ) - RCSe ) ) ) * ( Min( RCSe ,( RCSe * CS ) ) + ( RCSe - Min( ( DS / DS ) ,( MUM + ( MUM / RRSe ) ) ) ) ) ) / ( ( ( ( RRSe * ( RCSe - ( CS - MUM ) ) ) + Min( RRSe ,DS ) ) + Max( ( RCSe / MUC ),( MUC / RCSe ) ) ) - ( MUR - MUM ) ) ) ,( ( MUC / RCSe ) * ( MUC / Min( Min( ( MUM * MUM ) ,( CS / MUM ) ) ,DS ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.037366600124146644}, {"determining": "Min( ( ( Const - DDR ) / ( ( ( AMS - BR ) - RRS ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ) ,Max( Min( Min( Const ,ARS ) ,( PN - MDR ) ),( MDR - Const ) ) )", "choosing": "( MLU - ( ( MUM * RRSe ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,( MUR * DS ) ) ) - CS ) ) ) )", "obj1": 0.8623481781376519, "obj2": 0.06180185842450618}, {"determining": "Min( MRS ,Max( Min( Min( Max( DDR,FirstVNF_CPU_Server ) ,ARS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( Const / MRS ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / DDR ) ) ) ) ) )", "choosing": "( ( Min( MUR ,( RMSe * ( DS / RRSe ) ) ) * CS ) - ( ( MUM * ( CS / ( MLU / RRSe ) ) ) + ( Max( RRSe,MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,Min( RRSe ,CS ) ) ) - CS ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.1002399901327765}, {"determining": "Min( ( Min( Min( ( ( MDR + CRS ) + FirstVNF_CPU_Server ) ,Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( ( FirstVNF_RAM * ( BR * MRS ) ) * FirstVNF_Mem_Server ) ) ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( ACS / DDR ) ) ) ) ) )", "choosing": "Min( ( MUM * ( Min( ( RRSe * MUR ) ,( CS * MUR ) ) * ( ( RRSe / Max( MLU,( RRSe / RMSe ) ) ) + MUR ) ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Min( ( MUC / MLU ) ,( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.08343829734432015}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( Max( ( FirstVNF_CPU_Server / Const ),Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( ( FirstVNF_RAM * RRS ) / DDR ) - DDR ) ) ) ) )", "choosing": "Min( ( MUM * Max( Max( ( CS + ( CS + CS ) ),RCSe ),RMSe ) ) ,( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / CS ) ) - CS ) ) * ( Max( ( MUC / MLU ),( MUM * DS ) ) * ( DS + RCSe ) ) ) )", "obj1": 0.8157894736842105, "obj2": 0.07206620371860951}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - Max( ( CRS / MRS ),RRS ) ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * ( MRS * FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,( ( ( ( MUM / MUM ) / DS ) + Min( ( RMSe / CS ) ,MUR ) ) / MUM ) ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU - MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.2388663967611336, "obj2": 0.5830432521132372}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( Min( FirstVNF_Mem ,Max( MDR,Const ) ) - MDR ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( ( MUR + MUC ) * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( RRSe * MLU ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.20242914979757085, "obj2": 0.6060724835525569}, {"determining": "Min( ( FirstVNF_RAM_Server * ( FirstVNF_Mem / ARS ) ) ,( ( MDR * ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( Max( RCSe,RCSe ) * ( CS - CS ) ) - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RRSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.15789473684210525, "obj2": 0.6474818947488572}, {"determining": "( ( ( FirstVNF_RAM / Max( MRS,BR ) ) * ( ( MRS / ACS ) - MDR ) ) / ( ( PN / ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem + Max( MDR,PN ) ) + PN ) * DDR ) ) ) + ( MDR / AMS ) ) )", "choosing": "( ( Min( RCSe ,( ( MUR - CS ) - ( CS + RCSe ) ) ) - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) / ( MUM * Min( ( Max( MLU,( Max( MLU,MLU ) + MUR ) ) - ( RCSe - RCSe ) ) ,Max( Max( MUR,MUR ),RCSe ) ) ) )", "obj1": 0.09109311740890688, "obj2": 0.704594859189643}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RMSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.12348178137651822, "obj2": 0.6815282201837716}, {"determining": "Min( ( BR / ( ( FirstVNF_Mem - ( ( FirstVNF_Mem - FirstVNF_Mem ) / Max( AMS,DDR ) ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) / ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RRSe ) + RRSe ) / Min( ( MUC * MUM ) ,MUM ) ) - ( ( Max( RRSe,MUC ) + Min( RRSe ,DS ) ) + ( MUM + ( MUC * DS ) ) ) )", "obj1": 0.16396761133603238, "obj2": 0.6388941789536697}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( Max( AMS,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - FirstVNF_Mem_Server ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + Const ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( ( ( CS + MUC ) + CS ),( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * ( ( ( CS / MUR ) * Min( DS ,( Min( DS ,MLU ) + ( MUC / MUC ) ) ) ) - MUC ) ) + Max( Max( MUR,CS ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,RCSe ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.6928811798582215}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Min( RRSe ,( RCSe - CS ) ) * Max( CS,( ( MUM * ( Min( ( DS - MUC ) ,( MUC + DS ) ) + ( MUR / DS ) ) ) - MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.19230769230769232, "obj2": 0.6204316216149328}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( MDR ,FirstVNF_RAM ) ),( Const * PN ) ) ) ) + ( FirstVNF_Mem_Server - PN ) ) ) / ( Min( ( ( ( FirstVNF_Mem - FirstVNF_Mem ) / Max( AMS,DDR ) ) + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "( ( Max( ( Min( MUC ,( MUM + Max( Min( RRSe ,MUR ),DS ) ) ) * CS ),( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - CS ) ) - Max( ( Max( RMSe,MUM ) + CS ),( RRSe - RMSe ) ) ) - ( ( DS + DS ) * ( Min( RRSe ,( MLU / ( ( Max( MUM,RRSe ) + RRSe ) + MUM ) ) ) + CS ) ) )", "obj1": 0.0728744939271255, "obj2": 0.7218053921488631}, {"determining": "Min( ( Max( MDR,ACS ) / ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - FirstVNF_Mem ),Max( AMS,DDR ) ) ) - Min( ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( PN - FirstVNF_Mem_Server ) ) / ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ) ,CRS ) ) ) ,( ACS * ( MRS - ( ( FirstVNF_RAM_Server / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe / Min( ( MUC * MUM ) ,MUM ) ) - ( ( Max( RCSe,Max( Min( RMSe ,MUR ),RMSe ) ) + Min( RRSe ,DS ) ) + ( MUM + ( MUC * DS ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6365247082170982}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + Max( FirstVNF_CPU_Server,CRS ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( ( FirstVNF_CPU_Server / Const ) + ( AMS / Const ) ) ,( Max( AMS,FirstVNF_RAM ) * ( DDR - ( Max( ( MRS / Const ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / Min( Max( MUM,Min( RMSe ,MUR ) ) ,RMSe ) ) - ( MUC * RMSe ) ) - ( ( Min( RRSe ,DS ) + Max( RRSe,MUC ) ) + Max( Max( RRSe,( Max( DS,RRSe ) * MUC ) ),Min( MUC ,CS ) ) ) )", "obj1": 0.4271255060728745, "obj2": 0.40678723083575175}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( DS - ( ( ( RCSe + MLU ) / MUR ) * Max( RRSe,MUC ) ) ) )", "obj1": 0.46558704453441296, "obj2": 0.36477109611775266}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ( ACS + ( ARS + FirstVNF_CPU_Server ) ) ) ,Max( Min( Min( Const ,AMS ) ,( PN - MDR ) ),Min( ( RRS + ( FirstVNF_CPU_Server / Const ) ) ,( Max( ( DDR / Max( Const,( Const + BR ) ) ),FirstVNF_RAM ) * ( RRS - ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),PN ) / DDR ) ) ) ) ) )", "choosing": "( ( ( MUM - ( MUC / MUM ) ) * CS ) - Max( MUM,( RRSe + MUR ) ) )", "obj1": 0.44534412955465585, "obj2": 0.39892992960856594}, {"determining": "Min( ( ( FirstVNF_RAM_Server / ( ( ( FirstVNF_RAM + ACS ) / AMS ) - BR ) ) / Min( Const ,FirstVNF_RAM_Server ) ) ,( Max( ( Max( ( FirstVNF_RAM + PN ),MDR ) * Min( MRS ,FirstVNF_Mem_Server ) ),BR ) / ACS ) )", "choosing": "( ( ( ( Max( Max( Max( DS,RCSe ),( ( CS + MUM ) / CS ) ),Max( MUM,( RMSe + RRSe ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( Max( DS,( MLU * MLU ) ) + ( DS * MUR ) ),( MUC + CS ) ) ) )", "obj1": 0.10728744939271255, "obj2": 0.6980466302706639}, {"determining": "( ( ( ( Const - RRS ) * ( FirstVNF_CPU_Server / ( DDR + FirstVNF_CPU_Server ) ) ) + ( PN - ( Max( ( MRS / FirstVNF_Mem ),RRS ) / RRS ) ) ) / ( ( Max( MRS,ACS ) - MDR ) + ( FirstVNF_RAM / Max( MRS,BR ) ) ) )", "choosing": "( ( MUM * Min( ( MUC - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) / ( ( ( ( ( MUC - ( RCSe + DS ) ) + MLU ) / MUR ) * ( MUM * MUM ) ) + DS ) )", "obj1": 0.46963562753036436, "obj2": 0.3631578863634776}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) / Min( ( ( Max( Max( DDR,ACS ),FirstVNF_RAM ) * ACS ) - FirstVNF_RAM ) ,( FirstVNF_CPU_Server * ( ( CRS / ( AMS - ACS ) ) - Max( RRS,Const ) ) ) ) ) ,Min( ACS ,Const ) ) ,( AMS * Const ) )", "choosing": "( Max( DS,( Max( Min( MUR ,RRSe ),( RMSe + ( RMSe / ( ( MUC + MUC ) - MUR ) ) ) ) - MUC ) ) - Max( ( RCSe / ( MLU * ( ( ( DS + ( DS - RMSe ) ) / MUR ) + MUR ) ) ),MUM ) )", "obj1": 0.09919028340080972, "obj2": 0.7010175901881857}, {"determining": "( ( BR * ( ACS * MRS ) ) / ( ( PN * ( FirstVNF_CPU_Server / ( DDR * DDR ) ) ) + ( PN - ( Max( Const,( ACS / DDR ) ) / RRS ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( MUC ,RMSe ) ) ) - Max( Max( DS,RCSe ),( ( RRSe + RCSe ) / CS ) ) ) - MUC ) * ( DS - MUC ) ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( ( ( MUR + MUC ) + MUR ) - ( RCSe - RCSe ) ),( MUC + CS ) ) ) )", "obj1": 0.4757085020242915, "obj2": 0.3576338211015458}, {"determining": "Min( ( ( Const - DDR ) / ( ( ( AMS - BR ) - FirstVNF_CPU_Server ) / ( Min( Min( Const ,AMS ) ,( PN - MDR ) ) - ( Min( Const ,Const ) - ( FirstVNF_Mem / Const ) ) ) ) ) ,Max( Min( Min( Const ,ARS ) ,( PN - MDR ) ),( MDR - Const ) ) )", "choosing": "( MLU - ( ( MUM * RRSe ) + ( Max( ( ( ( RMSe - CS ) + MUR ) / ( MLU - MUM ) ),MUC ) + ( ( ( CS * Max( MUR,( RRSe + CS ) ) ) / Min( RMSe ,( MUR * DS ) ) ) - CS ) ) ) )", "obj1": 0.9311740890688259, "obj2": 0.028096803097785367}, {"determining": "Min( Min( FirstVNF_Mem_Server ,( RRS / Const ) ) ,( ( FirstVNF_CPU - BR ) / ( MDR / ( Min( ( PN - ( ( RRS * RRS ) * ( RRS - DDR ) ) ) ,Max( MRS,FirstVNF_RAM ) ) + ( ACS * ( ( AMS + MDR ) - ( FirstVNF_RAM - DDR ) ) ) ) ) ) )", "choosing": "Min( ( ( RMSe / MUM ) / ( ( ( MUR / RCSe ) + MUR ) - ( MUR / Max( RCSe,Min( RCSe ,CS ) ) ) ) ) ,( ( MUR - ( MUM - DS ) ) - MUM ) )", "obj1": 0.9210526315789473, "obj2": 0.03238653313245552}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),( Max( MRS,ACS ) + MDR ) ) )", "choosing": "( ( ( ( ( Max( MUM,( ( MUC * DS ) - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * Min( ( RMSe - ( RCSe - RCSe ) ) ,Max( Max( RRSe,MUR ),RCSe ) ) ) + CS ) ) ) )", "obj1": 0.145748987854251, "obj2": 0.6564817950876148}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( ARS + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * Max( MLU,( RRSe / RMSe ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.11740890688259109, "obj2": 0.6888861523486658}, {"determining": "( ( ( PN * ( FirstVNF_CPU_Server / Max( ( MDR + ( Min( MRS ,FirstVNF_CPU_Server ) - ( DDR + AMS ) ) ),( FirstVNF_RAM / ARS ) ) ) ) + ( PN - FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_RAM ,ARS ) + ( Max( MRS,ACS ) + MDR ) ) )", "choosing": "Min( ( ( ( MUM - MUR ) / MLU ) / DS ) ,( Min( ( Max( ( Max( CS,RRSe ) + ( ( RCSe - RMSe ) + Min( CS ,CS ) ) ),DS ) * RRSe ) ,( RCSe * CS ) ) * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0020208447466269655}, {"determining": "Min( ( ( FirstVNF_CPU - MDR ) + Max( CRS,( CRS - FirstVNF_RAM ) ) ) ,Max( Min( Min( Const ,AMS ) ,( MDR - PN ) ),Min( ( Max( ( FirstVNF_CPU * DDR ),ARS ) + ( FirstVNF_RAM / ARS ) ) ,( Max( AMS,FirstVNF_RAM ) * ( ( Max( ( ARS / Const ),Const ) / PN ) - DDR ) ) ) ) )", "choosing": "( ( ( ( ( Max( MUM,( CS - Min( RMSe ,MUC ) ) ) - Max( ( ( MLU - RMSe ) * ( MUM - RMSe ) ),( Max( RRSe,MUM ) / ( RRSe / MUR ) ) ) ) - MUC ) * RMSe ) + Max( Max( CS,MUR ),Min( RMSe ,RMSe ) ) ) - ( ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) + Max( ( RCSe / MUC ),( ( Min( RMSe ,RCSe ) * MUM ) + CS ) ) ) )", "obj1": 0.15182186234817813, "obj2": 0.6524524463722065}, {"determining": "Min( ( ( Const - DDR ) / ( ACS + ( FirstVNF_CPU_Server * CRS ) ) ) ,Max( Min( ( Const / AMS ) ,( PN - MDR ) ),Min( ( BR + ( FirstVNF_Mem * CRS ) ) ,( ( DDR - ( ACS / DDR ) ) * Max( AMS,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,RMSe ) * Max( MUC,MUR ) ) * ( Max( ( ( ( CS * MLU ) / RMSe ) + Min( MUC ,RMSe ) ),MLU ) / Min( RCSe ,( MUR * CS ) ) ) ) / ( ( ( MUR + RCSe ) + MUM ) - ( MUR - MUM ) ) ) ,( Min( Max( MUC,( CS - DS ) ) ,( RRSe / RRSe ) ) - ( ( MUC + CS ) / ( ( RCSe * ( MUM / ( RMSe * CS ) ) ) * RMSe ) ) ) )", "obj1": 0.7753036437246964, "obj2": 0.08801951898626897}, {"determining": "Min( ( ( MRS * AMS ) / ( ( PN * ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,Max( Max( MDR,FirstVNF_Mem ),( ( FirstVNF_Mem - RRS ) - Min( ( ( BR - RRS ) / ( CRS + FirstVNF_CPU ) ) ,CRS ) ) ) )", "choosing": "( ( MUM / ( ( RRSe + ( MUC / ( RMSe + MUR ) ) ) - ( ( MUC + ( ( Min( MUR ,MUM ) + Min( MLU ,MUR ) ) + Max( ( RMSe * MUM ),MUR ) ) ) * ( ( CS + Min( ( CS - CS ) ,DS ) ) + CS ) ) ) ) - ( Max( Max( RRSe,MUC ),( CS - MUC ) ) + ( Max( RRSe,MUC ) + ( Min( Min( ( MUM + ( MUR + RCSe ) ) ,( CS - ( MUM - CS ) ) ) ,( ( MUC + CS ) / ( ( RCSe * RCSe ) * RMSe ) ) ) - CS ) ) ) )", "obj1": 0.937246963562753, "obj2": 0.026707609890381147}, {"determining": "Min( ( ( ( Min( MRS ,ACS ) * MDR ) + ( FirstVNF_RAM / ARS ) ) / ( ( PN * ( FirstVNF_CPU_Server / Max( DDR,MDR ) ) ) + ( PN - FirstVNF_Mem_Server ) ) ) ,( Min( ( ( FirstVNF_RAM_Server + ARS ) / ( Max( PN,Max( ( MDR - MDR ),FirstVNF_CPU_Server ) ) - Min( ACS ,( MRS / ARS ) ) ) ) ,( ( FirstVNF_CPU - FirstVNF_Mem ) / ( FirstVNF_CPU * RRS ) ) ) * ( DDR * DDR ) ) )", "choosing": "Min( ( Min( RRSe ,( Min( Max( RRSe,RCSe ) ,( MUC / Max( RMSe,MUM ) ) ) - CS ) ) * ( Min( ( ( RRSe * ( Max( RRSe,CS ) + Max( RMSe,MUM ) ) ) / MLU ) ,( MUM * DS ) ) * ( DS / RCSe ) ) ) ,( MUM * ( Min( Min( ( DS / ( Min( RRSe ,MUR ) + MUR ) ) ,RRSe ) ,( CS + MUR ) ) * Min( Max( DS,RCSe ) ,( ( RRSe + MUM ) / CS ) ) ) ) )", "obj1": 0.9453441295546559, "obj2": 0.021977168215178804}, {"determining": "( ( ( ( ARS / ( MRS + ARS ) ) * PN ) + ( ( PN + ( FirstVNF_CPU_Server / Max( ( FirstVNF_Mem - Min( FirstVNF_RAM ,MDR ) ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) + ( RRS - PN ) ) ) / ( Min( ( BR + FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( ( Max( DDR,BR ) * ( AMS * MRS ) ) / ARS ) ) )", "choosing": "Min( Max( ( ( ( CS * ( MUR * Min( RRSe ,RMSe ) ) ) / ( ( ( ( MUC - MUR ) + Min( RCSe ,MUC ) ) + ( RCSe + MUC ) ) - Min( RRSe ,( RMSe + RRSe ) ) ) ) + ( MUR * ( MUC / RCSe ) ) ),MUM ) ,( Min( RRSe ,( ( MUM / RRSe ) - CS ) ) * ( ( DS + DS ) * ( RMSe + ( ( MUR * MUR ) * RRSe ) ) ) ) )", "obj1": 0.9251012145748988, "obj2": 0.03142498174085493}, {"determining": "Min( ( AMS * RRS ) ,( Max( MDR,ACS ) / ( ( PN - RRS ) / Min( CRS ,( Max( CRS,( CRS - FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Min( RRSe ,( MUC - CS ) ) * Max( CS,Min( ( MUM * ( Min( RRSe ,( CS * RCSe ) ) + Max( RRSe,MUM ) ) ) ,MUR ) ) ) - Min( CS ,RMSe ) )", "obj1": 0.1194331983805668, "obj2": 0.6871325787496027}]}