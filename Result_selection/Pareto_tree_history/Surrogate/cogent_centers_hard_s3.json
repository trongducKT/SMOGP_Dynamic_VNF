{"1": [{"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( Max( MUC,( MUM * RMSe ) ) + MUM ),RCSe ) / CS ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( ( Const / Const ) / Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RMSe ) - ( RCSe / RCSe ) )", "obj1": 0.6519230769230769, "obj2": 0.26679137555663957}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.875, "obj2": 0.11717258014319257}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( ( CS / CS ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.6961538461538461, "obj2": 0.23740616219772284}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,ACS ) )", "choosing": "Max( ( MUC * ( Min( RMSe ,MUC ) + CS ) ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8442307692307692, "obj2": 0.14134867197756995}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,MRS ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,RMSe ),Min( CS ,RCSe ) ) + ( MLU - Min( ( CS * RRSe ) ,DS ) ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.11255763336710746}, {"determining": "Min( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server - ARS ) ) + ( ( BR + PN ) / ( FirstVNF_Mem * AMS ) ) ) ,( ( ACS + CRS ) + ( Min( ACS ,MDR ) - Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUC / RMSe ) - CS ) ),( ( MLU + RMSe ) + RRSe ) )", "obj1": 0.9423076923076923, "obj2": 0.06721323172501653}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( ( Const / Const ) / Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RMSe ) - ( RCSe / RCSe ) )", "obj1": 0.6519230769230769, "obj2": 0.26679137555663957}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.875, "obj2": 0.11717258014319257}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - Min( ( FirstVNF_CPU_Server * DDR ) ,ACS ) )", "choosing": "Max( ( MUC * ( Min( RMSe ,MUC ) + CS ) ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,MRS ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,RMSe ),Min( CS ,RCSe ) ) + ( MLU - Min( ( CS * RRSe ) ,DS ) ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.11255763336710746}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + ( DS * ( RCSe + RRSe ) ) ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6576923076923077, "obj2": 0.24901210357880915}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( ( FirstVNF_CPU - ACS ) * FirstVNF_Mem ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( Max( MUC,( MUM * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ) ) + MUM ),RCSe ) / CS ) )", "obj1": 0.9057692307692308, "obj2": 0.10049238697856973}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) ,( AMS - RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 0.675, "obj2": 0.2463914086547251}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_CPU - CRS ) ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( ( ( MLU + MUR ) - ( MUM / RCSe ) ) / Min( ( DS + MUC ) ,RMSe ) ) )", "obj1": 0.7423076923076923, "obj2": 0.20529320641660362}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + AMS ) ) - ( ( RRS + FirstVNF_Mem_Server ) + Max( DDR,Min( FirstVNF_RAM ,( ( BR - Max( ARS,BR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,CS ) * ( Max( CS,MUM ) + RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.9096153846153846, "obj2": 0.05208356873433798}, {"determining": "( Min( FirstVNF_Mem ,MRS ) / Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM / CS ) ,( ( ( RCSe / MUM ) + Min( MUM ,RMSe ) ) - MUC ) )", "obj1": 0.8384615384615385, "obj2": 0.13778097634841338}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ( Const / Const ) + PN ) )", "choosing": "( ( MUC - RMSe ) * ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) - Max( RRS,MRS ) )", "choosing": "Max( Max( DS,( ( ( RMSe * CS ) / DS ) + CS ) ),( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR - ARS ) * ARS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "Min( Max( MUC,RRSe ) ,MUC )", "obj1": 0.975, "obj2": 0.029987602870257868}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MLU / MUR ) ) ) )", "obj1": 0.6903846153846154, "obj2": 0.2440166885115079}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( AMS ,CRS ) - BR ) ) - ( FirstVNF_CPU - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + MUR ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 0.8115384615384615, "obj2": 0.16210229512914248}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( FirstVNF_Mem - ( AMS * CRS ) ) )", "choosing": "Min( Max( CS,( ( Max( ( ( RMSe - RCSe ) * MUC ),MLU ) * RMSe ) - MLU ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( FirstVNF_CPU * ARS ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( RRSe / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * Min( Const ,ARS ) ),( ( FirstVNF_CPU_Server + ( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( RRSe,MUC ) )", "obj1": 0.8326923076923077, "obj2": 0.1510416845766992}, {"determining": "( ( MRS - PN ) - ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + ( ( ( RCSe / ( CS + MUC ) ) + RMSe ) + ( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS * ( RCSe + ( MUM + MUR ) ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( ( RRSe - ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ) * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( Const ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( CS + RMSe ) ) )", "obj1": 0.823076923076923, "obj2": 0.1577531322296676}, {"determining": "( ( Min( Max( Const,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - RMSe ) - MUC ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8442307692307692, "obj2": 0.1273971754771298}], "3": [{"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( ( Const / Const ) / Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RMSe ) - ( RCSe / RCSe ) )", "obj1": 0.6423076923076924, "obj2": 0.268249175687791}, {"determining": "( ( FirstVNF_RAM / ( AMS + AMS ) ) - ( ( RRS + FirstVNF_Mem_Server ) + Max( DDR,Min( FirstVNF_RAM ,( ( BR - Max( ARS,BR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,CS ) * ( Max( CS,MUM ) + RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.9096153846153846, "obj2": 0.05208356873433798}, {"determining": "Min( ( ( MDR - ARS ) * ARS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "Min( Max( MUC,RRSe ) ,MUC )", "obj1": 0.975, "obj2": 0.029987602870257868}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_CPU - CRS ) ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( ( ( MLU + MUR ) - ( MUM / RCSe ) ) / Min( ( DS + MUC ) ,RMSe ) ) )", "obj1": 0.7423076923076923, "obj2": 0.20529320641660362}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server + CRS ),Const ) ,ARS ) - Const ) * ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( Min( CS ,( ( ( ( RCSe + MUC ) * MUC ) / MUM ) * RRSe ) ) * DS ) ) )", "obj1": 0.8096153846153846, "obj2": 0.15397745568687712}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( ( FirstVNF_CPU - FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_CPU_Server / ( AMS + ( ( DDR / PN ) / PN ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,Min( ( ( MUM / ( Max( RMSe,CS ) * ( ( MUR + MLU ) - DS ) ) ) * RMSe ) ,MUM ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_CPU - Min( ARS ,CRS ) ) ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),( RRSe / Min( ( DS + MUC ) ,RMSe ) ) )", "obj1": 0.7576923076923077, "obj2": 0.1951213585662188}, {"determining": "( Min( FirstVNF_Mem ,MRS ) / Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( RRSe,MUC ) ) / CS ) ,( ( ( RCSe / MUM ) + Min( MUM ,RMSe ) ) - MUC ) )", "obj1": 0.8903846153846153, "obj2": 0.09383134062585932}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( ( DS * RCSe ) * ( RRSe * RRSe ) ) ) ) / Max( RMSe,Max( MUM,Max( ( RMSe * MUR ),( ( MUM * Min( RMSe ,( MUR + RMSe ) ) ) + MUR ) ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.01081389556884426}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,MRS ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,RMSe ),Min( CS ,RCSe ) ) + ( MLU - Min( ( CS * RRSe ) ,DS ) ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.11255763336710746}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MLU / MUR ) ) ) )", "obj1": 0.6903846153846154, "obj2": 0.2440166885115079}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server - Min( ( RRS - ACS ) ,MRS ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,( ( FirstVNF_CPU_Server + MRS ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - RRSe ) + ( RCSe - CS ) ) / ( ( Min( RRSe ,CS ) * ( Max( ( MUM / ( ( MLU - MUC ) * MLU ) ),( Max( ( MLU + MUR ),CS ) + MUR ) ) - ( MUM * CS ) ) ) + Max( ( MUM * MUM ),Min( ( DS - DS ) ,RRSe ) ) ) )", "obj1": 0.8557692307692307, "obj2": 0.11260855919695238}, {"determining": "( ( Min( Max( Const,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - RMSe ) - MUC ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8442307692307692, "obj2": 0.1273971754771298}, {"determining": "( Min( FirstVNF_Mem ,MRS ) / Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM / CS ) ,( ( ( RCSe / MUM ) + Min( MUM ,RMSe ) ) - MUC ) )", "obj1": 0.8384615384615385, "obj2": 0.13778097634841338}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ,( MUC / MUR ) )", "obj1": 0.6442307692307693, "obj2": 0.2623268020154767}, {"determining": "( Max( ( CRS - BR ),( DDR - Max( FirstVNF_CPU_Server,Min( ARS ,CRS ) ) ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( RCSe + RCSe ),DS ) ) )", "obj1": 0.9980769230769231, "obj2": 0.002533181261489857}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + ( DS * ( RCSe + RRSe ) ) ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6576923076923077, "obj2": 0.24901210357880915}, {"determining": "( ( ( Const * BR ) - MDR ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 0.6730769230769231, "obj2": 0.24501571115234566}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * Min( Const ,ARS ) ),( ( FirstVNF_CPU_Server + ( ( Min( AMS ,CRS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ),MUC ) )", "obj1": 0.8307692307692308, "obj2": 0.1513525313014538}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * Min( Const ,ARS ) ),( ( FirstVNF_CPU_Server + ( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( RRSe,MUC ) )", "obj1": 0.8326923076923077, "obj2": 0.1510416845766992}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ( Const / Const ) + PN ) )", "choosing": "( ( MUC - RMSe ) * ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) - Max( RRS,MRS ) )", "choosing": "Max( Max( DS,( ( ( RMSe * CS ) / DS ) + CS ) ),( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( FirstVNF_Mem - ( AMS * CRS ) ) )", "choosing": "Min( Max( CS,( ( Max( ( ( RMSe - RCSe ) * MUC ),MLU ) * RMSe ) - MLU ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( FirstVNF_CPU * ARS ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( RRSe / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) - ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + ( ( ( RCSe / ( CS + MUC ) ) + RMSe ) + ( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS * ( RCSe + ( MUM + MUR ) ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( ( RRSe - ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ) * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_CPU - ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUM ) ) - ( MLU + Min( ( ( MUM - Max( ( ( RMSe / MLU ) / ( MUR + DS ) ),( MLU + MLU ) ) ) - ( MUC * MUM ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Min( ( PN + ARS ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,( MUR + RCSe ) ) ,Min( RCSe ,RMSe ) ) / ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( Max( MDR,( AMS + AMS ) ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( ( ( RMSe + MUC ) / MUC ) - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( Const - FirstVNF_Mem ) ) ) ) - ( Max( MDR,FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_CPU_Server + Max( ARS,ARS ) ) * ( FirstVNF_Mem_Server - ACS ) ) + Max( Max( CRS,Max( ( ( FirstVNF_CPU_Server * AMS ) / BR ),Max( FirstVNF_Mem_Server,Min( AMS ,Const ) ) ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM / RRSe ) - ( ( MLU - MUM ) + Max( ( MUR + Min( ( RMSe - DS ) ,( CS * ( RCSe - Max( RRSe,RRSe ) ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( ( ( ( ( Max( Max( CRS,ACS ),FirstVNF_Mem ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ACS ) - Min( FirstVNF_Mem ,Const ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( RRS,( Min( MRS ,RRS ) / PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( ( ( RMSe + MLU ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ),( MUR + MUM ) ),Min( Min( CS ,RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Min( ( Min( ( ( CRS * FirstVNF_CPU_Server ) - ACS ) ,Max( FirstVNF_CPU,( Const - FirstVNF_RAM ) ) ) * Max( FirstVNF_Mem,ARS ) ) ,( CRS - Max( MDR,( ( RRS - RRS ) + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM * RRSe ),MLU ) / ( MUM - DS ) ) + RMSe ) ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) - Min( ( RRSe - CS ) ,( DS * Max( ( RCSe * RMSe ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ,Min( DS ,MUR ) ) ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - AMS ) )", "choosing": "( Min( RMSe ,Max( ( CS - ( ( MUM / MLU ) - Max( MUC,DS ) ) ),( RRSe / CS ) ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),AMS ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) - ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( ARS ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + Max( MUC,RRSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( ( Const / Const ) / ( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR - ( MDR - RRS ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( MUR + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6307692307692307, "obj2": 0.284279633400015}, {"determining": "( ( FirstVNF_RAM / ( AMS + AMS ) ) - ( ( RRS + FirstVNF_Mem_Server ) + Max( DDR,Min( FirstVNF_RAM ,( ( BR - Max( ARS,BR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,CS ) * ( Max( CS,MUM ) + RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.9096153846153846, "obj2": 0.05208356873433798}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ARS - MDR ) )", "choosing": "( ( Min( MLU ,RRSe ) + RMSe ) - Min( MLU ,DS ) )", "obj1": 0.7326923076923076, "obj2": 0.18811144822453246}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server + CRS ),Const ) ,ARS ) - Const ) * ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( Min( CS ,( ( ( ( RCSe + MUC ) * MUC ) / MUM ) * RRSe ) ) * DS ) ) )", "obj1": 0.8096153846153846, "obj2": 0.15397745568687712}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,MRS ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,RMSe ),Min( CS ,RCSe ) ) + ( MLU - Min( ( CS * RRSe ) ,DS ) ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.11255763336710746}, {"determining": "( Min( FirstVNF_Mem ,MRS ) / Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( RRSe,MUC ) ) / CS ) ,( ( ( RCSe / MUM ) + Min( MUM ,RMSe ) ) - MUC ) )", "obj1": 0.8903846153846153, "obj2": 0.09383134062585932}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server - Min( ( RRS - ACS ) ,MRS ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,( ( FirstVNF_CPU_Server + MRS ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - RRSe ) + ( RCSe - CS ) ) / ( ( Min( RRSe ,CS ) * ( Max( ( MUM / ( ( MLU - MUC ) * MLU ) ),( Max( ( MLU + MUR ),CS ) + MUR ) ) - ( MUM * CS ) ) ) + Max( ( MUM * MUM ),Min( ( DS - DS ) ,RRSe ) ) ) )", "obj1": 0.8557692307692307, "obj2": 0.11260855919695238}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( ( DS * RCSe ) * ( RRSe * RRSe ) ) ) ) / Max( RMSe,Max( MUM,Max( ( RMSe * MUR ),( ( MUM * Min( RMSe ,( MUR + RMSe ) ) ) + MUR ) ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.01081389556884426}, {"determining": "( ( Min( Max( Const,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR - RMSe ) - MUC ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8442307692307692, "obj2": 0.1273971754771298}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) ) + RMSe ) )", "obj1": 0.6519230769230769, "obj2": 0.24760515268591388}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( ( DS - RRSe ) + ( RCSe - CS ) ) / RMSe )", "obj1": 0.6865384615384615, "obj2": 0.23914604740633635}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( Min( FirstVNF_Mem ,MRS ) / Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM / CS ) ,( ( ( RCSe / MUM ) + Min( MUM ,RMSe ) ) - MUC ) )", "obj1": 0.8384615384615385, "obj2": 0.13778097634841338}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( ( FirstVNF_CPU - FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_CPU_Server / ( AMS + ( ( DDR / PN ) / PN ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,Min( ( ( MUM / ( Max( RMSe,CS ) * ( ( MUR + MLU ) - DS ) ) ) * RMSe ) ,MUM ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( AMS * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / MUC ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ,( MUC / MUR ) )", "obj1": 0.6442307692307693, "obj2": 0.2623268020154767}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( DDR * ACS ) + ( BR / PN ) ),( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Max( DS,MUC ) * DS ) )", "obj1": 0.6346153846153846, "obj2": 0.27590879491971143}, {"determining": "( ( PN - ACS ) - ( Min( ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - RRS ) ) - FirstVNF_CPU ) ,FirstVNF_Mem ) - AMS ) )", "choosing": "( Min( RMSe ,Max( ( CS - ( ( MUM / MLU ) - Max( MUC,DS ) ) ),( RRSe / CS ) ) ) * ( RCSe - ( MUR * MUC ) ) )", "obj1": 0.9057692307692308, "obj2": 0.08882841162817563}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( ( Const / Const ) / Max( ARS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RMSe ) - ( RCSe / RCSe ) )", "obj1": 0.6423076923076924, "obj2": 0.268249175687791}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * Min( Const ,ARS ) ),( ( FirstVNF_CPU_Server + ( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( RRSe,MUC ) )", "obj1": 0.8326923076923077, "obj2": 0.1510416845766992}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * Min( Const ,ARS ) ),( ( FirstVNF_CPU_Server + ( ( Min( AMS ,CRS ) - Const ) * ( AMS + ( ( ( AMS * MDR ) + ( PN * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( Max( Max( ( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) / ( RMSe * MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ),MUC ) )", "obj1": 0.8288461538461539, "obj2": 0.15325585247427692}, {"determining": "( Max( ( ( RRS / PN ) / ( AMS + AMS ) ),( ACS / AMS ) ) - ( Min( AMS ,CRS ) - Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( MUR * ( MUR + MUR ) ) / ( RCSe * MLU ) ) ) ,( Max( ( Max( Max( ( RRSe / RRSe ),Max( MUR,Min( RRSe ,MUM ) ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( ( MLU * RMSe ) + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6807692307692308, "obj2": 0.240044572266712}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6711538461538461, "obj2": 0.24562102932140623}, {"determining": "( ( ( Const * BR ) - MDR ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 0.6730769230769231, "obj2": 0.24501571115234566}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * Min( Const ,ARS ) ),( ( FirstVNF_CPU_Server + ( ( Min( AMS ,CRS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( ( MUR - ( RCSe + RRSe ) ) - MUC ) + Max( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ),MUC ) )", "obj1": 0.8307692307692308, "obj2": 0.1513525313014538}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6711538461538461, "obj2": 0.24562102932140623}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ( Const / Const ) + PN ) )", "choosing": "( ( MUC - RMSe ) * ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) - Max( RRS,MRS ) )", "choosing": "Max( Max( DS,( ( ( RMSe * CS ) / DS ) + CS ) ),( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( FirstVNF_Mem - ( AMS * CRS ) ) )", "choosing": "Min( Max( CS,( ( Max( ( ( RMSe - RCSe ) * MUC ),MLU ) * RMSe ) - MLU ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( FirstVNF_CPU * ARS ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( RRSe / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) - ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + ( ( ( RCSe / ( CS + MUC ) ) + RMSe ) + ( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS * ( RCSe + ( MUM + MUR ) ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( ( RRSe - ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ) * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_CPU - ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUM ) ) - ( MLU + Min( ( ( MUM - Max( ( ( RMSe / MLU ) / ( MUR + DS ) ),( MLU + MLU ) ) ) - ( MUC * MUM ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Min( ( PN + ARS ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,( MUR + RCSe ) ) ,Min( RCSe ,RMSe ) ) / ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( Max( MDR,( AMS + AMS ) ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( ( ( RMSe + MUC ) / MUC ) - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( Const - FirstVNF_Mem ) ) ) ) - ( Max( MDR,FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_CPU_Server + Max( ARS,ARS ) ) * ( FirstVNF_Mem_Server - ACS ) ) + Max( Max( CRS,Max( ( ( FirstVNF_CPU_Server * AMS ) / BR ),Max( FirstVNF_Mem_Server,Min( AMS ,Const ) ) ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM / RRSe ) - ( ( MLU - MUM ) + Max( ( MUR + Min( ( RMSe - DS ) ,( CS * ( RCSe - Max( RRSe,RRSe ) ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( ( ( ( ( Max( Max( CRS,ACS ),FirstVNF_Mem ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ACS ) - Min( FirstVNF_Mem ,Const ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( RRS,( Min( MRS ,RRS ) / PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( ( ( RMSe + MLU ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ),( MUR + MUM ) ),Min( Min( CS ,RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Min( ( Min( ( ( CRS * FirstVNF_CPU_Server ) - ACS ) ,Max( FirstVNF_CPU,( Const - FirstVNF_RAM ) ) ) * Max( FirstVNF_Mem,ARS ) ) ,( CRS - Max( MDR,( ( RRS - RRS ) + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM * RRSe ),MLU ) / ( MUM - DS ) ) + RMSe ) ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) - Min( ( RRSe - CS ) ,( DS * Max( ( RCSe * RMSe ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR - ( MDR - RRS ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( MUR + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6307692307692307, "obj2": 0.284279633400015}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / Max( CRS,MDR ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( MUM / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 0.7903846153846154, "obj2": 0.1348258686517135}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( MRS - ARS ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - RRSe ) + ( RCSe - CS ) ) / Min( Min( CS ,RCSe ) ,( ( DS - DS ) + MUM ) ) )", "obj1": 0.8788461538461538, "obj2": 0.10346949908065337}, {"determining": "( ( MRS - Min( ( ARS + ( FirstVNF_CPU * ARS ) ) ,BR ) ) / Max( CRS,MDR ) )", "choosing": "Min( ( ( ( RRSe / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) + MUC ) ,RMSe )", "obj1": 0.9576923076923077, "obj2": 0.04724126968552244}, {"determining": "( ( ( Min( PN ,RRS ) - ( DDR * FirstVNF_CPU ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM )", "obj1": 0.8846153846153846, "obj2": 0.05516742221436451}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "( ( FirstVNF_RAM / ( AMS + AMS ) ) - ( ( RRS + FirstVNF_Mem_Server ) + Max( DDR,Min( FirstVNF_RAM ,( ( BR - Max( ARS,BR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,CS ) * ( Max( CS,MUM ) + RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.9096153846153846, "obj2": 0.05208356873433798}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server + CRS ),Const ) ,ARS ) - Const ) * ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( Min( CS ,( ( ( ( RCSe + MUC ) * MUC ) / MUM ) * RRSe ) ) * DS ) ) )", "obj1": 0.8307692307692308, "obj2": 0.12956552194418924}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server - Min( ( RRS - ACS ) ,MRS ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,( ( FirstVNF_CPU_Server + MRS ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - RRSe ) + ( RCSe - CS ) ) / ( ( Min( RRSe ,CS ) * ( Max( ( MUM / ( ( MLU - MUC ) * MLU ) ),( Max( ( MLU + MUR ),CS ) + MUR ) ) - ( MUM * CS ) ) ) + Max( ( MUM * MUM ),Min( ( DS - DS ) ,RRSe ) ) ) )", "obj1": 0.8557692307692307, "obj2": 0.11260855919695238}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Min( MRS ,RRS ) / PN ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,Max( Max( ( ( RMSe + MLU ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ),( MUR + MUM ) ),Min( Min( CS ,RCSe ) ,RCSe ) ) ) )", "obj1": 0.6807692307692308, "obj2": 0.23787264889887927}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6384615384615384, "obj2": 0.2564335398873594}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / AMS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7038461538461539, "obj2": 0.1949763498231468}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server + CRS ),Const ) ,ARS ) - Const ) * ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ,RMSe ) ),( Min( CS ,( ( ( ( RCSe + MUC ) * MUC ) / MUM ) * RRSe ) ) * DS ) ) )", "obj1": 0.8403846153846154, "obj2": 0.12298300321060525}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) ) + RMSe ) )", "obj1": 0.6519230769230769, "obj2": 0.24760515268591388}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( DDR * ACS ) + ( BR / PN ) ),( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Max( DS,MUC ) * DS ) )", "obj1": 0.6346153846153846, "obj2": 0.27590879491971143}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe - CS ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.698076923076923, "obj2": 0.2094622582265001}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( ( FirstVNF_CPU - FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_CPU_Server / ( AMS + ( ( DDR / PN ) / PN ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,Min( ( ( MUM / ( Max( RMSe,CS ) * ( ( MUR + MLU ) - DS ) ) ) * RMSe ) ,MUM ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( ( RRSe + CS ) * MLU ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9807692307692307, "obj2": 0.010806129343653062}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6711538461538461, "obj2": 0.24562102932140623}, {"determining": "( ( ( Const * BR ) - MDR ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 0.6730769230769231, "obj2": 0.24501571115234566}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( ( DS * RCSe ) * ( RRSe * RRSe ) ) ) ) / Max( RMSe,Max( MUM,Max( ( RMSe * MUR ),( ( MUM * Min( RMSe ,( MUR + RMSe ) ) ) + MUR ) ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.01081389556884426}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( AMS * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / MUC ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( RCSe - RMSe ) / ( MUR * MLU ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6711538461538461, "obj2": 0.24562102932140623}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ( Const / Const ) + PN ) )", "choosing": "( ( MUC - RMSe ) * ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) - Max( RRS,MRS ) )", "choosing": "Max( Max( DS,( ( ( RMSe * CS ) / DS ) + CS ) ),( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( FirstVNF_Mem - ( AMS * CRS ) ) )", "choosing": "Min( Max( CS,( ( Max( ( ( RMSe - RCSe ) * MUC ),MLU ) * RMSe ) - MLU ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( FirstVNF_CPU * ARS ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( RRSe / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) - ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + ( ( ( RCSe / ( CS + MUC ) ) + RMSe ) + ( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS * ( RCSe + ( MUM + MUR ) ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( ( RRSe - ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ) * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_CPU - ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUM ) ) - ( MLU + Min( ( ( MUM - Max( ( ( RMSe / MLU ) / ( MUR + DS ) ),( MLU + MLU ) ) ) - ( MUC * MUM ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Min( ( PN + ARS ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,( MUR + RCSe ) ) ,Min( RCSe ,RMSe ) ) / ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( Max( MDR,( AMS + AMS ) ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( ( ( RMSe + MUC ) / MUC ) - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( Const - FirstVNF_Mem ) ) ) ) - ( Max( MDR,FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ( ( FirstVNF_CPU_Server + Max( ARS,ARS ) ) * ( FirstVNF_Mem_Server - ACS ) ) + Max( Max( CRS,Max( ( ( FirstVNF_CPU_Server * AMS ) / BR ),Max( FirstVNF_Mem_Server,Min( AMS ,Const ) ) ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM / RRSe ) - ( ( MLU - MUM ) + Max( ( MUR + Min( ( RMSe - DS ) ,( CS * ( RCSe - Max( RRSe,RRSe ) ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( ( ( ( ( Max( Max( CRS,ACS ),FirstVNF_Mem ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) + ACS ) - Min( FirstVNF_Mem ,Const ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( RRS,( Min( MRS ,RRS ) / PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( ( ( RMSe + MLU ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ),( MUR + MUM ) ),Min( Min( CS ,RCSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Min( ( Min( ( ( CRS * FirstVNF_CPU_Server ) - ACS ) ,Max( FirstVNF_CPU,( Const - FirstVNF_RAM ) ) ) * Max( FirstVNF_Mem,ARS ) ) ,( CRS - Max( MDR,( ( RRS - RRS ) + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Min( ( ( Max( ( MUM * RRSe ),MLU ) / ( MUM - DS ) ) + RMSe ) ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) - Min( ( RRSe - CS ) ,( DS * Max( ( RCSe * RMSe ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS + CRS ) ,( Const + DDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ,( Min( MUM ,RCSe ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_CPU / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,( RMSe / MUC ) ) ) / ( MLU * DS ) )", "obj1": 0.6230769230769231, "obj2": 0.2875798368979356}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( MRS - ARS ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - RRSe ) + ( RCSe - CS ) ) / Min( Min( CS ,RCSe ) ,( ( DS - DS ) + MUM ) ) )", "obj1": 0.8788461538461538, "obj2": 0.10346949908065337}, {"determining": "( ( ( Min( PN ,RRS ) - ( DDR * FirstVNF_CPU ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM )", "obj1": 0.8846153846153846, "obj2": 0.05516742221436451}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "( ( ( Min( PN ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( DS * MLU ) ,( Min( MUM ,RCSe ) / DS ) ) - MUM )", "obj1": 0.9365384615384615, "obj2": 0.03224732944886376}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server + CRS ),Const ) ,ARS ) - Const ) * ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( Min( CS ,( ( ( ( RCSe + MUC ) * MUC ) / MUM ) * RRSe ) ) * DS ) ) )", "obj1": 0.8307692307692308, "obj2": 0.12956552194418924}, {"determining": "Max( ( CRS / ( FirstVNF_CPU_Server - Min( ( RRS - ACS ) ,MRS ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + Min( Const ,( ( FirstVNF_CPU_Server + MRS ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS - RRSe ) + ( RCSe - CS ) ) / ( ( Min( RRSe ,CS ) * ( Max( ( MUM / ( ( MLU - MUC ) * MLU ) ),( Max( ( MLU + MUR ),CS ) + MUR ) ) - ( MUM * CS ) ) ) + Max( ( MUM * MUM ),Min( ( DS - DS ) ,RRSe ) ) ) )", "obj1": 0.8557692307692307, "obj2": 0.11260855919695238}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / Max( CRS,MDR ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( MUM / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 0.7903846153846154, "obj2": 0.1348258686517135}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Min( MRS ,RRS ) / PN ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,Max( Max( ( ( RMSe + MLU ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ),( MUR + MUM ) ),Min( Min( CS ,RCSe ) ,RCSe ) ) ) )", "obj1": 0.6807692307692308, "obj2": 0.23787264889887927}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem_Server / AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( Min( Max( RRSe,CS ) ,( ( MUM * RRSe ) * RRSe ) ) / MLU ) )", "obj1": 0.7826923076923077, "obj2": 0.14115868748859223}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6384615384615384, "obj2": 0.2564335398873594}, {"determining": "( ( ( Min( PN ,( Const - FirstVNF_Mem ) ) - ( DDR * FirstVNF_CPU ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * Min( CS ,RCSe ) ) ) / MUC ) - MUM )", "obj1": 0.9115384615384615, "obj2": 0.05048947266880511}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server + CRS ),Const ) ,ARS ) - Const ) * ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ,RMSe ) ),( Min( CS ,( ( ( ( RCSe + MUC ) * MUC ) / MUM ) * RRSe ) ) * DS ) ) )", "obj1": 0.8403846153846154, "obj2": 0.12298300321060525}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( DDR * ACS ) + ( BR / PN ) ),( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Max( DS,MUC ) * DS ) )", "obj1": 0.6346153846153846, "obj2": 0.27590879491971143}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / AMS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7038461538461539, "obj2": 0.1949763498231468}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( ( RRSe + CS ) * MLU ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9807692307692307, "obj2": 0.010806129343653062}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( FirstVNF_RAM / ( AMS + AMS ) ) - ( ( RRS + FirstVNF_Mem_Server ) + Max( DDR,Min( FirstVNF_RAM ,( ( BR - Max( ARS,BR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,CS ) * ( Max( CS,MUM ) + RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.9096153846153846, "obj2": 0.05208356873433798}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) ) + RMSe ) )", "obj1": 0.6519230769230769, "obj2": 0.24760515268591388}, {"determining": "( Min( Max( ( DDR - ( MDR - RRS ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( MUR + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6307692307692307, "obj2": 0.284279633400015}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( FirstVNF_CPU + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU * RMSe ) + CS ) / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe - CS ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.7019230769230769, "obj2": 0.2038368588590019}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe - CS ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.698076923076923, "obj2": 0.2094622582265001}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / Min( FirstVNF_Mem_Server ,ARS ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( ( MUR + RCSe ) * MUC ),CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6557692307692308, "obj2": 0.24726503770264016}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( ( Const * BR ) - MDR ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 0.6730769230769231, "obj2": 0.24501571115234566}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( ( FirstVNF_CPU - FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) ) ) * ( ( FirstVNF_CPU_Server / ( AMS + ( ( DDR / PN ) / PN ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,Min( ( ( MUM / ( Max( RMSe,CS ) * ( ( MUR + MLU ) - DS ) ) ) * RMSe ) ,MUM ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * FirstVNF_RAM ) ) / Min( FirstVNF_Mem ,DDR ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),( Min( FirstVNF_CPU ,FirstVNF_CPU ) - PN ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( ( DS * RCSe ) * ( RRSe * RRSe ) ) ) ) / Max( RMSe,Max( MUM,Max( ( RMSe * MUR ),( ( MUM * Min( RMSe ,( MUR + RMSe ) ) ) + MUR ) ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.01081389556884426}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6711538461538461, "obj2": 0.24562102932140623}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Const + ( MRS * Max( ( Max( ACS,DDR ) / MDR ),ARS ) ) ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( CS,CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6711538461538461, "obj2": 0.24562102932140623}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ( Const / Const ) + PN ) )", "choosing": "( ( MUC - RMSe ) * ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) - Max( RRS,MRS ) )", "choosing": "Max( Max( DS,( ( ( RMSe * CS ) / DS ) + CS ) ),( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( FirstVNF_Mem - ( AMS * CRS ) ) )", "choosing": "Min( Max( CS,( ( Max( ( ( RMSe - RCSe ) * MUC ),MLU ) * RMSe ) - MLU ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( FirstVNF_CPU * ARS ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( RRSe / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) - ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + ( ( ( RCSe / ( CS + MUC ) ) + RMSe ) + ( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS * ( RCSe + ( MUM + MUR ) ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( ( RRSe - ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ) * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_CPU - ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUM ) ) - ( MLU + Min( ( ( MUM - Max( ( ( RMSe / MLU ) / ( MUR + DS ) ),( MLU + MLU ) ) ) - ( MUC * MUM ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Min( ( PN + ARS ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,( MUR + RCSe ) ) ,Min( RCSe ,RMSe ) ) / ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( Max( MDR,( AMS + AMS ) ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( ( ( RMSe + MUC ) / MUC ) - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( Const - FirstVNF_Mem ) ) ) ) - ( Max( MDR,FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_CPU / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,( RMSe / MUC ) ) ) / ( MLU * DS ) )", "obj1": 0.6230769230769231, "obj2": 0.2875798368979356}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.8442307692307692, "obj2": 0.06844290830212237}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( RMSe * ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM ) ) )", "obj1": 0.8076923076923077, "obj2": 0.11809605344164184}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( CRS ,Max( FirstVNF_RAM,( Max( ACS,DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - MUM )", "obj1": 0.9365384615384615, "obj2": 0.030633784262472482}, {"determining": "( ( ( Min( PN ,RRS ) - ( DDR * FirstVNF_CPU ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM )", "obj1": 0.8846153846153846, "obj2": 0.05516742221436451}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( PN - Max( Min( Min( ( BR + ( CRS + FirstVNF_CPU_Server ) ) ,RRS ) ,BR ),AMS ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * Max( MUM,DS ) ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( Min( MRS ,RRS ) / PN ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,Max( Max( ( ( RMSe + MLU ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ),( MUR + MUM ) ),Min( Min( CS ,RCSe ) ,RCSe ) ) ) )", "obj1": 0.6807692307692308, "obj2": 0.23787264889887927}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem_Server / AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( Min( Max( RRSe,CS ) ,( ( MUM * RRSe ) * RRSe ) ) / MLU ) )", "obj1": 0.7826923076923077, "obj2": 0.14115868748859223}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / Max( CRS,MDR ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( MUM / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 0.7903846153846154, "obj2": 0.1348258686517135}, {"determining": "( ( ( Min( PN ,( Const - FirstVNF_Mem ) ) - ( DDR * FirstVNF_CPU ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * Min( CS ,RCSe ) ) ) / MUC ) - MUM )", "obj1": 0.9115384615384615, "obj2": 0.05048947266880511}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6384615384615384, "obj2": 0.2564335398873594}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( DDR * ACS ) + ( BR / PN ) ),( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Max( DS,MUC ) * DS ) )", "obj1": 0.6346153846153846, "obj2": 0.27590879491971143}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / AMS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7038461538461539, "obj2": 0.1949763498231468}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - CRS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe + RRSe ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + AMS ) ) - ( ( RRS + FirstVNF_Mem_Server ) + Max( DDR,Min( FirstVNF_RAM ,( ( BR - Max( ARS,BR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC - ( Min( RMSe ,CS ) * ( Max( CS,MUM ) + RMSe ) ) ) / Max( MUR,DS ) )", "obj1": 0.9096153846153846, "obj2": 0.05208356873433798}, {"determining": "( ( FirstVNF_RAM / ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) + Max( DDR,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( MUR / ( RMSe * MUR ) )", "obj1": 0.9903846153846154, "obj2": 0.008084518412971876}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) ) + RMSe ) )", "obj1": 0.6519230769230769, "obj2": 0.24760515268591388}, {"determining": "( Min( Max( ( DDR - ( MDR - RRS ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( MUR + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6307692307692307, "obj2": 0.284279633400015}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( FirstVNF_CPU + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU * RMSe ) + CS ) / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe - CS ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.7019230769230769, "obj2": 0.2038368588590019}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe - CS ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.698076923076923, "obj2": 0.2094622582265001}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / Min( FirstVNF_Mem_Server ,ARS ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( ( MUR + RCSe ) * MUC ),CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6557692307692308, "obj2": 0.24726503770264016}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "Max( ( ( ACS * ACS ) + ( BR / ( Min( MRS ,RRS ) / PN ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( ( ARS - FirstVNF_CPU_Server ) / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) )", "obj1": 0.6711538461538461, "obj2": 0.24550211027500635}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( ( Const * BR ) - MDR ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 0.6730769230769231, "obj2": 0.24501571115234566}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ( Const / Const ) + PN ) )", "choosing": "( ( MUC - RMSe ) * ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) - Max( RRS,MRS ) )", "choosing": "Max( Max( DS,( ( ( RMSe * CS ) / DS ) + CS ) ),( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( FirstVNF_Mem - ( AMS * CRS ) ) )", "choosing": "Min( Max( CS,( ( Max( ( ( RMSe - RCSe ) * MUC ),MLU ) * RMSe ) - MLU ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( FirstVNF_CPU * ARS ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( RRSe / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) - ( FirstVNF_CPU_Server + Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + ( ( ( RCSe / ( CS + MUC ) ) + RMSe ) + ( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( DS * ( RCSe + ( MUM + MUR ) ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - ( FirstVNF_CPU / Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( ( RRSe - ( Min( ( MUM / MUM ) ,( MUM + CS ) ) - RRSe ) ) * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_CPU - ( AMS - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUM ) ) - ( MLU + Min( ( ( MUM - Max( ( ( RMSe / MLU ) / ( MUR + DS ) ),( MLU + MLU ) ) ) - ( MUC * MUM ) ) ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Min( ( PN + ARS ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,( MUR + RCSe ) ) ,Min( RCSe ,RMSe ) ) / ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( Max( MDR,( AMS + AMS ) ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( ( ( RMSe + MUC ) / MUC ) - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( Const - FirstVNF_Mem ) ) ) ) - ( Max( MDR,FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_CPU / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,( RMSe / MUC ) ) ) / ( MLU * DS ) )", "obj1": 0.6230769230769231, "obj2": 0.2875798368979356}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.8442307692307692, "obj2": 0.06844290830212237}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( RMSe * ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM ) ) )", "obj1": 0.8076923076923077, "obj2": 0.11809605344164184}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * Min( DDR ,BR ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( ( ( MLU * ( MUR * RCSe ) ) - MUC ) - ( Min( RMSe ,( MUR + MUC ) ) / MUR ) ) - ( RRSe + ( CS / ( CS / ( MLU / MUC ) ) ) ) ) ) ,MUM ) )", "obj1": 0.8711538461538462, "obj2": 0.05661306905050825}, {"determining": "( ( ( Max( ACS,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( AMS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM / MLU ) ,Max( MUM,RCSe ) )", "obj1": 0.7365384615384616, "obj2": 0.17626621223614497}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem_Server / AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( Min( Max( RRSe,CS ) ,( ( MUM * RRSe ) * RRSe ) ) / MLU ) )", "obj1": 0.7826923076923077, "obj2": 0.14115868748859223}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "Max( ( ( ACS * ACS ) + ( BR / ( Min( MRS ,RRS ) / PN ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ),RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) )", "obj1": 0.675, "obj2": 0.23636491852993374}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6384615384615384, "obj2": 0.2564335398873594}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / Max( CRS,MDR ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( MUM / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 0.7903846153846154, "obj2": 0.1348258686517135}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( DDR * ACS ) + ( BR / PN ) ),( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Max( DS,MUC ) * DS ) )", "obj1": 0.6346153846153846, "obj2": 0.27590879491971143}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8942307692307693, "obj2": 0.04216675950565962}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MLU ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.0496080698133187}, {"determining": "( ( ( FirstVNF_Mem - ARS ) / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( ( ( FirstVNF_Mem_Server * MRS ) - ( AMS * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) / MDR ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + ( ( RMSe - DS ) + CS ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) ) ) / ( ( CS - RRSe ) * ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM ) ) )", "obj1": 0.8038461538461539, "obj2": 0.11898922407942399}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / AMS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7038461538461539, "obj2": 0.1949763498231468}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9211538461538461, "obj2": 0.03374055710352362}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Min( ( ( Min( AMS ,FirstVNF_CPU ) / ( AMS * ( FirstVNF_RAM * PN ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - ( MUR + Max( MUR,MLU ) ) ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "Max( ( ( ACS * ACS ) + ( BR / ( Min( MRS ,RRS ) / PN ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_CPU - ACS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / Min( Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) ) ,( MUR * CS ) ) )", "obj1": 0.6711538461538461, "obj2": 0.2411505227840876}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( CRS ,Max( FirstVNF_RAM,( Max( ACS,DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - MUM )", "obj1": 0.9365384615384615, "obj2": 0.030633784262472482}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( ( ( ACS + Const ) * Min( FirstVNF_RAM ,( ( BR - Max( ARS,BR ) ) + FirstVNF_CPU ) ) ) - ( AMS / ARS ) ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / ( MLU * RCSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 0.9884615384615385, "obj2": 0.007448763065223997}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) ) + RMSe ) )", "obj1": 0.6519230769230769, "obj2": 0.24760515268591388}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / Min( FirstVNF_Mem_Server ,ARS ) ) ),Min( ( Max( Min( FirstVNF_CPU ,ACS ),Min( Const ,Const ) ) / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( ( ( MUR + RCSe ) * MUC ),CS ) ,MLU ) / ( Min( MLU ,Max( RMSe,Max( CS,( MUR - MUC ) ) ) ) + RMSe ) )", "obj1": 0.6557692307692308, "obj2": 0.24726503770264016}, {"determining": "( Min( Max( ( DDR - ( MDR - RRS ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( MUR + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6307692307692307, "obj2": 0.284279633400015}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - Min( MDR ,AMS ) ) ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) * MLU ) ,( Min( MUM ,RCSe ) / DS ) ) - MUM )", "obj1": 0.95, "obj2": 0.024021913680826516}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - CRS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe + RRSe ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( FirstVNF_CPU + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( ( ( MLU * RMSe ) + CS ) / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe - CS ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.7019230769230769, "obj2": 0.2038368588590019}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( RCSe - CS ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.698076923076923, "obj2": 0.2094622582265001}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( ( ( Min( PN ,( Const - FirstVNF_Mem ) ) - ( DDR * FirstVNF_CPU ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( ( ( MLU * ( MUR * Min( CS ,RCSe ) ) ) / MUC ) + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.948076923076923, "obj2": 0.0295108663580462}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( PN - Max( Min( Min( ( BR + ( CRS + FirstVNF_CPU_Server ) ) ,RRS ) ,BR ),AMS ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * Max( MUM,DS ) ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( Max( CS,MUM ) + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( Min( ARS ,FirstVNF_Mem_Server ) / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / ( MUM / ( MUC * MUM ) ) ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.975, "obj2": 0.00968406244527156}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( ( Const / Const ) + PN ) )", "choosing": "( ( MUC - RMSe ) * ( ( Max( CS,MLU ) / ( MUM - DS ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / MDR ) - ARS ) ) - Max( RRS,MRS ) )", "choosing": "Max( Max( DS,( ( ( RMSe * CS ) / DS ) + CS ) ),( MUM / ( MUC * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - ( FirstVNF_Mem - ( AMS * CRS ) ) )", "choosing": "Min( Max( CS,( ( Max( ( ( RMSe - RCSe ) * MUC ),MLU ) * RMSe ) - MLU ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( Min( BR ,( ( MDR / CRS ) + Max( BR,MRS ) ) ) - ( FirstVNF_Mem_Server + Min( ARS ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * Min( ( MUM + Min( RMSe ,( ( Min( MUR ,MUC ) - ( RMSe + MUC ) ) * ( MUM + CS ) ) ) ) ,( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_CPU / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,( RMSe / MUC ) ) ) / ( MLU * DS ) )", "obj1": 0.6230769230769231, "obj2": 0.2875798368979356}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( Min( ( MDR + PN ) ,FirstVNF_RAM_Server ) * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( MUM - RCSe ) / ( RRSe / MUM ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6519230769230769, "obj2": 0.23079739873151653}, {"determining": "( ( ( FirstVNF_Mem - ARS ) / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( ( ( FirstVNF_Mem_Server * MRS ) - ( AMS * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) / MDR ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + ( ( RMSe - DS ) + CS ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) ) ) / ( ( CS - RRSe ) * ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM ) ) )", "obj1": 0.8038461538461539, "obj2": 0.11898922407942399}, {"determining": "( ( ( RRS - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ( BR + AMS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - Min( MUR ,MUM ) ) )", "obj1": 0.8057692307692308, "obj2": 0.08163346942314106}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6384615384615384, "obj2": 0.2564335398873594}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / Max( CRS,MDR ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( MUM / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 0.7903846153846154, "obj2": 0.1348258686517135}, {"determining": "( ( ( Max( ACS,ACS ) - ( CRS - FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( AMS / FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM / MLU ) ,Max( MUM,RCSe ) )", "obj1": 0.7365384615384616, "obj2": 0.17626621223614497}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.8442307692307692, "obj2": 0.06844290830212237}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem_Server / AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( Min( Max( RRSe,CS ) ,( ( MUM * RRSe ) * RRSe ) ) / MLU ) )", "obj1": 0.7826923076923077, "obj2": 0.14115868748859223}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ( MRS - ARS ) / ( BR - AMS ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / MUR )", "obj1": 0.8346153846153846, "obj2": 0.08011764609853828}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,MRS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MLU ) + MUM ) ),( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8673076923076923, "obj2": 0.06038037259103144}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8942307692307693, "obj2": 0.04216675950565962}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MLU ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.0496080698133187}, {"determining": "( Min( ( MDR / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MLU ) ) ,MUM ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 0.7788461538461539, "obj2": 0.15886199153414346}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ACS ) ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,( ( RRSe + CS ) * Max( CS,CS ) ) )", "obj1": 0.698076923076923, "obj2": 0.2002494969600469}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( CRS ,Max( FirstVNF_RAM,( Max( ACS,DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - MUM )", "obj1": 0.9365384615384615, "obj2": 0.030633784262472482}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9173076923076923, "obj2": 0.03296185713684447}, {"determining": "( ( ( Max( ACS,ACS ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU / BR ),( Min( ( FirstVNF_Mem_Server / ( ARS * ( AMS * FirstVNF_Mem ) ) ) ,Const ) / BR ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RMSe * ( ( MLU + MUM ) / MUC ) ) * CS ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - Min( RRSe ,DS ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7, "obj2": 0.18991756290038408}, {"determining": "( Min( Max( ( DDR - ( FirstVNF_RAM_Server * PN ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( RMSe + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6326923076923077, "obj2": 0.2726716310685955}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Min( ( ( Min( AMS ,FirstVNF_CPU ) / ( AMS * ( FirstVNF_RAM * PN ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - ( MUR + Max( MUR,MLU ) ) ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( Min( Max( ( DDR - ( MDR - RRS ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( MUR + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6307692307692307, "obj2": 0.284279633400015}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - Min( DDR ,DDR ) ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( Max( CS,Min( Max( CS,CS ) ,RRSe ) ) + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7442307692307693, "obj2": 0.16972441172473843}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * Min( DDR ,BR ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( ( ( MLU * ( MUR * RCSe ) ) - MUC ) - ( Min( RMSe ,( MUR + MUC ) ) / MUR ) ) - ( RRSe + ( CS / ( CS / ( MLU / MUC ) ) ) ) ) ) ,MUM ) )", "obj1": 0.8711538461538462, "obj2": 0.05661306905050825}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ( PN + ( MDR + ( RRS * ( MRS + FirstVNF_Mem ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * ( Max( CS,MUM ) + RCSe ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6346153846153846, "obj2": 0.2586757733575268}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ARS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9807692307692307, "obj2": 0.007316715894267074}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8384615384615385, "obj2": 0.07409794274064195}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( AMS + AMS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( MUM / ( Min( RCSe ,RRSe ) * MUM ) ) ) ) / ( RMSe * ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM ) ) )", "obj1": 0.9942307692307693, "obj2": 0.002563581573647846}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( RMSe * ( ( ( MLU * ( MUR * CS ) ) / MUC ) - MUM ) ) )", "obj1": 0.9461538461538461, "obj2": 0.025347334038348716}, {"determining": "( DDR * ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) + Const ) / DDR ) * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server * DDR ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( Min( DS ,Max( ( MLU - MUC ),Max( ( MLU - CS ),RRSe ) ) ) + ( ( MUC - MUC ) * ( CS * MUR ) ) ) ,Min( RCSe ,RMSe ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.948076923076923, "obj2": 0.022606590756602638}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( PN - Max( Min( Min( ( BR + ( CRS + FirstVNF_CPU_Server ) ) ,RRS ) ,BR ),AMS ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * Max( MUM,DS ) ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( BR / PN ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUC + MUC ) ) / Min( Max( MUR,MUM ) ,( MLU - RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( PN / ARS ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + MUM ) ),Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( Min( MUR ,RRSe ) - MUM ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / ( MUM / ( MUC * MUM ) ) ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.975, "obj2": 0.009158537176606509}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( ( MUM - MUR ) * ( MUR * MUC ) ) )", "obj1": 0.9961538461538462, "obj2": 0.0013762762049405216}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - Max( ( ( FirstVNF_Mem_Server * MRS ) * Const ),MDR ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( Max( DS,MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Min( ( PN - Const ) ,( AMS + AMS ) ) )", "choosing": "( ( MUR / RMSe ) * ( ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( Min( ( FirstVNF_CPU / RRS ) ,( AMS - Min( FirstVNF_RAM ,ARS ) ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_RAM - PN ) * Max( MRS,Min( Max( ARS,FirstVNF_Mem_Server ) ,PN ) ) ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + MUM ) - Min( MUC ,RCSe ) ) + ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * ACS ) - DDR ) / ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( DS + MUM ) ,RRSe ) + ( CS - CS ) ),Max( Min( CS ,( ( Min( ( MUR - ( MLU - MLU ) ) ,DS ) + MUR ) * ( MUM + ( RRSe + MUM ) ) ) ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( ( Const * Max( FirstVNF_Mem,FirstVNF_Mem ) ) - ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,MLU ) - Min( Max( ( CS * ( ( RRSe / RRSe ) * RMSe ) ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) ) ,RMSe ) ,( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) * Min( AMS ,Const ) )", "choosing": "( Min( Max( ( MUR - CS ),RCSe ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / ( ( Min( ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - ( ( RRS / ( MDR - FirstVNF_RAM ) ) / PN ) ) ) ) )", "choosing": "( ( ( CS / ( ( RCSe * Max( ( MUC - RRSe ),Min( ( CS - MLU ) ,MUM ) ) ) + MLU ) ) * Max( CS,MLU ) ) + ( MUR * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - ( Max( ( ( Const / ( PN + FirstVNF_CPU ) ) * Max( FirstVNF_Mem_Server,( Min( FirstVNF_RAM ,( DDR / ACS ) ) * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( Min( MUC ,Max( ( Min( Max( RRSe,( MUR / MUM ) ) ,CS ) * ( CS * MUC ) ),MUC ) ) / ( Min( RCSe ,MUM ) + ( MUC * Min( MLU ,( MUC / ( RCSe * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + ( FirstVNF_RAM_Server * ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MLU ) - ( ( MLU - MUM ) + ( Max( RRSe,Min( ( Min( RRSe ,MUR ) / ( MUM * ( RRSe + MUC ) ) ) ,CS ) ) - Min( Max( DS,MUR ) ,( DS - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( Min( CS ,MUC ) / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( ( ( RRSe + CS ) * Min( ( MLU - MLU ) ,( RRSe * ( ( MLU / RRSe ) / ( RMSe * CS ) ) ) ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( Const * ( Max( BR,Min( FirstVNF_RAM_Server ,Min( MDR ,BR ) ) ) - ARS ) )", "choosing": "( Max( ( MUR - CS ),RCSe ) / ( ( RCSe - ( RRSe - RMSe ) ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( MDR / CRS ) + Max( BR,MRS ) ) ) - ( FirstVNF_Mem_Server + Min( ARS ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * Min( ( MUM + Min( RMSe ,( ( Min( MUR ,MUC ) - ( RMSe + MUC ) ) * ( MUM + CS ) ) ) ) ,( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,ACS ) ,FirstVNF_Mem_Server ) * Max( ( ( ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) / Min( Const ,FirstVNF_CPU_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_CPU / MRS ) ,( ARS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,( RMSe / MUC ) ) ) / ( MLU * DS ) )", "obj1": 0.6230769230769231, "obj2": 0.2875798368979356}, {"determining": "( ( ( FirstVNF_Mem - ARS ) / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( ( ( FirstVNF_Mem_Server * MRS ) - ( AMS * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) / MDR ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + ( ( RMSe - DS ) + CS ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) ) ) / ( ( CS - RRSe ) * ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM ) ) )", "obj1": 0.8038461538461539, "obj2": 0.11898922407942399}, {"determining": "( ( ( RRS - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ( BR + AMS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - Min( MUR ,MUM ) ) )", "obj1": 0.8057692307692308, "obj2": 0.08163346942314106}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( Min( ( MDR + PN ) ,FirstVNF_RAM_Server ) * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( MUM - RCSe ) / ( RRSe / MUM ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6519230769230769, "obj2": 0.23079739873151653}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.6903846153846154, "obj2": 0.22956978528594835}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / Max( CRS,MDR ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( MUM / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 0.7903846153846154, "obj2": 0.1348258686517135}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,ARS ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( ( MUM + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7365384615384616, "obj2": 0.17055891509060717}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / PN ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( RMSe * ( RCSe + DS ) ) )", "obj1": 0.6461538461538462, "obj2": 0.24773251848037958}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem_Server / AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( Min( Max( RRSe,CS ) ,( ( MUM * RRSe ) * RRSe ) ) / MLU ) )", "obj1": 0.7826923076923077, "obj2": 0.14115868748859223}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,MRS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + MRS ) ) ) ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MLU ) + MUM ) ),( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) / ( CS - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8326923076923077, "obj2": 0.07914331854603526}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8942307692307693, "obj2": 0.04216675950565962}, {"determining": "( Min( ( MDR / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MLU ) ) ,MUM ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 0.7788461538461539, "obj2": 0.15886199153414346}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ACS ) ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,( ( RRSe + CS ) * Max( CS,CS ) ) )", "obj1": 0.698076923076923, "obj2": 0.2002494969600469}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MLU ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.0496080698133187}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.8442307692307692, "obj2": 0.06844290830212237}, {"determining": "( ( ( Max( ACS,ACS ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU / BR ),( Min( ( FirstVNF_Mem_Server / ( ARS * ( AMS * FirstVNF_Mem ) ) ) ,Const ) / BR ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RMSe * ( ( MLU + MUM ) / MUC ) ) * CS ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - Min( RRSe ,DS ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7, "obj2": 0.18991756290038408}, {"determining": "( Min( Max( ( DDR - ( FirstVNF_RAM_Server * PN ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( RMSe + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6326923076923077, "obj2": 0.2726716310685955}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8596153846153847, "obj2": 0.060500967539194074}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ( PN + ( MDR + ( RRS * ( MRS + FirstVNF_Mem ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * ( Max( CS,MUM ) + RCSe ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6346153846153846, "obj2": 0.2586757733575268}, {"determining": "( Min( Max( ( DDR - ( MDR - RRS ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( MUR + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6307692307692307, "obj2": 0.284279633400015}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9807692307692307, "obj2": 0.007316715894267074}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6365384615384615, "obj2": 0.25300875549560226}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8384615384615385, "obj2": 0.07409794274064195}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ARS ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( CRS ,Max( FirstVNF_RAM,( Max( ACS,DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - MUM )", "obj1": 0.9365384615384615, "obj2": 0.030633784262472482}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( ( ( MUR + RCSe ) * MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) )", "obj1": 0.9942307692307693, "obj2": 0.002243645252908046}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Const - FirstVNF_RAM_Server ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.925, "obj2": 0.03294921030497385}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ( MRS - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.2152334060541474}, {"determining": "( DDR * ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) + Const ) / DDR ) * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server * DDR ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( Min( DS ,Max( ( MLU - MUC ),Max( ( MLU - CS ),RRSe ) ) ) + ( ( MUC - MUC ) * ( CS * MUR ) ) ) ,Min( RCSe ,RMSe ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.948076923076923, "obj2": 0.022606590756602638}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - Min( DDR ,DDR ) ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( Max( CS,Min( Max( CS,CS ) ,RRSe ) ) + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7442307692307693, "obj2": 0.16972441172473843}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,ACS ) + ( ( ACS + FirstVNF_Mem ) / MDR ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / Min( ( ( RRSe - ( MUR * CS ) ) - MUC ) ,( RCSe * MLU ) ) )", "obj1": 0.8730769230769231, "obj2": 0.056170320902810524}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9173076923076923, "obj2": 0.03296185713684447}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,MRS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MLU ) + MUM ) ),( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8673076923076923, "obj2": 0.06038037259103144}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9115384615384615, "obj2": 0.03643155245103888}, {"determining": "( DDR * ( ( ( ( ARS * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,( RMSe * DS ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9403846153846154, "obj2": 0.0269526190229501}, {"determining": "( ( ( FirstVNF_Mem_Server * ARS ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Max( ( AMS - CRS ),( FirstVNF_Mem_Server - Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( Max( Min( MUM ,( CS * DS ) ),MUM ) - Min( RMSe ,DS ) ) * DS ) * Min( Min( MUM ,RCSe ) ,MUM ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Min( ( ( Min( AMS ,FirstVNF_CPU ) / ( AMS * ( FirstVNF_RAM * PN ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - ( MUR + Max( MUR,MLU ) ) ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * Min( DDR ,BR ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( ( ( MLU * ( MUR * RCSe ) ) - MUC ) - ( Min( RMSe ,( MUR + MUC ) ) / MUR ) ) - ( RRSe + ( CS / ( CS / ( MLU / MUC ) ) ) ) ) ) ,MUM ) )", "obj1": 0.8711538461538462, "obj2": 0.05661306905050825}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( PN - Max( Min( Min( ( BR + ( CRS + FirstVNF_CPU_Server ) ) ,RRS ) ,BR ),AMS ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * Max( MUM,DS ) ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / DDR ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Min( Max( ( CS * RRSe ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( RMSe / DS ) ) ) / DS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.01288438012381208}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( BR / PN ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUC + MUC ) ) / Min( Max( MUR,MUM ) ,( MLU - RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( DDR * ( ( ( ( FirstVNF_Mem_Server * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,DDR ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,Min( RCSe ,MUM ) ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9442307692307692, "obj2": 0.025687972265932155}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( MUR + MUC ) / ( RMSe * ( ( ( MLU * ( MUR * CS ) ) / MUC ) - MUM ) ) )", "obj1": 0.9461538461538461, "obj2": 0.02483421100736674}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( PN / ARS ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + MUM ) ),Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( Min( MUR ,RRSe ) - MUM ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / ( MUM / ( MUC * MUM ) ) ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.975, "obj2": 0.009158537176606509}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( ( MUM - MUR ) * ( MUR * MUC ) ) )", "obj1": 0.9961538461538462, "obj2": 0.0013762762049405216}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - Max( ( ( FirstVNF_Mem_Server * MRS ) * Const ),MDR ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( Max( DS,MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server + ( ACS * ( ( ( MDR * ( Min( MDR ,AMS ) + ( ACS + ACS ) ) ) + FirstVNF_Mem ) * PN ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Max( Min( MLU ,CS ),( MUC + RCSe ) ),Min( Min( CS ,RCSe ) ,( ( DS - DS ) + ( ( ( Min( MUC ,DS ) - RCSe ) + ( RRSe + MUC ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_RAM_Server ) / Max( ACS,( ( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUM + ( ( ( RRSe * MLU ) + RMSe ) + ( CS / Max( DS,RCSe ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / ( BR - AMS ) )", "choosing": "Min( ( MUM + ( CS * ( RMSe / MUR ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR - CRS ) ,( ARS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( MLU ,RCSe ) - ( MUR + ( CS * ( RCSe * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( ( FirstVNF_RAM / PN ) * DDR ) - BR ),CRS ) ,( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( PN + FirstVNF_CPU_Server ) * ( MRS * RRS ) ) ) - MDR ) )", "choosing": "( ( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / Min( DS ,MUR ) ) - Min( ( Max( ( MUC / MUR ),MUM ) * ( DS * Min( ( ( MUC / RCSe ) * CS ) ,RRSe ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( Min( ( ARS * CRS ) ,PN ) ,Max( FirstVNF_RAM,( Max( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ),DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( ( Min( MUR ,MUC ) - ( MLU / CS ) ) + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - Min( ( MUC + RRSe ) ,( ( MLU / Max( ( ( ( MUC / RCSe ) - DS ) * CS ),( MUM * RCSe ) ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const * ( Max( BR,Min( FirstVNF_RAM_Server ,Min( MDR ,BR ) ) ) - ARS ) )", "choosing": "( Max( ( MUR - CS ),RCSe ) / ( ( RCSe - ( RRSe - RMSe ) ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,AMS ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * Min( CS ,DS ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6173076923076923, "obj2": 0.27527279082948575}, {"determining": "( ( ( FirstVNF_Mem - ARS ) / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( ( ( FirstVNF_Mem_Server * MRS ) - ( AMS * ( FirstVNF_RAM + FirstVNF_CPU ) ) ) / MDR ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( ( RRSe + ( ( RMSe - DS ) + CS ) ) / ( MUM / ( Min( MUC ,RRSe ) * MUM ) ) ) ) / ( ( CS - RRSe ) * ( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - MUM ) ) )", "obj1": 0.8038461538461539, "obj2": 0.11898922407942399}, {"determining": "( ( ( RRS - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ( BR + AMS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - Min( MUR ,MUM ) ) )", "obj1": 0.8057692307692308, "obj2": 0.08163346942314106}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.6903846153846154, "obj2": 0.22956978528594835}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( Min( ( MDR + PN ) ,FirstVNF_RAM_Server ) * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( MUM - RCSe ) / ( RRSe / MUM ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6519230769230769, "obj2": 0.23079739873151653}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "( ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / Max( CRS,MDR ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * Max( ( Max( RMSe,( ( MUM / ( ( DS / RRSe ) / ( RCSe - MUM ) ) ) * RCSe ) ) - Min( DS ,RRSe ) ),MUM ) )", "obj1": 0.7903846153846154, "obj2": 0.1348258686517135}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,ARS ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( ( MUM + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7365384615384616, "obj2": 0.17055891509060717}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( Max( ( FirstVNF_Mem_Server + ( Max( DDR,FirstVNF_CPU_Server ) - AMS ) ),Const ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / MLU )", "obj1": 0.6923076923076923, "obj2": 0.2048840245891038}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / PN ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( RMSe * ( RCSe + DS ) ) )", "obj1": 0.6461538461538462, "obj2": 0.24773251848037958}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem_Server / AMS ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - Min( ( ARS + ( ( MRS - ARS ) / ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ,BR ) )", "choosing": "( Min( RMSe ,Max( ( CS - MUM ),( RRSe / CS ) ) ) * ( Min( Max( RRSe,CS ) ,( ( MUM * RRSe ) * RRSe ) ) / MLU ) )", "obj1": 0.7826923076923077, "obj2": 0.14115868748859223}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( Min( MDR ,FirstVNF_RAM ) - MDR ) - ( RRS / ( BR - BR ) ) ) - ( Max( CRS,RRS ) - FirstVNF_CPU ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / Max( CS,CS ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( MLU / ( RRSe * MUC ) ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8307692307692308, "obj2": 0.07838306268321546}, {"determining": "( Min( ( MDR / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MLU ) ) ,MUM ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 0.7788461538461539, "obj2": 0.15886199153414346}, {"determining": "( ( ( Max( ACS,ACS ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU / BR ),( Min( ( FirstVNF_Mem_Server / ( ARS * ( AMS * FirstVNF_Mem ) ) ) ,Const ) / BR ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RMSe * ( ( MLU + MUM ) / MUC ) ) * CS ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - Min( RRSe ,DS ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7, "obj2": 0.18991756290038408}, {"determining": "( Min( Max( ( DDR - ( FirstVNF_RAM_Server * PN ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( RMSe + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6326923076923077, "obj2": 0.2726716310685955}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ( PN + ( MDR + ( RRS * ( MRS + FirstVNF_Mem ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * ( Max( CS,MUM ) + RCSe ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6346153846153846, "obj2": 0.2586757733575268}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem_Server ) * Min( DDR ,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( ( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) * MLU ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + ( Min( RMSe ,( MUR + MUC ) ) / MUR ) ) ) ) ) )", "obj1": 0.6942307692307692, "obj2": 0.198634877399918}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8596153846153847, "obj2": 0.060500967539194074}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8384615384615385, "obj2": 0.07409794274064195}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8942307692307693, "obj2": 0.04216675950565962}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6365384615384615, "obj2": 0.25300875549560226}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06513479688272282}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( ( RRSe * Min( ( RRSe + Min( CS ,RRSe ) ) ,MUC ) ) - ( ( DS / DS ) + MUR ) ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8826923076923077, "obj2": 0.046478468364236095}, {"determining": "( DDR * ( ( ( ( ( ( ( DDR / FirstVNF_Mem_Server ) + Const ) / DDR ) * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server * DDR ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( Min( DS ,Max( ( MLU - MUC ),Max( ( MLU - CS ),RRSe ) ) ) + ( ( MUC - MUC ) * ( CS * MUR ) ) ) ,Min( RCSe ,RMSe ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.948076923076923, "obj2": 0.022606590756602638}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,PN ) ),( ( ( CRS + ARS ) * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUM / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * DS ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9807692307692307, "obj2": 0.007119485242872334}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - Min( DDR ,DDR ) ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( Max( CS,Min( Max( CS,CS ) ,RRSe ) ) + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7442307692307693, "obj2": 0.16972441172473843}, {"determining": "( MDR - Max( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN / FirstVNF_Mem_Server ) + Const ) ) / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( Max( Min( ( RMSe - ( ( ( MUC - RRSe ) * ( DS * MUR ) ) - Min( MUR ,( MLU + MUM ) ) ) ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) )", "obj1": 0.9923076923076923, "obj2": 0.002952598369610167}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.8442307692307692, "obj2": 0.06844290830212237}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem_Server ) - ( RRS / RRS ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( CS ,MUR ),DS ) ) ) )", "obj1": 0.925, "obj2": 0.032139315014301194}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9173076923076923, "obj2": 0.03296185713684447}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Const - FirstVNF_RAM_Server ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) ,RCSe ) ) ) )", "obj1": 0.875, "obj2": 0.05277589913228042}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( PN / CRS ) - MRS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Min( RCSe ,Min( RMSe ,( ( Min( Min( ( CS * MUC ) ,Max( RRSe,DS ) ) ,MUC ) - ( MLU / CS ) ) * ( RCSe / RMSe ) ) ) ) )", "obj1": 0.8673076923076923, "obj2": 0.05351650642492264}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( Const ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,( MUM / MLU ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8634615384615385, "obj2": 0.05715926570417629}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9115384615384615, "obj2": 0.03643155245103888}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Max( MRS,( FirstVNF_Mem * ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MLU ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.0496080698133187}, {"determining": "( ( ( ( FirstVNF_Mem * ( Const / ACS ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * MUR ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - MLU ) )", "obj1": 0.9, "obj2": 0.03944690017903858}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / Min( FirstVNF_CPU_Server ,RRS ) ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - ARS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),( RMSe * RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9307692307692308, "obj2": 0.02823152857214344}, {"determining": "( DDR * ( ( ( ( ARS * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,( RMSe * DS ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9403846153846154, "obj2": 0.0269526190229501}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * Min( CRS ,Const ) ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( RRS / AMS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( CS + ( MUR * ( MUC / MUR ) ) ) ,( MLU + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.9326923076923077, "obj2": 0.0273735422799682}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( PN - Max( Min( Min( ( BR + ( CRS + FirstVNF_CPU_Server ) ) ,RRS ) ,BR ),AMS ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * Max( MUM,DS ) ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / DDR ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Min( Max( ( CS * RRSe ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( RMSe / DS ) ) ) / DS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.01288438012381208}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( Min( MUC ,RMSe ),RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9038461538461539, "obj2": 0.037529662540072194}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( BR / PN ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUC + MUC ) ) / Min( Max( MUR,MUM ) ,( MLU - RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( DDR * ( ( ( ( FirstVNF_Mem_Server * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_Mem ,DDR ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,Min( RCSe ,MUM ) ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9442307692307692, "obj2": 0.025687972265932155}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( MUR + MUC ) / ( RMSe * ( ( ( MLU * ( MUR * CS ) ) / MUC ) - MUM ) ) )", "obj1": 0.9461538461538461, "obj2": 0.02483421100736674}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( PN / ARS ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + MUM ) ),Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( Min( MUR ,RRSe ) - MUM ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / ( MUM / ( MUC * MUM ) ) ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.975, "obj2": 0.009158537176606509}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Min( ( ( Min( AMS ,FirstVNF_CPU ) / ( AMS * ( FirstVNF_RAM * PN ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - ( MUR + Max( MUR,MLU ) ) ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9788461538461538, "obj2": 0.008176618180426623}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( ( MUM - MUR ) * ( MUR * MUC ) ) )", "obj1": 0.9961538461538462, "obj2": 0.0013762762049405216}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( ( ( MUR + RCSe ) * MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) )", "obj1": 0.9942307692307693, "obj2": 0.002243645252908046}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - Max( ( ( FirstVNF_Mem_Server * MRS ) * Const ),MDR ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( Max( DS,MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( ( FirstVNF_Mem_Server * ARS ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Max( ( AMS - CRS ),( FirstVNF_Mem_Server - Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( Max( Min( MUM ,( CS * DS ) ),MUM ) - Min( RMSe ,DS ) ) * DS ) * Min( Min( MUM ,RCSe ) ,MUM ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( Min( BR ,( ( MDR / CRS ) + Max( BR,MRS ) ) ) - ( FirstVNF_Mem_Server + Min( ARS ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * Min( ( MUM + Min( RMSe ,( ( Min( MUR ,MUC ) - ( RMSe + MUC ) ) * ( MUM + CS ) ) ) ) ,( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( Max( ( MRS / FirstVNF_CPU_Server ),DDR ) - Min( ( FirstVNF_CPU_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( ( ( RMSe * MUR ) + ( Min( ( RCSe * ( CS * DS ) ) ,CS ) * Max( ( RCSe * ( DS / DS ) ),Min( RRSe ,MUR ) ) ) ) - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,( ACS - Min( ( FirstVNF_CPU * ( ARS * ACS ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,MLU ) / ( Max( ( DS + RCSe ),RCSe ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( Min( ( Const / ( FirstVNF_RAM_Server * Const ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS * ( ( ( ( RCSe / RRSe ) + ( MUC * ( MUC + RMSe ) ) ) - MUM ) + ( MLU / RRSe ) ) ),Max( DS,MLU ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( DDR - PN ) - ( AMS + BR ) )", "choosing": "( ( ( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + ( Min( RMSe ,( MUR + MUC ) ) / MUR ) ) ) ) - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( Min( ( ARS * CRS ) ,PN ) ,Max( FirstVNF_RAM,( Max( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ),DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( ( Min( MUR ,MUC ) - ( MLU / CS ) ) + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - Min( ( MUC + RRSe ) ,( ( MLU / Max( ( ( ( MUC / RCSe ) - DS ) * CS ),( MUM * RCSe ) ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,AMS ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * Min( CS ,DS ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6173076923076923, "obj2": 0.27527279082948575}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem_Server ) - ( RRS / RRS ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( CS ,MUR ),DS ) ) ) )", "obj1": 0.7807692307692308, "obj2": 0.10323377507478823}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ARS * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,( RRSe / RCSe ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7711538461538462, "obj2": 0.13832857200007004}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / Min( Max( PN,FirstVNF_CPU ) ,RRS ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,RMSe )", "obj1": 0.6826923076923077, "obj2": 0.2162001511877098}, {"determining": "( ( ( RRS - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ( BR + AMS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - Min( MUR ,MUM ) ) )", "obj1": 0.8057692307692308, "obj2": 0.08163346942314106}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( Min( ( MDR + PN ) ,FirstVNF_RAM_Server ) * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( MUM - RCSe ) / ( RRSe / MUM ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6519230769230769, "obj2": 0.23079739873151653}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( BR - AMS ) + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( RCSe - RCSe ) / ( MLU * RMSe ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6884615384615385, "obj2": 0.19498703045025517}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / PN ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( RMSe * ( RCSe + DS ) ) )", "obj1": 0.6461538461538462, "obj2": 0.24773251848037958}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( Min( MDR ,FirstVNF_RAM ) - MDR ) - ( RRS / ( BR - BR ) ) ) - ( Max( CRS,RRS ) - FirstVNF_CPU ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / Max( CS,CS ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( MLU / ( RRSe * MUC ) ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8307692307692308, "obj2": 0.07838306268321546}, {"determining": "( ( ( Max( ACS,ACS ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU / BR ),( Min( ( FirstVNF_Mem_Server / ( ARS * ( AMS * FirstVNF_Mem ) ) ) ,Const ) / BR ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RMSe * ( ( MLU + MUM ) / MUC ) ) * CS ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - Min( RRSe ,DS ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7, "obj2": 0.18991756290038408}, {"determining": "( Min( Max( ( DDR - ( FirstVNF_RAM_Server * PN ) ),ACS ) ,FirstVNF_Mem_Server ) * ( ( FirstVNF_Mem_Server / MDR ) - ARS ) )", "choosing": "( Min( ( ( Min( ( RRSe / ( ( RMSe + MUC ) + RMSe ) ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) ) / RCSe ) ,Min( RCSe ,RMSe ) ) / ( MUC * DS ) )", "obj1": 0.6326923076923077, "obj2": 0.2726716310685955}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - Min( DDR ,DDR ) ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,RRS ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( Max( CS,Min( ( RMSe * MUR ) ,RRSe ) ) + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7269230769230769, "obj2": 0.17566237055864287}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ( PN + ( MDR + ( RRS * ( MRS + FirstVNF_Mem ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * ( Max( CS,MUM ) + RCSe ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6346153846153846, "obj2": 0.2586757733575268}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8596153846153847, "obj2": 0.060500967539194074}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8384615384615385, "obj2": 0.07409794274064195}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8942307692307693, "obj2": 0.04216675950565962}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6365384615384615, "obj2": 0.25300875549560226}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06513479688272282}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,ARS ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( AMS + AMS ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( ( MUM + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7365384615384616, "obj2": 0.17055891509060717}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( BR / PN ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUC + MUC ) ) / Min( Max( MUR,MUM ) ,( MLU - RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7576923076923077, "obj2": 0.16673718685335004}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / ( ( CRS * FirstVNF_CPU ) - FirstVNF_Mem ) ) - ( ACS / PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( Min( MUC ,MUR ) + ( MUM + RMSe ) ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.948076923076923, "obj2": 0.019100049206459375}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,PN ) ),( ( ( CRS + ARS ) * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUM / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * DS ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9807692307692307, "obj2": 0.007119485242872334}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - Min( DDR ,DDR ) ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( Max( CS,Min( Max( CS,CS ) ,RRSe ) ) + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7442307692307693, "obj2": 0.16972441172473843}, {"determining": "( MDR - Max( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN / FirstVNF_Mem_Server ) + Const ) ) / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( Max( Min( ( RMSe - ( ( ( MUC - RRSe ) * ( DS * MUR ) ) - Min( MUR ,( MLU + MUM ) ) ) ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) )", "obj1": 0.9923076923076923, "obj2": 0.002952598369610167}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ( FirstVNF_Mem_Server * ( ACS + PN ) ) - ( ( FirstVNF_RAM_Server * PN ) / Max( FirstVNF_RAM_Server,( ( DDR * FirstVNF_RAM ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( RMSe * Max( ( DS - RMSe ),Max( RRSe,CS ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.8442307692307692, "obj2": 0.06844290830212237}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8826923076923077, "obj2": 0.046478468364236095}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ( Const * ACS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RMSe / ( RRSe - CS ) ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( ( ( RRSe + ( MUM / MUM ) ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.875, "obj2": 0.05082307194115253}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( Const ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,( MUM / MLU ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8634615384615385, "obj2": 0.05715926570417629}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( Min( MDR ,FirstVNF_RAM ) - MDR ) - ( RRS / ( CRS - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / Max( CS,CS ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * RCSe ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9288461538461539, "obj2": 0.030324530048267656}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( FirstVNF_RAM_Server - ( RRS / ( BR - BR ) ) ) - ACS ) ) )", "choosing": "( Max( ( ( DS + Min( RMSe ,( CS * ( RRSe * ( MUR / MUC ) ) ) ) ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9192307692307692, "obj2": 0.03213532964645032}, {"determining": "( DDR * ( ( ( ( ARS * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,( RMSe * DS ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9403846153846154, "obj2": 0.0269526190229501}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * Min( RRSe ,MUM ) ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.046832802184956855}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( PN / CRS ) - MRS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Min( RCSe ,Min( RMSe ,( ( Min( Min( ( CS * MUC ) ,Max( RRSe,DS ) ) ,MUC ) - ( MLU / CS ) ) * ( RCSe / RMSe ) ) ) ) )", "obj1": 0.8673076923076923, "obj2": 0.05351650642492264}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( MUR + MUC ) / ( RMSe * ( ( ( MLU * ( MUR * CS ) ) / MUC ) - MUM ) ) )", "obj1": 0.9461538461538461, "obj2": 0.02483421100736674}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( PN - Max( Min( Min( ( BR + ( CRS + FirstVNF_CPU_Server ) ) ,RRS ) ,BR ),AMS ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * Max( MUM,DS ) ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ( FirstVNF_Mem * ( Const / ACS ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * MUR ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - MLU ) )", "obj1": 0.9, "obj2": 0.03944690017903858}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( ( DDR - Max( AMS,( FirstVNF_CPU + Max( FirstVNF_RAM,DDR ) ) ) ) - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( Min( MUM ,( RCSe + MUR ) ) + RMSe ) ,Min( DS ,MUR ) ) ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8692307692307693, "obj2": 0.05232650958901735}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * Min( CRS ,Const ) ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( RRS / AMS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( CS + ( MUR * ( MUC / MUR ) ) ) ,( MLU + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.9326923076923077, "obj2": 0.0273735422799682}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Const - FirstVNF_RAM_Server ) - Max( RRS,Max( MDR,MRS ) ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( Min( Min( MUM ,RCSe ) ,MUM ),Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) ,RCSe ) ) ) )", "obj1": 0.9153846153846154, "obj2": 0.03589823873488142}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9115384615384615, "obj2": 0.03643155245103888}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / DDR ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Min( Max( ( CS * RRSe ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( RMSe / DS ) ) ) / DS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.01288438012381208}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9173076923076923, "obj2": 0.03296185713684447}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( DDR * ( ( ( ( ( ( MRS - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) ) * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,( RMSe * DS ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,DS ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9442307692307692, "obj2": 0.025171134119332018}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / Min( FirstVNF_CPU_Server ,RRS ) ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - ARS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),( RMSe * RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9307692307692308, "obj2": 0.02823152857214344}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( Min( MUC ,RMSe ),RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9038461538461539, "obj2": 0.037529662540072194}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( PN / ARS ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + MUM ) ),Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( Min( MUR ,RRSe ) - MUM ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / ( MUM / ( MUC * MUM ) ) ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.975, "obj2": 0.009158537176606509}, {"determining": "( ( ( FirstVNF_Mem_Server * ARS ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Max( ( AMS - CRS ),( FirstVNF_Mem_Server - Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( Max( Min( MUM ,( CS * DS ) ),MUM ) - Min( RMSe ,DS ) ) * DS ) * Min( Min( MUM ,RCSe ) ,MUM ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( MLU + MUC ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9019230769230769, "obj2": 0.03933644712359885}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9788461538461538, "obj2": 0.008176618180426623}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( ( MUM - MUR ) * ( MUR * MUC ) ) )", "obj1": 0.9961538461538462, "obj2": 0.0013762762049405216}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( ( ( MUR + RCSe ) * MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) )", "obj1": 0.9942307692307693, "obj2": 0.002243645252908046}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( BR / PN ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUC + MUC ) ) / Min( Max( MUR,MUM ) ,( MLU - RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - Max( ( ( FirstVNF_Mem_Server * MRS ) * Const ),MDR ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( Max( DS,MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Min( ( ( Min( AMS ,FirstVNF_CPU ) / ( AMS * ( FirstVNF_RAM * PN ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - ( MUR + Max( MUR,MLU ) ) ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( Const * ( Max( BR,Min( FirstVNF_RAM_Server ,Min( MDR ,BR ) ) ) - ARS ) )", "choosing": "( Max( ( MUR - CS ),RCSe ) / ( ( RCSe - ( RRSe - RMSe ) ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( MDR / CRS ) + Max( BR,MRS ) ) ) - ( FirstVNF_Mem_Server + Min( ARS ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * Min( ( MUM + Min( RMSe ,( ( Min( MUR ,MUC ) - ( RMSe + MUC ) ) * ( MUM + CS ) ) ) ) ,( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * Const ),( Min( ( BR * AMS ) ,CRS ) - BR ) ) - ( Max( FirstVNF_Mem,FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) / ( CS * ( MUC / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( ( Min( Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,CRS ) ,FirstVNF_Mem ) - FirstVNF_RAM_Server ) ,( FirstVNF_CPU - ACS ) ) ) - ( Max( MDR,( MDR + ( Const - ACS ) ) ) + DDR ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * ( Min( BR ,Const ) + ( DDR - Const ) ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( Min( Min( ( ( FirstVNF_CPU * DDR ) + AMS ) ,( ( ACS * FirstVNF_CPU ) - AMS ) ) ,FirstVNF_RAM ) + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( RRSe - MUC ),( ( ( RCSe + DS ) - Max( MUC,( MUM * RMSe ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( RRS + MRS ) + ( FirstVNF_CPU * Min( MRS ,PN ) ) ) * ( DDR + ( FirstVNF_RAM + Max( DDR,PN ) ) ) ) - ( ACS - ( BR / ( ( DDR - DDR ) * PN ) ) ) ) * ACS ) - ACS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "( ( DS - ( ( MUR - Min( ( DS / RMSe ) ,RMSe ) ) * RRSe ) ) * ( ( ( ( MUR / Max( Max( MLU,MUR ),CS ) ) + ( ( ( RRSe - MUR ) + CS ) + DS ) ) + ( ( DS + RMSe ) + Min( DS ,( DS / Max( MUM,Max( MUR,MUM ) ) ) ) ) ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( MRS + MDR ) ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / Max( RMSe,RMSe ) ) + ( ( RCSe - MUC ) - ( CS / ( Min( RRSe ,MUM ) - ( MUR / ( RMSe + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * Const ) ,ACS ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / AMS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( RCSe - MUM ) / ( CS + DS ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( AMS + BR ) )", "choosing": "( ( ( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + ( Min( RMSe ,( MUR + MUC ) ) / MUR ) ) ) ) - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,AMS ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * Min( CS ,DS ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6173076923076923, "obj2": 0.27527279082948575}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( ARS * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( CS / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,( RRSe / RCSe ) ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7711538461538462, "obj2": 0.13832857200007004}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem_Server ) - ( RRS / RRS ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( CS ,MUR ),DS ) ) ) )", "obj1": 0.7807692307692308, "obj2": 0.10323377507478823}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( Min( ( MDR + PN ) ,FirstVNF_RAM_Server ) * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( MUM - RCSe ) / ( RRSe / MUM ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6519230769230769, "obj2": 0.23079739873151653}, {"determining": "( ( ( RRS - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ( BR + AMS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - Min( MUR ,MUM ) ) )", "obj1": 0.8057692307692308, "obj2": 0.08163346942314106}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.7826923076923077, "obj2": 0.09307409626012965}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( BR - AMS ) + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( RCSe - RCSe ) / ( MLU * RMSe ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6884615384615385, "obj2": 0.19498703045025517}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( ( Max( Min( FirstVNF_Mem ,DDR ),Max( MDR,DDR ) ) - MRS ) - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( Max( MLU,RRSe ) - ( Max( Max( ( MUM - ( DS - MUR ) ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUC - MLU ) ) ) - MUR ) ) )", "obj1": 0.7673076923076924, "obj2": 0.16063918604478594}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( PN * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * ( MUM + CS ) ) ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6788461538461539, "obj2": 0.219879906016767}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_CPU ) - ( RRS / RRS ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( DS ,MUR ),DS ) ) ) )", "obj1": 0.7173076923076923, "obj2": 0.16978066865144958}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / PN ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( RMSe * ( RCSe + DS ) ) )", "obj1": 0.6461538461538462, "obj2": 0.24773251848037958}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / Min( Max( PN,FirstVNF_CPU ) ,RRS ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,RMSe )", "obj1": 0.6826923076923077, "obj2": 0.2162001511877098}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem_Server ) - ( RRS / RRS ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( Min( ( ACS + CRS ) ,( Const + DDR ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / Min( CS ,MLU ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( CS ,MUR ),DS ) ) ) )", "obj1": 0.825, "obj2": 0.07692669737369101}, {"determining": "( ( ( Max( ACS,ACS ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU / BR ),( Min( ( FirstVNF_Mem_Server / ( ARS * ( AMS * FirstVNF_Mem ) ) ) ,Const ) / BR ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RMSe * ( ( MLU + MUM ) / MUC ) ) * CS ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - Min( RRSe ,DS ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7, "obj2": 0.18991756290038408}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6326923076923077, "obj2": 0.27082225045111147}, {"determining": "( ( ( BR - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( Min( ( PN - ACS ) ,( ( ( CRS - FirstVNF_Mem_Server ) / Const ) - Min( DDR ,DDR ) ) ),Max( MRS,( FirstVNF_Mem * ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( Max( CS,Min( Max( CS,CS ) ,RRSe ) ) + RMSe ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7442307692307693, "obj2": 0.16972441172473843}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ( PN + ( MDR + ( RRS * ( MRS + FirstVNF_Mem ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * ( Max( CS,MUM ) + RCSe ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6346153846153846, "obj2": 0.2586757733575268}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8942307692307693, "obj2": 0.04216675950565962}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6365384615384615, "obj2": 0.25300875549560226}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8384615384615385, "obj2": 0.07409794274064195}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( BR / PN ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUC + MUC ) ) / Min( Max( MUR,MUM ) ,( MLU - RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7576923076923077, "obj2": 0.16673718685335004}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8826923076923077, "obj2": 0.046478468364236095}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe * MUC ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8538461538461538, "obj2": 0.06141706862781571}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ( Const * ACS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RMSe / ( RRSe - CS ) ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( ( ( RRSe + ( MUM / MUM ) ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.875, "obj2": 0.05082307194115253}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06513479688272282}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / ( ( CRS * FirstVNF_CPU ) - FirstVNF_Mem ) ) - ( ACS / PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( Min( MUC ,MUR ) + ( MUM + RMSe ) ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.948076923076923, "obj2": 0.019100049206459375}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( Const ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,( MUM / MLU ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8634615384615385, "obj2": 0.05715926570417629}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,PN ) ),( ( ( CRS + ARS ) * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUM / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * DS ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / ( RRSe - ( MUR + ( MUM + DS ) ) ) ) ) )", "obj1": 0.9846153846153847, "obj2": 0.005720119914870658}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( Min( MDR ,FirstVNF_RAM ) - MDR ) - ( RRS / ( CRS - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / Max( CS,CS ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * RCSe ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9288461538461539, "obj2": 0.030324530048267656}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8596153846153847, "obj2": 0.060500967539194074}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( ( DDR - ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( MUR * CS ) ) ,RCSe ) ) ) )", "obj1": 0.8403846153846154, "obj2": 0.06914917212235976}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( FirstVNF_RAM_Server - ( RRS / ( BR - BR ) ) ) - ACS ) ) )", "choosing": "( Max( ( ( DS + Min( RMSe ,( CS * ( RRSe * ( MUR / MUC ) ) ) ) ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9192307692307692, "obj2": 0.03213532964645032}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * Min( RRSe ,MUM ) ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.046832802184956855}, {"determining": "( DDR * ( ( ( ( ARS * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,( RMSe * DS ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9403846153846154, "obj2": 0.0269526190229501}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( ( DDR - Max( AMS,( FirstVNF_CPU + Max( FirstVNF_RAM,DDR ) ) ) ) - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( Min( MUM ,( RCSe + MUR ) ) + RMSe ) ,Min( DS ,MUR ) ) ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9442307692307692, "obj2": 0.020683395542449086}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( Max( FirstVNF_Mem,( BR * ( BR / CRS ) ) ) - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( MUR + MUC ) / ( RMSe * ( ( ( RRSe * ( MUR * CS ) ) / MUC ) - MUM ) ) )", "obj1": 0.9423076923076923, "obj2": 0.024571793914094413}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( PN / CRS ) - MRS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Min( RCSe ,Min( RMSe ,( ( Min( Min( ( CS * MUC ) ,Max( RRSe,DS ) ) ,MUC ) - ( MLU / CS ) ) * ( RCSe / RMSe ) ) ) ) )", "obj1": 0.8673076923076923, "obj2": 0.05351650642492264}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( PN - Max( Min( Min( ( BR + ( CRS + FirstVNF_CPU_Server ) ) ,RRS ) ,BR ),AMS ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RRSe + RRSe ) / ( RCSe * Max( MUM,DS ) ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ( FirstVNF_Mem * ( Const / ACS ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * MUR ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - MLU ) )", "obj1": 0.9, "obj2": 0.03944690017903858}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( ( DDR - Max( AMS,( FirstVNF_CPU + Max( FirstVNF_RAM,DDR ) ) ) ) - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( Min( MUM ,( RCSe + MUR ) ) + RMSe ) ,Min( DS ,MUR ) ) ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8692307692307693, "obj2": 0.05232650958901735}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * Min( CRS ,Const ) ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( RRS / AMS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( CS + ( MUR * ( MUC / MUR ) ) ) ,( MLU + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.9326923076923077, "obj2": 0.0273735422799682}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8442307692307692, "obj2": 0.06719107303382046}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Const - FirstVNF_RAM_Server ) - Max( RRS,Max( MDR,MRS ) ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( Min( Min( MUM ,RCSe ) ,MUM ),Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) ,RCSe ) ) ) )", "obj1": 0.9153846153846154, "obj2": 0.03589823873488142}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9115384615384615, "obj2": 0.03643155245103888}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / DDR ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Min( Max( ( CS * RRSe ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( RMSe / DS ) ) ) / DS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.01288438012381208}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,PN ) ),( ( ( CRS + ARS ) * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUM / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * DS ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9807692307692307, "obj2": 0.007119485242872334}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9173076923076923, "obj2": 0.03296185713684447}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( MDR - Max( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN / FirstVNF_Mem_Server ) + Const ) ) / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( Max( Min( ( RMSe - ( ( ( MUC - RRSe ) * ( DS * MUR ) ) - Min( MUR ,( MLU + MUM ) ) ) ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) )", "obj1": 0.9923076923076923, "obj2": 0.002952598369610167}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / Min( FirstVNF_CPU_Server ,RRS ) ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - ARS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),( RMSe * RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9307692307692308, "obj2": 0.02823152857214344}, {"determining": "( ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) ) )", "obj1": 0.9596153846153846, "obj2": 0.01594930050933338}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( Min( MUC ,RMSe ),RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9038461538461539, "obj2": 0.037529662540072194}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( PN / ARS ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + MUM ) ),Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( Min( MUR ,RRSe ) - MUM ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / ( MUM / ( MUC * MUM ) ) ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.975, "obj2": 0.009158537176606509}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Min( ( ( Min( AMS ,FirstVNF_CPU ) / ( AMS * ( FirstVNF_RAM * PN ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - ( MUR + Max( MUR,MLU ) ) ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( MLU + MUC ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9019230769230769, "obj2": 0.03933644712359885}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9788461538461538, "obj2": 0.008176618180426623}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( ( MUM - MUR ) * ( MUR * MUC ) ) )", "obj1": 0.9961538461538462, "obj2": 0.0013762762049405216}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( ( ( MUR + RCSe ) * MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) )", "obj1": 0.9942307692307693, "obj2": 0.002243645252908046}, {"determining": "( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Max( CS,MUC ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) )", "obj1": 0.9923076923076923, "obj2": 0.002952598369610167}, {"determining": "( ( ( Min( ( Const * Max( FirstVNF_CPU,( Const * FirstVNF_RAM ) ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( BR / PN ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUC + MUC ) ) / Min( Max( MUR,MUM ) ,( MLU - RCSe ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16837246744809709}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( ( Max( CS,MUM ) * MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( ( FirstVNF_Mem_Server * ARS ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Max( ( AMS - CRS ),( FirstVNF_Mem_Server - Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( Max( Min( MUM ,( CS * DS ) ),MUM ) - Min( RMSe ,DS ) ) * DS ) * Min( Min( MUM ,RCSe ) ,MUM ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( Min( ( ARS * CRS ) ,PN ) ,Max( FirstVNF_RAM,( Max( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ),DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( ( Min( MUR ,MUC ) - ( MLU / CS ) ) + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - Min( ( MUC + RRSe ) ,( ( MLU / Max( ( ( ( MUC / RCSe ) - DS ) * CS ),( MUM * RCSe ) ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const * ( Max( BR,Min( FirstVNF_RAM_Server ,Min( MDR ,BR ) ) ) - ARS ) )", "choosing": "( Max( ( MUR - CS ),RCSe ) / ( ( RCSe - ( RRSe - RMSe ) ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( MDR / CRS ) + Max( BR,MRS ) ) ) - ( FirstVNF_Mem_Server + Min( ARS ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * Min( ( MUM + Min( RMSe ,( ( Min( MUR ,MUC ) - ( RMSe + MUC ) ) * ( MUM + CS ) ) ) ) ,( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( Min( Min( CS ,MLU ) ,RCSe ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + Min( RRSe ,( ( ( RMSe * MUR ) * MLU ) / Max( RCSe,( MUM / DS ) ) ) ) ) ),Min( ( MLU * MUC ) ,Max( MUM,( DS + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( ( RRS - FirstVNF_CPU_Server ),CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( RRSe * MUR ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ( ACS + MDR ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe - MUR ) / MUC ) - ( RRSe - DS ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( MRS ,Max( FirstVNF_RAM,( Max( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ),DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( ( Min( MUR ,MUC ) - ( MLU / CS ) ) + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - Min( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) ,( ( MLU / Max( ( ( ( MUC / RCSe ) - DS ) * CS ),( MUM * RCSe ) ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / AMS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( RCSe - MUM ) / ( CS + DS ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,AMS ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * Min( CS ,DS ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6173076923076923, "obj2": 0.27527279082948575}, {"determining": "( Max( DDR,RRS ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( RRS / AMS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RMSe / RCSe ) + MUM ) + MUM ) ),Min( ( CS + ( MUR * ( MUC / MUR ) ) ) ,( MLU + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.7557692307692307, "obj2": 0.1522613148456339}, {"determining": "( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.7692307692307693, "obj2": 0.09857271839030633}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( Min( ( MDR + PN ) ,FirstVNF_RAM_Server ) * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( MUM - RCSe ) / ( RRSe / MUM ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6519230769230769, "obj2": 0.23079739873151653}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / ( FirstVNF_Mem * PN ) ) - ARS ) )", "choosing": "( ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.7403846153846154, "obj2": 0.16523325800979088}, {"determining": "( ( ( RRS - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( CRS - FirstVNF_Mem_Server ) - ( BR + AMS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - Min( MUR ,MUM ) ) )", "obj1": 0.8057692307692308, "obj2": 0.08163346942314106}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.7826923076923077, "obj2": 0.09307409626012965}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( BR - AMS ) + FirstVNF_RAM_Server ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( ( MUM + ( ( RCSe - RCSe ) / ( MLU * RMSe ) ) ) ,MLU ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6884615384615385, "obj2": 0.19498703045025517}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / ( ACS * ( PN * ARS ) ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,Max( ( RCSe / ( Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * ( MUM + CS ) ) ) - DS ) ),Min( RCSe ,CS ) ) )", "obj1": 0.6788461538461539, "obj2": 0.219879906016767}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / PN ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( RMSe * ( RCSe + DS ) ) )", "obj1": 0.6461538461538462, "obj2": 0.24773251848037958}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( Min( ( Const / Min( Max( PN,FirstVNF_CPU ) ,RRS ) ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / ( MUC * MUM ) ),Max( DS,MLU ) ) ,RMSe )", "obj1": 0.6826923076923077, "obj2": 0.2162001511877098}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_CPU ) - ( RRS / RRS ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( DS ,MUR ),DS ) ) ) )", "obj1": 0.7173076923076923, "obj2": 0.16978066865144958}, {"determining": "( ( ( Max( ACS,ACS ) - ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU / BR ),( Min( ( FirstVNF_Mem_Server / ( ARS * ( AMS * FirstVNF_Mem ) ) ) ,Const ) / BR ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( MUM / MLU ) ,Min( ( ( CS / DS ) * ( ( RMSe * ( ( MLU + MUM ) / MUC ) ) * CS ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - Min( RRSe ,DS ) ) ) + RMSe ) ) ) ) )", "obj1": 0.7, "obj2": 0.18991756290038408}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) * RMSe ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6326923076923077, "obj2": 0.27082225045111147}, {"determining": "( ( ACS * ARS ) * ( ( ( BR / CRS ) / MDR ) - ARS ) )", "choosing": "( ( ( RRSe - CS ) / MUC ) / Min( ( ( Min( CS ,RCSe ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.7076923076923077, "obj2": 0.1784110503501312}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( FirstVNF_Mem_Server * MRS ) - DDR ) ) ) ,( ( PN + ( MDR + ( RRS * ( MRS + FirstVNF_Mem ) ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( CS ,MUR ),RRSe ) / ( ( ( MLU * ( Max( CS,MUM ) + RCSe ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6346153846153846, "obj2": 0.2586757733575268}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8942307692307693, "obj2": 0.04216675950565962}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) * ( ARS / FirstVNF_CPU ) ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU * Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) ) + CS ) * ( RCSe + DS ) ) )", "obj1": 0.6365384615384615, "obj2": 0.25300875549560226}, {"determining": "( Min( ARS ,Max( DDR,FirstVNF_RAM_Server ) ) * ( ( ( ( FirstVNF_Mem_Server * ( Max( CRS,FirstVNF_Mem_Server ) + PN ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( ( Min( RRSe ,MUR ) - RRSe ) / ( DS / ( ( Min( Max( DS,( MUR - RCSe ) ) ,RMSe ) - RRSe ) + ( ( ( ( RRSe / RCSe ) * DS ) - MLU ) - ( MLU / CS ) ) ) ) )", "obj1": 0.8384615384615385, "obj2": 0.07409794274064195}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( Min( ( ACS + CRS ) ,( Const + DDR ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / Min( CS ,MLU ) ) + MUM ) + MUM ) ),( CS * DS ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( CS ,MUR ),DS ) ) ) )", "obj1": 0.823076923076923, "obj2": 0.07739906433426656}, {"determining": "( ( ( Min( ( Const * ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) - Max( ARS,BR ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - AMS ) + FirstVNF_CPU ) ) )", "choosing": "Min( ( RMSe / RCSe ) ,Min( Max( Max( RMSe,( ( MUM - MLU ) / ( Min( RCSe ,( MUM / DS ) ) * RMSe ) ) ),( MUM / MUC ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( ( RMSe * ( MUR * CS ) ) / ( ( RCSe - RMSe ) - DS ) ) + RMSe ) ) ) ) )", "obj1": 0.7153846153846154, "obj2": 0.1782253586269955}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem_Server ) - ( RRS / RRS ) ) - Max( ( ( FirstVNF_Mem + FirstVNF_RAM ) / FirstVNF_Mem_Server ),PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( Min( ( ACS + CRS ) ,( Const + DDR ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / Min( CS ,MLU ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - Min( DS ,Max( Min( CS ,MUR ),DS ) ) ) )", "obj1": 0.825, "obj2": 0.07692669737369101}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8826923076923077, "obj2": 0.046478468364236095}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( Max( ( ACS / FirstVNF_Mem_Server ),ACS ) ,Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,( ( ( FirstVNF_RAM + ACS ) * MRS ) - ( MDR / BR ) ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe * MUC ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8538461538461538, "obj2": 0.06141706862781571}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ( Const * ACS ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RMSe / ( RRSe - CS ) ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( ( ( RRSe + ( MUM / MUM ) ) * Max( CS,CS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.875, "obj2": 0.05082307194115253}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( Const ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,( MUM / MLU ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8634615384615385, "obj2": 0.05715926570417629}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( Min( ARS ,ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ,RCSe ) ) ) )", "obj1": 0.8461538461538461, "obj2": 0.06513479688272282}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / ( ( CRS * FirstVNF_CPU ) - FirstVNF_Mem ) ) - ( ACS / PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( Min( MUC ,MUR ) + ( MUM + RMSe ) ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.948076923076923, "obj2": 0.019100049206459375}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( Min( MDR ,FirstVNF_RAM ) - MDR ) - ( RRS / ( CRS - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / Max( CS,CS ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * RCSe ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9288461538461539, "obj2": 0.030324530048267656}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( RRSe / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9557692307692308, "obj2": 0.016317529516065164}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - CRS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( RCSe + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8576923076923076, "obj2": 0.059514196028065514}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( MRS * BR ) - FirstVNF_Mem_Server ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( Max( ( DDR - ACS ),( AMS * DDR ) ) * MRS ) * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( ( Max( MUM,MUM ) / ( MUR * CS ) ) ,RCSe ) ) ) )", "obj1": 0.8403846153846154, "obj2": 0.06914917212235976}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( FirstVNF_RAM_Server - ( RRS / ( BR - BR ) ) ) - ACS ) ) )", "choosing": "( Max( ( ( DS + Min( RMSe ,( CS * ( RRSe * ( MUR / MUC ) ) ) ) ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9192307692307692, "obj2": 0.03213532964645032}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( PN * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( RMSe * MUR ) ) / ( ( MUM - MUR ) * ( MUR * MUC ) ) )", "obj1": 0.9846153846153847, "obj2": 0.005425466322822492}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * Min( RRSe ,MUM ) ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.046832802184956855}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( ( DDR - Max( AMS,( FirstVNF_CPU + Max( FirstVNF_RAM,DDR ) ) ) ) - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( Min( MUM ,( RCSe + MUR ) ) + RMSe ) ,Min( DS ,MUR ) ) ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9442307692307692, "obj2": 0.020683395542449086}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( Max( FirstVNF_Mem,( BR * ( BR / CRS ) ) ) - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( MUR + MUC ) / ( RMSe * ( ( ( RRSe * ( MUR * CS ) ) / MUC ) - MUM ) ) )", "obj1": 0.9423076923076923, "obj2": 0.024571793914094413}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( PN / CRS ) - MRS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),PN ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / Min( RCSe ,Min( RMSe ,( ( Min( Min( ( CS * MUC ) ,Max( RRSe,DS ) ) ,MUC ) - ( MLU / CS ) ) * ( RCSe / RMSe ) ) ) ) )", "obj1": 0.8673076923076923, "obj2": 0.05351650642492264}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9653846153846154, "obj2": 0.013097674809570855}, {"determining": "( ( ( ( FirstVNF_Mem * ( Const / ACS ) ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * MUR ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - MLU ) )", "obj1": 0.9, "obj2": 0.03944690017903858}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( ( DDR - Max( AMS,( FirstVNF_CPU + Max( FirstVNF_RAM,DDR ) ) ) ) - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( Min( MUM ,( RCSe + MUR ) ) + RMSe ) ,Min( DS ,MUR ) ) ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8692307692307693, "obj2": 0.05232650958901735}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( ( ( ( MUR + RCSe ) * MUC ) + MUR ) * ( RRSe - ( MUR + ( MUM + DS ) ) ) ) + DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / RRSe ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.8442307692307692, "obj2": 0.06719107303382046}, {"determining": "( DDR * ( ( ( ( ARS * ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) - DDR ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,( RMSe * DS ) ) / Min( ( ( Min( Min( MUC ,RMSe ) ,( MUC / MUR ) ) / Max( DS,RRSe ) ) + ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) ) ,MUM ) )", "obj1": 0.9403846153846154, "obj2": 0.0269526190229501}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Const - FirstVNF_RAM_Server ) - Max( RRS,Max( MDR,MRS ) ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( Min( Min( MUM ,RCSe ) ,MUM ),Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) ,RCSe ) ) ) )", "obj1": 0.9153846153846154, "obj2": 0.03589823873488142}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9115384615384615, "obj2": 0.03643155245103888}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / DDR ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( Min( Max( ( CS * RRSe ),MLU ) ,Min( Min( Max( Min( MUC ,MUR ),Max( DS,MUM ) ) ,RMSe ) ,( RCSe / RMSe ) ) ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( RMSe / DS ) ) ) / DS ) ) )", "obj1": 0.9711538461538461, "obj2": 0.01288438012381208}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),MUM ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9173076923076923, "obj2": 0.03296185713684447}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( ( CRS * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * ACS ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( MUM + Max( CS,( ( MUM / RRSe ) * ( RMSe - CS ) ) ) ) / MUR ) )", "obj1": 0.9730769230769231, "obj2": 0.011321185518688178}, {"determining": "( MDR - Max( ( FirstVNF_RAM_Server * ( Max( FirstVNF_RAM_Server,( ( PN / FirstVNF_Mem_Server ) + Const ) ) / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( Max( Min( ( RMSe - ( ( ( MUC - RRSe ) * ( DS * MUR ) ) - Min( MUR ,( MLU + MUM ) ) ) ) ,( ( ( RMSe / Min( MUC ,RMSe ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) )", "obj1": 0.9923076923076923, "obj2": 0.002952598369610167}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( ( DDR - Max( AMS,( FirstVNF_CPU + Max( FirstVNF_RAM,DDR ) ) ) ) - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( DDR - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MRS,MRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( Min( MUM ,( RCSe + MUR ) ) + RMSe ) ,Min( DS ,MUR ) ) ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9346153846153846, "obj2": 0.027061441348162178}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / Min( FirstVNF_CPU_Server ,RRS ) ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - ARS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + ( ( Max( Max( MUM,RCSe ),( CS + MUC ) ) - RCSe ) * Max( RMSe,Max( ( CS / RCSe ),( RMSe * RMSe ) ) ) ) ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9307692307692308, "obj2": 0.02823152857214344}, {"determining": "( ( ( ( ( Min( FirstVNF_Mem_Server ,PN ) + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) ) )", "obj1": 0.9596153846153846, "obj2": 0.01594930050933338}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - ( ACS + ( Const - FirstVNF_RAM_Server ) ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( Min( MUC ,RMSe ),RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9038461538461539, "obj2": 0.037529662540072194}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( PN / ARS ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( DS + MUM ) + MUM ) ),Min( ( ( RCSe + RMSe ) + ( ( ( DS - RRSe ) + ( Min( MUR ,RRSe ) - MUM ) ) + MUM ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / ( MUM / ( MUC * MUM ) ) ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.975, "obj2": 0.009158537176606509}, {"determining": "( ( ( FirstVNF_Mem_Server * ARS ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( ARS - FirstVNF_CPU_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),Max( ( AMS - CRS ),( FirstVNF_Mem_Server - Max( ACS,FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( ( Max( Min( MUM ,( CS * DS ) ),MUM ) - Min( RMSe ,DS ) ) * DS ) * Min( Min( MUM ,RCSe ) ,MUM ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server - ( RRS / RRS ) ) - Max( DDR,FirstVNF_Mem ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( ( ( CRS - MRS ) / Const ) - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( MLU + MUC ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Max( CS,CS ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9019230769230769, "obj2": 0.03933644712359885}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( ( FirstVNF_CPU + ( FirstVNF_Mem_Server - CRS ) ) ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( DS * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9826923076923076, "obj2": 0.006844219625028846}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( MDR / FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( ( ( MUR + RCSe ) * MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( ( ( RMSe - MUC ) - Min( MUC ,RMSe ) ) - MUC ) )", "obj1": 0.9942307692307693, "obj2": 0.002243645252908046}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( ( ( FirstVNF_RAM_Server * ( FirstVNF_CPU + ( RRS - CRS ) ) ) * ( FirstVNF_RAM / MDR ) ) ,PN ) ),( ( ( CRS + ARS ) * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( DS - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUM / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * DS ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9807692307692307, "obj2": 0.007004374870802378}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * Min( CRS ,Const ) ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( RRS / AMS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( CS + ( MUR * ( MUC / MUR ) ) ) ,( MLU + RCSe ) ) ) / ( MUR / MLU ) )", "obj1": 0.9326923076923077, "obj2": 0.0273735422799682}, {"determining": "( MDR - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( Max( Min( ( RMSe - RRSe ) ,( ( ( RMSe / Max( CS,MUC ) ) - Max( MUM,RRSe ) ) * MUM ) ),Max( RMSe,Max( DS,RCSe ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) ) )", "obj1": 0.9923076923076923, "obj2": 0.002952598369610167}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( ( ( ( ( MDR + ARS ) * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_RAM_Server ) - ( RRS / RRS ) ) - Max( DDR,PN ) ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * Min( RRS ,FirstVNF_Mem_Server ) ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( RCSe / RCSe ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( RCSe - MLU ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9769230769230769, "obj2": 0.008820587672252819}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( AMS * FirstVNF_Mem ) - ( RRS / ( BR - BR ) ) ) - ACS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( DS / ( ( ( DS + RMSe ) * RCSe ) + MUM ) ) )", "obj1": 0.9615384615384616, "obj2": 0.014892527366148293}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + MUC ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9788461538461538, "obj2": 0.008176618180426623}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / BR ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( ( MUM - MUR ) * ( RRSe * ( MUR * CS ) ) ) )", "obj1": 0.9961538461538462, "obj2": 0.0013762762049405216}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) - Max( ( ( MDR - ( FirstVNF_RAM + ( Max( DDR,RRS ) + FirstVNF_RAM_Server ) ) ) * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( Min( CS ,( MUC / MUR ) ) / ( ( MUM - RCSe ) - ( RRSe + ( DS * MUR ) ) ) ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * Max( CS,MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( FirstVNF_RAM / ( ( ( ( AMS * MDR ) + ( ( ( RRS + CRS ) + ( FirstVNF_RAM_Server / PN ) ) * FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) + ( ( ( AMS * MDR ) + ( PN * ACS ) ) / ( FirstVNF_RAM_Server - Min( PN ,RRS ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * ( DDR / Const ) ),Max( MDR,MRS ) ) )", "choosing": "( ( Max( ( MUR + MUM ),( RCSe * MLU ) ) / ( MUC - MUC ) ) / ( ( MUM - MUR ) * ( MUR * MUC ) ) )", "obj1": 0.9961538461538462, "obj2": 0.0013762762049405216}, {"determining": "( BR - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( CRS ,FirstVNF_Mem ) - ( Const * Max( ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * ( ( ( RCSe * RMSe ) / ( RMSe - ( RRSe / MUM ) ) ) + Min( Max( ( MUR / MUR ),( MUR + DS ) ) ,RRSe ) ) ) * Min( RCSe ,Min( RMSe ,( ( ( CS * RMSe ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9788461538461538, "obj2": 0.008176618180426623}, {"determining": "( ( FirstVNF_RAM / ( AMS + ( ( ACS / ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( ( ( Max( CS,MUM ) * MUC ) + MUR ),MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) / ( RMSe * MUR ) )", "obj1": 0.9980769230769231, "obj2": 0.0006032268474080062}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,Min( ( ( Min( AMS ,FirstVNF_CPU ) / ( AMS * ( FirstVNF_RAM * PN ) ) ) - Const ) ,FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * Max( ( DDR - ACS ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( ( ( Max( RMSe,RRSe ) / Min( ( MUM + MUC ) ,( MUR * CS ) ) ) + MUM ) + MUM ) ),Min( ( RMSe - ( MUR + Max( MUR,MLU ) ) ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( RMSe ,( ( Min( MUR ,MUC ) - ( MLU / CS ) ) * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9057692307692308, "obj2": 0.03659843933683318}, {"determining": "( ( DDR - PN ) - ( AMS + BR ) )", "choosing": "( ( ( ( RRSe + MLU ) / ( MUR / ( ( Max( CS,MLU ) / ( MUM - DS ) ) + ( Min( RMSe ,( MUR + MUC ) ) / MUR ) ) ) ) - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,RRS ) - ( DDR * ( ( ACS / AMS ) - ( Min( MDR ,FirstVNF_RAM ) - MDR ) ) ) ) - Min( Min( ( ARS * CRS ) ,PN ) ,Max( FirstVNF_RAM,( Max( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ),DDR ) - CRS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( ( RCSe + RMSe ) + ( RMSe + MUM ) ) ,( ( ( Min( MUR ,MUC ) - ( MLU / CS ) ) + MLU ) / ( MUR / RCSe ) ) ) * ( Min( ( DS * MUR ) ,DS ) - MUR ) ) ,( Min( MUM ,RCSe ) / DS ) ) - Min( ( MUC + RRSe ) ,( ( MLU / Max( ( ( ( MUC / RCSe ) - DS ) * CS ),( MUM * RCSe ) ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const * ( Max( BR,Min( FirstVNF_RAM_Server ,Min( MDR ,BR ) ) ) - ARS ) )", "choosing": "( Max( ( MUR - CS ),RCSe ) / ( ( RCSe - ( RRSe - RMSe ) ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( MDR / CRS ) + Max( BR,MRS ) ) ) - ( FirstVNF_Mem_Server + Min( ARS ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * Min( ( MUM + Min( RMSe ,( ( Min( MUR ,MUC ) - ( RMSe + MUC ) ) * ( MUM + CS ) ) ) ) ,( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * ( FirstVNF_CPU_Server + CRS ) ),( Min( AMS ,CRS ) - BR ) ) - ( ( ( Max( ( ( AMS / PN ) * MDR ),FirstVNF_Mem ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) + ACS ) - ( RRS - Const ) ) )", "choosing": "( Max( MUR,MUC ) / ( ( ( MLU + MUC ) - CS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( Min( ( MDR / BR ) ,ARS ) - ( Const * Max( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe * CS ) / ( Min( RRSe ,DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / ( AMS + ( DDR / FirstVNF_RAM_Server ) ) ),( ACS / AMS ) ) ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( RRSe,MUM ) / Min( ( RRSe + RRSe ) ,( RRSe / ( MUM / ( DS / MUC ) ) ) ) ) / MUC ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM + BR ) ) ,( CRS / Max( MDR,MRS ) ) ) - ( Min( ( Const / FirstVNF_CPU_Server ) ,BR ) + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),Max( DS,MUC ) ) ,Max( ( RCSe / CS ),( RCSe - Min( CS ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * ACS ) * Min( Const ,Max( FirstVNF_Mem,MRS ) ) ) ,( MRS / ARS ) )", "choosing": "( Min( ( Min( CS ,MLU ) / Min( DS ,RRSe ) ) ,Max( ( RMSe + RMSe ),Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + Max( Min( RCSe ,MUM ),RCSe ) ),( DS / DS ) ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( Min( Max( PN,( ( FirstVNF_Mem_Server - MRS ) * PN ) ) ,ARS ) - Const ) * ( ( AMS / ARS ) / BR ) ) ) )", "choosing": "( Max( Min( ( Min( RRSe ,MUR ) - RRSe ) ,( ( MUC / MLU ) * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - ARS ) / Min( Max( PN,FirstVNF_CPU ) ,RRS ) )", "choosing": "Min( ( ( RMSe * DS ) + MUC ) ,Max( MLU,( Max( CS,( CS + RCSe ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - Min( Min( Max( ( ARS + ( FirstVNF_CPU / Max( FirstVNF_Mem,( AMS + FirstVNF_Mem_Server ) ) ) ),BR ) ,AMS ) ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * ( ( MUM + Max( MUC,Max( ( Min( MUM ,MUR ) * ( MUR - DS ) ),RRSe ) ) ) - Max( MUR,( MUM - Min( ( Max( ( MUM / MLU ),Max( MUR,RCSe ) ) - MUR ) ,Max( ( CS / RMSe ),MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( ( Min( DDR ,MRS ) * FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * Min( ( MUM - MUR ) ,MUC ) ) ,( MLU * Min( ( MUM + RMSe ) ,( CS / ( Min( RCSe ,MLU ) - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( ( Min( RMSe ,DS ) + DS ) + DS ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ,( ARS * RRS ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( ( RCSe / CS ),Min( RCSe ,( Min( Min( Max( Max( MLU,MLU ),Min( RRSe ,MUM ) ) ,( RRSe - ( DS * RMSe ) ) ) ,CS ) - ( MUR + ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * MRS ) ,Min( AMS ,ARS ) )", "choosing": "( Max( MUC,Max( MLU,( MUM + MUR ) ) ) - ( RMSe + Min( ( RMSe * ( DS / ( ( ( CS * MUM ) / Max( MUM,MUM ) ) / ( ( RRSe - MUR ) - MUR ) ) ) ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Min( Max( DDR,DDR ) ,( FirstVNF_Mem_Server + Max( RRS,PN ) ) ) - FirstVNF_RAM ),ACS ) ,FirstVNF_Mem_Server ) * ( ( CRS / Min( ACS ,FirstVNF_CPU_Server ) ) - ARS ) )", "choosing": "( ( MLU * DS ) / ( MUC * Max( RMSe,Max( RMSe,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( ( ( MRS - Min( DDR ,BR ) ) / ( AMS * ( ( MRS * ( ARS / FirstVNF_CPU ) ) - RRS ) ) ) + FirstVNF_CPU ) ) - ( ( ACS / MDR ) + ( CRS * BR ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RRSe * ( ( Min( CS ,DS ) + MUR ) - ( ( ( MLU - RCSe ) / MUR ) / DS ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( AMS / ARS ) )", "choosing": "( ( MLU - ( ( ( MLU * ( RCSe * DS ) ) - ( ( Min( MUM ,Min( RCSe ,RMSe ) ) - CS ) + ( RMSe / ( CS - Min( MUC ,MLU ) ) ) ) ) - Max( MUM,Min( ( MUR / ( ( MUR + MLU ) * MLU ) ) ,( CS * DS ) ) ) ) ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( MUR / RRSe ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,( BR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,( ( ( MUM / DS ) + RMSe ) * CS ) ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Min( ( Max( ARS,FirstVNF_Mem ) * ( DDR - Min( Min( ( FirstVNF_Mem / PN ) ,FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Const ) ) ) ) ,CRS ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( ( ( DS + MUR ) + RCSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ARS ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * ( ( ( CS + DS ) + ( ( DS - RCSe ) / MUM ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( ( ACS + FirstVNF_CPU ) * ( MDR * AMS ) ) ) )", "choosing": "( Max( ( Min( RCSe ,RMSe ) / RMSe ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( ( Min( RRSe ,RCSe ) * CS ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / ( ( ( FirstVNF_CPU_Server + AMS ) / Min( FirstVNF_CPU ,( PN + MRS ) ) ) - ACS ) ) ) ) - Max( ( FirstVNF_CPU_Server - Const ),MRS ) )", "choosing": "( Min( RRSe ,( ( MUC / RRSe ) * MUR ) ) / ( ( ( MUM * DS ) * Min( RCSe ,Min( ( ( MUM + Min( RRSe ,RCSe ) ) - ( Max( RMSe,RMSe ) + ( MUC + MLU ) ) ) ,( CS * MLU ) ) ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}