{"1": [{"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - ( PN + MRS ) ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,( CS + MUC ) ) )", "obj1": 0.9029345372460497, "obj2": 0.10481926966788314}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - CRS ) )", "choosing": "Min( ( MUM * RCSe ) ,Max( RCSe,( RRSe / MUC ) ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( RRS * Max( PN,AMS ) ) )", "choosing": "( ( RRSe + MLU ) - Min( RRSe ,( RCSe - ( RMSe * CS ) ) ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RRSe ),Min( MLU ,MLU ) )", "obj1": 0.3656884875846501, "obj2": 0.5596634892106223}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( Min( ( MLU + RCSe ) ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Max( ( MUC - MUM ),( MUM + MUC ) ) )", "obj1": 0.6478555304740407, "obj2": 0.32934998184020875}, {"determining": "Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( MLU / RMSe ) ,( MUR * CS ) ) )", "obj1": 0.5778781038374717, "obj2": 0.3836668514655997}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( RRSe * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - FirstVNF_Mem_Server ) - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) )", "obj1": 0.4672686230248307, "obj2": 0.48495873367723685}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45372460496614, "obj2": 0.4874778548118059}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ARS ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( BR / Const ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Min( ( MUM / RRSe ) ,CS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4722253136769272}, {"determining": "( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.09844036728203254}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( Max( ACS,AMS ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,Max( ( ( CS - RCSe ) - RCSe ),Min( ( Min( DS ,MUC ) * Max( ( DS / MUM ),MUR ) ) ,Max( ( Max( RMSe,RRSe ) - Max( RMSe,RRSe ) ),MLU ) ) ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}], "2": [{"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - ( PN + MRS ) ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,( CS + MUC ) ) )", "obj1": 0.9029345372460497, "obj2": 0.10481926966788314}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - CRS ) )", "choosing": "Min( ( MUM * RCSe ) ,Max( RCSe,( RRSe / MUC ) ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( RRS * Max( PN,AMS ) ) )", "choosing": "( ( RRSe + MLU ) - Min( RRSe ,( RCSe - ( RMSe * CS ) ) ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( Min( ( MLU + RCSe ) ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( RRSe * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ARS ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( BR / Const ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Min( ( MUM / RRSe ) ,CS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4722253136769272}, {"determining": "( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.09844036728203254}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( PN,FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS - MUC ) ,( DS + MLU ) )", "obj1": 0.43340857787810383, "obj2": 0.4798791745950898}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( MLU * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.5598194130925508, "obj2": 0.38617956848344603}, {"determining": "Max( ( DDR / ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( MLU / RMSe ) ,( MUR * ( RRSe * MUR ) ) ) )", "obj1": 0.5688487584650113, "obj2": 0.38538797136559494}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,( AMS * ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS / MUR ) * Max( CS,MUR ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) + RMSe )", "obj1": 0.6230248306997742, "obj2": 0.3287935481221607}, {"determining": "( Max( BR,FirstVNF_Mem ) + ( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) / Min( FirstVNF_RAM_Server ,RRS ) ) )", "choosing": "( ( ( RCSe * Min( ( DS - MUM ) ,( RRSe + RMSe ) ) ) + Max( DS,RMSe ) ) * Min( ( CS / CS ) ,( MUM * MUR ) ) )", "obj1": 0.5914221218961625, "obj2": 0.37169168294472715}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) ) * ( Max( BR,FirstVNF_Mem ) + ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,RRS ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / MUM ) ) ,Min( ( DS - MUM ) ,( RRSe + RMSe ) ) ) / ( ( ( RCSe * RMSe ) + Max( DS,RMSe ) ) * Min( ( CS / CS ) ,( MUM * MUR ) ) ) )", "obj1": 0.5733634311512416, "obj2": 0.378282344318619}, {"determining": "( Max( ( FirstVNF_RAM_Server * ACS ),Min( AMS ,FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server - RRS ) ,Min( FirstVNF_Mem_Server ,( Max( ARS,FirstVNF_Mem_Server ) + Min( BR ,MDR ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) + Min( ( MUR + DS ) ,Max( CS,MUM ) ) ) * ( ( MUC + MLU ) - RCSe ) )", "obj1": 0.618510158013544, "obj2": 0.33326646844531205}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,MDR ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe / Max( MUR,( MUR + MUR ) ) ),( ( MUM - CS ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.945823927765237, "obj2": 0.049813701368883606}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - Min( ( RRSe - MLU ) ,( DS + MLU ) ) )", "obj1": 0.6523702031602708, "obj2": 0.3087448839455009}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( DS ,MLU ) )", "obj1": 0.9887133182844243, "obj2": 0.01087854114543683}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_CPU ,MRS ),( ( Min( FirstVNF_CPU_Server ,AMS ) + FirstVNF_CPU_Server ) - CRS ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC + Max( ( Max( Max( RCSe,MUM ),RMSe ) / ( MUC / Max( MLU,RRSe ) ) ),( ( DS - DS ) * ( MUC + MUC ) ) ) ) - MLU ) + ( Min( DS ,Max( ( Min( MUR ,Min( CS ,DS ) ) / Min( Min( MUM ,MUM ) ,( RMSe / CS ) ) ),MUR ) ) / MLU ) ) * ( RCSe / RCSe ) )", "obj1": 0.5936794582392777, "obj2": 0.3601262521486937}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Const ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( MUC + MUC ) + RRSe ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5349887133182845, "obj2": 0.4079218965113852}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - CRS ) * CRS ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( MUR + MUM ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) )", "obj1": 0.5214446952595937, "obj2": 0.4119208418710067}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - ( PN + MRS ) ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,( CS + MUC ) ) )", "obj1": 0.9029345372460497, "obj2": 0.10481926966788314}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( FirstVNF_CPU - CRS ) )", "choosing": "Min( ( MUM * RCSe ) ,Max( RCSe,( RRSe / MUC ) ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( RRS * Max( PN,AMS ) ) )", "choosing": "( ( RRSe + MLU ) - Min( RRSe ,( RCSe - ( RMSe * CS ) ) ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( Min( ( MLU + RCSe ) ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( RRSe * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( PN,FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS - MUC ) ,( DS + MLU ) )", "obj1": 0.43340857787810383, "obj2": 0.4798791745950898}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( MLU * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.5598194130925508, "obj2": 0.38617956848344603}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,( AMS * ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS / MUR ) * Max( CS,MUR ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) + RMSe )", "obj1": 0.6230248306997742, "obj2": 0.3287935481221607}, {"determining": "( Max( ( FirstVNF_RAM_Server * ACS ),Min( AMS ,FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server - RRS ) ,Min( FirstVNF_Mem_Server ,( Max( ARS,FirstVNF_Mem_Server ) + Min( BR ,MDR ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) + Min( ( MUR + DS ) ,Max( CS,MUM ) ) ) * ( ( MUC + MLU ) - RCSe ) )", "obj1": 0.618510158013544, "obj2": 0.33326646844531205}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,MDR ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe / Max( MUR,( MUR + MUR ) ) ),( ( MUM - CS ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.945823927765237, "obj2": 0.049813701368883606}, {"determining": "( ( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - Min( ( RRSe - MLU ) ,( DS + MLU ) ) )", "obj1": 0.6523702031602708, "obj2": 0.3087448839455009}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( DS ,MLU ) )", "obj1": 0.9887133182844243, "obj2": 0.01087854114543683}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_CPU ,MRS ),( ( Min( FirstVNF_CPU_Server ,AMS ) + FirstVNF_CPU_Server ) - CRS ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUC + Max( ( Max( Max( RCSe,MUM ),RMSe ) / ( MUC / Max( MLU,RRSe ) ) ),( ( DS - DS ) * ( MUC + MUC ) ) ) ) - MLU ) + ( Min( DS ,Max( ( Min( MUR ,Min( CS ,DS ) ) / Min( Min( MUM ,MUM ) ,( RMSe / CS ) ) ),MUR ) ) / MLU ) ) * ( RCSe / RCSe ) )", "obj1": 0.5936794582392777, "obj2": 0.3601262521486937}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + FirstVNF_CPU_Server ) / ( MRS / FirstVNF_CPU_Server ) ) - MRS ) / ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_Mem * BR ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),( CS - MUR ) ) / Min( MUC ,( CS - ( ( ( DS - DS ) + CS ) - RRSe ) ) ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( MUM + MUC ) ) )", "obj1": 0.891647855530474, "obj2": 0.11038732255332}, {"determining": "( ( ( ( Max( ( ( ARS + ARS ) + FirstVNF_CPU_Server ),MDR ) - MRS ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / Const ) + ( BR * AMS ) )", "choosing": "( CS + ( Max( MLU,MUC ) - ( MUM - Min( ( ( Max( RCSe,( RMSe - RMSe ) ) / ( ( DS - DS ) + DS ) ) - MUR ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( BR + MRS ) + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( RMSe,Min( ( RCSe + CS ) ,DS ) ) + RCSe ) + ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / ( RCSe * DS ) ) ) ) )", "obj1": 0.3002257336343115, "obj2": 0.6537278652618288}, {"determining": "( ( FirstVNF_Mem * ( Max( ( MRS - AMS ),PN ) + ARS ) ) - ( ( AMS / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( DS,CS ) ,CS ) * RRSe ) ,( ( ( ( MLU - ( MUC / MUR ) ) + ( MUC / ( CS - MUM ) ) ) + MUC ) + DS ) )", "obj1": 0.927765237020316, "obj2": 0.052353617880112634}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( MLU - RRSe ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.7065462753950339, "obj2": 0.21202178322317486}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( ( ( FirstVNF_Mem + ( ( CRS * FirstVNF_Mem ) - RRS ) ) - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.43340857787810383, "obj2": 0.4798791745950898}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Const ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( Min( DDR ,Max( DDR,FirstVNF_Mem_Server ) ) - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Min( ( ( Min( MUC ,Max( ( ( MUR + MUR ) * MLU ),Min( Max( ( RCSe - RRSe ),RCSe ) ,Min( MUC ,( CS * CS ) ) ) ) ) + ( ( RCSe - Max( DS,MLU ) ) / ( CS / DS ) ) ) * MUC ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5891647855530474, "obj2": 0.36978819894779696}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( Min( ( RCSe + MLU ) ,( MUC - RCSe ) ) + MUC ) + ( MUM * ( ( MUM + RCSe ) * MUC ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( Min( ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ,DDR ) * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( MLU,RMSe ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,ARS ) + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( ( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) ) + ( RMSe - Min( ( ( ( MUR * RMSe ) + MLU ) * MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Max( Min( AMS ,ARS ),FirstVNF_RAM_Server ) ) ) + ( ( ( RRS - ( FirstVNF_CPU / Min( ( BR - ( ARS - FirstVNF_RAM_Server ) ) ,RRS ) ) ) * Max( RRS,BR ) ) - ACS ) )", "choosing": "( Max( Min( MUR ,( ( ( Max( RCSe,( DS - RRSe ) ) - ( ( CS / MUM ) / MUM ) ) / RRSe ) / DS ) ),( ( RCSe / MUM ) + ( ( ( ( ( MLU + MUM ) - MUM ) / ( Max( MUR,RCSe ) + MLU ) ) - ( MUC * DS ) ) + ( Min( ( RRSe * DS ) ,Max( DS,MLU ) ) / Max( CS,Min( ( MUR / MLU ) ,Max( RMSe,MLU ) ) ) ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,CS ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "( ( AMS * DDR ) - ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( Min( BR ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( ( Max( ( MUR * RRSe ),MUM ) + Min( ( ( CS * CS ) - MUM ) ,RMSe ) ) ,( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) * ( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,( DDR + MDR ) ) * Min( AMS ,ARS ) ) - ACS ) )", "choosing": "( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) - ( ( MUC - ( MUR - RRSe ) ) + ( DS - ( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RMSe * MUR ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( RMSe / RMSe ) ,( MUR * ( RRSe * MUR ) ) ) )", "obj1": 0.5665914221218962, "obj2": 0.37435671931964515}, {"determining": "Min( ( Min( Const ,( DDR / PN ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / PN ) ) - AMS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( RCSe * ( RMSe - CS ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( Max( ( ACS + ACS ),RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) ,Min( ( Max( ( RRSe / ( ( RMSe - RMSe ) / RCSe ) ),RRSe ) - DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) ) + FirstVNF_Mem_Server ) ),( DDR * Const ) ) )", "choosing": "( ( Max( DS,( MLU - MUC ) ) * ( MLU + MUR ) ) / ( ( MUR + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( MUR * ( RCSe / RCSe ) )", "obj1": 0.9706546275395034, "obj2": 0.029927949533397114}, {"determining": "( ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) * MDR ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( CS - RRSe ) ,Max( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ),CS ) )", "obj1": 0.9006772009029346, "obj2": 0.10932517463205871}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM - MDR ) )", "choosing": "( Min( ( MLU + RCSe ) ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6997742663656885, "obj2": 0.24578396644594794}, {"determining": "( Max( Min( AMS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( Max( Max( BR,Max( ( MRS * FirstVNF_RAM_Server ),FirstVNF_Mem ) ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( MUR + ( MUM - DS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4570907529980108}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( FirstVNF_CPU / ( ( ( BR - ( FirstVNF_CPU - MRS ) ) / ( BR * Max( ( FirstVNF_Mem_Server / ACS ),FirstVNF_CPU ) ) ) + MDR ) ) )", "choosing": "( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,ACS ) * Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,RRSe ) - CS )", "obj1": 0.5214446952595937, "obj2": 0.40091105604804167}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) ),( DDR * ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( ( RRSe * Min( ( CS - ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RCSe / ( MLU / MUC ) ) ) ) ,Max( RRSe,CS ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.309255079006772, "obj2": 0.6380147073658637}, {"determining": "( ( ( Max( FirstVNF_CPU,RRS ) - DDR ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - CRS ) ) + ( FirstVNF_Mem - ACS ) )", "choosing": "( ( MLU - MUR ) - ( MLU - MUC ) )", "obj1": 0.6433408577878104, "obj2": 0.31325491769431785}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( ( ARS * DDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / MDR ) )", "choosing": "( ( Min( MUM ,( MLU / MLU ) ) - ( MUR - RRSe ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) ) + Min( ( ( Min( MUM ,( ( Max( MUC,MUC ) - RRSe ) + MLU ) ) + RMSe ) + Max( MUM,CS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - RRSe ) ,Max( ( ( MUR / CS ) * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( DS ,( MUC * MUR ) ) ) / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( CRS + AMS ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - Min( MDR ,( ARS + DDR ) ) ) ) ,( ( FirstVNF_CPU * FirstVNF_Mem ) / DDR ) )", "choosing": "( ( DS / ( MUM * RRSe ) ) / ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * CRS ) / AMS ) - Min( MDR ,( ARS + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( ( DS / MUM ) / ( CS - CS ) ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( PN,FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS - MUC ) ,( DS + MLU ) )", "obj1": 0.43340857787810383, "obj2": 0.4798791745950898}, {"determining": "( Max( ACS,( FirstVNF_RAM_Server + ACS ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Max( MUC,CS ) ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,BR ) ,( Min( ( DDR + MDR ) ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - MUC ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / Const ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) ) ,( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,( MUR - MUR ) ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - MDR ) - CRS ) * CRS ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ( FirstVNF_RAM_Server * ACS ) - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( RCSe ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) )", "obj1": 0.5146726862302483, "obj2": 0.40917447519059663}, {"determining": "Min( ( Max( ( MDR - FirstVNF_Mem_Server ),( AMS - CRS ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( RRSe + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + RRSe ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) + ( ( Min( RMSe ,DS ) + Max( RCSe,DS ) ) - Min( RMSe ,( ( RCSe * ( MUR / RMSe ) ) * ( MUC / ( RCSe - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( FirstVNF_CPU * CRS ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + Min( MUR ,MUR ) ) ),( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + RRS ) ,( Min( DDR ,PN ) + Min( Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ,MDR ) ) )", "choosing": "( ( ( CS / Min( ( CS * MUR ) ,( CS / ( ( ( DS + MUM ) * Max( DS,DS ) ) + ( MUR * MUC ) ) ) ) ) - DS ) / Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( FirstVNF_RAM - CRS ) ,BR ) )", "choosing": "( ( ( DS + ( MUR / ( DS + ( Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) + RMSe ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,BR ) ,Max( MDR,CRS ) )", "choosing": "( Max( ( ( RRSe / DS ) * Min( CS ,MLU ) ),MUR ) + Min( RRSe ,RMSe ) )", "obj1": 0.2866817155756208, "obj2": 0.6753625020212595}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7268623024830699, "obj2": 0.18899256553237395}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - Min( MDR ,( ARS + ( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * MUR ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MDR - FirstVNF_Mem_Server ),( AMS - CRS ) ) - ACS )", "choosing": "Max( ( ( RCSe - MUC ) - Max( CS,MUR ) ),( Min( RRSe ,MUR ) + ( ( Min( RMSe ,DS ) + Max( RCSe,DS ) ) * ( Min( RRSe ,RMSe ) / ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + FirstVNF_RAM ) / MDR ) )", "choosing": "( Min( ( CS - RRSe ) ,Max( RRSe,CS ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( Min( ARS ,( ( ( ( FirstVNF_Mem / Const ) / AMS ) - ( FirstVNF_Mem_Server / ACS ) ) + DDR ) ),( AMS / ( ARS / ( RRS + RRS ) ) ) ) - ( Const / ACS ) )", "choosing": "Min( ( Min( MLU ,( CS / MLU ) ) / ( RMSe - MUM ) ) ,Max( MUC,Min( DS ,( ( MUR + MUC ) * ( Max( RMSe,MLU ) + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( Min( ( MUR * MUC ) ,( MUM / MUM ) ) * MUR ) ,DS )", "obj1": 0.8036117381489842, "obj2": 0.1232936201044686}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - Max( RRS,Const ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * ( MUR - ( RCSe / MUM ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2866817155756208, "obj2": 0.628044769528224}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + MUC ) ) )", "obj1": 0.8893905191873589, "obj2": 0.11335757738400004}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( ( ( FirstVNF_Mem + ( ( CRS * MRS ) - RRS ) ) - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( ( RMSe - Min( DS ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.43340857787810383, "obj2": 0.4754703206224984}, {"determining": "Min( ( ( FirstVNF_Mem_Server - MRS ) - DDR ) ,( AMS * ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS / MUR ) * ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) + RMSe )", "obj1": 0.5711060948081265, "obj2": 0.3601124214886996}, {"determining": "( Max( ( FirstVNF_RAM_Server * ACS ),Min( AMS ,FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server - RRS ) ,Min( FirstVNF_Mem_Server ,( Max( ARS,FirstVNF_Mem_Server ) + Min( BR ,MDR ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) + Min( ( MUR + DS ) ,Max( CS,MUM ) ) ) * ( ( MUC + MLU ) - RCSe ) )", "obj1": 0.618510158013544, "obj2": 0.33326646844531205}, {"determining": "( Max( Min( AMS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( MLU - RRSe ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.7065462753950339, "obj2": 0.21202178322317486}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7268623024830699, "obj2": 0.18899256553237395}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) )", "obj1": 0.32054176072234764, "obj2": 0.6273742164161481}, {"determining": "Min( Min( MRS ,MDR ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe / Max( MUR,( MUR + MUR ) ) ),( ( MUM - CS ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.945823927765237, "obj2": 0.049813701368883606}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( MUR * ( RCSe / RCSe ) )", "obj1": 0.9706546275395034, "obj2": 0.029927949533397114}, {"determining": "( ( Const / AMS ) - Max( ( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) ),( CRS * ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( ( ( CS * ( RMSe + DS ) ) * Min( ( CS - ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RCSe / ( MLU / MUC ) ) ) ) ,Max( RRSe,CS ) ) ) / DS ) / ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( ( DS / MUM ) / ( CS - CS ) ) ) ) )", "obj1": 0.5214446952595937, "obj2": 0.39880007154990876}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( Const * AMS ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( Max( MUC,CS ) ,CS ) * ( RCSe / RCSe ) ) ,Min( DS ,Max( ( Max( DS,RRSe ) / ( ( RMSe + ( RMSe * ( DS + MLU ) ) ) * Max( Min( DS ,RCSe ),CS ) ) ),( ( RMSe - RMSe ) + MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - ( PN + MRS ) ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,( CS + MUC ) ) )", "obj1": 0.9029345372460497, "obj2": 0.10481926966788314}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),FirstVNF_CPU ) / ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( ( RCSe - RRSe ),RCSe ) ,CS ) + RMSe ) ,( DS - CS ) )", "obj1": 0.6772009029345373, "obj2": 0.25280512473203565}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - Max( FirstVNF_CPU,( ARS / ( CRS * AMS ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( ( MLU + RCSe ),( DS - RCSe ) ) ) ) ,CS ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.7042889390519187, "obj2": 0.24306500550107737}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,MRS ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( Min( ( MUR - MLU ) ,( ( MLU + MUC ) / MUM ) ) - ( ( CS * Max( DS,RRSe ) ) / Min( CS ,MUR ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.4966139954853273, "obj2": 0.41834017228273596}, {"determining": "( ( FirstVNF_Mem * ( Max( ( MRS - AMS ),PN ) + ARS ) ) - ( ( AMS / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( DS,CS ) ,CS ) * RRSe ) ,( ( ( ( MLU - ( MUC / MUR ) ) + ( MUC / ( CS - MUM ) ) ) + MUC ) + DS ) )", "obj1": 0.927765237020316, "obj2": 0.052353617880112634}, {"determining": "Min( Max( RRS,BR ) ,( BR * ACS ) )", "choosing": "( Max( RRSe,( ( RRSe - MUC ) * MUC ) ) + Min( RRSe ,DS ) )", "obj1": 0.5553047404063205, "obj2": 0.3900436531124172}, {"determining": "( ( ( Max( FirstVNF_CPU,RRS ) - DDR ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - CRS ) ) + ( FirstVNF_Mem - ACS ) )", "choosing": "( ( MLU - MUR ) - ( MLU - MUC ) )", "obj1": 0.6433408577878104, "obj2": 0.31325491769431785}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,( AMS * ( Min( ACS ,FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS / MUR ) * Max( CS,MUR ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) + RMSe )", "obj1": 0.6230248306997742, "obj2": 0.3287935481221607}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - MDR ) - CRS ) * CRS ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ( FirstVNF_RAM_Server * ACS ) - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( RCSe ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) )", "obj1": 0.5146726862302483, "obj2": 0.40917447519059663}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server + AMS ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) / Const ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + ( Min( RCSe ,MLU ) - ( MLU + MUR ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46211277487340285}, {"determining": "Min( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( MUM / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( RRSe / MUC ) ) + ( RRSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 0.6659142212189616, "obj2": 0.29825915058377256}, {"determining": "( Max( Max( BR,Max( ( MRS * FirstVNF_RAM_Server ),FirstVNF_Mem ) ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( MUR + ( MUM - DS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4570907529980108}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( Min( ( RCSe + MLU ) ,( MUC - RCSe ) ) + MUC ) + ( MUM * ( ( MUM + RCSe ) * MUC ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),MUC ),( ( MLU * MUM ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "Max( Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( RMSe / RMSe ) ,( MUR * ( RRSe * MUR ) ) ) )", "obj1": 0.5665914221218962, "obj2": 0.37435671931964515}, {"determining": "Min( ( FirstVNF_RAM - ( ( Min( BR ,MRS ) * ACS ) / ( ( Max( ( ( FirstVNF_CPU_Server + MRS ) / RRS ),ACS ) - MRS ) - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( MUM / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( RCSe + ( RRSe / MUC ) ) + ( ( DS * MUR ) - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / ( ( ( CS + RRSe ) * MUC ) * ( RMSe * MLU ) ) ) )", "obj1": 0.6478555304740407, "obj2": 0.3041248752046933}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - MLU ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) )", "obj1": 0.9774266365688488, "obj2": 0.01879281159070157}, {"determining": "( ( FirstVNF_CPU / ( MRS - BR ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( MUM - RRSe ) ,CS ) + RMSe ) ,( DS - CS ) )", "obj1": 0.6839729119638827, "obj2": 0.24320016783686182}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Max( RRSe,( ( RRSe / RCSe ) + MUC ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4492099322799097, "obj2": 0.47432978237138196}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( RRSe * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( CRS,( FirstVNF_CPU / ( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * ( ( MLU - CS ) + Min( RRSe ,( MLU - Min( ( MUR / RRSe ) ,MUR ) ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9841986455981941, "obj2": 0.007356290454903124}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( MLU * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.5598194130925508, "obj2": 0.38617956848344603}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,CS ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 0.8939051918735892, "obj2": 0.106548373605446}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( MUM + MUC ) ) )", "obj1": 0.891647855530474, "obj2": 0.11038732255332}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + FirstVNF_CPU_Server ) / ( MRS / FirstVNF_CPU_Server ) ) - MRS ) / ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_Mem * BR ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),( CS - MUR ) ) / Min( MUC ,( CS - ( ( ( DS - DS ) + CS ) - RRSe ) ) ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( ( ARS + ARS ) + FirstVNF_CPU_Server ),MDR ) - MRS ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / Const ) + ( BR * AMS ) )", "choosing": "( CS + ( Max( MLU,MUC ) - ( MUM - Min( ( ( Max( RCSe,( RMSe - RMSe ) ) / ( ( DS - DS ) + DS ) ) - MUR ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( BR + MRS ) + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( RMSe,Min( ( RCSe + CS ) ,DS ) ) + RCSe ) + ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ,DDR ) * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( MLU,RMSe ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,ARS ) + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( ( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) ) + ( RMSe - Min( ( ( ( MUR * RMSe ) + MLU ) * MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Max( Min( AMS ,ARS ),FirstVNF_RAM_Server ) ) ) + ( ( ( RRS - ( FirstVNF_CPU / Min( ( BR - ( ARS - FirstVNF_RAM_Server ) ) ,RRS ) ) ) * Max( RRS,BR ) ) - ACS ) )", "choosing": "( Max( Min( MUR ,( ( ( Max( RCSe,( DS - RRSe ) ) - ( ( CS / MUM ) / MUM ) ) / RRSe ) / DS ) ),( ( RCSe / MUM ) + ( ( ( ( ( MLU + MUM ) - MUM ) / ( Max( MUR,RCSe ) + MLU ) ) - ( MUC * DS ) ) + ( Min( ( RRSe * DS ) ,Max( DS,MLU ) ) / Max( CS,Min( ( MUR / MLU ) ,Max( RMSe,MLU ) ) ) ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( Min( BR ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( ( Max( ( MUR * RRSe ),MUM ) + Min( ( ( CS * CS ) - MUM ) ,RMSe ) ) ,( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) * ( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,( DDR + MDR ) ) * Min( AMS ,ARS ) ) - ACS ) )", "choosing": "( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) - ( ( MUC - ( MUR - RRSe ) ) + ( DS - ( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RMSe * MUR ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,( DDR / PN ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / PN ) ) - AMS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( RCSe * ( RMSe - CS ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( Max( ( ACS + ACS ),RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) ,Min( ( Max( ( RRSe / ( ( RMSe - RMSe ) / RCSe ) ),RRSe ) - DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) ) + FirstVNF_Mem_Server ) ),( DDR * Const ) ) )", "choosing": "( ( Max( DS,( MLU - MUC ) ) * ( MLU + MUR ) ) / ( ( MUR + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( FirstVNF_CPU / ( ( ( BR - ( FirstVNF_CPU - MRS ) ) / ( BR * Max( ( FirstVNF_Mem_Server / ACS ),FirstVNF_CPU ) ) ) + MDR ) ) )", "choosing": "( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( ( ARS * DDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / MDR ) )", "choosing": "( ( Min( MUM ,( MLU / MLU ) ) - ( MUR - RRSe ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) ) + Min( ( ( Min( MUM ,( ( Max( MUC,MUC ) - RRSe ) + MLU ) ) + RMSe ) + Max( MUM,CS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - RRSe ) ,Max( ( ( MUR / CS ) * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( CRS + AMS ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - Min( MDR ,( ARS + DDR ) ) ) ) ,( ( FirstVNF_CPU * FirstVNF_Mem ) / DDR ) )", "choosing": "( ( DS / ( MUM * RRSe ) ) / ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * CRS ) / AMS ) - Min( MDR ,( ARS + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( ( DS / MUM ) / ( CS - CS ) ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( FirstVNF_RAM_Server + ACS ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Max( MUC,CS ) ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,BR ) ,( Min( ( DDR + MDR ) ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - MUC ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / Const ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) ) ,( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,( MUR - MUR ) ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MDR - FirstVNF_Mem_Server ),( AMS - CRS ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( RRSe + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) + ( ( Min( RMSe ,DS ) + Max( RCSe,DS ) ) - Min( RMSe ,( ( RCSe * ( MUR / RMSe ) ) * ( MUC / ( RCSe - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( FirstVNF_CPU * CRS ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + Min( MUR ,MUR ) ) ),( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + RRS ) ,( Min( DDR ,PN ) + Min( Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ,MDR ) ) )", "choosing": "( ( ( CS / Min( ( CS * MUR ) ,( CS / ( ( ( DS + MUM ) * Max( DS,DS ) ) + ( MUR * MUC ) ) ) ) ) - DS ) / Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( FirstVNF_RAM - CRS ) ,BR ) )", "choosing": "( ( ( DS + ( MUR / ( DS + ( Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) + RMSe ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Min( DDR ,MDR ) * PN ) / Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe * Max( ( MUM * MUM ),DS ) ) ,( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ARS ,( ( ( ( FirstVNF_Mem / Const ) / AMS ) - ( FirstVNF_Mem_Server / ACS ) ) + DDR ) ),( AMS / ( ARS / ( RRS + RRS ) ) ) ) - ( Const / ACS ) )", "choosing": "Min( ( Min( MLU ,( CS / MLU ) ) / ( RMSe - MUM ) ) ,Max( MUC,Min( DS ,( ( MUR + MUC ) * ( Max( RMSe,MLU ) + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * ( FirstVNF_CPU_Server - Const ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,( CS / RCSe ) ) ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29790344025200893}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "( ( Const / AMS ) - Max( ( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) ),( CRS * ( FirstVNF_RAM - DDR ) ) ) )", "choosing": "( ( ( ( CS * ( RMSe + DS ) ) * Min( ( CS - ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RCSe / ( MLU / MUC ) ) ) ) ,Max( RRSe,CS ) ) ) / DS ) / ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( ( DS / MUM ) / ( CS - CS ) ) ) ) )", "obj1": 0.5214446952595937, "obj2": 0.39880007154990876}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( Min( ( MUR * MUC ) ,( MUM / MUM ) ) * MUR ) ,DS )", "obj1": 0.8036117381489842, "obj2": 0.1232936201044686}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( RCSe / RCSe ) )", "obj1": 0.781038374717833, "obj2": 0.17272371085979848}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( ( DS + ( MUR / ( DS + ( Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) + RMSe ) ) ) ) - ( MLU + CS ) ) - ( ( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.3340857787810384, "obj2": 0.5710552892812881}, {"determining": "( ( MRS + Min( FirstVNF_RAM ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + Min( MUR ,Max( RCSe,( RCSe + RMSe ) ) ) ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( MUM + MUC ) ) )", "obj1": 0.8826185101580135, "obj2": 0.12221679563054262}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) - RRSe ) )", "obj1": 0.26636568848758463, "obj2": 0.6516248126206576}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - Max( RRS,Const ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * ( MUR - ( RCSe / MUM ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2866817155756208, "obj2": 0.628044769528224}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) )", "obj1": 0.32054176072234764, "obj2": 0.6273742164161481}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + MLU ) ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + MUC ) ) )", "obj1": 0.891647855530474, "obj2": 0.10023460296318695}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( Max( AMS,DDR ) - ( ( Const - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - Min( Max( MUC,CS ) ,CS ) )", "obj1": 0.39954853273137697, "obj2": 0.4860288885815784}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7268623024830699, "obj2": 0.18899256553237395}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),FirstVNF_CPU ) / ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( ( RCSe - RRSe ),RCSe ) ,CS ) + RMSe ) ,( DS - CS ) )", "obj1": 0.6772009029345373, "obj2": 0.25280512473203565}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - Max( FirstVNF_CPU,( ARS / ( CRS * AMS ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( ( MLU + RCSe ),( DS - RCSe ) ) ) ) ,CS ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.7042889390519187, "obj2": 0.24306500550107737}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,MRS ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( Min( ( MUR - MLU ) ,( ( MLU + MUC ) / MUM ) ) - ( ( CS * Max( DS,RRSe ) ) / Min( CS ,MUR ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.4966139954853273, "obj2": 0.41834017228273596}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( MLU - RRSe ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.7065462753950339, "obj2": 0.21202178322317486}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - MDR ) - CRS ) * CRS ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ( FirstVNF_RAM_Server * ACS ) - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( RCSe ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) )", "obj1": 0.5146726862302483, "obj2": 0.40917447519059663}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server + AMS ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) / Const ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + ( Min( RCSe ,MLU ) - ( MLU + MUR ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46211277487340285}, {"determining": "( Max( Min( ACS ,( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) ,( RCSe + MLU ) )", "obj1": 0.708803611738149, "obj2": 0.2031783061133927}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + FirstVNF_RAM ) / FirstVNF_RAM_Server ) - ( MRS * Min( MRS ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) / DDR ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,( MLU - ( RMSe - Min( RCSe ,RMSe ) ) ) )", "obj1": 0.42663656884875845, "obj2": 0.4852281009327964}, {"determining": "( Max( Max( BR,Max( ( MRS * FirstVNF_RAM_Server ),FirstVNF_Mem ) ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( MUR + ( MUM - DS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4570907529980108}, {"determining": "Min( Min( MRS ,MDR ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe / Max( MUR,( MUR + MUR ) ) ),( ( MUM - CS ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.945823927765237, "obj2": 0.049813701368883606}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( MUR * ( RCSe / Max( ( MUM / MLU ),CS ) ) )", "obj1": 0.9593679458239278, "obj2": 0.041435895435105355}, {"determining": "( ( ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) / ( ACS * Const ) ) - ( ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) - BR ) )", "choosing": "Max( Max( ( ( DS - MUM ) / Min( MUC ,RRSe ) ),MUC ),( Max( ( ( ( Max( Min( RMSe ,CS ),DS ) + Max( MUR,RRSe ) ) - RRSe ) * RCSe ),MUC ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( FirstVNF_Mem * ( Max( ( MRS - AMS ),PN ) + ARS ) ) - ( ( AMS / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( DS,CS ) ,CS ) * RRSe ) ,( ( ( ( MLU - ( MUC / MUR ) ) + ( MUC / ( CS - MUM ) ) ) + MUC ) + DS ) )", "obj1": 0.927765237020316, "obj2": 0.052353617880112634}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( FirstVNF_CPU / ( MRS - BR ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( MUM - RRSe ) ,CS ) + RMSe ) ,( DS - CS ) )", "obj1": 0.6839729119638827, "obj2": 0.24320016783686182}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Max( RRSe,( ( RRSe / RCSe ) + MUC ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4492099322799097, "obj2": 0.47432978237138196}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( RRSe * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( ( ( FirstVNF_Mem + ( ( CRS * MRS ) - RRS ) ) - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( ( RMSe - Min( DS ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.43340857787810383, "obj2": 0.4754703206224984}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.9142212189616253, "obj2": 0.05844057004437785}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + MUC ) ) )", "obj1": 0.8893905191873589, "obj2": 0.11335757738400004}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( Min( ( RCSe + MLU ) ,( MUC - RCSe ) ) + MUC ) + ( MUM * ( ( MUM + RCSe ) * MUC ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( Const * AMS ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( Max( MUC,CS ) ,CS ) * ( RCSe / RCSe ) ) ,Min( DS ,Max( ( Max( DS,RRSe ) / ( ( RMSe + ( RMSe * ( DS + MLU ) ) ) * Max( Min( DS ,RCSe ),CS ) ) ),( ( RMSe - RMSe ) + MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - MLU ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) )", "obj1": 0.9774266365688488, "obj2": 0.01879281159070157}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( MUR * ( RCSe / RCSe ) ) * ( RCSe / RCSe ) )", "obj1": 0.9683972911963883, "obj2": 0.030880136982592177}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( CRS,( FirstVNF_CPU / ( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * ( ( MLU - CS ) + Min( RRSe ,( MLU - Min( ( MUR / RRSe ) ,MUR ) ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9841986455981941, "obj2": 0.007356290454903124}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( MUR * ( RCSe / RCSe ) )", "obj1": 0.9706546275395034, "obj2": 0.029927949533397114}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,CS ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( CS * MUR ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),MUC ),( ( MLU * MUM ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( Min( ( RCSe + MLU ) ,( MUC - RCSe ) ) + MUC ) + ( MUM * ( ( MUM + RCSe ) * MUC ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( Max( Min( AMS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) * MLU ) ),( ( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) ) / Min( MUM ,RCSe ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + FirstVNF_CPU_Server ) / ( MRS / FirstVNF_CPU_Server ) ) - MRS ) / ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_Mem * BR ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),( CS - MUR ) ) / Min( MUC ,( CS - ( ( ( DS - DS ) + CS ) - RRSe ) ) ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( ( ARS + ARS ) + FirstVNF_CPU_Server ),MDR ) - MRS ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / Const ) + ( BR * AMS ) )", "choosing": "( CS + ( Max( MLU,MUC ) - ( MUM - Min( ( ( Max( RCSe,( RMSe - RMSe ) ) / ( ( DS - DS ) + DS ) ) - MUR ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( BR + MRS ) + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( RMSe,Min( ( RCSe + CS ) ,DS ) ) + RCSe ) + ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ,DDR ) * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( MLU,RMSe ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,ARS ) + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( ( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) ) + ( RMSe - Min( ( ( ( MUR * RMSe ) + MLU ) * MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Max( Min( AMS ,ARS ),FirstVNF_RAM_Server ) ) ) + ( ( ( RRS - ( FirstVNF_CPU / Min( ( BR - ( ARS - FirstVNF_RAM_Server ) ) ,RRS ) ) ) * Max( RRS,BR ) ) - ACS ) )", "choosing": "( Max( Min( MUR ,( ( ( Max( RCSe,( DS - RRSe ) ) - ( ( CS / MUM ) / MUM ) ) / RRSe ) / DS ) ),( ( RCSe / MUM ) + ( ( ( ( ( MLU + MUM ) - MUM ) / ( Max( MUR,RCSe ) + MLU ) ) - ( MUC * DS ) ) + ( Min( ( RRSe * DS ) ,Max( DS,MLU ) ) / Max( CS,Min( ( MUR / MLU ) ,Max( RMSe,MLU ) ) ) ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( Min( BR ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( ( Max( ( MUR * RRSe ),MUM ) + Min( ( ( CS * CS ) - MUM ) ,RMSe ) ) ,( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) * ( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,( DDR + MDR ) ) * Min( AMS ,ARS ) ) - ACS ) )", "choosing": "( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) - ( ( MUC - ( MUR - RRSe ) ) + ( DS - ( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RMSe * MUR ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,( DDR / PN ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / PN ) ) - AMS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( RCSe * ( RMSe - CS ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( Max( ( ACS + ACS ),RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) ,Min( ( Max( ( RRSe / ( ( RMSe - RMSe ) / RCSe ) ),RRSe ) - DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) ) + FirstVNF_Mem_Server ) ),( DDR * Const ) ) )", "choosing": "( ( Max( DS,( MLU - MUC ) ) * ( MLU + MUR ) ) / ( ( MUR + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( FirstVNF_CPU / ( ( ( BR - ( FirstVNF_CPU - MRS ) ) / ( BR * Max( ( FirstVNF_Mem_Server / ACS ),FirstVNF_CPU ) ) ) + MDR ) ) )", "choosing": "( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( ( ARS * DDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / MDR ) )", "choosing": "( ( Min( MUM ,( MLU / MLU ) ) - ( MUR - RRSe ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) ) + Min( ( ( Min( MUM ,( ( Max( MUC,MUC ) - RRSe ) + MLU ) ) + RMSe ) + Max( MUM,CS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - RRSe ) ,Max( ( ( MUR / CS ) * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( CRS + AMS ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - Min( MDR ,( ARS + DDR ) ) ) ) ,( ( FirstVNF_CPU * FirstVNF_Mem ) / DDR ) )", "choosing": "( ( DS / ( MUM * RRSe ) ) / ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * CRS ) / AMS ) - Min( MDR ,( ARS + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( ( DS / MUM ) / ( CS - CS ) ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( FirstVNF_RAM_Server + ACS ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Max( MUC,CS ) ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,BR ) ,( Min( ( DDR + MDR ) ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - MUC ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / Const ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ARS + MDR ) ) ) ,( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( MUC,DS ) ,( MUR - MUR ) ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( MDR - FirstVNF_Mem_Server ),( AMS - CRS ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( RRSe + Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) + ( ( Min( RMSe ,DS ) + Max( RCSe,DS ) ) - Min( RMSe ,( ( RCSe * ( MUR / RMSe ) ) * ( MUC / ( RCSe - RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( AMS * ( ( ( ACS * Max( ( FirstVNF_Mem * FirstVNF_RAM ),ACS ) ) - ( CRS + Min( ACS ,( RRS * MRS ) ) ) ) * MRS ) ) - ACS ) )", "choosing": "( ( MLU + RRSe ) - Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * PN ) / Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe * Max( ( MUM * MUM ),DS ) ) ,( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( Min( ACS ,( FirstVNF_Mem_Server - BR ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Max( RRSe,( ( RRSe / RCSe ) + MUC ) ) ) )", "obj1": 0.6613995485327314, "obj2": 0.2594409865019078}, {"determining": "( Max( Min( ACS ,( ( CRS - FirstVNF_Mem ) * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( DS + MUM ) + RRSe ) / Min( MUM ,( ( RRSe + RCSe ) * CS ) ) ) ) ,( DS - CS ) )", "obj1": 0.5214446952595937, "obj2": 0.3971875218830138}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - ( CRS + FirstVNF_Mem_Server ) ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - Max( DS,MUM ) ) ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5598194130925508, "obj2": 0.29342435779239745}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - MLU ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) ) * MUR ) ,DS )", "obj1": 0.7674943566591422, "obj2": 0.12296937322571047}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29790344025200893}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) ,DS )", "obj1": 0.8171557562076749, "obj2": 0.11426832958279791}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) - RRSe ) )", "obj1": 0.26636568848758463, "obj2": 0.6516248126206576}, {"determining": "Max( ( AMS * Min( Max( Max( ( FirstVNF_Mem_Server - ARS ),BR ),CRS ) ,Const ) ),( DDR / Min( MDR ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - ( DS + RCSe ) ) ,( DS - ( Min( ( DS - ( MLU + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( MUR * MUR ),( MUR * MUC ) ) )", "obj1": 0.35214446952595935, "obj2": 0.5356814654155777}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - Max( RRS,Const ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * ( MUR - ( RCSe / MUM ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2866817155756208, "obj2": 0.628044769528224}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + MLU ) ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + MUC ) ) )", "obj1": 0.891647855530474, "obj2": 0.10023460296318695}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) )", "obj1": 0.32054176072234764, "obj2": 0.6273742164161481}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / Min( CRS ,Const ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,( PN - ACS ) ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( Max( DS,( MUR - MUR ) ) - ( MLU + CS ) ) - ( ( ( MLU + RRSe ) / Min( ( DS + Max( CS,Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.33182844243792325, "obj2": 0.5639308004603044}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + CS ) ) )", "obj1": 0.8577878103837472, "obj2": 0.1120080024638213}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7268623024830699, "obj2": 0.18899256553237395}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - Max( FirstVNF_CPU,( ARS / ( CRS * AMS ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( ( MLU + RCSe ),( DS - RCSe ) ) ) ) ,CS ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.7042889390519187, "obj2": 0.24306500550107737}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( ( ( AMS * DDR ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 0.4717832957110609, "obj2": 0.45515828386372037}, {"determining": "( Max( AMS,DDR ) - ( ( Const - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - Min( Max( MUC,CS ) ,CS ) )", "obj1": 0.39954853273137697, "obj2": 0.4860288885815784}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,MRS ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( Min( ( MUR - MLU ) ,( ( MLU + MUC ) / MUM ) ) - ( ( CS * Max( DS,RRSe ) ) / Min( CS ,MUR ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.4966139954853273, "obj2": 0.41834017228273596}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / MDR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.43340857787810383, "obj2": 0.47363138552828044}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - MDR ) - CRS ) * CRS ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ( FirstVNF_RAM_Server * ACS ) - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( RCSe ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) )", "obj1": 0.5146726862302483, "obj2": 0.40917447519059663}, {"determining": "( Max( ( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - ( CRS * ACS ) ) ) ) ) - FirstVNF_Mem_Server ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( MUM,MUR ) )", "obj1": 0.4108352144469526, "obj2": 0.4813223310541185}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( ( Const + Max( FirstVNF_CPU,BR ) ),DDR ) )", "choosing": "( ( MUR * ( Max( ( MUM / MLU ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.873589164785553, "obj2": 0.10613393962273243}, {"determining": "( Max( Min( AMS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( Max( Min( ACS ,( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) ,( RCSe + MLU ) )", "obj1": 0.708803611738149, "obj2": 0.2031783061133927}, {"determining": "Min( Min( MRS ,MDR ) ,( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe / Max( MUR,( MUR + MUR ) ) ),( ( MUM - CS ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.945823927765237, "obj2": 0.049813701368883606}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( MUR * ( RCSe / Max( ( MUM / MLU ),CS ) ) )", "obj1": 0.9593679458239278, "obj2": 0.041435895435105355}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( ( DS + ( MUR / ( DS + ( Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) + RMSe ) ) ) ) - ( MLU + CS ) ) - ( ( ( MLU + Min( ( MLU + MUM ) ,( MUM / RMSe ) ) ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.32505643340857787, "obj2": 0.5737931561640828}, {"determining": "( ( FirstVNF_Mem * ( Max( ( MRS - AMS ),PN ) + ARS ) ) - ( ( AMS / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( DS,CS ) ,CS ) * RRSe ) ,( ( ( ( MLU - ( MUC / MUR ) ) + ( MUC / ( CS - MUM ) ) ) + MUC ) + DS ) )", "obj1": 0.927765237020316, "obj2": 0.052353617880112634}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( Const * AMS ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( Max( MUC,CS ) ,CS ) * ( RCSe / RCSe ) ) ,Min( DS ,Max( ( Max( DS,RRSe ) / ( ( RMSe + ( RMSe * ( DS + MLU ) ) ) * Max( Min( DS ,RCSe ),CS ) ) ),( ( RMSe - RMSe ) + MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( Max( ( DDR * FirstVNF_RAM ),FirstVNF_CPU ) / ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( Min( Max( ( RCSe - RRSe ),RCSe ) ,CS ) + RMSe ) ,( DS - CS ) )", "obj1": 0.6772009029345373, "obj2": 0.25280512473203565}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server + AMS ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) / Const ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + ( Min( RCSe ,MLU ) - ( MLU + MUR ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46211277487340285}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),MUC ),( ( MLU * MUM ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_CPU_Server + BR ) ) * Max( FirstVNF_CPU,Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * Max( CS,( ( CS - ( CS / MUR ) ) + MLU ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4762979683972912, "obj2": 0.42979237118296376}, {"determining": "( ( FirstVNF_CPU / ( MRS - BR ) ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( Min( ( MUM - RRSe ) ,CS ) + RMSe ) ,( DS - CS ) )", "obj1": 0.6839729119638827, "obj2": 0.24320016783686182}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM - ( FirstVNF_RAM_Server + ACS ) ) / DDR ) )", "choosing": "Min( ( Min( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Max( MUC,CS ) ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.7065462753950339, "obj2": 0.21202178322317486}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * FirstVNF_Mem_Server )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + ( RCSe / RCSe ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.44469525959367945, "obj2": 0.4660887872406497}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * ( FirstVNF_CPU_Server - Const ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,( CS / RCSe ) ) ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29790344025200893}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.9142212189616253, "obj2": 0.05844057004437785}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( ( AMS * ( ( ( ARS * FirstVNF_CPU_Server ) / BR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ),FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - Min( ( CS * MUR ) ,DS ) ) ) ,( DS - CS ) ) * ( DS + ( Min( ( DS / RCSe ) ,MUC ) / RMSe ) ) )", "obj1": 0.9774266365688488, "obj2": 0.018792811590701567}, {"determining": "( ( ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) / ( ACS * Const ) ) - ( ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) - BR ) )", "choosing": "Max( Max( ( ( DS - MUM ) / Min( MUC ,RRSe ) ),MUC ),( Max( ( ( ( Max( Min( RMSe ,CS ),DS ) + Max( MUR,RRSe ) ) - RRSe ) * RCSe ),MUC ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( MUR * ( RCSe / RCSe ) ) * ( RCSe / RCSe ) )", "obj1": 0.9683972911963883, "obj2": 0.030880136982592177}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( CRS,( FirstVNF_CPU / ( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * ( ( MLU - CS ) + Min( RRSe ,( MLU - Min( ( MUR / RRSe ) ,MUR ) ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9841986455981941, "obj2": 0.007356290454903124}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( MUR * ( RCSe / RCSe ) )", "obj1": 0.9706546275395034, "obj2": 0.029927949533397114}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( Max( RRS,BR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( FirstVNF_RAM_Server - Const ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,RRSe ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( ( RRSe * MUC ) - RCSe ) ,MLU ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( Min( ( RCSe + MLU ) ,( MUC - RCSe ) ) + MUC ) + ( MUM * ( ( MUM + RCSe ) * MUC ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,CS ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( MLU - RRSe ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.7065462753950339, "obj2": 0.21202178322317486}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( CS * MUR ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( RRS / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - AMS ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( MUM ,Min( RCSe ,MLU ) ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,( MUR + ( ( Min( MUC ,DS ) + DS ) - DS ) ) ) )", "obj1": 0.9932279909706546, "obj2": 0.003156158741550882}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) * MLU ) ),( ( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) ) / Min( MUM ,RCSe ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( Max( Min( ARS ,( ( ( ( FirstVNF_Mem / Const ) / AMS ) - ( FirstVNF_Mem_Server / ACS ) ) + DDR ) ),( AMS / ( ARS / ( RRS + RRS ) ) ) ) - ( Const / ACS ) )", "choosing": "Min( ( Min( MLU ,( CS / MLU ) ) / ( RMSe - MUM ) ) ,Max( MUC,Min( DS ,( ( MUR + MUC ) * ( Max( RMSe,MLU ) + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + FirstVNF_CPU_Server ) / ( MRS / FirstVNF_CPU_Server ) ) - MRS ) / ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_Mem * BR ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),( CS - MUR ) ) / Min( MUC ,( CS - ( ( ( DS - DS ) + CS ) - RRSe ) ) ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( ( ARS + ARS ) + FirstVNF_CPU_Server ),MDR ) - MRS ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / Const ) + ( BR * AMS ) )", "choosing": "( CS + ( Max( MLU,MUC ) - ( MUM - Min( ( ( Max( RCSe,( RMSe - RMSe ) ) / ( ( DS - DS ) + DS ) ) - MUR ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( BR + MRS ) + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( RMSe,Min( ( RCSe + CS ) ,DS ) ) + RCSe ) + ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ,DDR ) * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( MLU,RMSe ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,ARS ) + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( ( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) ) + ( RMSe - Min( ( ( ( MUR * RMSe ) + MLU ) * MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Max( Min( AMS ,ARS ),FirstVNF_RAM_Server ) ) ) + ( ( ( RRS - ( FirstVNF_CPU / Min( ( BR - ( ARS - FirstVNF_RAM_Server ) ) ,RRS ) ) ) * Max( RRS,BR ) ) - ACS ) )", "choosing": "( Max( Min( MUR ,( ( ( Max( RCSe,( DS - RRSe ) ) - ( ( CS / MUM ) / MUM ) ) / RRSe ) / DS ) ),( ( RCSe / MUM ) + ( ( ( ( ( MLU + MUM ) - MUM ) / ( Max( MUR,RCSe ) + MLU ) ) - ( MUC * DS ) ) + ( Min( ( RRSe * DS ) ,Max( DS,MLU ) ) / Max( CS,Min( ( MUR / MLU ) ,Max( RMSe,MLU ) ) ) ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( Min( BR ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( ( Max( ( MUR * RRSe ),MUM ) + Min( ( ( CS * CS ) - MUM ) ,RMSe ) ) ,( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) * ( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,( DDR + MDR ) ) * Min( AMS ,ARS ) ) - ACS ) )", "choosing": "( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) - ( ( MUC - ( MUR - RRSe ) ) + ( DS - ( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RMSe * MUR ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,( DDR / PN ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / PN ) ) - AMS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( RCSe * ( RMSe - CS ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( Max( ( ACS + ACS ),RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) ,Min( ( Max( ( RRSe / ( ( RMSe - RMSe ) / RCSe ) ),RRSe ) - DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) ) + FirstVNF_Mem_Server ) ),( DDR * Const ) ) )", "choosing": "( ( Max( DS,( MLU - MUC ) ) * ( MLU + MUR ) ) / ( ( MUR + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( FirstVNF_CPU / ( ( ( BR - ( FirstVNF_CPU - MRS ) ) / ( BR * Max( ( FirstVNF_Mem_Server / ACS ),FirstVNF_CPU ) ) ) + MDR ) ) )", "choosing": "( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( ( ARS * DDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / MDR ) )", "choosing": "( ( Min( MUM ,( MLU / MLU ) ) - ( MUR - RRSe ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) ) + Min( ( ( Min( MUM ,( ( Max( MUC,MUC ) - RRSe ) + MLU ) ) + RMSe ) + Max( MUM,CS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - RRSe ) ,Max( ( ( MUR / CS ) * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( CRS + AMS ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - Min( MDR ,( ARS + DDR ) ) ) ) ,( ( FirstVNF_CPU * FirstVNF_Mem ) / DDR ) )", "choosing": "( ( DS / ( MUM * RRSe ) ) / ( ( MUC * ( DS - ( Min( Min( MLU ,CS ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - BR ),( ( FirstVNF_RAM_Server * ACS ) - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( AMS * ( ( ( ACS * Max( ( FirstVNF_Mem * FirstVNF_RAM ),ACS ) ) - ( CRS + Min( ACS ,( RRS * MRS ) ) ) ) * MRS ) ) - ACS ) )", "choosing": "( ( MLU + RRSe ) - Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem_Server ,PN ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - Max( DS,MUM ) ) ) ) * ( ( ( Min( ( ( MUC + MUR ) - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.600451467268623, "obj2": 0.24020606501303526}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - MLU ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) ) * MUR ) ,DS )", "obj1": 0.7674943566591422, "obj2": 0.12296937322571047}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( MUM - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5237020316027088, "obj2": 0.304126309595016}, {"determining": "( Max( Min( ACS ,( ( CRS - FirstVNF_Mem ) * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( DS + MUM ) + RRSe ) / Min( MUM ,( ( RRSe + RCSe ) * CS ) ) ) ) ,( DS - CS ) )", "obj1": 0.5214446952595937, "obj2": 0.3971875218830138}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / MRS ) + Max( ARS,Max( ARS,FirstVNF_Mem ) ) ) ,Min( ( Max( AMS,Const ) + ( FirstVNF_CPU / AMS ) ) ,Const ) ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( RCSe / Min( CS ,( MUR * CS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.6884875846501128, "obj2": 0.18654973059267968}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - ( CRS + FirstVNF_Mem_Server ) ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - Max( DS,MUM ) ) ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5598194130925508, "obj2": 0.29342435779239745}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) ,DS )", "obj1": 0.8171557562076749, "obj2": 0.11426832958279791}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) - RRSe ) )", "obj1": 0.26636568848758463, "obj2": 0.6516248126206576}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) )", "choosing": "Min( ( Min( ( MLU - Min( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.6794582392776524, "obj2": 0.23264037124247988}, {"determining": "Max( ( AMS * Min( Max( Max( ( FirstVNF_Mem_Server - ARS ),BR ),CRS ) ,Const ) ),( DDR / Min( MDR ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - ( DS + RCSe ) ) ,( DS - ( Min( ( DS - ( MLU + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( MUR * MUR ),( MUR * MUC ) ) )", "obj1": 0.35214446952595935, "obj2": 0.5356814654155777}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + MLU ) ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + MUC ) ) )", "obj1": 0.891647855530474, "obj2": 0.10023460296318695}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - Max( RRS,Const ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * ( MUR - ( RCSe / MUM ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.3002257336343115, "obj2": 0.6265534131851698}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / Min( CRS ,Const ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,( PN - ACS ) ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( Max( DS,( MUR - MUR ) ) - ( MLU + CS ) ) - ( ( ( MLU + RRSe ) / Min( ( DS + Max( CS,Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.33182844243792325, "obj2": 0.5639308004603044}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - Max( RRS,Const ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * ( MUR - ( RCSe / MUM ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2866817155756208, "obj2": 0.628044769528224}, {"determining": "Max( ( ( Min( RRS ,DDR ) * Max( Min( ( Max( FirstVNF_Mem_Server,( MDR * CRS ) ) + FirstVNF_CPU ) ,Min( ( FirstVNF_CPU / AMS ) ,MDR ) ),FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( ( Min( MUR ,MUC ) + RMSe ) - MLU ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + Min( ( MUR * MUC ) ,( MUM / MUM ) ) ) )", "obj1": 0.6817155756207675, "obj2": 0.23118887234458851}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( ( ( AMS * DDR ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 0.4717832957110609, "obj2": 0.45515828386372037}, {"determining": "( Max( AMS,DDR ) - ( ( Const - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - Min( Max( MUC,CS ) ,CS ) )", "obj1": 0.39954853273137697, "obj2": 0.4860288885815784}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( MUR * ( RCSe / Max( ( MUM / MLU ),CS ) ) )", "obj1": 0.9593679458239278, "obj2": 0.041435895435105355}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / MDR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.43340857787810383, "obj2": 0.47363138552828044}, {"determining": "( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server - MRS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( MLU + MUM ) - MUR ) - ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.49209932279909707, "obj2": 0.41226479902293756}, {"determining": "( Max( ( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - ( CRS * ACS ) ) ) ) ) - FirstVNF_Mem_Server ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( MUM,MUR ) )", "obj1": 0.4108352144469526, "obj2": 0.4813223310541185}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + CS ) ) )", "obj1": 0.8577878103837472, "obj2": 0.1120080024638213}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),MUC ),( ( MLU * MUM ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( Min( AMS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( ( DDR * RRS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MLU ) - MUR ) - RRSe ) ,( RMSe * MUR ) ) + RMSe ) ,Min( Min( MUC ,CS ) ,CS ) )", "obj1": 0.9300225733634312, "obj2": 0.0493672434240449}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( ( DS + ( MUR / ( DS + ( Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) + RMSe ) ) ) ) - ( MLU + CS ) ) - ( ( ( MLU + Min( ( MLU + MUM ) ,( MUM / RMSe ) ) ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.32505643340857787, "obj2": 0.5737931561640828}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server + AMS ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) / Const ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + ( Min( RCSe ,MLU ) - ( MLU + MUR ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46211277487340285}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_CPU_Server + BR ) ) * Max( FirstVNF_CPU,Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * Max( CS,( ( CS - ( CS / MUR ) ) + MLU ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4762979683972912, "obj2": 0.42979237118296376}, {"determining": "( ( ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) / ( ACS * Const ) ) - ( ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) - BR ) )", "choosing": "Max( Max( ( ( DS - MUM ) / Min( MUC ,RRSe ) ),MUC ),( Max( ( ( ( Max( Min( RMSe ,CS ),DS ) + Max( MUR,RRSe ) ) - RRSe ) * RCSe ),MUC ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "Min( Max( RRS,BR ) ,( Min( FirstVNF_Mem ,Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.871331828442438, "obj2": 0.10196457712866565}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * FirstVNF_Mem_Server )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + ( RCSe / RCSe ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.44469525959367945, "obj2": 0.4660887872406497}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29790344025200893}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM - ( ( Const * AMS ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( Max( MUC,CS ) ,CS ) * ( RCSe / RCSe ) ) ,Min( DS ,Max( ( Max( DS,RRSe ) / ( ( RMSe + ( RMSe * ( DS + MLU ) ) ) * Max( Min( DS ,RCSe ),CS ) ) ),( ( RMSe - RMSe ) + MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.06697621621223318}, {"determining": "( ( AMS * Max( ( FirstVNF_CPU - ( FirstVNF_Mem_Server * ( AMS / BR ) ) ),( MRS * FirstVNF_CPU_Server ) ) ) - Max( FirstVNF_CPU,( ARS / ( CRS - Min( FirstVNF_CPU_Server ,PN ) ) ) ) )", "choosing": "Min( ( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,Min( RMSe ,Min( Min( MUR ,( Max( RMSe,MUM ) + MLU ) ) ,Min( DS ,( ( RRSe / DS ) + ( RMSe / MUR ) ) ) ) ) ) * RRSe ) ,Min( DS ,MLU ) )", "obj1": 0.9142212189616253, "obj2": 0.05844057004437785}, {"determining": "( ( ( AMS * ( ( ( ARS * FirstVNF_CPU_Server ) / BR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ),FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - Min( ( CS * MUR ) ,DS ) ) ) ,( DS - CS ) ) * ( DS + ( Min( ( DS / RCSe ) ,MUC ) / RMSe ) ) )", "obj1": 0.9774266365688488, "obj2": 0.018792811590701567}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,MRS ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( Min( ( MUR - MLU ) ,( ( MLU + MUC ) / MUM ) ) - ( ( CS * Max( DS,RRSe ) ) / Min( CS ,MUR ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.5033860045146726, "obj2": 0.4061355871458721}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( ( Const + Max( FirstVNF_CPU,BR ) ),DDR ) )", "choosing": "( ( MUR * ( Max( ( MUM / MLU ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.8623024830699775, "obj2": 0.10725021997016052}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( CRS,( FirstVNF_CPU / ( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * ( ( MLU - CS ) + Min( RRSe ,( MLU - Min( ( MUR / RRSe ) ,MUR ) ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9841986455981941, "obj2": 0.007356290454903124}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( Max( RRS,BR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( FirstVNF_RAM_Server - Const ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,RRSe ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( ( RRSe * MUC ) - RCSe ) ,MLU ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( MUR * ( RCSe / RCSe ) )", "obj1": 0.9706546275395034, "obj2": 0.029927949533397114}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM_Server - Max( MRS,CRS ) ) ,MRS ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( Min( ( MUR - MLU ) ,( ( MLU + RRSe ) / MUM ) ) - ( ( CS * Max( DS,RRSe ) ) / Min( CS ,MUR ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.5033860045146726, "obj2": 0.4061355871458721}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( Max( FirstVNF_CPU,( ARS / ( CRS - MDR ) ) ),FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - Min( ( CS * MUR ) ,DS ) ) ) ,( DS - CS ) ) * ( Min( DS ,MLU ) / RCSe ) )", "obj1": 0.963882618510158, "obj2": 0.03317154870522511}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),( ( Max( Const,FirstVNF_Mem_Server ) + Max( Const,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( MUM ,( RCSe - MUM ) ) ,DS )", "obj1": 0.9232505643340858, "obj2": 0.05513717839411023}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * ( FirstVNF_CPU_Server - Const ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,( CS / RCSe ) ) ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29790344025200893}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,CS ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "( ( FirstVNF_Mem * ( Max( ( MRS - AMS ),PN ) + ARS ) ) - ( ( AMS / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( DS,CS ) ,CS ) * RRSe ) ,( ( ( ( MLU - ( MUC / MUR ) ) + ( MUC / ( CS - MUM ) ) ) + MUC ) + DS ) )", "obj1": 0.927765237020316, "obj2": 0.052353617880112634}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( ( Const - FirstVNF_Mem_Server ) / ACS ) - CRS ) * Min( AMS ,Min( ( FirstVNF_CPU_Server - MRS ) ,Min( RRS ,CRS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( MDR + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( MUC + ( MUR + ( RMSe - MUC ) ) ) + Min( ( MLU * RMSe ) ,Min( ( MLU * CS ) ,MLU ) ) ) - Max( ( CS / MUM ),DS ) ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( MUR * ( RCSe / RCSe ) ) * ( RCSe / RCSe ) )", "obj1": 0.9683972911963883, "obj2": 0.030880136982592177}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( CS * MUR ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( RRS / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - AMS ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( MUM ,Min( RCSe ,MLU ) ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,( MUR + ( ( Min( MUC ,DS ) + DS ) - DS ) ) ) )", "obj1": 0.9932279909706546, "obj2": 0.003156158741550882}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( CS - MUM ),( ( MUM - RRSe ) + CS ) ) )", "obj1": 0.8577878103837472, "obj2": 0.1120080024638213}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) * MLU ) ),( ( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) ) / Min( MUM ,RCSe ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( Min( DDR ,MDR ) * PN ) / Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe * Max( ( MUM * MUM ),DS ) ) ,( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ARS ,( ( ( ( FirstVNF_Mem / Const ) / AMS ) - ( FirstVNF_Mem_Server / ACS ) ) + DDR ) ),( AMS / ( ARS / ( RRS + RRS ) ) ) ) - ( Const / ACS ) )", "choosing": "Min( ( Min( MLU ,( CS / MLU ) ) / ( RMSe - MUM ) ) ,Max( MUC,Min( DS ,( ( MUR + MUC ) * ( Max( RMSe,MLU ) + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + FirstVNF_CPU_Server ) / ( MRS / FirstVNF_CPU_Server ) ) - MRS ) / ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_Mem * BR ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),( CS - MUR ) ) / Min( MUC ,( CS - ( ( ( DS - DS ) + CS ) - RRSe ) ) ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( ( ARS + ARS ) + FirstVNF_CPU_Server ),MDR ) - MRS ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / Const ) + ( BR * AMS ) )", "choosing": "( CS + ( Max( MLU,MUC ) - ( MUM - Min( ( ( Max( RCSe,( RMSe - RMSe ) ) / ( ( DS - DS ) + DS ) ) - MUR ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( BR + MRS ) + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( RMSe,Min( ( RCSe + CS ) ,DS ) ) + RCSe ) + ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ,DDR ) * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( MLU,RMSe ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,ARS ) + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( ( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) ) + ( RMSe - Min( ( ( ( MUR * RMSe ) + MLU ) * MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Max( Min( AMS ,ARS ),FirstVNF_RAM_Server ) ) ) + ( ( ( RRS - ( FirstVNF_CPU / Min( ( BR - ( ARS - FirstVNF_RAM_Server ) ) ,RRS ) ) ) * Max( RRS,BR ) ) - ACS ) )", "choosing": "( Max( Min( MUR ,( ( ( Max( RCSe,( DS - RRSe ) ) - ( ( CS / MUM ) / MUM ) ) / RRSe ) / DS ) ),( ( RCSe / MUM ) + ( ( ( ( ( MLU + MUM ) - MUM ) / ( Max( MUR,RCSe ) + MLU ) ) - ( MUC * DS ) ) + ( Min( ( RRSe * DS ) ,Max( DS,MLU ) ) / Max( CS,Min( ( MUR / MLU ) ,Max( RMSe,MLU ) ) ) ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( Min( BR ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( ( Max( ( MUR * RRSe ),MUM ) + Min( ( ( CS * CS ) - MUM ) ,RMSe ) ) ,( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) * ( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,( DDR + MDR ) ) * Min( AMS ,ARS ) ) - ACS ) )", "choosing": "( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) - ( ( MUC - ( MUR - RRSe ) ) + ( DS - ( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RMSe * MUR ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,( DDR / PN ) ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( PN + FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / PN ) ) - AMS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( RCSe * ( RMSe - CS ) ) ),MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( Max( ( ACS + ACS ),RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) ,Min( ( Max( ( RRSe / ( ( RMSe - RMSe ) / RCSe ) ),RRSe ) - DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) ) + FirstVNF_Mem_Server ) ),( DDR * Const ) ) )", "choosing": "( ( Max( DS,( MLU - MUC ) ) * ( MLU + MUR ) ) / ( ( MUR + CS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( FirstVNF_CPU / ( ( ( BR - ( FirstVNF_CPU - MRS ) ) / ( BR * Max( ( FirstVNF_Mem_Server / ACS ),FirstVNF_CPU ) ) ) + MDR ) ) )", "choosing": "( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( ( ARS * DDR ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / MDR ) )", "choosing": "( ( Min( MUM ,( MLU / MLU ) ) - ( MUR - RRSe ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) ) + Min( ( ( Min( MUM ,( ( Max( MUC,MUC ) - RRSe ) + MLU ) ) + RMSe ) + Max( MUM,CS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( ( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( MUR * ( RCSe / Max( ( MUM / MLU ),CS ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - BR ),( ( FirstVNF_RAM_Server * ACS ) - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem_Server ,PN ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - Max( DS,MUM ) ) ) ) * ( ( ( Min( ( ( MUC + MUR ) - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.600451467268623, "obj2": 0.24020606501303526}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * ( FirstVNF_CPU_Server - Const ) ) ) ) * Max( Min( ARS ,ARS ),( Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,MUC ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,( CS / RCSe ) ) ) ) )", "obj1": 0.5169300225733634, "obj2": 0.30847528568618193}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,MRS ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( Min( ( MUR - MLU ) ,( ( MLU + MUC ) / MUM ) ) - ( ( CS * Max( DS,RRSe ) ) / Min( CS ,MUR ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.5033860045146726, "obj2": 0.4061355871458721}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / MRS ) + Max( ARS,Max( ARS,FirstVNF_Mem ) ) ) ,Min( ( Max( AMS,Const ) + ( FirstVNF_CPU / AMS ) ) ,Const ) ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( RCSe / Min( CS ,( MUR * CS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.6884875846501128, "obj2": 0.18654973059267968}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - ( CRS + FirstVNF_Mem_Server ) ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - Max( DS,MUM ) ) ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5598194130925508, "obj2": 0.29342435779239745}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) ,DS )", "obj1": 0.8171557562076749, "obj2": 0.11426832958279791}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) - RRSe ) )", "obj1": 0.26636568848758463, "obj2": 0.6516248126206576}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) )", "choosing": "Min( ( Min( ( MLU - Min( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.6794582392776524, "obj2": 0.23264037124247988}, {"determining": "( ( ( Max( Min( ACS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( Min( ( MLU - ( DS + MUM ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) ) * MUR ) ,DS )", "obj1": 0.7562076749435666, "obj2": 0.13030979357139627}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RCSe * Max( RMSe,CS ) ) / DS ) / ( CS * RMSe ) ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.90744920993228, "obj2": 0.05392289058154556}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - MLU ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) ) * MUR ) ,DS )", "obj1": 0.7674943566591422, "obj2": 0.12296937322571047}, {"determining": "( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( ( MUC + MUR ) + Max( RMSe,CS ) ) )", "obj1": 0.8826185101580135, "obj2": 0.08466838586923041}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( ( Const / ( FirstVNF_RAM_Server + Const ) ) - ( MRS + Min( FirstVNF_RAM ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ) - ( ( ( ( ACS * AMS ) * DDR ) - Const ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * Min( Max( CS,( MLU + Max( ( RRSe + DS ),DS ) ) ) ,RCSe ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.3182844243792325, "obj2": 0.6240267761473877}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Max( ( ( Min( RRS ,DDR ) * Max( Min( ( Max( FirstVNF_Mem_Server,( MDR * CRS ) ) + FirstVNF_CPU ) ,Min( ( FirstVNF_CPU / AMS ) ,MDR ) ),FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( ( Min( MUR ,MUC ) + RMSe ) - MLU ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + Min( ( MUR * MUC ) ,( MUM / MUM ) ) ) )", "obj1": 0.6817155756207675, "obj2": 0.23118887234458851}, {"determining": "( Min( MRS ,( Min( ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server / ( MDR + Max( PN,AMS ) ) ) ) ,( DDR + MDR ) ) / FirstVNF_RAM ) ) - ( ( Const + ( ( ( AMS * DDR ) - FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( RRSe ,MLU ) + ( DS - Min( Min( ( Min( Min( Max( RCSe,RRSe ) ,DS ) ,MUC ) - Max( ( RCSe * MLU ),( RRSe * CS ) ) ) ,MUC ) ,MUR ) ) )", "obj1": 0.4717832957110609, "obj2": 0.45515828386372037}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - Max( RRS,Const ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * ( MUR - ( RCSe / MUM ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2866817155756208, "obj2": 0.628044769528224}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / Min( CRS ,Const ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,( PN - ACS ) ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( Max( DS,( MUR - MUR ) ) - ( MLU + CS ) ) - ( ( ( MLU + RRSe ) / Min( ( DS + Max( CS,Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.33182844243792325, "obj2": 0.5639308004603044}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / MDR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.43340857787810383, "obj2": 0.47363138552828044}, {"determining": "( Max( ( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - ( CRS * ACS ) ) ) ) ) - FirstVNF_Mem_Server ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( MUM,MUR ) )", "obj1": 0.4108352144469526, "obj2": 0.4813223310541185}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + CS ) ) )", "obj1": 0.8577878103837472, "obj2": 0.1120080024638213}, {"determining": "Max( ( AMS * Min( Max( Max( MDR,BR ),CRS ) ,Const ) ),( DDR / Min( Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( ( AMS + ARS ) + ( MDR + MDR ) ) ) ),AMS ) ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Min( ( DS - MUM ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( Max( RMSe,MUM ),( MUR * MUC ) ) )", "obj1": 0.3431151241534989, "obj2": 0.5433123248573488}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( MUM - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5237020316027088, "obj2": 0.304126309595016}, {"determining": "( ( ( AMS * DDR ) - ( Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( Max( FirstVNF_CPU,( ARS / ( CRS - MDR ) ) ),FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ,( DS - CS ) ) * ( Min( DS ,MLU ) / RCSe ) )", "obj1": 0.945823927765237, "obj2": 0.04040838522062965}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( ( DS + ( MUR / ( DS + ( Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) + RMSe ) ) ) ) - ( MLU + CS ) ) - ( ( ( MLU + Min( ( MLU + MUM ) ,( MUM / RMSe ) ) ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.32505643340857787, "obj2": 0.5737931561640828}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + ( ( Min( PN ,FirstVNF_Mem ) - PN ) / DDR ) ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( Min( MUC ,( MUR - RCSe ) ) * RMSe ) / ( CS * RMSe ) )", "obj1": 0.3972911963882618, "obj2": 0.4915041302428602}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server + AMS ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) / Const ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + ( Min( RCSe ,MLU ) - ( MLU + MUR ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46211277487340285}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_CPU_Server + BR ) ) * Max( FirstVNF_CPU,Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * Max( CS,( ( CS - ( CS / MUR ) ) + MLU ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4762979683972912, "obj2": 0.42979237118296376}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM + DDR ) ,DDR ) ) ) ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( RCSe - RRSe ) - RRSe ) )", "obj1": 0.291196388261851, "obj2": 0.6246614177626565}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * FirstVNF_Mem_Server )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + ( RCSe / RCSe ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.44469525959367945, "obj2": 0.4660887872406497}, {"determining": "( ( ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) / ( ACS * Const ) ) - ( ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) - BR ) )", "choosing": "Max( Max( ( ( DS - MUM ) / Min( MUC ,RRSe ) ),MUC ),( Max( ( ( ( Max( Min( RMSe ,CS ),DS ) + Max( MUR,RRSe ) ) - RRSe ) * RCSe ),MUC ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) * Max( ( Const + Max( FirstVNF_CPU,BR ) ),DDR ) )", "choosing": "( ( MUR * ( Max( Max( ( ( DS - MUM ) / Min( MUC ,RRSe ) ),MUC ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.9548532731376975, "obj2": 0.03174536837247007}, {"determining": "( Max( Min( AMS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29790344025200893}, {"determining": "( ( ( ( RRS + FirstVNF_Mem_Server ) / ( MDR * FirstVNF_Mem ) ) / FirstVNF_CPU ) / FirstVNF_RAM )", "choosing": "Min( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( CS + ( RMSe / DS ) ) + RRSe ) / Min( MUM ,RCSe ) ) ) ,( DS - CS ) )", "obj1": 0.4898419864559819, "obj2": 0.4114475220519206}, {"determining": "( ( ( ( DDR * RRS ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MLU ) - MUR ) - RRSe ) ,( RMSe * MUR ) ) + RMSe ) ,Min( Min( MUC ,CS ) ,CS ) )", "obj1": 0.9300225733634312, "obj2": 0.0493672434240449}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Const )", "choosing": "( ( MUR * ( Max( ( MUM / CS ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.8758465011286681, "obj2": 0.08662274965439576}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( AMS - ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( FirstVNF_CPU,Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( Min( ( RCSe + MLU ) ,( MUM - RCSe ) ) + MUC ) + Max( ( MUR - MUM ),RMSe ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4853273137697517, "obj2": 0.4186088533753367}, {"determining": "Min( Max( RRS,BR ) ,( Min( FirstVNF_Mem ,Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.871331828442438, "obj2": 0.10196457712866565}, {"determining": "( ( FirstVNF_Mem * ( Max( ( MRS - AMS ),PN ) + ARS ) ) - ( ( AMS / FirstVNF_CPU ) * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( DS,CS ) ,CS ) * RRSe ) ,( ( ( ( MLU - ( MUC / MUR ) ) + ( MUC / ( CS - MUM ) ) ) + MUC ) + DS ) )", "obj1": 0.927765237020316, "obj2": 0.052353617880112634}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),MUC ),( ( MLU * MUM ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "Max( ( AMS * Min( Max( Max( ( FirstVNF_Mem_Server - ARS ),BR ),CRS ) ,Const ) ),( DDR / Min( MDR ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - ( DS + RCSe ) ) ,( DS - ( Min( ( DS - ( MLU + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( MUR * MUR ),( MUR * MUC ) ) )", "obj1": 0.34988713318284426, "obj2": 0.5339745809084305}, {"determining": "( ( ( AMS * ( ( ( ARS * FirstVNF_CPU_Server ) / BR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ),FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - Min( ( CS * MUR ) ,DS ) ) ) ,( DS - CS ) ) * ( DS + ( Min( ( DS / RCSe ) ,MUC ) / RMSe ) ) )", "obj1": 0.9774266365688488, "obj2": 0.018792811590701567}, {"determining": "( Max( AMS,DDR ) - ( ( Const - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - Min( Max( MUC,CS ) ,CS ) )", "obj1": 0.39954853273137697, "obj2": 0.4860288885815784}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( MUR * ( RCSe / RCSe ) )", "obj1": 0.9706546275395034, "obj2": 0.029927949533397114}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - Max( MRS,CRS ) ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server * PN ) / DDR ) ) ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( MUR * ( RCSe / Max( ( MUC / MLU ),CS ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.5033860045146726, "obj2": 0.4061355871458721}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( ( Const + Max( FirstVNF_CPU,BR ) ),DDR ) )", "choosing": "( ( MUR * ( Max( ( MUM / MLU ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.8623024830699775, "obj2": 0.10725021997016052}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( MUR * ( RCSe / RCSe ) ) * ( RCSe / RCSe ) )", "obj1": 0.9683972911963883, "obj2": 0.030880136982592177}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( CRS,( FirstVNF_CPU / ( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * ( ( MLU - CS ) + Min( RRSe ,( MLU - Min( ( MUR / RRSe ) ,MUR ) ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9841986455981941, "obj2": 0.007356290454903124}, {"determining": "Max( ( AMS * Min( Max( Max( ( PN / FirstVNF_RAM ),BR ),CRS ) ,Const ) ),( Min( FirstVNF_CPU_Server ,CRS ) - ( ACS / ARS ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Min( ( DS - ( RMSe + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( ( MUM - Max( ( ( ( MLU * MUR ) + ( DS / RMSe ) ) - RRSe ),Max( DS,( RMSe + MLU ) ) ) ) * ( Max( DS,RRSe ) - MUC ) ),( MUR * MUC ) ) )", "obj1": 0.345372460496614, "obj2": 0.5346268654401714}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * ( FirstVNF_CPU_Server - Const ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,( CS / RCSe ) ) ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29790344025200893}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( Max( RRS,BR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( FirstVNF_RAM_Server - Const ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,RRSe ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( ( RRSe * MUC ) - RCSe ) ,MLU ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "Min( Max( RRS,Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ) ,( Min( FirstVNF_Mem ,Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - Max( ( ( MUM + MLU ) - RRSe ),Min( MLU ,MLU ) ) ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.8668171557562077, "obj2": 0.1036466628266138}, {"determining": "Max( ( AMS * Min( Max( Max( MDR,BR ),CRS ) ,Const ) ),( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) / Min( MDR ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Min( ( DS - ( MUC + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( MUR * MUR ),( MUR * MUC ) ) )", "obj1": 0.34988713318284426, "obj2": 0.5339745809084305}, {"determining": "( Max( Min( Max( RRS,BR ) ,( CRS - FirstVNF_RAM ) ),BR ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( ( Max( ( MUC * MUR ),DS ) * ( ( MLU - Min( ( MLU + MUM ) ,( MUM / RMSe ) ) ) + Min( RRSe ,( MLU - MUR ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9887133182844243, "obj2": 0.006838142083566847}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( CS * MUR ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( RRS / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - AMS ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( MUM ,Min( RCSe ,MLU ) ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,( MUR + ( ( Min( MUC ,DS ) + DS ) - DS ) ) ) )", "obj1": 0.9932279909706546, "obj2": 0.003156158741550882}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,CS ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( CS - MUM ),( ( MUM - RRSe ) + CS ) ) )", "obj1": 0.8577878103837472, "obj2": 0.1120080024638213}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( ( Const - FirstVNF_Mem_Server ) / ACS ) - CRS ) * Min( AMS ,Min( ( FirstVNF_CPU_Server - MRS ) ,Min( RRS ,CRS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( MDR + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( MUC + ( MUR + ( RMSe - MUC ) ) ) + Min( ( MLU * RMSe ) ,Min( ( MLU * CS ) ,MLU ) ) ) - Max( ( CS / MUM ),DS ) ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) * MLU ) ),( ( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) ) / Min( MUM ,RCSe ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( AMS * ( ( ( ACS * Max( ( FirstVNF_Mem * FirstVNF_RAM ),ACS ) ) - ( CRS + Min( ACS ,( RRS * MRS ) ) ) ) * MRS ) ) - ACS ) )", "choosing": "( ( MLU + RRSe ) - Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * PN ) / Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe * Max( ( MUM * MUM ),DS ) ) ,( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ARS ,( ( ( ( FirstVNF_Mem / Const ) / AMS ) - ( FirstVNF_Mem_Server / ACS ) ) + DDR ) ),( AMS / ( ARS / ( RRS + RRS ) ) ) ) - ( Const / ACS ) )", "choosing": "Min( ( Min( MLU ,( CS / MLU ) ) / ( RMSe - MUM ) ) ,Max( MUC,Min( DS ,( ( MUR + MUC ) * ( Max( RMSe,MLU ) + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN + FirstVNF_CPU_Server ) / ( MRS / FirstVNF_CPU_Server ) ) - MRS ) / ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_Mem * BR ) ) )", "choosing": "Max( ( Max( Max( DS,MUC ),( CS - MUR ) ) / Min( MUC ,( CS - ( ( ( DS - DS ) + CS ) - RRSe ) ) ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ( ( ARS + ARS ) + FirstVNF_CPU_Server ),MDR ) - MRS ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) / Const ) + ( BR * AMS ) )", "choosing": "( CS + ( Max( MLU,MUC ) - ( MUM - Min( ( ( Max( RCSe,( RMSe - RMSe ) ) / ( ( DS - DS ) + DS ) ) - MUR ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( ( BR + MRS ) + RRS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( Max( RMSe,Min( ( RCSe + CS ) ,DS ) ) + RCSe ) + ( MLU * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ,DDR ) * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( MLU,RMSe ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,ARS ) + ( FirstVNF_RAM / Max( Const,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( ( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) ) + ( RMSe - Min( ( ( ( MUR * RMSe ) + MLU ) * MUM ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * Max( Min( AMS ,ARS ),FirstVNF_RAM_Server ) ) ) + ( ( ( RRS - ( FirstVNF_CPU / Min( ( BR - ( ARS - FirstVNF_RAM_Server ) ) ,RRS ) ) ) * Max( RRS,BR ) ) - ACS ) )", "choosing": "( Max( Min( MUR ,( ( ( Max( RCSe,( DS - RRSe ) ) - ( ( CS / MUM ) / MUM ) ) / RRSe ) / DS ) ),( ( RCSe / MUM ) + ( ( ( ( ( MLU + MUM ) - MUM ) / ( Max( MUR,RCSe ) + MLU ) ) - ( MUC * DS ) ) + ( Min( ( RRSe * DS ) ,Max( DS,MLU ) ) / Max( CS,Min( ( MUR / MLU ) ,Max( RMSe,MLU ) ) ) ) ) ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( Min( BR ,FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUR ,Min( ( Max( ( MUR * RRSe ),MUM ) + Min( ( ( CS * CS ) - MUM ) ,RMSe ) ) ,( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) * ( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( Min( ( FirstVNF_CPU_Server * RRS ) ,( DDR + MDR ) ) * Min( AMS ,ARS ) ) - ACS ) )", "choosing": "( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) - ( ( MUC - ( MUR - RRSe ) ) + ( DS - ( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Min( DDR ,MDR ) * PN ) / Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) )", "choosing": "Min( ( RRSe * Max( ( MUM * MUM ),DS ) ) ,( Min( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) ,( DS - CS ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( MUR * ( RCSe / Max( ( MUM / MLU ),CS ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,MRS ) * ( FirstVNF_CPU_Server + ( CRS / PN ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( DS / DS ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "( ( Min( Max( Max( MDR,BR ),CRS ) ,Const ) - MDR ) / Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + RMSe ) ) ) ,( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,CS ) - CS ) )", "obj1": 0.5056433408577878, "obj2": 0.3907769906174513}, {"determining": "( Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - Max( DS,MUM ) ) ) ) * ( ( ( Min( ( RRSe - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5146726862302483, "obj2": 0.30719313872054044}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,Min( DS ,MLU ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5598194130925508, "obj2": 0.28104522734072496}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( ( MLU + RRSe ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) ,DS )", "obj1": 0.8171557562076749, "obj2": 0.11426832958279791}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( Min( FirstVNF_Mem_Server ,PN ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - Max( DS,MUM ) ) ) ) * ( ( ( Min( ( ( MUC + MUR ) - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.600451467268623, "obj2": 0.24020606501303526}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( RMSe - Min( ( Min( RMSe ,MUC ) * MLU ) ,( ( MLU * MUM ) / RCSe ) ) ) - RRSe ) - RRSe ) )", "obj1": 0.26636568848758463, "obj2": 0.6516248126206576}, {"determining": "( ( Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( BR * RRS ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / ( ( DS + MUM ) - MLU ) ) ) * ( ( ( Min( ( ( MUC + MUR ) - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.6117381489841986, "obj2": 0.23799317857574215}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RCSe * Max( RMSe,CS ) ) / DS ) / ( CS * RMSe ) ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.90744920993228, "obj2": 0.05392289058154556}, {"determining": "( ( ( Max( Min( ACS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( Min( ( MLU - ( DS + MUM ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) ) * MUR ) ,DS )", "obj1": 0.7562076749435666, "obj2": 0.13030979357139627}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( ( Min( ( MLU - ( Min( ( MLU - RRSe ) ,( DS - CS ) ) - MLU ) ) ,( DS - CS ) ) * ( RCSe / RCSe ) ) * MUR ) ,DS )", "obj1": 0.7674943566591422, "obj2": 0.12296937322571047}, {"determining": "Max( ( FirstVNF_RAM - FirstVNF_CPU ),( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) )", "choosing": "Min( ( Min( ( MLU - Min( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + MLU ) )", "obj1": 0.6794582392776524, "obj2": 0.23264037124247988}, {"determining": "( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( ( MUC + MUR ) + Max( RMSe,CS ) ) )", "obj1": 0.8826185101580135, "obj2": 0.08466838586923041}, {"determining": "Max( ( AMS * Min( Max( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,MRS ) ),CRS ) ,Const ) ),( Min( FirstVNF_CPU_Server ,CRS ) - ( ACS / ARS ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( ( Max( MUC,MUM ) + MLU ) ,MLU ) ) - RRSe ) ,( DS - ( Min( ( DS - ( RMSe + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ),( MUR * MUC ) ) )", "obj1": 0.3182844243792325, "obj2": 0.6131891757910471}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( BR,FirstVNF_Mem_Server ) ) ) ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( RCSe / Min( CS ,MLU ) ) + ( DS + Max( CS,Max( CS,RRSe ) ) ) ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.7223476297968398, "obj2": 0.18223520081683478}, {"determining": "( ( Min( Min( ACS ,Const ) ,( ( PN + DDR ) * FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) )", "choosing": "Min( Min( MUR ,Max( RCSe,( RCSe + ( Min( ( RRSe * CS ) ,Min( MUC ,DS ) ) / MLU ) ) ) ) ,( ( Min( Min( DS ,( RCSe / RCSe ) ) ,RRSe ) + MUR ) - RMSe ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( Max( Max( ( PN / FirstVNF_RAM ),BR ),CRS ) * ( FirstVNF_CPU_Server - Const ) ) ) ) * Max( Min( ARS ,ARS ),( Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,MUC ) + RRSe ) - RRSe ) - ( RRSe / MUC ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,( CS / RCSe ) ) ) ) )", "obj1": 0.5507900677200903, "obj2": 0.29105006153899526}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / MRS ) + Max( ARS,Max( ARS,FirstVNF_Mem ) ) ) ,Min( ( Max( AMS,Const ) + ( FirstVNF_CPU / AMS ) ) ,Const ) ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( RCSe / Min( CS ,( MUR * CS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.6862302483069977, "obj2": 0.19181186968802305}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - Max( RRS,Const ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( ( RCSe * ( MUR - ( RCSe / MUM ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2866817155756208, "obj2": 0.628044769528224}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( ( ( Const - FirstVNF_Mem_Server ) / ACS ) - CRS ) * Min( AMS ,Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( RRS ,CRS ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( MDR + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( MUM ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4582392776523702, "obj2": 0.4446071830648404}, {"determining": "( ( AMS * ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( MUM ,Min( RCSe ,Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) ) ) ,DS )", "obj1": 0.927765237020316, "obj2": 0.0481032906164571}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / Min( CRS ,Const ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,( PN - ACS ) ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( Max( DS,( MUR - MUR ) ) - ( MLU + CS ) ) - ( ( ( MLU + RRSe ) / Min( ( DS + Max( CS,Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.33182844243792325, "obj2": 0.5639308004603044}, {"determining": "( Max( ARS,MRS ) * ( DDR / ( Min( ( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_RAM + DDR ) ,DDR ) ) ) ,ACS ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( RCSe - RRSe ) - RRSe ) )", "obj1": 0.291196388261851, "obj2": 0.6246614177626565}, {"determining": "( Max( ( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - ( CRS * ACS ) ) ) ) ) - FirstVNF_Mem_Server ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,Max( MUM,MUR ) )", "obj1": 0.4108352144469526, "obj2": 0.4813223310541185}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / MRS ) + Max( ARS,Max( ARS,FirstVNF_Mem ) ) ) ,Min( ( Max( AMS,Const ) + ( FirstVNF_CPU / AMS ) ) ,Const ) ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( RCSe / Min( CS ,( MUR * CS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.6884875846501128, "obj2": 0.18654973059267968}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( MUC - MUM ),( ( MUM - RRSe ) + CS ) ) )", "obj1": 0.8577878103837472, "obj2": 0.1120080024638213}, {"determining": "Max( ( AMS * Min( Max( Max( ( FirstVNF_Mem_Server - ARS ),BR ),CRS ) ,Const ) ),( DDR / Min( MDR ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - ( DS + RCSe ) ) ,( DS - ( Min( ( DS - ( MLU + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( MUR * MUR ),( MUR * MUC ) ) )", "obj1": 0.3363431151241535, "obj2": 0.5398854898361067}, {"determining": "Max( ( ( Min( RRS ,DDR ) * Max( Min( ( Max( FirstVNF_Mem_Server,( MDR * CRS ) ) + FirstVNF_CPU ) ,Min( ( FirstVNF_CPU / AMS ) ,MDR ) ),FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( ( Min( MUR ,MUC ) + RMSe ) - MLU ) ,( DS - CS ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + Min( ( MUR * MUC ) ,( MUM / MUM ) ) ) )", "obj1": 0.6817155756207675, "obj2": 0.23118887234458851}, {"determining": "( ( ( AMS * DDR ) - ( Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( Max( FirstVNF_CPU,( ARS / ( CRS - MDR ) ) ),FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ,( DS - CS ) ) * ( Min( DS ,MLU ) / RCSe ) )", "obj1": 0.945823927765237, "obj2": 0.04040838522062965}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / MDR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.43340857787810383, "obj2": 0.47363138552828044}, {"determining": "( Max( Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ),( FirstVNF_RAM_Server + ACS ) ) * Min( ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ,BR ) )", "choosing": "( ( ( DS + ( MUR / ( DS + ( Min( ( MLU * RMSe ) ,Min( MLU ,MLU ) ) + RMSe ) ) ) ) - ( MLU + CS ) ) - ( ( ( MLU + Min( ( MLU + MUM ) ,( MUM / RMSe ) ) ) / Min( ( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) ,RCSe ) ) + ( DS + RMSe ) ) )", "obj1": 0.32505643340857787, "obj2": 0.5737931561640828}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * ( FirstVNF_CPU_Server - Const ) ) ) ) * Max( Min( ARS ,ARS ),( Max( AMS,Min( ( FirstVNF_CPU_Server / RRS ) ,( AMS * MDR ) ) ) / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * ( RRS / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( RCSe ,MLU ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,( CS / RCSe ) ) ) ) )", "obj1": 0.47404063205417607, "obj2": 0.42900974714172196}, {"determining": "( ( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + ( ( Min( PN ,FirstVNF_Mem ) - PN ) / DDR ) ) ) ) - ( Min( Const ,ARS ) / ( RRS - CRS ) ) )", "choosing": "( ( Min( MUC ,( MUR - RCSe ) ) * RMSe ) / ( CS * RMSe ) )", "obj1": 0.3972911963882618, "obj2": 0.4915041302428602}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server + AMS ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) / Const ) ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) ) ) - MLU ) ,( DS + ( Min( RCSe ,MLU ) - ( MLU + MUR ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46211277487340285}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( RRS - PN ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( Max( ( ( RMSe / MUR ) - Max( RCSe,DS ) ),MLU ) * Min( RMSe ,Min( RCSe ,( MUR * DS ) ) ) ) * ( RRSe / MLU ) ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5138097931054012}, {"determining": "( Max( AMS,DDR ) - ( Max( Const,FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( RMSe + RRSe ) / Min( MUM ,RCSe ) ) ) - Min( Max( MUC,CS ) ,CS ) )", "obj1": 0.35891647855530473, "obj2": 0.517286218404168}, {"determining": "( ( ( ( RRS + FirstVNF_Mem_Server ) / ( MDR * FirstVNF_Mem ) ) / FirstVNF_CPU ) / FirstVNF_RAM )", "choosing": "Min( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( CS + ( RMSe / DS ) ) + RRSe ) / Min( MUM ,RCSe ) ) ) ,( DS - CS ) )", "obj1": 0.4898419864559819, "obj2": 0.4114475220519206}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( MUM - CS ) ,RCSe ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5237020316027088, "obj2": 0.304126309595016}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,MRS ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( Min( ( MUR - MLU ) ,( ( MLU + MUC ) / MUM ) ) - ( ( CS * Max( DS,RRSe ) ) / Min( CS ,MUR ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.5033860045146726, "obj2": 0.4061355871458721}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Const )", "choosing": "( ( MUR * ( Max( ( MUM / CS ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.8758465011286681, "obj2": 0.08662274965439576}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( AMS - ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( FirstVNF_CPU,Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( Min( ( RCSe + MLU ) ,( MUM - RCSe ) ) + MUC ) + Max( ( MUR - MUM ),RMSe ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.4853273137697517, "obj2": 0.4186088533753367}, {"determining": "( Max( Min( AMS ,( RRS * MRS ) ),FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,Min( CS ,DS ) ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( Max( RRS,BR ) ,( Min( FirstVNF_Mem ,Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - Max( ( RMSe - RRSe ),Min( MLU ,MLU ) ) ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.871331828442438, "obj2": 0.10196457712866565}, {"determining": "( ( ( Const + ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) / ( ACS * Const ) ) - ( ( BR * Min( CRS ,FirstVNF_RAM_Server ) ) - BR ) )", "choosing": "Max( Max( ( ( DS - MUM ) / Min( MUC ,RRSe ) ),MUC ),( Max( ( ( ( Max( Min( RMSe ,CS ),DS ) + Max( MUR,RRSe ) ) - RRSe ) * RCSe ),MUC ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( AMS * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "( MUR * ( RCSe / RCSe ) )", "obj1": 0.9706546275395034, "obj2": 0.029927949533397114}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( ( ARS / ARS ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) * Max( ( Const + Max( FirstVNF_CPU,BR ) ),DDR ) )", "choosing": "( ( MUR * ( Max( Max( ( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) ),MUC ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.9729119638826185, "obj2": 0.018298957846114853}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) ) * Max( ( Const + Max( FirstVNF_CPU,BR ) ),DDR ) )", "choosing": "( ( MUR * ( Max( Max( ( ( DS - MUM ) / Min( MUC ,RRSe ) ),MUC ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.9548532731376975, "obj2": 0.03174536837247007}, {"determining": "( Max( AMS,DDR ) - ( ( Const - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - Min( Max( MUC,CS ) ,CS ) )", "obj1": 0.39954853273137697, "obj2": 0.4860288885815784}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( AMS ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Max( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ),Max( MRS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( MUM - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + RRSe ) - RRSe ) - RRSe ) ) ,( ( DS / MUC ) * ( RCSe / RCSe ) ) )", "obj1": 0.5237020316027088, "obj2": 0.304126309595016}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * FirstVNF_Mem_Server )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + ( RCSe / RCSe ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.44469525959367945, "obj2": 0.4660887872406497}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),MUC ),( ( MLU * MUM ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "Max( ( AMS * Min( Max( Max( ( FirstVNF_Mem_Server - ARS ),BR ),CRS ) ,Const ) ),( DDR / Min( MDR ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - ( DS + RCSe ) ) ,( DS - ( Min( ( DS - ( MLU + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( MUR * MUR ),( MUR * MUC ) ) )", "obj1": 0.34988713318284426, "obj2": 0.5339745809084305}, {"determining": "Max( ( AMS * Min( Max( Max( ( PN / FirstVNF_RAM ),BR ),CRS ) ,Const ) ),( Min( FirstVNF_CPU_Server ,CRS ) - ( ACS / ARS ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Min( ( DS - ( RMSe + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( ( MUM - Max( ( ( ( MLU * MUR ) + ( DS / RMSe ) ) - RRSe ),Max( DS,( RMSe + MLU ) ) ) ) * ( Max( DS,RRSe ) - MUC ) ),( MUR * MUC ) ) )", "obj1": 0.345372460496614, "obj2": 0.5346268654401714}, {"determining": "( Max( ( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) - FirstVNF_Mem_Server ),( ARS * CRS ) ) + ( Max( ( ACS / CRS ),FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( RCSe - CS ) ,( RMSe / CS ) )", "obj1": 0.44243792325056436, "obj2": 0.47091997072388536}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * DDR ) - ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( ( Const + Max( FirstVNF_CPU,BR ) ),DDR ) )", "choosing": "( ( MUR * ( Max( ( MUM / MLU ),CS ) / RCSe ) ) * Min( RMSe ,MLU ) )", "obj1": 0.8623024830699775, "obj2": 0.10725021997016052}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( Max( RRS,BR ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( ( FirstVNF_RAM_Server - Const ) ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,RRSe ) * ( ( ( Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) + Min( ( ( RRSe * MUC ) - RCSe ) ,MLU ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( ( AMS * DDR ) - ( Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) / ARS ) ) ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) * Max( Max( FirstVNF_CPU,( ARS / ( CRS - MDR ) ) ),FirstVNF_CPU ) )", "choosing": "( Min( ( MLU - Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,Max( Max( ( RMSe * CS ),MUC ),( ( MLU * MUM ) / Min( MUM ,RCSe ) ) ) ) ) ,( DS - CS ) ) * ( Min( DS ,MLU ) / RCSe ) )", "obj1": 0.9593679458239278, "obj2": 0.030164003000190735}, {"determining": "( Max( Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),BR ) - Max( CRS,( FirstVNF_CPU / ( DDR - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU * ( ( MLU - CS ) + Min( RRSe ,( MLU - Min( ( MUR / RRSe ) ,MUR ) ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9841986455981941, "obj2": 0.007356290454903124}, {"determining": "Min( Max( RRS,Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ) ,( Min( FirstVNF_Mem ,Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) )", "choosing": "( Max( RRSe,( ( RRSe - Max( ( ( MUM + MLU ) - RRSe ),Min( MLU ,MLU ) ) ) * MUC ) ) + Min( RRSe ,RMSe ) )", "obj1": 0.8668171557562077, "obj2": 0.1036466628266138}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( CS * MUR ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( Max( Min( Max( RRS,BR ) ,( CRS - FirstVNF_RAM ) ),BR ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "( ( ( Max( ( MUC * MUR ),DS ) * ( ( MLU - Min( ( MLU + MUM ) ,( MUM / RMSe ) ) ) + Min( RRSe ,( MLU - MUR ) ) ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9887133182844243, "obj2": 0.006838142083566847}, {"determining": "Max( ( AMS * Min( Max( Max( MDR,BR ),CRS ) ,Const ) ),( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( ( Min( ( ACS / ACS ) ,Min( FirstVNF_Mem ,Const ) ) - CRS ) * Min( AMS ,Min( FirstVNF_Mem ,Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ) ) ) ) ) / Min( MDR ,MDR ) ) )", "choosing": "Min( ( Min( ( ( RCSe / Min( CS ,MLU ) ) - RRSe ) ,( DS - ( Min( ( DS - ( MUC + MUC ) ) ,MUR ) - Min( MLU ,( RRSe / MUC ) ) ) ) ) - MLU ) ,Max( ( MUR * MUR ),( MUR * MUC ) ) )", "obj1": 0.34988713318284426, "obj2": 0.5339745809084305}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,( MUR + ( ( Min( MUC ,DS ) + DS ) - DS ) ) ) )", "obj1": 0.9932279909706546, "obj2": 0.003156158741550882}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / Max( ACS,( ( ( RRS / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - AMS ) - FirstVNF_Mem ) ) ) ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( MUM ,Min( RCSe ,MLU ) ) ,DS )", "obj1": 0.9796839729119639, "obj2": 0.014206256013310815}, {"determining": "( ( ( ( FirstVNF_RAM_Server / Min( ( FirstVNF_RAM - Max( MRS,CRS ) ) ,Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server * PN ) / DDR ) ) ) ) / FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) / ( FirstVNF_RAM - ( ( AMS * DDR ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( ( ( ( Max( MUC,MUM ) + MUM ) - MUR ) - ( MUR * ( RCSe / Max( ( MUC / MLU ),CS ) ) ) ) ,( RMSe * MUR ) ) + RMSe ) ,( DS - CS ) )", "obj1": 0.5033860045146726, "obj2": 0.4061355871458721}, {"determining": "( Max( Min( RRS ,Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) ) - ( AMS + FirstVNF_Mem_Server ) ) ) ),ARS ) / ( FirstVNF_CPU - ( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) + RRS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( DS - MLU ) ) * Max( ( CS - MUM ),( ( MUM - RRSe ) + CS ) ) )", "obj1": 0.8577878103837472, "obj2": 0.1120080024638213}, {"determining": "Max( ( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ACS,( ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_RAM - FirstVNF_CPU ) ) - FirstVNF_Mem ) ) ) ),( ( FirstVNF_RAM - FirstVNF_CPU ) / DDR ) )", "choosing": "Min( ( Min( ( MLU - Min( ( MLU - RRSe ) ,Min( CS ,Min( CS ,DS ) ) ) ) ,( DS - CS ) ) - MLU ) ,( DS + Min( ( MUR * MUC ) ,( MUM / MUM ) ) ) )", "obj1": 0.6817155756207675, "obj2": 0.23118887234458851}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + ( ( Max( RRSe,( RCSe / DS ) ) / ( Max( CS,( RMSe - RCSe ) ) * ( ( MUC * MUM ) * MUR ) ) ) + MUC ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / Min( PN ,AMS ) ),( RRS + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,Min( ( MLU - Min( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) ,( DS - CS ) ) ) ,( DS - CS ) ) ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + ( Max( ( FirstVNF_RAM - AMS ),( ARS - ACS ) ) * Min( ( ( FirstVNF_RAM / PN ) * ARS ) ,Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + AMS ) ) ) ) ) ) * Max( FirstVNF_CPU,Max( MRS,FirstVNF_RAM ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( ( ( RCSe / Min( CS ,( MUR * CS ) ) ) + Max( ( MUR - MUM ),RMSe ) ) - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( DS - CS ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.48081264108352145, "obj2": 0.428857556645528}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,( FirstVNF_CPU - MRS ) ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) ) * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) * MLU ) ),( ( Max( RCSe,Min( MUC ,( Min( RRSe ,RCSe ) - RCSe ) ) ) + ( RMSe - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) ) / Min( MUM ,RCSe ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) ) * ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - AMS ) )", "choosing": "Min( ( RCSe / MUC ) ,Max( RRSe,CS ) )", "obj1": 0.9909706546275395, "obj2": 0.00373602688758536}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - BR ),( ( FirstVNF_RAM_Server * ACS ) - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( MUM - ( MUR * DS ) ) ) ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) - ( MUC + ( MUR + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( ( AMS * ( ( ( ACS * Max( ( FirstVNF_Mem * FirstVNF_RAM ),ACS ) ) - ( CRS + Min( ACS ,( RRS * MRS ) ) ) ) * MRS ) ) - ACS ) )", "choosing": "( ( MLU + RRSe ) - Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( DDR ,MDR ) * PN ) / Min( FirstVNF_Mem_Server ,PN ) )", "choosing": "Min( ( RRSe * Max( ( MUM * MUM ),DS ) ) ,( Min( ( CS + ( ( MUC + MUR ) + Max( RMSe,CS ) ) ) ,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ARS ,( ( ( ( FirstVNF_Mem / Const ) / AMS ) - ( FirstVNF_Mem_Server / ACS ) ) + DDR ) ),( AMS / ( ARS / ( RRS + RRS ) ) ) ) - ( Const / ACS ) )", "choosing": "Min( ( Min( MLU ,( CS / MLU ) ) / ( RMSe - MUM ) ) ,Max( MUC,Min( DS ,( ( MUR + MUC ) * ( Max( RMSe,MLU ) + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / Const ) - ( BR / ( ( ARS / FirstVNF_Mem_Server ) * PN ) ) )", "choosing": "Min( Min( Min( ( CS - Min( ( MUM / ( Min( RCSe ,MUC ) + DS ) ) ,MLU ) ) ,DS ) ,DS ) ,Max( RCSe,( MUC + Min( RRSe ,( ( MUC / MUM ) * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ACS ) + ( PN - ( ARS / ARS ) ) )", "choosing": "( Min( CS ,MUM ) - Max( ( MUR - MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / MDR ) - ( ( ACS / Max( MRS,ACS ) ) + Max( AMS,FirstVNF_RAM ) ) ) / ( RRS - CRS ) )", "choosing": "Max( ( MUC + RCSe ),( Max( ( Max( MLU,MUR ) * MLU ),CS ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( ARS,BR ) )", "choosing": "Max( Max( MLU,MUM ),Max( CS,( ( MUR * MUR ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem + ARS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( FirstVNF_RAM / Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( MUR * ( RMSe * RCSe ) ) - ( ( ( ( Min( DS ,MUM ) / RMSe ) - RMSe ) / ( RMSe / MUR ) ) / ( ( Min( RRSe ,DS ) * ( MUM / ( RRSe + DS ) ) ) / ( CS * RCSe ) ) ) ) * ( MUR + CS ) ),( ( CS * RCSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * Min( Const ,( MDR - AMS ) ) )", "choosing": "( ( ( DS * ( MUC - ( Min( Max( RCSe,MUC ) ,RCSe ) + ( RCSe * MUR ) ) ) ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ARS ) - Min( MDR ,( Max( FirstVNF_RAM_Server,( ARS - ACS ) ) + DDR ) ) )", "choosing": "( ( ( MUM * CS ) * ( ( MUC * ( DS - ( Min( Max( MUR,MUM ) ,( MUM * RCSe ) ) + ( ( RRSe + RRSe ) * RRSe ) ) ) ) / ( Min( DS ,( CS * ( MLU + MUC ) ) ) + ( MLU / MUR ) ) ) ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - MDR ) - ( ( Min( ( MDR * RRS ) ,MRS ) * ACS ) / ( MRS - BR ) ) ) ,( RRS * FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( ( RCSe / RRSe ) - MLU ) / ( ( ( ( RRSe / Max( RRSe,DS ) ) + CS ) + ( ( DS + ( MLU / MUC ) ) + ( RMSe - MUM ) ) ) * DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / Min( Min( ( AMS * MDR ) ,CRS ) ,FirstVNF_Mem_Server ) ) - ( ( RRS / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / MDR ) )", "choosing": "( ( ( ( ( ( RCSe - MLU ) * RRSe ) / CS ) * ( Max( RMSe,Min( Max( MLU,Min( MUM ,RMSe ) ) ,CS ) ) * MUC ) ) - RRSe ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( MDR / RRS ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( ( ( RRSe + Max( RMSe,RMSe ) ) - DS ) - ( MUR - RRSe ) ) + ( DS - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( ( BR - ACS ) * ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) / ARS ) ) ) )", "choosing": "( ( RCSe - DS ) * ( MUM - Min( RMSe ,( RMSe * ( RMSe / Min( ( ( DS - CS ) + Min( MUC ,RMSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( ( Const + ( ( Min( ( DDR + ACS ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) / Max( ( ARS / ACS ),( MDR - Const ) ) ) / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( ( ( RMSe * ( ( MUM / CS ) * ( RRSe + MLU ) ) ) - RMSe ) - ( ( Max( RMSe,RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MLU,( Min( RRSe ,MLU ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( Min( Max( Min( ( FirstVNF_RAM + DDR ) ,DDR ),FirstVNF_CPU ) ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Min( RMSe ,( ( MUR * MUC ) - MLU ) ) ) + RCSe ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Max( ( FirstVNF_RAM / Const ),DDR ) ) * ( Const - ACS ) )", "choosing": "( ( ( ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * ( ( DS + MUC ) + MUM ) ) ) * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + Max( ( FirstVNF_CPU_Server - ( FirstVNF_CPU * ( DDR + ( MDR + MDR ) ) ) ),AMS ) ) - FirstVNF_Mem_Server ) + ( Max( FirstVNF_RAM,Const ) - ACS ) )", "choosing": "( ( DS + MUM ) - Max( Min( RRSe ,Min( MLU ,( ( DS + MUM ) - RCSe ) ) ),Min( Min( Min( RCSe ,Min( MUR ,Min( MLU ,MUC ) ) ) ,( CS - MUC ) ) ,Min( MUC ,( RCSe - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( BR,FirstVNF_Mem_Server ) - ACS ) ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( Min( ( RMSe * ( RCSe / MLU ) ) ,Min( DS ,MLU ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,DDR ) * MRS ) - ( FirstVNF_Mem_Server / Max( ( Const + Const ),PN ) ) )", "choosing": "Min( ( MUR * MUC ) ,( Max( ( CS * MLU ),CS ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}]}