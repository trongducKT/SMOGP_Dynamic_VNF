{"1": [{"determining": "Max( Max( PN,FirstVNF_CPU ),( MRS - PN ) )", "choosing": "Max( ( MUC / RCSe ),( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( DDR / MRS ) )", "choosing": "Max( ( CS / DS ),( CS / MUM ) )", "obj1": 0.69921875, "obj2": 0.20495154755283493}, {"determining": "( Min( ACS ,BR ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / Max( DDR,PN ) )", "choosing": "( ( MUC / MUC ) - Max( MUM,MUM ) )", "obj1": 0.642578125, "obj2": 0.260783189391354}, {"determining": "( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) )", "obj1": 0.66015625, "obj2": 0.24785765362116607}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + Min( CRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( MLU + RCSe ) ) )", "obj1": 0.828125, "obj2": 0.16901133969289645}, {"determining": "( Min( ( CRS / FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / ( ( Const * FirstVNF_RAM_Server ) - ( ARS - ACS ) ) )", "choosing": "( Max( CS,Max( MLU,CS ) ) * Min( Min( MUR ,RCSe ) ,CS ) )", "obj1": 0.810546875, "obj2": 0.17145589876529993}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - Const ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server + AMS ),( FirstVNF_RAM * MRS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Min( BR ,MDR ) ) ) ,( ( ( Const + ACS ) / Min( DDR ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( RCSe * ( MUR + RMSe ) ) ) - ( ( MUR + RRSe ) - DS ) )", "obj1": 0.787109375, "obj2": 0.17904684228809375}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) / ( MRS + MDR ) )", "choosing": "( ( Max( ( DS / RCSe ),( CS / RCSe ) ) * Max( ( CS + DS ),( MUC + MUR ) ) ) * ( Min( ( RCSe + MUR ) ,Min( RMSe ,CS ) ) / Min( ( RMSe + RCSe ) ,( CS / MUC ) ) ) )", "obj1": 0.623046875, "obj2": 0.278880377064998}], "2": [{"determining": "Max( Max( PN,FirstVNF_CPU ),( MRS - PN ) )", "choosing": "Max( ( MUC / RCSe ),( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,ACS ) - ( DDR / MRS ) )", "choosing": "Max( ( CS / DS ),( CS / MUM ) )", "obj1": 0.69921875, "obj2": 0.20495154755283493}, {"determining": "( Min( ACS ,BR ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / Max( DDR,PN ) )", "choosing": "( ( MUC / MUC ) - Max( MUM,MUM ) )", "obj1": 0.642578125, "obj2": 0.260783189391354}, {"determining": "( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) )", "obj1": 0.66015625, "obj2": 0.24785765362116607}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - Const ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server + AMS ),( FirstVNF_RAM * MRS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Min( BR ,MDR ) ) ) ,( ( ( Const + ACS ) / Min( DDR ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( RCSe * ( MUR + RMSe ) ) ) - ( ( MUR + RRSe ) - DS ) )", "obj1": 0.787109375, "obj2": 0.17904684228809375}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( ( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Max( PN,CRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - MDR ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * RCSe ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / ARS ) - PN ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( MLU - MUR ) * ( RCSe + MUM ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "Max( ( FirstVNF_RAM - ( AMS / FirstVNF_CPU_Server ) ),( MDR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU - DS ) ,( MUM / ( RCSe - MUM ) ) )", "obj1": 0.982421875, "obj2": 0.014049194739333404}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( ( ARS + FirstVNF_CPU_Server ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( ( RCSe - CS ),( RMSe * DS ) ) * DS ) * ( ( ( MUR * MUR ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( MUC - MUM ) ) / Max( ( RCSe - CS ),( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( MRS - MDR ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( ( Min( ( MLU + DS ) ,( DS * RMSe ) ) * Max( ( MUC / DS ),( MUC + RMSe ) ) ) * ( ( ( MLU - RRSe ) / ( DS / MUC ) ) / Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - CRS )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( DS / RCSe ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( MUR * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS / FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Min( ( Const * FirstVNF_RAM_Server ) ,( ARS - ACS ) ) )", "choosing": "( Max( CS,( MLU * CS ) ) * Min( Min( MUR ,RCSe ) ,CS ) )", "obj1": 0.837890625, "obj2": 0.13909536906393394}, {"determining": "( Min( ( ( PN / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU + MUM ) / Min( RCSe ,RCSe ) ),( DS - Max( MUR,RMSe ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / ACS ) ) ) )", "choosing": "( ( RMSe / ( RCSe * ( MUR + RMSe ) ) ) - ( Min( MUR ,MUC ) - MUC ) )", "obj1": 0.796875, "obj2": 0.14814290884512887}, {"determining": "( ( Const / ACS ) + ( BR - DDR ) )", "choosing": "( ( RCSe + RCSe ) + ( ( CS + MUC ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ACS ) + ( BR - DDR ) )", "choosing": "( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) )", "obj1": 0.66015625, "obj2": 0.24785765362116607}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + ( ( AMS / FirstVNF_RAM_Server ) - ( FirstVNF_RAM * ( MRS * PN ) ) ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( ( ( RCSe + MUM ) / CS ) - MUM ) )", "obj1": 0.6171875, "obj2": 0.27294728742556185}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + Min( BR ,RRS ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUC / RMSe ) - ( RCSe + RMSe ) ) / ( ( RMSe * RMSe ) - ( RMSe * CS ) ) )", "obj1": 0.677734375, "obj2": 0.24543210109952238}, {"determining": "Min( ( RRS * MRS ) ,( ( ( ( Const + ACS ) / Min( DDR ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) * MRS ) )", "choosing": "Min( ( ( MUR + RRSe ) - DS ) ,Min( MLU ,MLU ) )", "obj1": 0.744140625, "obj2": 0.1928093461242257}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server + AMS ),( FirstVNF_RAM * MRS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Min( BR ,MDR ) ) ) ,( ( ( Const + ACS ) / Min( DDR ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( RCSe * ( MUR + RMSe ) ) ) - ( ( MUR + RRSe ) - DS ) )", "obj1": 0.791015625, "obj2": 0.15882947090872937}, {"determining": "( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( MLU + RCSe ) ) )", "obj1": 0.626953125, "obj2": 0.2684354103979718}, {"determining": "Max( ( PN - FirstVNF_CPU ),( MRS - PN ) )", "choosing": "( Max( ( MLU * DS ),( RMSe - DS ) ) * ( ( MLU + DS ) - ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,( ( Max( MUR,MLU ) - Min( RMSe ,RCSe ) ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9453125, "obj2": 0.03452231374836398}, {"determining": "( Min( ACS ,BR ) - Max( PN,AMS ) )", "choosing": "( ( Max( MUR,MLU ) - Min( RMSe ,RCSe ) ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,BR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( AMS - RRS ) )", "choosing": "Max( ( MUM + ( Min( DS ,RCSe ) / ( MUR - CS ) ) ),( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) * ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}], "3": [{"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) ) ) ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( PN,FirstVNF_CPU ),( MRS - PN ) )", "choosing": "Max( ( MUC / RCSe ),( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + ( ( AMS / FirstVNF_RAM_Server ) - ( FirstVNF_RAM * ( MRS * PN ) ) ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( ( ( RCSe + MUM ) / CS ) - MUM ) )", "obj1": 0.6171875, "obj2": 0.27294728742556185}, {"determining": "( Min( ACS ,( FirstVNF_Mem + ( BR / CRS ) ) ) - Max( PN,AMS ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),Max( Max( CS,Min( MUR ,RRSe ) ),( Min( DS ,DS ) - RMSe ) ) ) )", "obj1": 0.875, "obj2": 0.0847413021752078}, {"determining": "( Min( FirstVNF_Mem ,( BR / CRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_CPU ) + Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( MUC - MUM ) ) / Max( ( RCSe - CS ),( RMSe * DS ) ) )", "obj1": 0.837890625, "obj2": 0.12401959070080283}, {"determining": "( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) + ( PN / ACS ) )", "choosing": "( MLU * ( RCSe + MUM ) )", "obj1": 0.900390625, "obj2": 0.04241024203559402}, {"determining": "( Max( Const,AMS ) - ( DDR + MRS ) )", "choosing": "( Min( Max( ( CS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 0.73046875, "obj2": 0.1711819255644921}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + Min( BR ,RRS ) ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUC / RMSe ) - ( RCSe + RMSe ) ) / ( ( RMSe * RMSe ) - ( RMSe * CS ) ) )", "obj1": 0.677734375, "obj2": 0.24543210109952238}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / ACS ) ) ) )", "choosing": "( ( RMSe / ( RCSe * ( MUR + RMSe ) ) ) - ( Min( MUR ,MUC ) - MUC ) )", "obj1": 0.796875, "obj2": 0.14814290884512887}, {"determining": "( Max( Const,AMS ) - ( DDR + MRS ) )", "choosing": "Max( ( CS / DS ),( MUM / MUC ) )", "obj1": 0.69921875, "obj2": 0.20495154755283493}, {"determining": "( ( ARS + RRS ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( BR * Max( AMS,Max( MRS,PN ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MUC - RRSe ) ,( Min( CS ,Min( MUM ,MUC ) ) * Max( ( RMSe / MLU ),( CS / CS ) ) ) ) ,MUR ) ,( Max( ( RMSe + MUM ),CS ) - MUM ) )", "obj1": 0.640625, "obj2": 0.24674727218599218}, {"determining": "Min( ( RRS * MRS ) ,( ( ( ( Const + ACS ) / Min( DDR ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) * MRS ) )", "choosing": "( Min( RMSe ,( RCSe * ( MUR + RMSe ) ) ) - ( ( MUR + RRSe ) - RMSe ) )", "obj1": 0.765625, "obj2": 0.16787105961885376}, {"determining": "Max( ( FirstVNF_RAM - ( AMS / FirstVNF_CPU_Server ) ),( MDR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU - DS ) ,( MUM / ( RCSe - MUM ) ) )", "obj1": 0.982421875, "obj2": 0.014049194739333404}, {"determining": "( FirstVNF_RAM_Server - Max( ( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ),AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,( ( Max( MUR,MLU ) - ( MLU + MLU ) ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) ) ) )", "obj1": 0.943359375, "obj2": 0.0342826637218845}, {"determining": "( Max( Const,ACS ) - ( DDR / MRS ) )", "choosing": "Max( ( CS / DS ),( CS / MUM ) )", "obj1": 0.69921875, "obj2": 0.20495154755283493}, {"determining": "( FirstVNF_RAM_Server - Max( PN,AMS ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) ) ) )", "obj1": 0.951171875, "obj2": 0.029261956392617732}, {"determining": "( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( MLU + RCSe ) ) )", "obj1": 0.626953125, "obj2": 0.2684354103979718}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server + AMS ),( FirstVNF_RAM * MRS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Min( BR ,MDR ) ) ) ,( ( ( Const + ACS ) / Min( DDR ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( RCSe * ( MUR + RMSe ) ) ) - ( ( MUR + RRSe ) - DS ) )", "obj1": 0.791015625, "obj2": 0.15882947090872937}, {"determining": "( ( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) * ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.9921875, "obj2": 0.0033623325271844033}, {"determining": "( ( ( ( Min( ( CRS / FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "( ( MLU - ( Max( CS,MLU ) - Max( DS,MUM ) ) ) * ( RCSe + ( Max( CS,( MLU * CS ) ) * Min( Min( MUR ,RCSe ) ,CS ) ) ) )", "obj1": 0.998046875, "obj2": 0.0009982152108954695}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( MUR + RMSe ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( Min( ACS ,BR ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - Const ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Max( PN,CRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - MDR ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * RCSe ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( ( ARS + FirstVNF_CPU_Server ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( ( RCSe - CS ),( RMSe * DS ) ) * DS ) * ( ( ( MUR * MUR ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( MUC - MUM ) ) / Max( ( RCSe - CS ),( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( MRS - MDR ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( ( Min( ( MLU + DS ) ,( DS * RMSe ) ) * Max( ( MUC / DS ),( MUC + RMSe ) ) ) * ( ( ( MLU - RRSe ) / ( DS / MUC ) ) / Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - CRS )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( DS / RCSe ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( MUR * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU + MUM ) / Min( RCSe ,RCSe ) ),( DS - Max( MUR,RMSe ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ACS ) + ( BR - DDR ) )", "choosing": "( ( RCSe + RCSe ) + ( ( CS + MUC ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN - FirstVNF_CPU ),( MRS - PN ) )", "choosing": "( Max( ( MLU * DS ),( RMSe - DS ) ) * ( ( MLU + DS ) - ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Max( PN,AMS ) )", "choosing": "( ( Max( MUR,MLU ) - Min( RMSe ,RCSe ) ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,BR ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( AMS - RRS ) )", "choosing": "Max( ( MUM + ( Min( DS ,RCSe ) / ( MUR - CS ) ) ),( RMSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( ( ARS + ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( DS,( RMSe * DS ) ) * DS ) * ( ( ( MUR * MUR ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / Const ) + Const ) ) )", "choosing": "( ( MLU + RCSe ) / Max( ( RCSe - CS ),( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( Max( ( PN - FirstVNF_CPU ),( MRS - PN ) ) + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,BR ) ) / ( ( DDR / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( MUC - RCSe ) * ( ( ( MUR * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * Const ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,AMS ) ) ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( ( FirstVNF_RAM_Server - Max( AMS,AMS ) ),FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( RCSe + MLU ) ) ) + Min( Min( Min( MLU ,MUM ) ,( Max( MUR,MLU ) - Min( RMSe ,RCSe ) ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + ( BR / CRS ) ) / ( ( Min( ACS ,BR ) - Max( PN,AMS ) ) - FirstVNF_RAM ) )", "choosing": "Max( Max( CS,Min( MUR ,RRSe ) ),( Min( MUC ,MLU ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) - ( DDR + MRS ) )", "choosing": "Max( ( CS / DS ),( MLU - ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ARS + FirstVNF_CPU_Server ) + ( ( AMS / FirstVNF_RAM_Server ) - ( FirstVNF_RAM * ( MRS * PN ) ) ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( ( ( RCSe + MUM ) / CS ) - MUM ) )", "obj1": 0.6171875, "obj2": 0.27294728742556185}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,( DDR + MRS ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( Max( ( CS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) ) ) ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( Max( ( RCSe + MUM ),CS ) - ( ( MUR - DS ) - ( MUM * MUC ) ) ) )", "obj1": 0.6171875, "obj2": 0.27294728742556185}, {"determining": "( Min( ACS ,( FirstVNF_Mem + ( BR / CRS ) ) ) - Max( PN,AMS ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),Max( Max( CS,Min( MUR ,RRSe ) ),( Min( DS ,DS ) - RMSe ) ) ) )", "obj1": 0.875, "obj2": 0.0847413021752078}, {"determining": "( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) + ( PN / ACS ) )", "choosing": "( MLU * ( RCSe + MUM ) )", "obj1": 0.900390625, "obj2": 0.04241024203559402}, {"determining": "( FirstVNF_RAM_Server - Max( ( Min( ( ( Max( AMS,Max( MRS,PN ) ) / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ),AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,( ( CS / MLU ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) ) ) )", "obj1": 0.845703125, "obj2": 0.12192270825919425}, {"determining": "( Max( Const,ACS ) - ( DDR / MRS ) )", "choosing": "Max( ( CS / DS ),( CS / MUM ) )", "obj1": 0.716796875, "obj2": 0.18788891176804975}, {"determining": "( ( ( MRS / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "( ( MLU - ( Max( CS,MLU ) - Max( DS,MUM ) ) ) * ( RCSe + ( Max( CS,( MLU * CS ) ) * ( MUM / MUC ) ) ) )", "obj1": 0.974609375, "obj2": 0.010884602214134639}, {"determining": "( ( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( MRS * Max( AMS,Max( MRS,PN ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MLU - ( RCSe * MLU ) ) ,( Min( CS ,Min( MUM ,MUC ) ) * Max( ( RMSe / MLU ),( CS / MLU ) ) ) ) ,RRSe ) ,( Max( ( RCSe + MUM ),CS ) - MUM ) )", "obj1": 0.8203125, "obj2": 0.14731189638814537}, {"determining": "( Max( Const,AMS ) - ( DDR + MRS ) )", "choosing": "Max( ( CS / DS ),( MUM / MUC ) )", "obj1": 0.69921875, "obj2": 0.20495154755283493}, {"determining": "( FirstVNF_RAM_Server - Max( ( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + DDR ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ),AMS ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,( Min( CS ,Min( MUM ,MUC ) ) * Max( ( RMSe / MLU ),( MUC / MLU ) ) ) ) ,RRSe ) ,( Max( ( RCSe + MUM ),CS ) - MUM ) )", "obj1": 0.783203125, "obj2": 0.1619539641855509}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / ACS ) ) ) )", "choosing": "( ( RMSe / ( RCSe * ( MUR + RMSe ) ) ) - ( Min( MUR ,MUC ) - MUC ) )", "obj1": 0.650390625, "obj2": 0.21373813858283075}, {"determining": "( Max( Const,AMS ) - ( DDR + MRS ) )", "choosing": "( Min( Max( ( CS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 0.732421875, "obj2": 0.16534194614934974}, {"determining": "( FirstVNF_RAM_Server - Max( PN,AMS ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) ) ) )", "obj1": 0.951171875, "obj2": 0.029261956392617732}, {"determining": "( Min( FirstVNF_Mem ,( BR / CRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_CPU ) + Max( FirstVNF_Mem,MDR ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( MUC - MUM ) ) / Max( ( RCSe - CS ),( RMSe * DS ) ) )", "obj1": 0.837890625, "obj2": 0.12401959070080283}, {"determining": "( FirstVNF_RAM_Server - Max( ( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ),AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,( ( Max( MUR,MLU ) - ( MLU + MLU ) ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) ) ) )", "obj1": 0.943359375, "obj2": 0.0342826637218845}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / ACS ) ) ) )", "choosing": "( Min( RMSe ,( RCSe * ( MUR + RMSe ) ) ) * ( ( MUR + RRSe ) - MUC ) )", "obj1": 0.64453125, "obj2": 0.21400594557275762}, {"determining": "( Max( Const,( Max( Const,AMS ) - ( DDR + MRS ) ) ) - ( DDR + MRS ) )", "choosing": "Max( ( MUM / DS ),( MUM / MUC ) )", "obj1": 0.908203125, "obj2": 0.040470372428188926}, {"determining": "( ( ARS + RRS ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( BR * Max( AMS,Max( MRS,PN ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MUC - RRSe ) ,( Min( CS ,Min( MUM ,MUC ) ) * Max( ( RMSe / MLU ),( CS / CS ) ) ) ) ,MUR ) ,( Max( ( RMSe + MUM ),CS ) - MUM ) )", "obj1": 0.640625, "obj2": 0.24674727218599218}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / ACS ) ) ) )", "choosing": "( ( RMSe / ( RCSe * ( MUR + RMSe ) ) ) - ( Min( MUR ,MUC ) - MUC ) )", "obj1": 0.796875, "obj2": 0.14814290884512887}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( MRS * PN ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( MUR + RMSe ) ) )", "obj1": 0.6328125, "obj2": 0.2566896295494251}, {"determining": "( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( MLU + RCSe ) ) )", "obj1": 0.626953125, "obj2": 0.2684354103979718}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server + AMS ),( FirstVNF_RAM * MRS ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Min( BR ,MDR ) ) ) ,( ( ( Const + ACS ) / Min( DDR ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( RCSe * ( MUR + RMSe ) ) ) - ( ( MUR + RRSe ) - DS ) )", "obj1": 0.791015625, "obj2": 0.15882947090872937}, {"determining": "( Max( Const,ACS ) - ( DDR / MRS ) )", "choosing": "Max( ( CS / DS ),( CS / MUM ) )", "obj1": 0.69921875, "obj2": 0.20495154755283493}, {"determining": "( Max( Const,AMS ) - ( DDR + RRS ) )", "choosing": "( Min( Max( ( DS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 0.73046875, "obj2": 0.1711819255644921}, {"determining": "( Max( Const,AMS ) - ( DDR + MRS ) )", "choosing": "( Min( Max( ( CS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 0.73046875, "obj2": 0.1711819255644921}, {"determining": "( ( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) * ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.9921875, "obj2": 0.0033623325271844033}, {"determining": "( ( ARS + RRS ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( BR * Max( AMS,Max( MRS,PN ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MUC - RRSe ) ,( Min( CS ,Min( MUM ,MUC ) ) * Max( ( RMSe / MLU ),( CS / CS ) ) ) ) ,MUR ) ,( Max( ( RMSe + MUM ),CS ) - MUM ) )", "obj1": 0.640625, "obj2": 0.24674727218599218}, {"determining": "( ( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) * ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.9921875, "obj2": 0.0033623325271844033}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( MUR + RMSe ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( ( ( ( Min( ( CRS / FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "( ( MLU - ( Max( CS,MLU ) - Max( DS,MUM ) ) ) * ( RCSe + ( Max( CS,( MLU * CS ) ) * Min( Min( MUR ,RCSe ) ,CS ) ) ) )", "obj1": 0.998046875, "obj2": 0.0009982152108954695}, {"determining": "( ( ( ( Min( ( CRS / FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( FirstVNF_Mem_Server + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "( ( MLU - ( Min( CS ,MLU ) - Max( DS,MUM ) ) ) * ( RCSe + ( Max( CS,( MLU * CS ) ) * Min( Min( MUR ,RCSe ) ,CS ) ) ) )", "obj1": 0.998046875, "obj2": 0.0009982152108954695}, {"determining": "Max( Max( PN,FirstVNF_CPU ),( MRS - PN ) )", "choosing": "Max( ( MUC / RCSe ),( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - Const ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Max( PN,CRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - MDR ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * RCSe ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( ( ARS + FirstVNF_CPU_Server ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( ( RCSe - CS ),( RMSe * DS ) ) * DS ) * ( ( ( MUR * MUR ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( MUC - MUM ) ) / Max( ( RCSe - CS ),( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( MRS - MDR ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( ( Min( ( MLU + DS ) ,( DS * RMSe ) ) * Max( ( MUC / DS ),( MUC + RMSe ) ) ) * ( ( ( MLU - RRSe ) / ( DS / MUC ) ) / Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - CRS )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( DS / RCSe ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( MUR * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU + MUM ) / Min( RCSe ,RCSe ) ),( DS - Max( MUR,RMSe ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - MDR ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MLU + DS ) ,( DS * RMSe ) ) * Max( ( MUC / DS ),( MUC + RMSe ) ) ) * ( ( ( MLU - RRSe ) / ( DS / MUC ) ) / Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,( DDR + MRS ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( Max( ( CS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + RRS ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * Min( BR ,Max( AMS,Max( MRS,PN ) ) ) ) ) )", "choosing": "Max( ( CS / DS ),( MUM / MUM ) )", "obj1": 0.61328125, "obj2": 0.2969383070321311}, {"determining": "Min( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_CPU ) + Max( FirstVNF_Mem,MDR ) ) ) ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( RMSe ,( RCSe * ( ( RCSe - CS ) + RMSe ) ) ) * ( ( MUR + RRSe ) - MUC ) )", "obj1": 0.81640625, "obj2": 0.07742919417088528}, {"determining": "( ( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) ) )", "choosing": "Min( Min( Max( Min( CS ,RCSe ),RCSe ) ,DS ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.7421875, "obj2": 0.12662493453480808}, {"determining": "( Min( ACS ,( FirstVNF_Mem + ( BR / CRS ) ) ) - Max( PN,AMS ) )", "choosing": "( ( RMSe / ( RCSe * ( MUR + RMSe ) ) ) - ( Min( MUR ,RRSe ) - MUC ) )", "obj1": 0.884765625, "obj2": 0.07024479487455777}, {"determining": "( Max( Const,AMS ) - ( DDR + MRS ) )", "choosing": "Max( ( MUM / DS ),( MUM / MUC ) )", "obj1": 0.716796875, "obj2": 0.17785098294025342}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( CS / DS ),( CS / MUM ) )", "obj1": 0.650390625, "obj2": 0.18312243918229368}, {"determining": "( Max( Const,AMS ) - ( DDR + MRS ) )", "choosing": "( Min( Max( ( CS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 0.73046875, "obj2": 0.16250430221335477}, {"determining": "( ( ARS + RRS ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( BR * Max( AMS,Max( MRS,PN ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MUC - RRSe ) ,( Min( CS ,Min( MUM ,MUC ) ) * Max( ( RMSe / MLU ),( CS / CS ) ) ) ) ,MUR ) ,( Max( ( RMSe + MUM ),CS ) - MUM ) )", "obj1": 0.640625, "obj2": 0.24674727218599218}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / ACS ) ) ) )", "choosing": "( ( RMSe / ( RCSe * ( MUR + RMSe ) ) ) - ( Min( MUR ,MUC ) - MUC ) )", "obj1": 0.64453125, "obj2": 0.19767047523544373}, {"determining": "( ( ( MRS / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "( ( MLU - ( Max( CS,MLU ) - Max( DS,MUM ) ) ) * ( RCSe + ( Max( CS,( MLU * CS ) ) * ( MUM / MUC ) ) ) )", "obj1": 0.974609375, "obj2": 0.010884602214134639}, {"determining": "( ( Max( Const,AMS ) - ( DDR + MRS ) ) - ( DDR + MRS ) )", "choosing": "Max( ( MUM / DS ),Min( Max( ( CS + RCSe ),RCSe ) ,DS ) )", "obj1": 0.892578125, "obj2": 0.04719886304468882}, {"determining": "( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( Min( Min( DS ,MUR ) ,( DS / MUC ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) ) ) )", "obj1": 0.955078125, "obj2": 0.02311486674813008}, {"determining": "( Max( Const,( Max( Const,AMS ) - ( DDR + MRS ) ) ) - ( DDR + MRS ) )", "choosing": "( Min( Max( ( CS + RCSe ),RCSe ) ,DS ) * ( ( ( MUC * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 0.912109375, "obj2": 0.037505449274007834}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( Max( ( RCSe + MUM ),CS ) - ( ( MUR - DS ) - ( MUM * MUC ) ) ) )", "obj1": 0.6171875, "obj2": 0.27294728742556185}, {"determining": "( FirstVNF_RAM_Server - Max( ( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ),AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,( ( Max( MUR,MLU ) - ( MLU + MLU ) ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) ) ) )", "obj1": 0.943359375, "obj2": 0.0342826637218845}, {"determining": "( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) + ( PN / ACS ) )", "choosing": "( MLU * ( RCSe + MUM ) )", "obj1": 0.900390625, "obj2": 0.04241024203559402}, {"determining": "( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( MLU + RCSe ) ) )", "obj1": 0.626953125, "obj2": 0.2684354103979718}, {"determining": "Min( DDR ,( ( ( Const / ACS ) / Min( DDR ,CRS ) ) - ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ACS / ACS ) ) ) )", "choosing": "( ( RMSe / ( RCSe * ( MUR + RMSe ) ) ) - ( Min( MUR ,MUC ) - MUC ) )", "obj1": 0.64453125, "obj2": 0.19767047523544373}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + ( MRS - MDR ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( Min( ( MLU - RRSe ) ,MUC ) - MUM ) )", "obj1": 0.62890625, "obj2": 0.2640860848975211}, {"determining": "( ( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) * ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.9921875, "obj2": 0.0033623325271844033}, {"determining": "( FirstVNF_RAM_Server - Max( PN,AMS ) )", "choosing": "( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) ) ) )", "obj1": 0.951171875, "obj2": 0.029261956392617732}, {"determining": "( Max( Const,( Max( Const,AMS ) - ( DDR + MRS ) ) ) - ( DDR + MRS ) )", "choosing": "Max( ( MUM / DS ),( MUM / MUC ) )", "obj1": 0.908203125, "obj2": 0.040470372428188926}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + DDR )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( MUM + RMSe ) ) )", "obj1": 0.6328125, "obj2": 0.2566896295494251}, {"determining": "( ( ARS + RRS ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( BR * Max( AMS,Max( MRS,PN ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MUC - RRSe ) ,( Min( CS ,Min( MUM ,MUC ) ) * Max( ( RMSe / MLU ),( CS / CS ) ) ) ) ,MUR ) ,( Max( ( RMSe + MUM ),CS ) - MUM ) )", "obj1": 0.640625, "obj2": 0.24674727218599218}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( MRS * PN ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( MUR + RMSe ) ) )", "obj1": 0.6328125, "obj2": 0.2566896295494251}, {"determining": "( FirstVNF_RAM_Server - Max( ( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + DDR ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ),AMS ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.031842405719045966}, {"determining": "( ( ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + ( PN / ACS ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) * ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.9921875, "obj2": 0.0033623325271844033}, {"determining": "( ( ARS + FirstVNF_CPU_Server ) + ( ( AMS / FirstVNF_RAM_Server ) - ( FirstVNF_RAM * ( MRS * PN ) ) ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( ( ( RCSe + MUM ) / CS ) - MUM ) )", "obj1": 0.6171875, "obj2": 0.27294728742556185}, {"determining": "( FirstVNF_RAM_Server - Max( ( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) ),AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,( ( Max( MUR,MLU ) - ( MLU + MLU ) ) * ( Max( MUM,MUC ) - ( RCSe - RMSe ) ) ) ) )", "obj1": 0.943359375, "obj2": 0.0342826637218845}, {"determining": "( ( ( ( Min( ( CRS / FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) - ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) / Const ) + Max( ( AMS / FirstVNF_RAM_Server ),( FirstVNF_RAM * ( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) ) ) ) )", "choosing": "Min( Min( Min( ( MLU - RRSe ) ,MUC ) ,RRSe ) ,( Max( ( RCSe + MUM ),CS ) - ( ( MUR - DS ) - ( Min( MUR ,RCSe ) * MUC ) ) ) )", "obj1": 0.998046875, "obj2": 0.000910320087223255}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( ( ( ( RRS / ARS ) - Max( BR,MRS ) ) / ( ( MRS - MDR ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( Min( ( PN * BR ) ,( FirstVNF_CPU / RRS ) ) * ( ( DDR + DDR ) - ( ARS / MRS ) ) ) )", "choosing": "Min( Min( Max( ( MUR + RCSe ),( MUM * MUM ) ) ,( ( MUR - DS ) - ( MUM * MUC ) ) ) ,( ( Max( RRSe,RMSe ) + ( RRSe + RRSe ) ) / ( Max( CS,MLU ) - Max( DS,MUM ) ) ) )", "obj1": 0.99609375, "obj2": 0.0014537972290656787}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( Max( BR,MDR ) / ( MRS * DDR ) ) - ( ( Const / ACS ) + ( FirstVNF_CPU_Server - ACS ) ) ) ) )", "choosing": "( ( ( Min( CS ,RRSe ) / ( RRSe - DS ) ) - ( ( RMSe - MUM ) * ( Min( Min( DS ,MUR ) ,( DS / CS ) ) / Max( ( DS + RMSe ),( CS + MUC ) ) ) ) ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( PN,FirstVNF_CPU ),( MRS - PN ) )", "choosing": "Max( ( MUC / RCSe ),( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_Mem_Server ) * ( PN - Const ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( ( MUM / RCSe ) * ( RMSe - MUR ) ) ,( Min( RCSe ,CS ) - ( MLU + MLU ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( ARS - FirstVNF_CPU ),( PN - CRS ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) ) - Max( PN,AMS ) )", "choosing": "( ( RCSe * MLU ) / ( Min( MUC ,MLU ) + Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,BR ) - Max( PN,CRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) + Min( MUM ,MLU ) ) + ( Max( RMSe,MLU ) + Max( MUM,RCSe ) ) ) - Max( ( ( MUM / DS ) / Max( MLU,RMSe ) ),( ( RRSe * CS ) + ( RCSe / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ARS - FirstVNF_CPU ),( PN - MDR ) ) ,( ( RRS * MDR ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( DDR + DDR ) ) + ( ( ARS / BR ) - Min( BR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe * RCSe ) / Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( ( ARS + FirstVNF_CPU_Server ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( ( RCSe - CS ),( RMSe * DS ) ) * DS ) * ( ( ( MUR * MUR ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / Const ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Min( MUR ,RMSe ) / ( MUC - MUM ) ) / Max( ( RCSe - CS ),( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( MRS - MDR ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( ( Min( ( MLU + DS ) ,( DS * RMSe ) ) * Max( ( MUC / DS ),( MUC + RMSe ) ) ) * ( ( ( MLU - RRSe ) / ( DS / MUC ) ) / Max( RRSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - CRS )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( DS / RCSe ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) * Min( Min( RRS ,ACS ) ,( FirstVNF_RAM_Server + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) / ( ( DDR / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),CS ) * DS ) * ( ( ( MUR * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server / MRS ),Min( DDR ,AMS ) ) - Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_CPU + MDR ) ) ) - ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * DDR ) ) ) )", "choosing": "( Min( Max( Min( CS ,RCSe ),CS ) ,DS ) * ( ( ( MUM * MUM ) * ( MLU + RCSe ) ) * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN / FirstVNF_Mem_Server ) * ( PN - DDR ) ) ,Min( ( MRS - FirstVNF_RAM ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( AMS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( MLU + MUM ) / Min( RCSe ,RCSe ) ),( DS - Max( MUR,RMSe ) ) ) + Min( Min( Min( MLU ,MUC ) ,Max( DS,MUM ) ) ,( ( RRSe - MUR ) - Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}