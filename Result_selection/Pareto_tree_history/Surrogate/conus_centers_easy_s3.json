{"1": [{"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.3643122676579926, "obj2": 0.5017700828011633}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,RCSe ) )", "obj1": 0.5892193308550185, "obj2": 0.37544266266429177}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) * ( DDR * ACS ) )", "choosing": "Min( ( MUM - Max( MUC,MLU ) ) ,Max( CS,CS ) )", "obj1": 0.17286245353159851, "obj2": 0.7212423634061148}, {"determining": "( Min( BR ,ACS ) * ( ( MDR / BR ) + MRS ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RCSe + RMSe ) )", "obj1": 0.3587360594795539, "obj2": 0.5680946533932606}, {"determining": "( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05762081784386617, "obj2": 0.8606461619364653}, {"determining": "Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.11524163568773234, "obj2": 0.7763386136262201}, {"determining": "( Max( PN,AMS ) - Max( Const,RRS ) )", "choosing": "( Min( MUM ,MUR ) + ( RCSe * RMSe ) )", "obj1": 0.30111524163568776, "obj2": 0.612419097178886}, {"determining": "Max( ( AMS + RRS ),( PN * PN ) )", "choosing": "Max( ( RCSe - DS ),Min( RCSe ,MUM ) )", "obj1": 0.31784386617100374, "obj2": 0.5932059111038726}, {"determining": "( ( DDR / FirstVNF_RAM ) + Max( FirstVNF_CPU,MRS ) )", "choosing": "Max( ( RRSe + MUM ),( RMSe - MUC ) )", "obj1": 0.3420074349442379, "obj2": 0.5713069056405444}, {"determining": "( ( ( BR + Min( MRS ,FirstVNF_Mem ) ) * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / MLU ) + ( MUC / CS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( Min( AMS ,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + ( ( FirstVNF_RAM * MDR ) / Max( BR,ACS ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( MUC + MUC ) )", "obj1": 0.30855018587360594, "obj2": 0.6022537178592637}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( BR * MRS ) ,( ( ( RRS + RRS ) * Const ) * ( BR / AMS ) ) ) )", "choosing": "Max( ( MUM - ( RRSe / DS ) ),Min( CS ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ARS ,FirstVNF_Mem ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * Min( ( MRS / FirstVNF_CPU ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS / MUM ) / Min( RRSe ,RCSe ) ) + Max( MLU,( RRSe * Max( MLU,Max( CS,( MLU - ( RRSe + MLU ) ) ) ) ) ) )", "obj1": 0.9330855018587361, "obj2": 0.06528023203357243}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( Max( ACS,FirstVNF_CPU ) + Max( AMS,ARS ) ) )", "choosing": "Min( Min( Max( RMSe,MUM ) ,Min( MUC ,RMSe ) ) ,( Min( RMSe ,DS ) * ( RRSe - MUR ) ) )", "obj1": 0.16728624535315986, "obj2": 0.7377804467690534}, {"determining": "( ( ARS / BR ) / ( Max( FirstVNF_RAM_Server,DDR ) * Max( CRS,BR ) ) )", "choosing": "( ( ( MUR * MUC ) + Max( RRSe,MUC ) ) + Min( ( MUM * RCSe ) ,( MLU * MUR ) ) )", "obj1": 0.3048327137546468, "obj2": 0.6048109021466131}, {"determining": "( ( Min( ARS ,MRS ) * AMS ) - ( FirstVNF_CPU_Server + Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Min( RRSe ,DS ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + DDR ) / ( FirstVNF_Mem_Server * PN ) )", "choosing": "Max( ( ( MUC * RCSe ) + Max( RRSe,RCSe ) ),Min( Max( MUR,RRSe ) ,Min( RRSe ,MLU ) ) )", "obj1": 0.2936802973977695, "obj2": 0.6138620713612553}, {"determining": "( Min( AMS ,( MRS + PN ) ) / Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "Max( Min( MUC ,MLU ),( CS * ( RRSe / CS ) ) )", "obj1": 0.3382899628252788, "obj2": 0.571428429538721}, {"determining": "Min( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),Min( ( AMS + MRS ) ,( Const - MDR ) ) ) ,( ( ( AMS - ARS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server + DDR ) + ( RRS * MDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( MLU - MUC ) ) + ( Max( RMSe,RMSe ) + ( RCSe / RCSe ) ) ) * ( Max( ( MUM * RCSe ),Min( DS ,CS ) ) / ( ( MLU / MUC ) + ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / PN ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8338167335396931}, {"determining": "( ( FirstVNF_RAM_Server + ( MRS / FirstVNF_Mem ) ) * ( ACS + ( RRS / ( DDR / FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( RRSe ,RRSe ),( Max( RRSe,( Min( ( Min( MUC ,MUC ) / MUM ) ,CS ) - ( ( ( RCSe + RMSe ) * RRSe ) * RCSe ) ) ) * MUC ) )", "obj1": 0.3345724907063197, "obj2": 0.5787469830943787}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ARS - BR ) )", "choosing": "( Min( ( ( CS - DS ) + ( MUR - RRSe ) ) ,Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,Max( Min( MUR ,RMSe ),( RCSe + ( DS * MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.22676579925650558, "obj2": 0.6325575840483307}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( Max( ARS,FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( ( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / RCSe ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MUM - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "( Min( Min( DDR ,Const ) ,FirstVNF_RAM ) * ( ( Const / BR ) * RRS ) )", "choosing": "Max( Max( Min( ( RMSe + DS ) ,CS ),DS ),( ( MUM / RMSe ) - MUR ) )", "obj1": 0.1412639405204461, "obj2": 0.754867323730759}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.23234200743494424, "obj2": 0.6194850103683504}, {"determining": "( ( FirstVNF_Mem - CRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe * MUM ) - MUC ) ,Max( Max( MUR,RRSe ),( ( MLU / RCSe ) - Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.3643122676579926, "obj2": 0.5017700828011633}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,RCSe ) )", "obj1": 0.5892193308550185, "obj2": 0.37544266266429177}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) * ( DDR * ACS ) )", "choosing": "Min( ( MUM - Max( MUC,MLU ) ) ,Max( CS,CS ) )", "obj1": 0.17286245353159851, "obj2": 0.7212423634061148}, {"determining": "Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.11524163568773234, "obj2": 0.7763386136262201}, {"determining": "( ( ( BR + Min( MRS ,FirstVNF_Mem ) ) * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / MLU ) + ( MUC / CS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( BR * MRS ) ,( ( ( RRS + RRS ) * Const ) * ( BR / AMS ) ) ) )", "choosing": "Max( ( MUM - ( RRSe / DS ) ),Min( CS ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ARS ,FirstVNF_Mem ) ) * ( AMS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "Max( ( ( RCSe + RRSe ) - ( DS * CS ) ),( ( MLU + MLU ) + ( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( Max( ACS,FirstVNF_CPU ) + Max( AMS,ARS ) ) )", "choosing": "Min( Min( Max( RMSe,MUM ) ,Min( MUC ,RMSe ) ) ,( Min( RMSe ,DS ) * ( RRSe - MUR ) ) )", "obj1": 0.16728624535315986, "obj2": 0.7377804467690534}, {"determining": "( ( Min( ARS ,MRS ) * AMS ) - ( FirstVNF_CPU_Server + Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RRSe ,MLU ) - Min( RRSe ,DS ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),Min( ( AMS + MRS ) ,( Const - MDR ) ) ) ,( ( ( AMS - ARS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server + DDR ) + ( RRS * MDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( MLU - MUC ) ) + ( Max( RMSe,RMSe ) + ( RCSe / RCSe ) ) ) * ( Max( ( MUM * RCSe ),Min( DS ,CS ) ) / ( ( MLU / MUC ) + ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / PN ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8338167335396931}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ARS - BR ) )", "choosing": "( Min( ( ( CS - DS ) + ( MUR - RRSe ) ) ,Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,Max( Min( MUR ,RMSe ),( RCSe + ( DS * MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( Max( ARS,FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( ( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU ) + FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / RCSe ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MUM - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3961540194943942}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.23234200743494424, "obj2": 0.6194850103683504}, {"determining": "( ( FirstVNF_Mem - CRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe * MUM ) - MUC ) ,Max( Max( MUR,RRSe ),( ( MLU / RCSe ) - Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS * Max( FirstVNF_RAM_Server,ARS ) )", "choosing": "( Min( ( ( Min( RRSe ,MLU ) + ( RRSe + RCSe ) ) + ( ( RCSe * RCSe ) - ( CS * MUC ) ) ) ,( ( Max( MUC,MLU ) + ( MUM + RCSe ) ) / ( ( DS + RRSe ) + ( MUM * RMSe ) ) ) ) - ( MUC - RRSe ) )", "obj1": 0.15985130111524162, "obj2": 0.747695605425652}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( ( ( Min( RCSe ,RCSe ) - ( CS * MUC ) ) + ( CS * MLU ) ) ,( ( Max( MUC,MLU ) + ( MUM + RCSe ) ) / ( ( DS + RRSe ) + ( MUM * RMSe ) ) ) )", "obj1": 0.9256505576208178, "obj2": 0.06439575390999548}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( ACS + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( Min( ( MLU - DS ) ,MUR ) / RCSe ) )", "obj1": 0.055762081784386616, "obj2": 0.85947099254754}, {"determining": "Min( ( ( FirstVNF_CPU_Server * CRS ) / ACS ) ,FirstVNF_CPU_Server )", "choosing": "Min( ( DS + RRSe ) ,( ( CS / ( ( CS * CS ) / ( RMSe - ( MUR - RRSe ) ) ) ) * DS ) )", "obj1": 0.49256505576208176, "obj2": 0.39155108445416}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6256408213932528}, {"determining": "( ( Max( ARS,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + ( ( Max( FirstVNF_CPU,( Min( MDR ,BR ) * ( DDR + ACS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( Min( ( MLU + DS ) ,Min( ( Min( Min( Min( MLU ,MLU ) ,RRSe ) ,RRSe ) / MUM ) ,DS ) ) + MUC ) )", "obj1": 0.11152416356877323, "obj2": 0.8109286295440395}, {"determining": "( Max( ARS,ACS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.06133828996282528, "obj2": 0.8527512943770094}, {"determining": "( ( ( MRS / ( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) / ( Min( MUM ,MUM ) + ( DS / Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( ( ( MRS / ARS ) * AMS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.6115241635687733, "obj2": 0.3421611980312052}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( CS - RCSe ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.6022304832713755, "obj2": 0.3511488643049632}, {"determining": "( ACS * ( MDR * ( FirstVNF_CPU / ARS ) ) )", "choosing": "Max( ( RRSe - DS ),( ( ( CS * Min( RCSe ,RMSe ) ) / RMSe ) - MUM ) )", "obj1": 0.13940520446096655, "obj2": 0.7546259186234145}, {"determining": "( ( ( ACS + MDR ) - Min( Const ,FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,Min( RRSe ,MLU ) ) - Min( Min( MUM ,RCSe ) ,RMSe ) )", "obj1": 0.18773234200743494, "obj2": 0.6962906431753951}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) * ( PN + ( Max( ( FirstVNF_Mem_Server + MRS ),( PN / BR ) ) * PN ) ) ),( ( FirstVNF_Mem - PN ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( FirstVNF_CPU_Server - MDR ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) - RRSe ) / CS ) + Max( MUC,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4754733754069705}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( PN,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / ( RMSe - MUM ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.33271375464684017, "obj2": 0.533546396929858}, {"determining": "( ( MDR * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ARS ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Const ) / ( BR - MRS ) )", "choosing": "( Max( MUM,CS ) + Max( CS,RCSe ) )", "obj1": 0.5855018587360595, "obj2": 0.38623916531347796}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - MDR ),PN ) )", "choosing": "( ( Min( MUC ,MLU ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4904531606950177}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5062628531538087}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( Max( ACS,FirstVNF_CPU ) + Max( AMS,ARS ) ) ) ) + Min( ( BR * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( Min( Max( RMSe,MUM ) ,Min( MUC ,RMSe ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU ) * ( ( MRS + ARS ) * ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( RMSe - Min( Max( MLU,MLU ) ,Min( MLU ,DS ) ) )", "obj1": 0.12453531598513011, "obj2": 0.7747569007980334}, {"determining": "Min( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),Min( ( AMS + MRS ) ,( Const - MDR ) ) ) ,( ( FirstVNF_Mem - RRS ) - ( ( FirstVNF_CPU_Server + DDR ) + ( RRS * MDR ) ) ) )", "choosing": "( ( ( Min( MUR ,MUC ) - ( MLU - MUC ) ) + ( Max( RMSe,RMSe ) + ( RCSe / RCSe ) ) ) * ( Max( ( MUM * RCSe ),Min( DS ,CS ) ) / ( Max( CS,MUR ) + ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,BR ) ,Min( Max( Min( Max( FirstVNF_CPU_Server,RRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),Min( ( AMS + MRS ) ,( Const - MDR ) ) ) ,( ( ( AMS - ARS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server + DDR ) + ( RRS * MDR ) ) ) ) )", "choosing": "( Max( CS,MUR ) / Max( Min( MUR ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MDR ) / ( AMS - Max( MDR,Min( Max( ARS,MDR ) ,Const ) ) ) )", "choosing": "Max( Min( Max( CS,( ( ( CS + ( ( MUM / RCSe ) * MUR ) ) * Max( MLU,CS ) ) / RMSe ) ) ,( MLU + RRSe ) ),Max( ( DS - MUM ),Min( RMSe ,RCSe ) ) )", "obj1": 0.7657992565055762, "obj2": 0.23057978070353782}, {"determining": "( ( FirstVNF_CPU - MDR ) / ( MDR + PN ) )", "choosing": "Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.24349442379182157, "obj2": 0.6183219875314282}, {"determining": "Max( ( Max( ACS,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server + PN ) + RRS ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( Max( MUR,( Max( CS,MUR ) + MUR ) ) * RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5491787060243039}, {"determining": "( ( PN * RRS ) + ( ( RRS + FirstVNF_CPU ) - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( MLU / MLU ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.9033457249070632, "obj2": 0.10286014125272848}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.6189591078066915, "obj2": 0.32552025396378886}, {"determining": "Max( ( FirstVNF_Mem * Const ),( ( FirstVNF_CPU + ( DDR - ARS ) ) * FirstVNF_Mem ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( MUM / CS ) + ( Max( ( Min( MUC ,MUM ) / ( RCSe / RCSe ) ),( ( RRSe * MUC ) * MLU ) ) * CS ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5809567652789343}, {"determining": "( Min( FirstVNF_RAM_Server ,Const ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( RRSe / Min( DS ,RMSe ) )", "obj1": 0.0687732342007435, "obj2": 0.8228611487309896}, {"determining": "Min( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( RCSe,Min( Max( Max( MLU,RMSe ),( RCSe + CS ) ) ,MLU ) ) / Min( ( Max( MUR,RCSe ) + ( CS - ( ( MUC - ( Max( RCSe,MLU ) * DS ) ) - ( ( MUC * Max( RMSe,MUC ) ) / Max( MLU,CS ) ) ) ) ) ,MUR ) )", "obj1": 0.24907063197026022, "obj2": 0.6074213597482475}, {"determining": "( Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM / CRS ) + ( BR - FirstVNF_RAM ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( RCSe,RCSe ) / Min( ( CS * MUR ) ,( RCSe / ( MUR + Max( MLU,RCSe ) ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.5786530848501615}], "3": [{"determining": "( ( ( MRS / ARS ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( BR * MRS ) ,( ( ( RRS + RRS ) * Const ) * ( BR / AMS ) ) ) )", "choosing": "Max( ( MUM - ( RRSe / DS ) ),Min( CS ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( ACS + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( Min( ( MLU - DS ) ,MUR ) / RCSe ) )", "obj1": 0.055762081784386616, "obj2": 0.85947099254754}, {"determining": "( ( FirstVNF_CPU - MDR ) / ( AMS - Max( MDR,Min( Max( ARS,MDR ) ,Const ) ) ) )", "choosing": "Max( Min( Max( CS,( ( ( CS + ( ( MUM / RCSe ) * MUR ) ) * Max( MLU,CS ) ) / RMSe ) ) ,( MLU + RRSe ) ),Max( ( DS - MUM ),Min( RMSe ,RCSe ) ) )", "obj1": 0.7657992565055762, "obj2": 0.23057978070353782}, {"determining": "( ( MRS + MDR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - MUC ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.8178438661710037, "obj2": 0.13145038246458102}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.23279073508497294}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.649341845636613}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( Min( ( ( DDR / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( MRS / FirstVNF_RAM_Server ) ,( AMS - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - ( Max( RCSe,Max( Max( Max( MUM,RRSe ),MUR ),( MUC / Max( RRSe,RMSe ) ) ) ) * DS ) ) / ( Min( MUM ,MUM ) + ( DS * Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.5594795539033457, "obj2": 0.3683609987943052}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.6189591078066915, "obj2": 0.32552025396378886}, {"determining": "( ( PN * RRS ) + ( ( RRS + FirstVNF_CPU ) - ARS ) )", "choosing": "Min( ( MLU / ( ( MLU - RMSe ) / MUC ) ) ,Max( Min( ( MLU / MLU ) ,RRSe ),( ( MLU + RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.9033457249070632, "obj2": 0.10286014125272848}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.6356877323420075, "obj2": 0.24345658077545113}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) * ( DDR * ACS ) )", "choosing": "Min( ( MUM - Max( MUC,MLU ) ) ,Max( CS,CS ) )", "obj1": 0.17286245353159851, "obj2": 0.7212423634061148}, {"determining": "Max( Min( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( FirstVNF_Mem + BR ) ) ,Max( ( FirstVNF_Mem - DDR ),Max( ARS,FirstVNF_Mem_Server ) ) ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.3996282527881041, "obj2": 0.4597462769388066}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( ( ( FirstVNF_Mem_Server + ( ACS + ARS ) ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + MDR ) ) ) )", "choosing": "( ( ( CS - RCSe ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( ( MUC + CS ) + Min( DS ,MUC ) ),Max( Min( MLU ,( DS / MUM ) ),MUC ) ) / CS ) ) )", "obj1": 0.983271375464684, "obj2": 0.004995968627009623}, {"determining": "Max( ( CRS * PN ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( ( MUC / CS ) + Min( MUC ,DS ) ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.5092936802973977, "obj2": 0.3900709608350921}, {"determining": "Max( ( Max( ACS,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server + PN ) + RRS ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( Max( MUR,( Max( CS,MUR ) + MUR ) ) * RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5491787060243039}, {"determining": "( ( ( BR + Min( MRS ,FirstVNF_Mem ) ) * FirstVNF_RAM ) - ( CRS * PN ) )", "choosing": "( ( MUC / MLU ) + ( MUC / CS ) )", "obj1": 0.4349442379182156, "obj2": 0.4415934368733365}, {"determining": "( ( FirstVNF_CPU - Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / ( MDR + PN ) )", "choosing": "Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,CS ) - RRSe ) )", "obj1": 0.9516728624535316, "obj2": 0.04839290213887716}, {"determining": "Max( Min( FirstVNF_Mem ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ),Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / CS ) + Min( ( RMSe / RMSe ) ,Max( ( ( CS / Min( RCSe ,( ( MUR - MUR ) / RMSe ) ) ) / ( RCSe * RCSe ) ),RRSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.57452840880962}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5062628531538087}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( CS - RCSe ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.6022304832713755, "obj2": 0.3511488643049632}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) * ( FirstVNF_CPU + AMS ) ),( ( FirstVNF_Mem - PN ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( FirstVNF_CPU_Server - MDR ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.4479553903345725, "obj2": 0.4249712393846184}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ARS - BR ) )", "choosing": "( Min( ( ( CS - DS ) + ( MUR - RRSe ) ) ,Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,Max( Min( MUR ,RMSe ),( RCSe + ( DS * MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6256408213932528}, {"determining": "( Min( Max( Min( RRS ,ACS ),( ( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,RMSe ) / Min( ( CS * MUR ) ,MUR ) )", "obj1": 0.4721189591078067, "obj2": 0.416559513614516}, {"determining": "( ( ACS * FirstVNF_RAM ) - ( CRS * Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( Max( ACS,FirstVNF_CPU ) + Max( AMS,ARS ) ) ) ) )", "choosing": "( ( MUC / CS ) + Min( ( Min( RMSe ,DS ) * ( RRSe - MUR ) ) ,DS ) )", "obj1": 0.32899628252788105, "obj2": 0.5368161598709191}, {"determining": "( ( Max( ARS,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + ( ( Max( FirstVNF_CPU,( Min( MDR ,BR ) * ( DDR + ACS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( Min( ( MLU + DS ) ,Min( ( Min( Min( Min( MLU ,MLU ) ,RRSe ) ,RRSe ) / MUM ) ,DS ) ) + MUC ) )", "obj1": 0.11152416356877323, "obj2": 0.8109286295440395}, {"determining": "Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.11524163568773234, "obj2": 0.7763386136262201}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( PN,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / ( RMSe - MUM ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.33271375464684017, "obj2": 0.533546396929858}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.23605947955390336, "obj2": 0.6050109020733968}, {"determining": "( ( PN * RRS ) + ( ( RRS + FirstVNF_CPU ) - ARS ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 0.9460966542750929, "obj2": 0.049511890088686464}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6188536945460537}, {"determining": "( Min( BR ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( Min( RRSe ,MLU ) + ( RRSe + RCSe ) ) + ( ( RCSe * RCSe ) - ( CS * MUC ) ) ) ,( ( Max( MUC,MLU ) + ( MUM + RCSe ) ) / ( ( DS + RRSe ) + ( MUM * RMSe ) ) ) ) - ( MUC - RRSe ) )", "obj1": 0.9052044609665427, "obj2": 0.09198356755165724}, {"determining": "( ( Min( ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( ( ( Min( RCSe ,RCSe ) - ( CS * CS ) ) + ( CS * MLU ) ) ,( ( Max( MUC,MLU ) + ( MUM + RCSe ) ) / ( ( DS + RRSe ) + ( MUM * RMSe ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.062336144212425434}, {"determining": "( Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.10408921933085502, "obj2": 0.8156091657419353}, {"determining": "Max( ( FirstVNF_Mem * Const ),( ( FirstVNF_CPU + ( DDR - ARS ) ) * FirstVNF_Mem ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( MUM / CS ) + ( Max( ( Min( MUC ,MUM ) / ( RCSe / RCSe ) ),( ( RRSe * MUC ) * MLU ) ) * CS ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5809567652789343}, {"determining": "Max( ( DDR + DDR ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( RMSe / CS ) + ( RRSe - RRSe ) )", "obj1": 0.3643122676579926, "obj2": 0.5017700828011633}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( ( ( MRS / ARS ) * AMS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.6115241635687733, "obj2": 0.3421611980312052}, {"determining": "( ( ( CRS * FirstVNF_RAM ) + FirstVNF_CPU ) * ( ( MRS + ARS ) * ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( RMSe - Min( Max( MLU,MLU ) ,Min( MLU ,DS ) ) )", "obj1": 0.12453531598513011, "obj2": 0.7747569007980334}, {"determining": "Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( ( Max( AMS,( FirstVNF_RAM * MDR ) ) * ( PN * PN ) ) * FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( ( RRSe / MUM ) ,( ( Min( Max( RCSe,MUC ) ,MUR ) - ( MLU - ( RCSe - DS ) ) ) / ( ( MUR / Min( MLU ,RMSe ) ) * Min( Min( MUM ,CS ) ,RMSe ) ) ) ) / Min( MUC ,MUC ) ) ,Min( MUC ,RMSe ) ) ,( Min( RMSe ,DS ) * ( MUC / MUM ) ) )", "obj1": 0.4795539033457249, "obj2": 0.399004177965975}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( RCSe + RCSe ) * ( RRSe + MUR ) ) )", "obj1": 0.912639405204461, "obj2": 0.06858794103290011}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),ACS ) + ( BR / PN ) )", "choosing": "( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) )", "obj1": 0.06691449814126393, "obj2": 0.8338167335396931}, {"determining": "( Max( ARS,ACS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.06133828996282528, "obj2": 0.8527512943770094}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( MUM - RMSe ) * ( RRSe + MUR ) ) )", "obj1": 0.13382899628252787, "obj2": 0.7557953618448381}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( MLU,CS ) )", "obj1": 0.25464684014869887, "obj2": 0.5910897401745681}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,ACS ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( Min( Max( RMSe,MUM ) ,MUR ) ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.818441036715351}, {"determining": "Max( ( FirstVNF_RAM_Server * ARS ),( Min( RRS ,FirstVNF_CPU ) - ( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( ( RCSe - ( MUC - MUM ) ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,Min( RCSe ,( ( Max( MUM,MUR ) + ( MUR - MUR ) ) + MLU ) ) ) / ( ( RRSe * MUM ) - MUC ) ) ) )", "obj1": 0.25092936802973975, "obj2": 0.6030938801450434}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - MDR ),PN ) )", "choosing": "( ( Min( MUC ,MLU ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4904531606950177}, {"determining": "Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( Max( ACS,FirstVNF_CPU ) + Max( AMS,ARS ) ) )", "choosing": "Min( Min( Max( RMSe,MUM ) ,Min( MUC ,RMSe ) ) ,( Min( RMSe ,DS ) * ( RRSe - MUR ) ) )", "obj1": 0.16728624535315986, "obj2": 0.7377804467690534}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.14869888475836432, "obj2": 0.747541182854845}], "4": [{"determining": "( ( RRS * PN ) + ( ( BR / RRS ) - CRS ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,( Max( MUM,CS ) + Max( CS,( Max( Min( MUM ,MUC ),( DS + MUM ) ) * ( MUC - MUM ) ) ) ) ) ) / ( Min( MUM ,MUM ) + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ARS ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) / ( Min( MUM ,MUM ) + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( ACS + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( Min( ( MLU - DS ) ,MUR ) / RCSe ) )", "obj1": 0.055762081784386616, "obj2": 0.85947099254754}, {"determining": "( ( MRS + MDR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - MUC ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.8178438661710037, "obj2": 0.13145038246458102}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.21814855034658823}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.649341845636613}, {"determining": "( ( PN * RRS ) + ( ACS - ARS ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.6189591078066915, "obj2": 0.32552025396378886}, {"determining": "( ( MRS + MDR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - MUC ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16905576495721023}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.6356877323420075, "obj2": 0.24345658077545113}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( Min( ( ( DDR / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( MRS / FirstVNF_RAM_Server ) ,( AMS - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - ( Max( RCSe,Max( Max( Max( MUM,RRSe ),MUR ),( MUC / Max( RRSe,RMSe ) ) ) ) * DS ) ) / ( Min( MUM ,MUM ) + ( DS * Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.5594795539033457, "obj2": 0.3683609987943052}, {"determining": "( ( MRS + MDR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - MUC ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16905576495721023}, {"determining": "( ( PN * RRS ) + ( ( RRS + FirstVNF_CPU ) - ARS ) )", "choosing": "( RMSe - Min( Max( MLU,MLU ) ,Min( MLU ,DS ) ) )", "obj1": 0.8996282527881041, "obj2": 0.1071679242248859}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.4535228637559701}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) * ( DDR * ACS ) )", "choosing": "Min( ( MUM - Max( MUC,MLU ) ) ,Max( CS,CS ) )", "obj1": 0.17286245353159851, "obj2": 0.7212423634061148}, {"determining": "( ( ( ( FirstVNF_Mem / Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) ) ) / ( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - ( Max( RCSe,MUC ) * DS ) ) / ( Min( MUM ,MUM ) + ( DS / Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.5947955390334573, "obj2": 0.34387818827475025}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.966542750929368, "obj2": 0.038897154010684325}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Const ) * ( FirstVNF_CPU + AMS ) ),( ( FirstVNF_Mem - PN ) * ( FirstVNF_CPU_Server / MRS ) ) ) * ( ( ( FirstVNF_CPU_Server - MDR ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( ( MUC / CS ) + Min( MUC ,DS ) ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.5185873605947955, "obj2": 0.38691023799929747}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6256408213932528}, {"determining": "Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( ( Max( AMS,( FirstVNF_RAM * MDR ) ) * ( PN * PN ) ) * FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( ( RRSe / MUM ) ,( ( Min( Max( RCSe,MUC ) ,MUR ) - ( MLU - ( RCSe - DS ) ) ) / ( ( MUR / Min( MLU ,RMSe ) ) * Min( Min( MUM ,CS ) ,RMSe ) ) ) ) / Min( MUC ,MUC ) ) ,Min( MUC ,RMSe ) ) ,( Min( RMSe ,DS ) * ( MUC / MUM ) ) )", "obj1": 0.4795539033457249, "obj2": 0.399004177965975}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( ( ( FirstVNF_Mem_Server + ( ACS + ARS ) ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + MDR ) ) ) )", "choosing": "( ( ( CS - RCSe ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( ( MUC + CS ) + Min( DS ,MUC ) ),Max( Min( MLU ,( DS / MUM ) ),MUC ) ) / CS ) ) )", "obj1": 0.983271375464684, "obj2": 0.004995968627009623}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ARS - BR ) )", "choosing": "( Min( ( ( CS - DS ) + ( MUR - RRSe ) ) ,Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,Max( Min( MUR ,RMSe ),( RCSe + ( DS * MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.48433480542598634}, {"determining": "Max( ( Max( ACS,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server + PN ) + RRS ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( Max( MUR,( Max( CS,MUR ) + MUR ) ) * RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5491787060243039}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) * FirstVNF_RAM ) + FirstVNF_CPU ) * ( ( MRS + ARS ) * ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "( RMSe - ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.4256505576208178, "obj2": 0.44176994643171774}, {"determining": "Max( ( CRS * PN ),Max( Max( ( FirstVNF_RAM_Server / CRS ),Max( RRS,DDR ) ),( Min( CRS ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( Max( MUC,DS ),Max( RMSe,MUC ) ) ,Min( ( ( MUC / CS ) + Min( MUC ,DS ) ) ,( DS + DS ) ) ) - Max( Max( ( RRSe / MUC ),( RRSe / MUR ) ),( ( MLU - MUC ) / ( DS - MLU ) ) ) )", "obj1": 0.5092936802973977, "obj2": 0.3900709608350921}, {"determining": "( Min( Max( Min( RRS ,ACS ),( ( Max( FirstVNF_CPU,MRS ) * Max( DDR,FirstVNF_RAM_Server ) ) - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( DS ,RMSe ) / Min( ( CS * MUR ) ,MUR ) )", "obj1": 0.4721189591078067, "obj2": 0.416559513614516}, {"determining": "Max( Min( FirstVNF_Mem ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ),Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / CS ) + Min( ( RMSe / RMSe ) ,Max( ( ( CS / Min( RCSe ,( ( MUR - MUR ) / RMSe ) ) ) / ( RCSe * RCSe ) ),RRSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.57452840880962}, {"determining": "( ( ACS - PN ) * PN )", "choosing": "Min( ( MUM - Max( CS,CS ) ) ,Max( CS,CS ) )", "obj1": 0.3475836431226766, "obj2": 0.5061795238343793}, {"determining": "( ( Min( ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),Max( AMS,FirstVNF_Mem_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) * Min( ( MRS / FirstVNF_CPU ) ,( ACS + ARS ) ) )", "choosing": "Min( ( ( Min( RCSe ,RCSe ) - ( CS * CS ) ) + ( CS * MLU ) ) ,( ( Max( MUC,MLU ) + ( MUM + RCSe ) ) / ( ( DS + RRSe ) + ( ( Min( MUC ,MLU ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * RMSe ) ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07926693418276624}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.23279073508497294}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( PN,RRS ) - MDR ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / ( RMSe - MUM ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.34014869888475835, "obj2": 0.5226864332470932}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - ( ( MUM - RMSe ) * ( RRSe + MUR ) ) )", "obj1": 0.13382899628252787, "obj2": 0.7557953618448381}, {"determining": "Max( Max( BR,( PN - FirstVNF_CPU_Server ) ),( ( BR / PN ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / Min( CS ,Max( Max( RRSe,MUR ),( MLU / DS ) ) ) ) + ( RRSe - RRSe ) )", "obj1": 0.31970260223048325, "obj2": 0.5356273780633413}, {"determining": "( ( Min( AMS ,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUM ,MUM ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.11338289962825279, "obj2": 0.7869108566878853}, {"determining": "( ( PN * RRS ) + Max( RRS,DDR ) )", "choosing": "( ( MLU / MLU ) - MLU )", "obj1": 0.12267657992565056, "obj2": 0.7624367664001723}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( PN,RRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / ( RMSe - MUM ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.30855018587360594, "obj2": 0.5472530762725573}, {"determining": "( ( Max( ARS,ACS ) / Min( RRS ,FirstVNF_Mem ) ) + ( ( Max( FirstVNF_CPU,( Min( MDR ,BR ) * ( DDR + ACS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU,ACS ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( Min( ( MLU + DS ) ,Min( ( Min( Min( Min( MLU ,MLU ) ,RRSe ) ,RRSe ) / MUM ) ,DS ) ) + MUC ) )", "obj1": 0.11152416356877323, "obj2": 0.8109286295440395}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) + Min( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( ( AMS * ARS ),FirstVNF_CPU ) ) ) ,( BR * MRS ) ) )", "choosing": "Max( ( ( ( RMSe + Max( Max( MLU,MUM ),( DS * MLU ) ) ) / DS ) - MUM ),Min( Min( Max( RMSe,MUM ) ,MUR ) ,( ( CS - DS ) - ( MUM / RCSe ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.818441036715351}, {"determining": "( Max( ( FirstVNF_CPU - FirstVNF_Mem ),Min( PN ,FirstVNF_Mem_Server ) ) * ( ( ACS - PN ) * ( DDR * ARS ) ) )", "choosing": "( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) )", "obj1": 0.15427509293680297, "obj2": 0.7341352310143212}, {"determining": "( ( Min( ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ,DDR ) / ( FirstVNF_Mem - ARS ) ) * Min( ( MRS / FirstVNF_CPU ) ,( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( RCSe,RMSe ) - Max( CS,CS ) ) - RRSe ) * RMSe ) / ( ( Min( MUM ,CS ) * Max( RRSe,MUR ) ) / ( RCSe - MUR ) ) ) - ( CS / Max( ( MUR / RRSe ),( ( MUR - ( RRSe + Max( CS,MLU ) ) ) / DS ) ) ) ) * Min( Max( ( MUR - CS ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9312267657992565, "obj2": 0.05080098399701133}, {"determining": "Max( ( FirstVNF_Mem * Const ),( ( FirstVNF_CPU + ( DDR - ARS ) ) * FirstVNF_Mem ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( MUM / CS ) + ( Max( ( Min( MUC ,MUM ) / ( RCSe / RCSe ) ),( ( RRSe * MUC ) * MLU ) ) * CS ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5809567652789343}, {"determining": "Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.11524163568773234, "obj2": 0.7763386136262201}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( MLU,CS ) )", "obj1": 0.25464684014869887, "obj2": 0.5910897401745681}, {"determining": "( Min( ( ( Const / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( ( ( MRS / ARS ) * AMS ) ,( ACS + ARS ) ) / Min( ( CRS + AMS ) ,( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( ( MUM - RMSe ) - Min( RRSe ,DS ) ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) )", "obj1": 0.6115241635687733, "obj2": 0.3421611980312052}, {"determining": "Max( ( FirstVNF_RAM_Server * ARS ),( Min( RRS ,FirstVNF_CPU ) - ( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( ( RCSe - ( MUC - MUM ) ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,Min( RCSe ,( ( Max( MUM,MUR ) + ( MUR - MUR ) ) + MLU ) ) ) / ( ( RRSe * MUM ) - MUC ) ) ) )", "obj1": 0.25092936802973975, "obj2": 0.6030938801450434}, {"determining": "Max( ( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( MLU,CS ) ) - DS ) - ( CS / RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.23234200743494424, "obj2": 0.6162046511266952}, {"determining": "Max( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.45353159851301117, "obj2": 0.4211995250661408}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.23605947955390336, "obj2": 0.6050109020733968}, {"determining": "( Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.09479553903345725, "obj2": 0.8159003012699654}, {"determining": "Max( ( Max( RRS,FirstVNF_CPU ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( ( CS - DS ) - ( CS / RCSe ) ) - Min( MLU ,MLU ) )", "obj1": 0.16728624535315986, "obj2": 0.7245447140613424}, {"determining": "( Max( ARS,ACS ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( CS / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.06133828996282528, "obj2": 0.8527512943770094}], "5": [{"determining": "( ( ( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUC ) / ( Min( MUM ,( MUR + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) + ( ( BR / RRS ) - CRS ) )", "choosing": "( ( ( MUM - RMSe ) - Min( RRSe ,( Max( MUM,CS ) + Max( CS,( Max( Min( MUM ,MUC ),( DS + MUM ) ) * ( MUC - MUM ) ) ) ) ) ) / ( Min( MUM ,MUM ) + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8690360888682355}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.5631970260223048, "obj2": 0.2952133608731482}, {"determining": "( ( MRS + MDR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - MUC ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.8178438661710037, "obj2": 0.13145038246458102}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.21814855034658823}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( Min( ( ( DDR / FirstVNF_CPU ) / Min( FirstVNF_CPU ,CRS ) ) ,( Min( FirstVNF_RAM ,CRS ) * ( ARS * RRS ) ) ) + ( Min( Max( RRS,RRS ) ,( ACS + ARS ) ) / Min( ( MRS / FirstVNF_RAM_Server ) ,( AMS - FirstVNF_CPU_Server ) ) ) ) ) * AMS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( MUM - RMSe ) - ( Max( RCSe,Max( Max( Max( MUM,RRSe ),MUR ),( MUC / Max( RRSe,RMSe ) ) ) ) * DS ) ) / ( Min( MUM ,MUM ) + ( DS * Min( ( ( ( CS + MLU ) * Max( MLU,CS ) ) / RMSe ) ,( Max( RMSe,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.5594795539033457, "obj2": 0.3683609987943052}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MUC / CS ) + Min( MUC ,DS ) )", "obj1": 0.6356877323420075, "obj2": 0.24345658077545113}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Min( AMS ,RRS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS - RCSe ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( Min( MUC ,DS ) + ( MUC / ( RRSe - ( RRSe / RRSe ) ) ) ),( Min( Min( Max( RMSe,MUM ) ,MUR ) ,( ( CS - DS ) / ( CS / RCSe ) ) ) * MUC ) ) / CS ) ) )", "obj1": 0.8531598513011153, "obj2": 0.10531739096158908}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.7453531598513011, "obj2": 0.16714811397025647}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( CS / RCSe ) )", "obj1": 0.5037174721189591, "obj2": 0.38520395800226637}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) ) ) * Min( ( ( MUR - CS ) * ( CS - DS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8773234200743495, "obj2": 0.06967984681064109}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.649341845636613}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS * ( Min( MDR ,( PN * RRS ) ) * AMS ) ) ) ) )", "choosing": "( ( ( DS - MUM ) - Min( Min( MUC ,MUR ) ,RRSe ) ) / ( ( CS / Max( ( ( MUC / MUM ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) ) + Min( RCSe ,MUM ) ) )", "obj1": 0.9405204460966543, "obj2": 0.035789530847935944}, {"determining": "( ( MRS + MDR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - MUC ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16905576495721023}, {"determining": "( ( ( ARS / FirstVNF_Mem ) * FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( Max( ( MLU - DS ),MUR ) / RCSe ) / ( Min( MUM ,MUM ) + ( Max( ( ( MLU / CS ) + Min( MUC ,DS ) ),( Min( DS ,( ( MUC * RMSe ) + MUM ) ) * MUC ) ) / Min( DS ,DS ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.012285004594949599}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.4535228637559701}, {"determining": "Max( Max( MDR,Max( DDR,RRS ) ),Min( ( Max( MDR,FirstVNF_Mem ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) * ( ( MLU - DS ) * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Min( CS ,( MLU - RRSe ) ) + DS ) ) )", "obj1": 0.15055762081784388, "obj2": 0.7202593187373998}, {"determining": "( ( PN * RRS ) + Max( RRS,DDR ) )", "choosing": "( ( MLU / MLU ) - MLU )", "obj1": 0.12267657992565056, "obj2": 0.7624367664001723}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.23279073508497294}, {"determining": "Max( Max( ( CRS + FirstVNF_RAM ),( RRS / Const ) ),( ( Max( AMS,( FirstVNF_RAM * MDR ) ) * ( PN * PN ) ) * FirstVNF_Mem ) )", "choosing": "Min( Min( ( Min( ( RRSe / MUM ) ,( ( Min( Max( RCSe,MUC ) ,MUR ) - ( MLU - ( RCSe - DS ) ) ) / ( ( MUR / Min( MLU ,RMSe ) ) * Min( Min( MUM ,CS ) ,RMSe ) ) ) ) / Min( MUC ,MUC ) ) ,Min( MUC ,RMSe ) ) ,( Min( RMSe ,DS ) * ( MUC / MUM ) ) )", "obj1": 0.4795539033457249, "obj2": 0.399004177965975}, {"determining": "Max( ( Max( ACS,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server + PN ) + RRS ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( Max( MUR,( Max( CS,MUR ) + MUR ) ) * RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5491787060243039}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1654275092936803, "obj2": 0.6730102419907613}, {"determining": "( ( MRS + MDR ) - Max( CRS,FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - MUC ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16905576495721023}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( Min( ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ,DDR ) / ( FirstVNF_Mem - ARS ) ) * Min( ( MRS / FirstVNF_CPU ) ,( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( RCSe,RMSe ) - Max( CS,CS ) ) - RRSe ) * RMSe ) / ( ( Min( MUM ,CS ) * Max( RRSe,MUR ) ) / ( RCSe - MUR ) ) ) - ( CS / Max( ( MUR / RRSe ),( ( MUR - ( RRSe + Max( CS,MLU ) ) ) / DS ) ) ) ) * Min( Max( ( MUR - CS ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.061042647646970954}, {"determining": "Max( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.4684014869888476, "obj2": 0.4085462882826874}, {"determining": "( ( DDR / ( FirstVNF_RAM_Server - ( Max( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + AMS ),Const ) - ( FirstVNF_CPU - RRS ) ) ) ) * Max( ( MRS / FirstVNF_CPU ),Max( ARS,( ( FirstVNF_CPU - ( ( CRS - Const ) - PN ) ) + ACS ) ) ) )", "choosing": "( Min( ( ( MUR - CS ) * Max( RMSe,MUM ) ) ,( ( CS - MUR ) + RCSe ) ) * ( ( MUM - ( ( RCSe + CS ) / Max( RCSe,( RCSe * ( Min( MUC ,MUC ) + ( RCSe - RMSe ) ) ) ) ) ) + ( CS + Max( MLU,DS ) ) ) )", "obj1": 0.9312267657992565, "obj2": 0.05067457743833488}, {"determining": "Max( ( ( ( Max( FirstVNF_RAM_Server,( Min( FirstVNF_Mem ,MRS ) - ACS ) ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) * Max( MRS,FirstVNF_RAM_Server ) ) * Max( Max( ACS,FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( CS + MLU ) - ( ( Min( MUC ,DS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.2788104089219331, "obj2": 0.5725837016949311}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( RCSe,Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4052044609665427, "obj2": 0.43917221733969414}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( ( ACS - FirstVNF_Mem ),( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / ( CS - DS ) ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.42693943442979826}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1524163568773234, "obj2": 0.6893800611486944}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * ( ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) - MDR ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( Min( ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) ,MUR ) ,( ( CS - DS ) - ( CS / RCSe ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.818441036715351}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.43864829678376915}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( PN,RRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / ( RMSe - MUM ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.30855018587360594, "obj2": 0.5472530762725573}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ARS - BR ) )", "choosing": "( Min( ( ( CS - DS ) + ( MUR - RRSe ) ) ,Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,Max( Min( MUR ,RMSe ),( RCSe + ( DS * MUC ) ) ) ) )", "obj1": 0.3828996282527881, "obj2": 0.4822818144704237}, {"determining": "Max( ( ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( Min( MUC ,RMSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( MLU,CS ) ) - DS ) - ( CS / RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.22862453531598512, "obj2": 0.6207253133075945}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) + Min( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( ( AMS * ARS ),FirstVNF_CPU ) ) ) ,( BR * MRS ) ) )", "choosing": "Max( ( ( ( RMSe + Max( Max( MLU,MUM ),( DS * MLU ) ) ) / DS ) - MUM ),Min( Min( Max( RMSe,MUM ) ,MUR ) ,( ( CS - DS ) - ( MUM / RCSe ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.8506419867182664}, {"determining": "( ACS / ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( MUM - Max( CS,CS ) ) )", "obj1": 0.33643122676579923, "obj2": 0.522140272104164}, {"determining": "( ( ACS - PN ) * PN )", "choosing": "Min( ( MUM - Max( CS,CS ) ) ,Max( CS,CS ) )", "obj1": 0.3475836431226766, "obj2": 0.5061795238343793}, {"determining": "Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.11524163568773234, "obj2": 0.7763386136262201}, {"determining": "( Max( ( ( FirstVNF_Mem / ACS ) - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) * ( ( ACS - PN ) * Min( DDR ,ARS ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - Min( DS ,( CS + Max( Min( ( MLU * CS ) ,( ( RRSe / RRSe ) * RRSe ) ),( ( RMSe * Min( Max( RRSe,CS ) ,( MUM + MLU ) ) ) + MUR ) ) ) ) )", "obj1": 0.258364312267658, "obj2": 0.5772477529257034}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( MLU,CS ) )", "obj1": 0.25464684014869887, "obj2": 0.5910897401745681}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( Max( RRS,RRS ) - MDR ),PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / ( ( CS - DS ) + ( MUR - RRSe ) ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.49669996442191}, {"determining": "Max( Max( BR,( PN - FirstVNF_CPU_Server ) ),( ( BR / PN ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe / Min( CS ,Max( Max( RRSe,MUR ),( MLU / DS ) ) ) ) + ( RRSe - RRSe ) )", "obj1": 0.31970260223048325, "obj2": 0.5356273780633413}, {"determining": "Max( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.45353159851301117, "obj2": 0.4211995250661408}, {"determining": "( Max( FirstVNF_CPU,Max( PN,FirstVNF_Mem_Server ) ) * ( ( ACS - PN ) * ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server - ( RRS - PN ) ) ) * ARS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) ) - ( ( RRSe - DS ) * ( RRSe + MUR ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7984798897019729}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ( AMS / ( MDR * FirstVNF_RAM ) ) ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM - ( RRSe / DS ) ),Min( Min( Max( RMSe,MUM ) ,MUR ) ,( ( ( RMSe - DS ) - DS ) - ( CS / RCSe ) ) ) )", "obj1": 0.09665427509293681, "obj2": 0.8112108481022486}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) )", "choosing": "( ( ( Min( MUC ,RCSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.16171003717472118, "obj2": 0.6878382302039846}], "6": [{"determining": "( CRS - Max( Min( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( PN * MDR ),FirstVNF_CPU_Server ) ) ) ) ,CRS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) + ( ( CS - DS ) + Min( MUM ,Min( Min( RRSe ,MUR ) ,Min( CS ,( ( MLU + MUC ) + DS ) ) ) ) ) ) * Min( ( ( CS - CS ) * ( DS / RMSe ) ) ,( ( MLU * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( RCSe / MUC ) / ( Min( MUM ,( MUR + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8690360888682355}, {"determining": "( ( Const / ( FirstVNF_RAM_Server + Min( FirstVNF_Mem ,CRS ) ) ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( RMSe ,MUR ) )", "obj1": 0.8104089219330854, "obj2": 0.11484816593929804}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( Max( ( Max( RRS,RRS ) - MDR ),PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MUC / CS ) + Min( MUC ,DS ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7007434944237918, "obj2": 0.19643581331961496}, {"determining": "( ( ( DDR * ARS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( MUR * ( Max( RRSe,( ( CS * ( MLU + MLU ) ) * ( Max( MUM,MUM ) + DS ) ) ) * MUC ) ) ) - Max( MLU,CS ) )", "obj1": 0.7695167286245354, "obj2": 0.15652682704061097}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Min( AMS ,RRS ) ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS - RCSe ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( Min( MUC ,DS ) + ( MUC / ( RRSe - ( RRSe / RRSe ) ) ) ),( Min( Min( Max( RMSe,MUM ) ,MUR ) ,( ( CS - DS ) / ( CS / RCSe ) ) ) * MUC ) ) / CS ) ) )", "obj1": 0.8531598513011153, "obj2": 0.10531739096158908}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.5631970260223048, "obj2": 0.2952133608731482}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.533457249070632, "obj2": 0.3492296798645084}, {"determining": "( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) * Min( ( ( MUR - CS ) * ( CS - DS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8773234200743495, "obj2": 0.06801872115077816}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.21814855034658823}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( Const / Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5910780669144982, "obj2": 0.29407248187677293}, {"determining": "( ( ( ARS / FirstVNF_Mem ) * FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( Max( ( MLU - DS ),MUR ) / RCSe ) / ( Min( MUM ,MUM ) + ( Max( ( ( MLU / CS ) + Min( MUC ,DS ) ),( Min( DS ,( ( MUC * RMSe ) + MUM ) ) * MUC ) ) / Min( DS ,DS ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.012285004594949599}, {"determining": "( ACS / ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( MUM - Max( CS,CS ) ) )", "obj1": 0.6133828996282528, "obj2": 0.2594144023474734}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.649341845636613}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS * ( Min( MDR ,( PN * RRS ) ) * AMS ) ) ) ) )", "choosing": "( ( ( DS - MUM ) - Min( Min( MUC ,MUR ) ,RRSe ) ) / ( ( CS / Max( ( ( MUC / MUM ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) ) + Min( RCSe ,MUM ) ) )", "obj1": 0.9405204460966543, "obj2": 0.035789530847935944}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( ( Min( RRS ,ACS ) * ( FirstVNF_CPU_Server - CRS ) ) ,( Min( ( FirstVNF_Mem + ( FirstVNF_RAM_Server + CRS ) ) ,FirstVNF_RAM ) * BR ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( CS ,Min( Min( MUR ,( CS / MUC ) ) ,( RCSe * MUM ) ) ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16818488742700916}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,CS ) + Max( CS,RCSe ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1524163568773234, "obj2": 0.6893800611486944}, {"determining": "( ( Min( ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ,DDR ) / ( FirstVNF_Mem - ARS ) ) * Min( ( MRS / FirstVNF_CPU ) ,( FirstVNF_CPU - Max( FirstVNF_Mem,Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( RCSe,RMSe ) - Max( CS,CS ) ) - RRSe ) * RMSe ) / ( ( Min( MUM ,CS ) * Max( RRSe,MUR ) ) / ( RCSe - MUR ) ) ) - ( CS / Max( ( MUR / RRSe ),( ( MUR - ( RRSe + Max( CS,MLU ) ) ) / DS ) ) ) ) * Min( Max( ( MUR - CS ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.061042647646970954}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + Min( MDR ,RRS ) ) ),( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7199243685499878}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + Min( MDR ,RRS ) ) ),( RRS + FirstVNF_CPU ) )", "choosing": "( ( ( Min( MUC ,RCSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,Min( MLU ,MLU ) ) + DS ) ) )", "obj1": 0.16171003717472118, "obj2": 0.6664241983983267}, {"determining": "( ( Const / Min( ( Min( AMS ,( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server * MRS ) ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * PN ) ,Min( FirstVNF_RAM ,MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * ( ( MUM * RMSe ) * MLU ) ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + RMSe ) ) )", "obj1": 0.2788104089219331, "obj2": 0.558008369654011}, {"determining": "Min( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.22862453531598512, "obj2": 0.610726103980985}, {"determining": "( ( ACS - PN ) * PN )", "choosing": "Min( ( MUM - Max( CS,CS ) ) ,Max( CS,CS ) )", "obj1": 0.3475836431226766, "obj2": 0.5061795238343793}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.4523861904803041}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( MUR + ( DS - CS ) ) ) + ( Max( ( ( MUM / RRSe ) * Min( DS ,RCSe ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.3680297397769517, "obj2": 0.48451826455218594}, {"determining": "( Max( FirstVNF_CPU,Max( PN,FirstVNF_Mem_Server ) ) * ( ( ACS - PN ) * ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU_Server - ( RRS - PN ) ) ) * ARS ) ) )", "choosing": "( ( ( ( ( DS + MLU ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) ) - ( ( RRSe - DS ) * ( RRSe + MUR ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7984798897019729}, {"determining": "Max( ( RRS + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( MLU / MLU ) - Min( MLU ,MLU ) )", "obj1": 0.11524163568773234, "obj2": 0.7763386136262201}, {"determining": "( ( PN * RRS ) + Max( RRS,DDR ) )", "choosing": "( ( MLU / MLU ) - MLU )", "obj1": 0.12267657992565056, "obj2": 0.7624367664001723}, {"determining": "( Max( ( ( FirstVNF_Mem / ACS ) - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) * ( ( ACS - PN ) * Min( DDR ,ARS ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - Min( DS ,( CS + Max( Min( ( MLU * CS ) ,( ( RRSe / RRSe ) * RRSe ) ),( ( RMSe * Min( Max( RRSe,CS ) ,( MUM + MLU ) ) ) + MUR ) ) ) ) )", "obj1": 0.258364312267658, "obj2": 0.5772477529257034}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.23279073508497294}, {"determining": "( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * ( ( ( ( FirstVNF_RAM * CRS ) + Max( ACS,MRS ) ) / Min( ( DDR + CRS ) ,( Const * FirstVNF_CPU_Server ) ) ) - MDR ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( RRSe / DS ) - MUM ),Min( Min( ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) ,MUR ) ,( ( CS - DS ) - ( CS / RCSe ) ) ) )", "obj1": 0.07434944237918216, "obj2": 0.818441036715351}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03923904227809862}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( CS / RCSe ) )", "obj1": 0.5037174721189591, "obj2": 0.38520395800226637}, {"determining": "Max( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.45353159851301117, "obj2": 0.4211995250661408}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( RCSe,Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4052044609665427, "obj2": 0.43917221733969414}, {"determining": "Max( ( ( Min( Max( MDR,ARS ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / MLU ) - ( CS * Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.603389767214429}, {"determining": "( ( ( Max( PN,RRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) + DDR ) + Min( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( ( AMS * ARS ),FirstVNF_CPU ) ) ) ,( BR * MRS ) ) )", "choosing": "Max( ( ( ( RMSe + Max( Max( MLU,MUM ),( DS * MLU ) ) ) / DS ) - MUM ),Min( Min( Max( RMSe,MUM ) ,MUR ) ,Max( ( RCSe / ( RMSe - MUM ) ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.9944237918215614, "obj2": 0.004826642599552053}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( CS / RCSe ) )", "obj1": 0.5204460966542751, "obj2": 0.3709257719173005}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.43864829678376915}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.45724907063197023, "obj2": 0.4010415560194639}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) ) ) * Min( ( ( MUR - CS ) * ( CS - DS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.47848338709790345}, {"determining": "( ( Max( Min( AMS ,FirstVNF_CPU ),FirstVNF_CPU_Server ) / Const ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - Max( Max( MUC,MUM ),DS ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( CS * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6263940520446096, "obj2": 0.24941295672959637}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.7453531598513011, "obj2": 0.16714811397025647}, {"determining": "Max( ( Max( ACS,FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server + PN ) + RRS ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( Max( MUR,( Max( CS,MUR ) + MUR ) ) * RCSe ) ) + ( RRSe - RRSe ) )", "obj1": 0.2936802973977695, "obj2": 0.5491787060243039}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( ( ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( Min( ( BR * MRS ) ,( ( ( MDR - FirstVNF_RAM ) * ( PN - ACS ) ) * Min( AMS ,RRS ) ) ) + FirstVNF_CPU ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / Max( Min( MLU ,RRSe ),RCSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( Min( MUC ,RCSe ) + ( MUC / ( RRSe - ( RRSe / RRSe ) ) ) ),( Min( Min( Max( RMSe,MUM ) ,MUR ) ,( ( CS - DS ) / ( CS / RCSe ) ) ) * MUC ) ) / CS ) ) )", "obj1": 0.5297397769516728, "obj2": 0.36945939402493216}, {"determining": "( ( MRS + MDR ) - Max( CRS,( Max( AMS,FirstVNF_Mem_Server ) - ( ARS - BR ) ) ) )", "choosing": "( ( ( RMSe - ( RRSe + RRSe ) ) - ( Min( ( ( CS - DS ) + ( MUR - RRSe ) ) ,Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,Max( Min( MUR ,RMSe ),( RCSe + ( DS * MUC ) ) ) ) ) ) / ( Min( Max( Max( ( RCSe / MUM ),CS ),Min( MUC ,RCSe ) ) ,( MUR + ( DS + CS ) ) ) + ( Max( ( ( MUM / MUR ) * Min( RCSe ,DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5910840906583741}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}], "7": [{"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + ( Const / ( FirstVNF_Mem + MDR ) ) ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( Min( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( PN * MDR ),FirstVNF_CPU_Server ) ) ) ) ,CRS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) + ( ( CS - DS ) + Min( MUM ,Min( Min( RRSe ,MUR ) ,Min( CS ,( ( MLU + MUC ) + DS ) ) ) ) ) ) * Min( ( ( CS - CS ) * ( DS / RMSe ) ) ,( ( MLU * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8690360888682355}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( CS - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1430539295780657}, {"determining": "( ( Const / ( FirstVNF_RAM_Server + Min( FirstVNF_Mem ,CRS ) ) ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( RMSe ,MUR ) )", "obj1": 0.8104089219330854, "obj2": 0.11484816593929804}, {"determining": "( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) * Min( ( ( MUR - CS ) * ( CS - DS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8773234200743495, "obj2": 0.06801872115077816}, {"determining": "( ACS / ( ( Const / ( FirstVNF_Mem + Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) / MUM ) ) * ( MUM - Max( CS,CS ) ) )", "obj1": 0.8364312267657993, "obj2": 0.10148559341153027}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.21814855034658823}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) * Min( ( ( MUR - CS ) * ( CS - DS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5371747211895911, "obj2": 0.3342637692057487}, {"determining": "Max( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.45353159851301117, "obj2": 0.4211995250661408}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7743338907076887}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + Min( MDR ,RRS ) ) ),( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7199243685499878}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.45724907063197023, "obj2": 0.4010415560194639}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.23279073508497294}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + Min( MDR ,RRS ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( MUC ,Max( ( ( MUC / CS ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,Min( MLU ,MLU ) ) + DS ) ) )", "obj1": 0.1524163568773234, "obj2": 0.6785300132346821}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( MDR - Max( RRS,RRS ) ) - PN ) ) + ( RRS + ( ACS * Min( MRS ,CRS ) ) ) ) ) - ( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( DDR - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( MUM + ( Max( MUR,Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) + Min( ( ( DS / MUR ) / MUC ) ,MUR ) ) ) + MUC ) ) * ( Max( Max( RCSe,MLU ),Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.08364312267657993, "obj2": 0.8181902194241818}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( Max( ( Max( RRS,RRS ) - MDR ),PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MUC / CS ) + Min( MUC ,DS ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.190860087945277}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.5631970260223048, "obj2": 0.2952133608731482}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( RCSe,Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.4500413820612921}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( Const * ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Max( MLU,( RCSe * Max( RCSe,MUC ) ) ) * Min( Min( ( ( ( MUM + RRSe ) / CS ) - CS ) ,( DS / MUM ) ) ,( ( RRSe * ( MUM / ( ( MLU + ( MUR / MLU ) ) - MUC ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.40892193308550184, "obj2": 0.4373298558252149}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS * ( Min( MDR ,( PN * RRS ) ) * AMS ) ) ) ) )", "choosing": "( ( ( DS - MUM ) - Min( Min( MUC ,MUR ) ,RRSe ) ) / ( ( CS / Max( ( ( MUC / MUM ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) ) + Min( RCSe ,MUM ) ) )", "obj1": 0.9405204460966543, "obj2": 0.035789530847935944}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.649341845636613}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( ( Min( RRS ,ACS ) * ( FirstVNF_CPU_Server - CRS ) ) ,( Min( ( FirstVNF_Mem + ( FirstVNF_RAM_Server + CRS ) ) ,FirstVNF_RAM ) * BR ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( CS ,Min( Min( MUR ,( CS / MUC ) ) ,( RCSe * MUM ) ) ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16818488742700916}, {"determining": "( ( ( Const + CRS ) / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,Max( ( ACS - FirstVNF_CPU ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( ( Max( Max( CS,( RRSe + CS ) ),MUC ) / CS ) * CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) * Min( MUC ,RMSe ) )", "obj1": 0.48698884758364314, "obj2": 0.3804497239362959}, {"determining": "( ACS / ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( MUM - Max( CS,CS ) ) )", "obj1": 0.6133828996282528, "obj2": 0.2594144023474734}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( ( ( Max( FirstVNF_Mem_Server,( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) - Min( RRS ,FirstVNF_Mem ) ) + Max( ( Min( ( BR * MRS ) ,( ( ( MDR - FirstVNF_RAM ) * ( PN - ACS ) ) * Min( AMS ,RRS ) ) ) + FirstVNF_CPU ),( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MLU / ( ( ( RMSe / RMSe ) - MUM ) / MUM ) ),( Min( MUM ,MUM ) + ( Max( ( Min( MUC ,DS ) + ( MUC / ( RRSe - ( RRSe / RRSe ) ) ) ),( Min( Min( Max( RMSe,MUM ) ,MUR ) ,( ( CS - DS ) / ( CS / RCSe ) ) ) * MUC ) ) / CS ) ) )", "obj1": 0.6003717472118959, "obj2": 0.2822460161934174}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + MUR ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5489270899218279}, {"determining": "( ( Max( Min( AMS ,FirstVNF_CPU ),FirstVNF_CPU_Server ) / Const ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - Max( Max( MUC,MUM ),DS ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( CS * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6263940520446096, "obj2": 0.24941295672959637}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ),FirstVNF_CPU ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( MUR + ( DS - CS ) ) ) + ( Max( ( ( MUM / RRSe ) * ( Max( MUM,MUC ) + DS ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.3754646840148699, "obj2": 0.47839632787479697}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "( ( PN * RRS ) + Max( RRS,DDR ) )", "choosing": "( ( MLU / MLU ) - MLU )", "obj1": 0.12267657992565056, "obj2": 0.7624367664001723}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( Max( ( Max( RRS,RRS ) - MDR ),PN ) - Min( FirstVNF_Mem_Server ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MUC / CS ) + Min( MUC ,DS ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( MLU / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6988847583643123, "obj2": 0.1987970822275161}, {"determining": "( ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) ) - PN ) * PN )", "choosing": "Min( ( MUM - Max( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ),CS ) ) ,Max( CS,CS ) )", "obj1": 0.9646840148698885, "obj2": 0.015183033687302956}, {"determining": "( ( ACS - PN ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS - RRSe ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) * ( ( ( CS - DS ) + ( MUR - RRSe ) ) * Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5146203720625634}, {"determining": "Max( ( ( Min( Max( MDR,ARS ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM - Max( CS,CS ) ) ,Max( CS,CS ) )", "obj1": 0.32342007434944237, "obj2": 0.5325513246504132}, {"determining": "( Max( ARS,ACS ) * Max( DDR,Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,MUC ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.055762081784386616, "obj2": 0.8678552983487309}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * ( ( ACS - FirstVNF_Mem ) * Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + Max( ( PN - DDR ),( CRS - FirstVNF_CPU_Server ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( MUC ,MUR ) * RCSe ) - Min( Min( DS ,( MUR / MUM ) ) ,MLU ) ) - ( ( MUM - RMSe ) * ( RRSe + MUR ) ) )", "obj1": 0.3215613382899628, "obj2": 0.5432381909610703}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,MUR ) ) + MUC ) ) ) * Min( ( ( MUR - CS ) * ( CS - DS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5855018587360595, "obj2": 0.2895827132884522}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.533457249070632, "obj2": 0.3492296798645084}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + Min( MDR ,RRS ) ) ),( RRS + FirstVNF_CPU ) ) + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( CS - RCSe ) - Min( DS ,Max( MUM,Min( MLU ,MLU ) ) ) ) / ( Min( MUM ,MUM ) + ( Max( ( ( MUC / CS ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.9851301115241635, "obj2": 0.004424969329397081}, {"determining": "Min( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6218262689738598}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( CS / RCSe ) )", "obj1": 0.5204460966542751, "obj2": 0.3709257719173005}, {"determining": "( ( Const / Min( ( Min( AMS ,( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server * MRS ) ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * PN ) ,Min( FirstVNF_RAM ,MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * ( ( MUM * RMSe ) * MLU ) ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + RMSe ) ) )", "obj1": 0.2788104089219331, "obj2": 0.558008369654011}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( MUR + ( DS - CS ) ) ) + ( Max( ( ( MUM / RRSe ) * Min( DS ,RCSe ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.3550185873605948, "obj2": 0.48772301115309163}, {"determining": "( ( Const / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_CPU,( ( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RCSe - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) * Min( MUC ,( MUC + RCSe ) ) )", "obj1": 0.49256505576208176, "obj2": 0.37605089708362766}, {"determining": "( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - Min( DS ,( CS + Max( Min( ( MLU * CS ) ,( ( RRSe / RRSe ) * RRSe ) ),( ( RMSe * Min( Max( RRSe,CS ) ,( MUM + MLU ) ) ) + MUR ) ) ) ) )", "obj1": 0.8996282527881041, "obj2": 0.052992780081541145}, {"determining": "( ( ACS - PN ) * PN )", "choosing": "Min( ( MUM - Max( CS,CS ) ) ,Max( CS,CS ) )", "obj1": 0.3475836431226766, "obj2": 0.5061795238343793}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03923904227809862}], "8": [{"determining": "( CRS - Max( Min( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( PN * MDR ),FirstVNF_CPU_Server ) ) ) ) ,CRS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) + ( ( CS - DS ) + Min( MUM ,Min( Min( RRSe ,MUR ) ,Min( CS ,( ( MLU + MUC ) + DS ) ) ) ) ) ) * Min( ( ( CS - CS ) * ( DS / RMSe ) ) ,( ( MLU * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + ( Const / ( FirstVNF_Mem + MDR ) ) ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8690360888682355}, {"determining": "( ( Const / ( FirstVNF_RAM_Server + Min( FirstVNF_Mem ,CRS ) ) ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( RMSe ,MUR ) )", "obj1": 0.8104089219330854, "obj2": 0.11484816593929804}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( MDR - Max( RRS,RRS ) ) - PN ) ) + ( RRS + ( ACS * Min( MRS ,CRS ) ) ) ) ) - ( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( DDR - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( MUM + ( Max( MUR,Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) + Min( ( ( DS / MUR ) / MUC ) ,MUR ) ) ) + MUC ) ) * ( Max( Max( RCSe,MLU ),Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.08364312267657993, "obj2": 0.8181902194241818}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7743338907076887}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.21814855034658823}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( CS - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1430539295780657}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.5631970260223048, "obj2": 0.2952133608731482}, {"determining": "Min( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ,( Const / ( ( ( ( Const * FirstVNF_RAM ) / Const ) - Max( FirstVNF_CPU,AMS ) ) / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( ( MUM * MUM ) - ( Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( RMSe - Max( DS,MLU ) ) ) - RMSe ) ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1449814126394052, "obj2": 0.6920967411694964}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( RCSe,Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.4500413820612921}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.45724907063197023, "obj2": 0.4010415560194639}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( ( Const / ( ( ( DDR - FirstVNF_CPU ) * CRS ) + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MLU ) - ( ( ( MUR + DS ) / ( Min( MLU ,MUR ) + RCSe ) ) * ( MLU / MLU ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4691369538732477}, {"determining": "( ( PN * RRS ) + Max( RRS,DDR ) )", "choosing": "( ( MLU / MLU ) - MLU )", "obj1": 0.12267657992565056, "obj2": 0.7624367664001723}, {"determining": "( ( Min( MDR ,ARS ) + FirstVNF_RAM_Server ) * ( Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) + ( RRS / Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( Min( DS ,RMSe ) / ( CS / RCSe ) )", "obj1": 0.5204460966542751, "obj2": 0.3709257719173005}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5427509293680297, "obj2": 0.3261543876681985}, {"determining": "Max( ( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.45353159851301117, "obj2": 0.4211995250661408}, {"determining": "( ( Const / ( Max( FirstVNF_CPU,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),( ( MUM - RMSe ) * ( RRSe + MUR ) ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.19734944737743038}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.649341845636613}, {"determining": "( ( ( Const + CRS ) / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,Max( ( ACS - FirstVNF_CPU ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( ( ( ( Max( Max( CS,( RRSe + CS ) ),MUC ) / CS ) * CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) * Min( MUC ,RMSe ) )", "obj1": 0.48698884758364314, "obj2": 0.3804497239362959}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4256505576208178, "obj2": 0.43422984671011033}, {"determining": "( ( Const / Min( Const ,FirstVNF_Mem ) ) - Max( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,RMSe ) * Min( ( ( ( MUC + Min( MLU ,CS ) ) / MUM ) * ( RCSe - CS ) ) ,( ( RCSe + MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.1721592836339867}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( ( Min( RRS ,ACS ) * ( FirstVNF_CPU_Server - CRS ) ) ,( Min( ( FirstVNF_Mem + ( FirstVNF_RAM_Server + CRS ) ) ,FirstVNF_RAM ) * BR ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( CS ,Min( Min( MUR ,( CS / MUC ) ) ,( RCSe * MUM ) ) ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16818488742700916}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.23279073508497294}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.533457249070632, "obj2": 0.3492296798645084}, {"determining": "Max( ( ( FirstVNF_Mem_Server - Const ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( MUC ,Max( ( Min( ( MLU / CS ) ,RMSe ) + ( MUC / CS ) ),( MUR * MUC ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,Min( MLU ,MLU ) ) + DS ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6738828427648657}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( Max( ( Max( RRS,RRS ) - MDR ),PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ),PN ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MUC / CS ) + Min( MUC ,DS ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.190860087945277}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + ( MUM * RMSe ) ) * ( ( ( MLU + DS ) / Min( DS ,MUR ) ) + MUC ) ) ) * Min( ( ( MUR - CS ) * ( CS - DS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5855018587360595, "obj2": 0.2895827132884522}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( Const * ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Max( MLU,( RCSe * Max( RCSe,MUC ) ) ) * Min( Min( ( ( ( MUM + RRSe ) / CS ) - CS ) ,( DS / MUM ) ) ,( ( RRSe * ( MUM / ( ( MLU + ( MUR / MLU ) ) - MUC ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.40892193308550184, "obj2": 0.4373298558252149}, {"determining": "( ( ACS - PN ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS - RRSe ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) * ( ( ( CS - DS ) + ( MUR - RRSe ) ) * Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5146203720625634}, {"determining": "( PN / ( Min( ( Const / ( FirstVNF_Mem + MDR ) ) ,Min( BR ,DDR ) ) - Max( ( MRS - DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( CS * MUC ) ) / CS ) - CS ) * ( Max( ( MUC / MLU ),Min( RMSe ,RRSe ) ) / MUM ) ) * ( ( DS / Min( RCSe ,RMSe ) ) - Max( CS,CS ) ) )", "obj1": 0.8587360594795539, "obj2": 0.07960365619494615}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6483220971126464}, {"determining": "Max( ( ( Min( Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUM - Max( CS,CS ) ) ,Max( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ),CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5419297171340436}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + MUR ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5489270899218279}, {"determining": "( ACS / ( ( Const / ( FirstVNF_Mem + Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) / MUM ) ) * ( MUM - Max( CS,CS ) ) )", "obj1": 0.8364312267657993, "obj2": 0.10148559341153027}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * ( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,MUM ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9460966542750929, "obj2": 0.024594000523895734}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.845724907063197, "obj2": 0.08580031438749505}, {"determining": "( ( ( Const + ( FirstVNF_Mem + ( DDR / ( Const / RRS ) ) ) ) - Max( ( CRS / FirstVNF_Mem ),FirstVNF_RAM ) ) * Max( DDR,Max( ( FirstVNF_Mem * MRS ),( ( AMS * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( RCSe,CS ) ) + Max( ( RCSe / MUC ),( MUC / RMSe ) ) ) * ( ( ( ( Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5910780669144982, "obj2": 0.2717324441737123}, {"determining": "( ( Const / Min( ( Min( AMS ,( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server * MRS ) ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * PN ) ,Min( FirstVNF_RAM ,MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * ( ( MUM * RMSe ) * MLU ) ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + RMSe ) ) )", "obj1": 0.2788104089219331, "obj2": 0.558008369654011}, {"determining": "( ( Const / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_CPU,( ( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / ARS ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RCSe - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) * Min( MUC ,( MUC + RCSe ) ) )", "obj1": 0.49256505576208176, "obj2": 0.37605089708362766}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "( ( ACS - PN ) * PN )", "choosing": "Min( ( MUM - Max( CS,CS ) ) ,Max( CS,CS ) )", "obj1": 0.32342007434944237, "obj2": 0.5315803896987823}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.3475836431226766, "obj2": 0.4909819793902052}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS * ( Min( MDR ,( PN * RRS ) ) * AMS ) ) ) ) )", "choosing": "( ( ( DS - MUM ) - Min( Min( MUC ,MUR ) ,RRSe ) ) / ( ( CS / Max( ( ( MUC / MUM ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) ) + Min( RCSe ,MUM ) ) )", "obj1": 0.9405204460966543, "obj2": 0.035789530847935944}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / ( MUR - MUR ) ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.10481827406315446}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( MUR + ( DS - CS ) ) ) + ( Max( ( ( MUM / RRSe ) * Min( DS ,RCSe ) ),( RCSe / MUC ) ) / CS ) ) )", "obj1": 0.3550185873605948, "obj2": 0.48772301115309163}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) ) * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / RCSe ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03915676282204242}], "9": [{"determining": "( ( Const / ( FirstVNF_Mem + ( Const / ( FirstVNF_Mem + MDR ) ) ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( ( ( Max( ( RCSe / CS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( ( MUC / CS ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Max( Min( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( PN * MDR ),FirstVNF_CPU_Server ) ) ) ) ,CRS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) + ( ( CS - DS ) + Min( MUM ,Min( Min( RRSe ,MUR ) ,Min( CS ,( ( MLU + MUC ) + DS ) ) ) ) ) ) * Min( ( ( CS - CS ) * ( DS / RMSe ) ) ,( ( MLU * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * ( PN * PN ) )", "choosing": "( ( ( Max( MUM,( ( RMSe + ( CS / ( MUM * RCSe ) ) ) / Min( RMSe ,MUC ) ) ) / RCSe ) + DS ) / Min( DS ,Max( RMSe,MLU ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8687218964814788}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) )", "choosing": "( ( ( Min( MUR ,RRSe ) + ( CS * DS ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * ( MUR * Min( MLU ,CS ) ) )", "obj1": 0.5594795539033457, "obj2": 0.28550984027341}, {"determining": "( ( Const / ( Max( FirstVNF_CPU,Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5297397769516728, "obj2": 0.32031852135341493}, {"determining": "( ( ( Const + ( FirstVNF_Mem + ( DDR / ( Const / RRS ) ) ) ) - Max( ( CRS / FirstVNF_Mem ),FirstVNF_RAM ) ) * Max( DDR,Max( ( FirstVNF_Mem * MRS ),( ( AMS * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( RCSe,CS ) ) + Max( ( RCSe / MUC ),( MUC / RMSe ) ) ) * ( ( ( ( Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5910780669144982, "obj2": 0.2717324441737123}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( MDR - Max( RRS,RRS ) ) - PN ) ) + ( RRS + ( ACS * Min( MRS ,CRS ) ) ) ) ) - ( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( DDR - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( MUM + ( Max( MUR,Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) + Min( ( ( DS / MUR ) / MUC ) ,MUR ) ) ) + MUC ) ) * ( Max( Max( RCSe,MLU ),Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.08364312267657993, "obj2": 0.8181902194241818}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "Min( ( FirstVNF_RAM / ( FirstVNF_CPU * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) ,( Const / ( ( ( ( Const * FirstVNF_RAM ) / Const ) - Max( FirstVNF_CPU,AMS ) ) / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( ( MUM * MUM ) - ( Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( RMSe - Max( DS,MLU ) ) ) - RMSe ) ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.1449814126394052, "obj2": 0.6920967411694964}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + ( PN + PN ) ) ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( Min( ( ( MUR - MUR ) * ( Min( DS ,RMSe ) / ( ( CS / MLU ) / RCSe ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( ( ( RMSe * ( MUR * RRSe ) ) + MLU ) / MLU ) ) ,( ( RRSe / CS ) - ( CS + ( DS / Min( Max( Min( DS ,MUR ),CS ) ,RCSe ) ) ) ) ) )", "obj1": 0.7881040892193308, "obj2": 0.11895438278007324}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7743338907076887}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,( Max( RRS,FirstVNF_CPU ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) / MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( RMSe - RRSe ) ) + Max( ( RCSe * MUM ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.34643137732231993}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "( ACS / ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8847583643122676, "obj2": 0.05996794564351499}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( PN / ( Min( ( Const / ( FirstVNF_Mem + MDR ) ) ,Min( BR ,DDR ) ) - Max( ( MRS - DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( CS * MUC ) ) / CS ) - CS ) * ( Max( ( MUC / MLU ),Min( RMSe ,RRSe ) ) / MUM ) ) * ( ( DS / Min( RCSe ,RMSe ) ) - Max( CS,CS ) ) )", "obj1": 0.8587360594795539, "obj2": 0.07960365619494615}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( CS - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.1430539295780657}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - ( FirstVNF_RAM - RRS ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * Max( DS,Max( RCSe,CS ) ) ) ,( ( MUM * MUM ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.8178438661710037, "obj2": 0.09501421589136147}, {"determining": "( ( ACS - PN ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS - RRSe ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) * ( ( ( CS - DS ) + ( MUR - RRSe ) ) * Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5146203720625634}, {"determining": "Max( Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ),Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Min( MUC ,Max( ( ( Max( MUR,CS ) / RMSe ) / ( RRSe / Min( ( DS * MUR ) ,RRSe ) ) ),( ( ( ( MUC / MUR ) + RMSe ) + Min( MUR ,MUC ) ) + ( ( RMSe / RMSe ) / RCSe ) ) ) ),( Max( MUM,MUC ) + DS ) ) )", "obj1": 0.23234200743494424, "obj2": 0.6101171383819584}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( RCSe,Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.4500413820612921}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( Max( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) ) )", "obj1": 0.9052044609665427, "obj2": 0.05395970688964104}, {"determining": "( ( Const / Min( Const ,FirstVNF_Mem ) ) - Max( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,RMSe ) * Min( ( ( ( MUC + Min( MLU ,CS ) ) / MUM ) * ( RCSe - CS ) ) ,( ( RCSe + MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.1721592836339867}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.845724907063197, "obj2": 0.08580031438749505}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) )", "obj1": 0.9516728624535316, "obj2": 0.023796495011287607}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( ( Min( RRS ,ACS ) * ( FirstVNF_CPU_Server - CRS ) ) ,( Min( ( FirstVNF_Mem + ( FirstVNF_RAM_Server + CRS ) ) ,FirstVNF_RAM ) * BR ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( CS ,Min( Min( MUR ,( CS / MUC ) ) ,( RCSe * MUM ) ) ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) ) )", "obj1": 0.7434944237918215, "obj2": 0.16818488742700916}, {"determining": "( ( Const / ( FirstVNF_RAM_Server + Min( FirstVNF_Mem ,CRS ) ) ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - DS ) + ( RRSe - MUR ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( RMSe ,MUR ) )", "obj1": 0.8104089219330854, "obj2": 0.11484816593929804}, {"determining": "( ( Const / ( Max( FirstVNF_CPU,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),( ( MUM - RMSe ) * ( RRSe + MUR ) ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.18718246246372877}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.649341845636613}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) ) * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / RCSe ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03915676282204242}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.76235338138304}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( RRS - ( Max( BR,FirstVNF_RAM_Server ) * ( CRS + MRS ) ) )", "choosing": "( ( Max( MUM,RCSe ) + MUR ) * ( RRSe * ( DS - MUM ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5889160405416248}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6483220971126464}, {"determining": "( ( PN * RRS ) + Max( RRS,DDR ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( ( Max( ( RCSe / CS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.43866171003717475, "obj2": 0.4203834361777234}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.055762081784386616, "obj2": 0.8632927807795607}, {"determining": "Min( ( FirstVNF_RAM / ( ( FirstVNF_Mem / MRS ) * FirstVNF_CPU ) ) ,( Const / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( PN,( Const / ( FirstVNF_Mem + MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( RMSe / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.241635687732342, "obj2": 0.6067281392102265}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + MUR ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5489270899218279}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( ( Max( ( RCSe / CS ),( MUR * MUC ) ) / ( MUR * MUC ) ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3828996282527881, "obj2": 0.46765146695459975}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( ( ( FirstVNF_RAM_Server / PN ) / Max( Const,ARS ) ) / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RCSe * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.16356877323420074, "obj2": 0.6700425320522301}, {"determining": "Max( ( ( FirstVNF_Mem_Server - Const ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( MUC ,Max( ( Min( ( MLU / CS ) ,RMSe ) + ( MUC / CS ) ),( MUR * MUC ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,Min( MLU ,MLU ) ) + DS ) ) )", "obj1": 0.15985130111524162, "obj2": 0.6738828427648657}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.22054498847883022}, {"determining": "( Max( BR,FirstVNF_CPU ) - ( Const * ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Max( MLU,( RCSe * Max( RCSe,MUC ) ) ) * Min( Min( ( ( ( MUM + RRSe ) / CS ) - CS ) ,( DS / MUM ) ) ,( ( RRSe * ( MUM / ( ( MLU + ( MUR / MLU ) ) - MUC ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.40892193308550184, "obj2": 0.4373298558252149}, {"determining": "( ( Const / Min( ( Min( AMS ,( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server * MRS ) ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * PN ) ,Min( FirstVNF_RAM ,MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * ( ( MUM * RMSe ) * MLU ) ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + RMSe ) ) )", "obj1": 0.2788104089219331, "obj2": 0.558008369654011}, {"determining": "( MDR * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5279898109639499}, {"determining": "Max( ( ( Min( Min( ( BR * MRS ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,FirstVNF_RAM ) - FirstVNF_RAM_Server ) + FirstVNF_CPU ),( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MLU / MLU ) - ( CS * ( MLU / MLU ) ) ) ,Max( ( ( ( RMSe - MUM ) - MUM ) / ( RRSe / MUM ) ),CS ) )", "obj1": 0.26022304832713755, "obj2": 0.5754060759892776}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.34572490706319703, "obj2": 0.4905365807114974}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( MLU / MLU ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4691369538732477}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS * ( Min( MDR ,( PN * RRS ) ) * AMS ) ) ) ) )", "choosing": "( ( ( DS - MUM ) - Min( Min( MUC ,MUR ) ,RRSe ) ) / ( ( CS / Max( ( ( MUC / MUM ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) ) + Min( RCSe ,MUM ) ) )", "obj1": 0.9814126394052045, "obj2": 0.005619199978844957}], "10": [{"determining": "( ( Const / ( FirstVNF_RAM_Server + Const ) ) - ( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( RMSe,( CS + ( RMSe / ( MUM / RMSe ) ) ) ) ) + Max( ( RCSe / MLU ),Min( RRSe ,RMSe ) ) ) * Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Const / ( FirstVNF_Mem + MDR ) ) ) ) - ( FirstVNF_Mem + Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),( ACS + FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( ( ( Max( ( RCSe / CS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) - Min( DS ,RRSe ) ) / ( Min( MUM ,MUM ) + ( Max( ( ( MUC / CS ) + Min( RRSe ,RMSe ) ),( MUR * MUC ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * ( PN * PN ) )", "choosing": "( ( ( Max( MUM,( ( RMSe + ( CS / ( MUM * RCSe ) ) ) / Min( RMSe ,MUC ) ) ) / RCSe ) + DS ) / Min( DS ,Max( RMSe,MLU ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8687218964814788}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( ( ( Const + ( FirstVNF_Mem + ( DDR / ( Const / RRS ) ) ) ) - Max( ( CRS / FirstVNF_Mem ),FirstVNF_RAM ) ) * Max( DDR,Max( ( FirstVNF_Mem * MRS ),( ( AMS * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( RCSe,CS ) ) + Max( ( RCSe / MUC ),( MUC / RMSe ) ) ) * ( ( ( ( Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5910780669144982, "obj2": 0.2717324441737123}, {"determining": "( ( ( Const + ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * Max( ( Const * ( FirstVNF_CPU_Server + MDR ) ),( ARS * ARS ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( CS + CS ) ,( ( DS - RMSe ) - ( Max( DS,Max( RRSe,MUC ) ) / Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.4628252788104089, "obj2": 0.409592282190212}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( CS - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.14305392957806567}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) )", "choosing": "( ( ( Min( MUR ,RRSe ) + ( CS * DS ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * ( MUR * Min( MLU ,CS ) ) )", "obj1": 0.5594795539033457, "obj2": 0.28550984027341}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( MDR - Max( RRS,RRS ) ) - PN ) ) + ( RRS + ( ACS * Min( MRS ,CRS ) ) ) ) ) - ( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( DDR - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( MUM + ( Max( MUR,Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) + Min( ( ( DS / MUR ) / MUC ) ,MUR ) ) ) + MUC ) ) * ( Max( Max( RCSe,MLU ),Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.08364312267657993, "obj2": 0.8181902194241818}, {"determining": "( ( Max( ( Const / ( FirstVNF_Mem + MDR ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( Max( DDR,Max( ACS,FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem / ( Const - FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( MUR - CS ) * ( DS / DS ) ) ,Min( MUM ,( ( Min( Max( Max( MUM,RCSe ),RRSe ) ,( RMSe - RCSe ) ) * RMSe ) - DS ) ) ) * ( Max( ( MUC * ( MUM - ( RCSe / ( MUR * ( MUM + RCSe ) ) ) ) ),RRSe ) / ( MUC / Max( MUR,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19701405727226928}, {"determining": "( ( Const / ( Max( FirstVNF_CPU,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),( ( MUM - RMSe ) * ( RRSe + MUR ) ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.18718246246372877}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + ( PN + PN ) ) ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( Min( ( ( MUR - MUR ) * ( Min( DS ,RMSe ) / ( ( CS / MLU ) / RCSe ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( ( ( RMSe * ( MUR * RRSe ) ) + MLU ) / MLU ) ) ,( ( RRSe / CS ) - ( CS + ( DS / Min( Max( Min( DS ,MUR ),CS ) ,RCSe ) ) ) ) ) )", "obj1": 0.7881040892193308, "obj2": 0.11895438278007324}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + FirstVNF_RAM ) * FirstVNF_Mem_Server ) / BR ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUM ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( CS,MUR ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.3141263940520446, "obj2": 0.5248712395780369}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / DS ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + MUR ) ) )", "obj1": 0.09665427509293681, "obj2": 0.7806933546160572}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7600080279757643}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ( Const / ( Max( FirstVNF_CPU,Min( ( ( ( Const * FirstVNF_RAM ) / Const ) - Max( FirstVNF_CPU,AMS ) ) ,( BR - MRS ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( RMSe - Max( DS,MLU ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.31561105922471483}, {"determining": "( PN / ( Min( ( Const / ( FirstVNF_Mem + MDR ) ) ,Min( BR ,DDR ) ) - Max( ( MRS - DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( CS * MUC ) ) / CS ) - CS ) * ( Max( ( MUC / MLU ),Min( RMSe ,RRSe ) ) / MUM ) ) * ( ( DS / Min( RCSe ,RMSe ) ) - Max( CS,CS ) ) )", "obj1": 0.8587360594795539, "obj2": 0.07960365619494615}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( RCSe,Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.3903345724907063, "obj2": 0.4500413820612921}, {"determining": "( ( Const / Min( Const ,FirstVNF_Mem ) ) - Max( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,RMSe ) * Min( ( ( ( MUC + Min( MLU ,CS ) ) / MUM ) * ( RCSe - CS ) ) ,( ( RCSe + MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.1721592836339867}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( ACS - PN ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( Min( ( ( DS - RRSe ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) * ( ( ( CS - DS ) + ( MUR - RRSe ) ) * Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.3420074349442379, "obj2": 0.5146203720625634}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * MUR ) ,( ( RCSe / MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6505576208178439, "obj2": 0.22709026153114292}, {"determining": "( ( Const / ( FirstVNF_RAM / Min( Max( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ),( CRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,DDR ) / Max( PN,FirstVNF_RAM_Server ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( CS - RCSe ) - MUC ) / ( Min( MUM ,( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) + ( DS - CS ) ) ) + Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) ) )", "obj1": 0.9052044609665427, "obj2": 0.05395970688964104}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5358276430356271}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.22054498847883022}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.5130111524163569, "obj2": 0.3438228143618053}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - ( FirstVNF_RAM - RRS ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * Max( DS,Max( RCSe,CS ) ) ) ,( ( MUM * MUM ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.8178438661710037, "obj2": 0.09501421589136147}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.845724907063197, "obj2": 0.08580031438749505}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6483220971126464}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( ( ( FirstVNF_RAM_Server / ( ( MRS - CRS ) * CRS ) ) / Max( Const,ARS ) ) / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( Min( ( ( CS - CS ) * ( DS / RMSe ) ) ,( ( MLU * MUM ) - ( RMSe - RMSe ) ) ) * MUC ) ) - Max( Max( Min( ( ( RCSe * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.9684014869888475, "obj2": 0.015164661265703046}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( CS / ( RCSe - Min( DS ,MUR ) ) ) - Max( Max( Min( ( ( RCSe * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6163575932257626}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.34572490706319703, "obj2": 0.4905365807114974}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_CPU / ARS ) ) ) - Max( ( AMS / FirstVNF_Mem_Server ),( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUC * RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Min( DS ,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.9479553903345725, "obj2": 0.024188496290585365}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / MLU ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5938373734995033}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) ) * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / RCSe ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03915676282204242}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( DDR * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUR ,RRSe ) * ( ( ( ( Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4633200188213823}, {"determining": "Max( Max( ( Max( MRS,FirstVNF_RAM_Server ) * Max( FirstVNF_Mem,RRS ) ),( Max( DDR,FirstVNF_RAM_Server ) + Min( MDR ,RRS ) ) ),( AMS * MRS ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( Max( MUM,MUC ) - DS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( Max( ( ( Max( ( MUC * RMSe ),MUM ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ),CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.7685039468940839}, {"determining": "( ( Const / Min( ( Min( AMS ,( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server * MRS ) ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) * PN ) ,Min( FirstVNF_RAM ,MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * ( ( MUM * RMSe ) * MLU ) ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + RMSe ) ) )", "obj1": 0.2788104089219331, "obj2": 0.558008369654011}, {"determining": "( ( ( Const + ( FirstVNF_Mem + MDR ) ) - Max( ( CRS / FirstVNF_Mem ),FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4144981412639405, "obj2": 0.4337239384161904}, {"determining": "( ( Const * ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_Mem + MDR ),RRS ) - ( RRS * ( ACS * FirstVNF_CPU ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( RMSe + MUC ) ,( RCSe / Min( CS ,( ( ( RRSe * MUR ) + MUC ) * RCSe ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.3313097246983379}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( Max( DDR,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / MLU ) - ( CS * ( MLU / MLU ) ) )", "obj1": 0.362453531598513, "obj2": 0.4727397092147569}, {"determining": "( ACS / ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RCSe * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8847583643122676, "obj2": 0.05996794564351499}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( MRS * ( CRS + MRS ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4349442379182156, "obj2": 0.42023147644938985}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.5535929550036963}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05947955390334572, "obj2": 0.8615957329540203}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.8234200743494424, "obj2": 0.09351302281641809}], "11": [{"determining": "( ( ( Const + ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * Max( ( Const * ( FirstVNF_CPU_Server + MDR ) ),( ARS * ARS ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( CS + CS ) ,( ( DS - RMSe ) - ( Max( DS,Max( RRSe,MUC ) ) / Max( RMSe,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( FirstVNF_RAM_Server + Const ) ) - ( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( ( RRSe - DS ) + Max( RMSe,( CS + ( RMSe / ( MUM / RMSe ) ) ) ) ) + Max( ( RCSe / MLU ),Min( RRSe ,RMSe ) ) ) * Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * ( PN * PN ) )", "choosing": "( ( ( Max( MUM,( ( RMSe + ( CS / ( MUM * RCSe ) ) ) / Min( RMSe ,MUC ) ) ) / RCSe ) + DS ) / Min( DS ,Max( RMSe,MLU ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8687218964814788}, {"determining": "( ( ( Const + ( FirstVNF_Mem + ( DDR / ( Const / RRS ) ) ) ) - Max( ( CRS / FirstVNF_Mem ),FirstVNF_RAM ) ) * Max( DDR,Max( ( FirstVNF_Mem * MRS ),( ( AMS * FirstVNF_CPU ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( RCSe,CS ) ) + Max( ( RCSe / MUC ),( MUC / RMSe ) ) ) * ( ( ( ( Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5910780669144982, "obj2": 0.2717324441737123}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) )", "choosing": "( ( ( Min( MUR ,RRSe ) + ( CS * DS ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * ( MUR * Min( MLU ,CS ) ) )", "obj1": 0.5594795539033457, "obj2": 0.28550984027341}, {"determining": "( ( Const / ( Max( FirstVNF_CPU,Min( ( ( ( Const * FirstVNF_RAM ) / Const ) - Max( FirstVNF_CPU,AMS ) ) ,( BR - MRS ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( RMSe - Max( DS,MLU ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.31561105922471483}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( MDR - Max( RRS,RRS ) ) - PN ) ) + ( RRS + ( ACS * Min( MRS ,CRS ) ) ) ) ) - ( Max( Max( ( Max( RRS,RRS ) - MDR ),PN ),FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( BR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( DDR - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( MUM + ( Max( MUR,Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) + Min( ( ( DS / MUR ) / MUC ) ,MUR ) ) ) + MUC ) ) * ( Max( Max( RCSe,MLU ),Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.08364312267657993, "obj2": 0.8181902194241818}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( CS / ( RCSe - Min( DS ,MUR ) ) ) - Max( Max( Min( ( ( RCSe * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6163575932257626}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / MLU ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5938373734995033}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6566387414675016}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_CPU / ARS ) ) ) - Max( ( AMS / FirstVNF_Mem_Server ),( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUC * RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Min( DS ,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.9479553903345725, "obj2": 0.024188496290585365}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU_Server + DDR ) + Min( ( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( DDR,FirstVNF_RAM_Server ) ) * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / RCSe ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03915676282204242}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "Max( Max( ( Max( AMS,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( Min( ( Const / MRS ) ,FirstVNF_RAM_Server ) - ( Const * ( FirstVNF_CPU_Server + MDR ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( DS - Min( RCSe ,MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6827489360940202}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.08736059479553904, "obj2": 0.7789358357848013}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + ( PN + PN ) ) ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( Min( ( ( MUR - MUR ) * ( Min( DS ,RMSe ) / ( ( CS / MLU ) / RCSe ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( ( ( RMSe * ( MUR * RRSe ) ) + MLU ) / MLU ) ) ,( ( RRSe / CS ) - ( CS + ( DS / Min( Max( Min( DS ,MUR ),CS ) ,RCSe ) ) ) ) ) )", "obj1": 0.7881040892193308, "obj2": 0.11895438278007324}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ( Const * ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_Mem + MDR ),RRS ) - ( RRS * ( ACS * FirstVNF_CPU ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( RMSe + MUC ) ,( RCSe / Min( CS ,( ( ( RRSe * MUR ) + MUC ) * RCSe ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.3313097246983379}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - ( FirstVNF_RAM - RRS ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * Max( DS,Max( RCSe,CS ) ) ) ,( ( MUM * MUM ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.7713754646840149, "obj2": 0.13970792337443452}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,Max( ( AMS + MRS ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) ) ) + ( FirstVNF_Mem + MDR ) ) - Max( Max( MDR,Min( ACS ,FirstVNF_CPU ) ),FirstVNF_RAM ) )", "choosing": "( RRSe * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7379182156133829, "obj2": 0.1707293803058073}, {"determining": "( ( Max( ( Const / ( FirstVNF_Mem + MDR ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( Max( DDR,Max( ACS,FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem / ( Const - FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( MUR - CS ) * ( DS / DS ) ) ,Min( MUM ,( ( Min( Max( Max( MUM,RCSe ),RRSe ) ,( RMSe - RCSe ) ) * RMSe ) - DS ) ) ) * ( Max( ( MUC * ( MUM - ( RCSe / ( MUR * ( MUM + RCSe ) ) ) ) ),RRSe ) / ( MUC / Max( MUR,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19701405727226928}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server / ( ( MRS - CRS ) * CRS ) ) / Max( Const,ARS ) ) / ( FirstVNF_RAM / Min( Max( Min( RRS ,ACS ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( CS - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.013466609907841988}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Max( ( MUC / MLU ),Min( RMSe ,RRSe ) ) / MUM ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) )", "obj1": 0.483271375464684, "obj2": 0.3787199158274785}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( Const / ( FirstVNF_RAM + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( RMSe - Max( DS,MLU ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.23633415030762628}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + FirstVNF_RAM ) * FirstVNF_Mem_Server ) / BR ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUM ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( CS,MUR ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.3141263940520446, "obj2": 0.5248712395780369}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5358276430356271}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4628252788104089, "obj2": 0.404618417727453}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( MLU + ( ( MLU / MLU ) - ( CS * ( ( RRSe / DS ) - MUM ) ) ) ) * ( ( ( MLU + DS ) / Min( DS ,RMSe ) ) + MUC ) )", "obj1": 0.845724907063197, "obj2": 0.08580031438749505}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.7992565055762082, "obj2": 0.1035542436984788}, {"determining": "( ( Const / Min( Const ,FirstVNF_Mem ) ) - Max( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,RMSe ) * Min( ( ( ( MUC + Min( MLU ,CS ) ) / MUM ) * ( RCSe - CS ) ) ,( ( RCSe + MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.1721592836339867}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7600080279757643}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + MUR ) * Min( ( ( CS - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.14305392957806567}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( MLU,RCSe ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4721189591078067, "obj2": 0.3920634042932568}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6483220971126464}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05947955390334572, "obj2": 0.8615957329540203}, {"determining": "( ACS / ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Const ) )", "choosing": "( ( ( ( Max( Max( DS,( Max( MUM,MUC ) + DS ) ),( MUR * MUC ) ) / CS ) - CS ) * ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) / MUM ) ) * ( CS - Max( CS,CS ) ) )", "obj1": 0.8717472118959108, "obj2": 0.07136571155893037}, {"determining": "( ACS / ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RCSe * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8847583643122676, "obj2": 0.05996794564351499}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( DDR * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * MUR ) ,( ( RCSe / MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.44423791821561337, "obj2": 0.41529335504571185}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6672862453531598, "obj2": 0.2104764355061568}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.5130111524163569, "obj2": 0.3438228143618053}, {"determining": "( PN / ( Min( ( Const / ( FirstVNF_Mem + MDR ) ) ,Min( BR ,DDR ) ) - Max( ( MRS - DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( RCSe / MUC ),( CS * MUC ) ) / CS ) - CS ) * ( Max( ( MUC / MLU ),Min( RMSe ,RRSe ) ) / MUM ) ) * ( ( DS / Min( RCSe ,RMSe ) ) - Max( CS,CS ) ) )", "obj1": 0.8587360594795539, "obj2": 0.07960365619494615}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( ( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * ( DS / MUM ) ) ,( ( RCSe / ( Max( MUM,MUC ) + DS ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.18833968781433594}, {"determining": "( ( Const / ( Const + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / RMSe ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.13197026022304834, "obj2": 0.7526220774925761}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUR ,RRSe ) * ( ( ( ( Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.6505576208178439, "obj2": 0.22311200364820538}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.5535929550036963}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( MRS * ( CRS + ( DDR / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.32899628252788105, "obj2": 0.5184281554821352}], "12": [{"determining": "( PN / ( Min( ( Const / ( FirstVNF_Mem + Min( RRS ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,Min( BR ,DDR ) ) - Max( ( MRS - DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - ( Max( ( RCSe / MUC ),( ( DS + MUR ) * MUC ) ) / CS ) ) * ( Max( ( MUC / MLU ),Min( RMSe ,RRSe ) ) / MUM ) ) * ( ( DS / Min( RCSe ,CS ) ) - Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) * Max( ( Const * ( FirstVNF_CPU_Server + MDR ) ),( ARS * ARS ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( CS + CS ) ,( ( DS - RMSe ) - ( Max( DS,Max( RRSe,MUC ) ) / Max( RMSe,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * ( PN * PN ) )", "choosing": "( ( ( Max( MUM,( ( RMSe + ( CS / ( MUM * RCSe ) ) ) / Min( RMSe ,MUC ) ) ) / RCSe ) + DS ) / Min( DS ,Max( RMSe,MLU ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8687218964814788}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( DDR * FirstVNF_RAM_Server ) - Max( ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * MUR ) ,( ( RCSe / MUC ) - ( RCSe / MUC ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.49180868173677234}, {"determining": "( ( Const / ( Max( FirstVNF_CPU,Min( ( ( ( Const * FirstVNF_RAM ) / Const ) - Max( FirstVNF_CPU,AMS ) ) ,( BR - MRS ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( RMSe - Max( DS,MLU ) ) ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.31561105922471483}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) )", "choosing": "( ( ( Min( MUR ,RRSe ) + ( CS * DS ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * ( MUR * Min( MLU ,CS ) ) )", "obj1": 0.5594795539033457, "obj2": 0.28550984027341}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - ( FirstVNF_Mem * MRS ) ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) )", "obj1": 0.3308550185873606, "obj2": 0.49658507719949097}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( ( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * ( DS / MUM ) ) ,( ( RCSe / ( Max( MUM,MUC ) + DS ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.18833968781433594}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "Max( Max( ( Max( AMS,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( Min( ( Const / MRS ) ,FirstVNF_RAM_Server ) - ( Const * ( FirstVNF_CPU_Server + MDR ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( DS - Min( RCSe ,MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6827489360940202}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + ( PN + PN ) ) ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( Min( ( ( MUR - MUR ) * ( Min( DS ,RMSe ) / ( ( CS / MLU ) / RCSe ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( ( ( RMSe * ( MUR * RRSe ) ) + MLU ) / MLU ) ) ,( ( RRSe / CS ) - ( CS + ( DS / Min( Max( Min( DS ,MUR ),CS ) ,RCSe ) ) ) ) ) )", "obj1": 0.7881040892193308, "obj2": 0.11895438278007324}, {"determining": "( ( Const / ( FirstVNF_Mem + RRS ) ) - Max( ( ( FirstVNF_RAM * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) * ( MDR - CRS ) ),( MDR - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( MUM / Min( ( MUR - Min( RMSe ,MUM ) ) ,MUR ) ) ,( Min( RRSe ,MUR ) + MUC ) ) )", "obj1": 0.4312267657992565, "obj2": 0.42176111470200056}, {"determining": "( ( Const * ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_Mem + MDR ),RRS ) - ( RRS * ( ACS * FirstVNF_CPU ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( RMSe + MUC ) ,( RCSe / Min( CS ,( ( ( RRSe * MUR ) + MUC ) * RCSe ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.3313097246983379}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5358276430356271}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - ( FirstVNF_RAM - RRS ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * Max( DS,Max( RCSe,CS ) ) ) ,( ( MUM * MUM ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.7713754646840149, "obj2": 0.13970792337443452}, {"determining": "( ( Max( ( Const / ( FirstVNF_Mem + MDR ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( Max( DDR,Max( ACS,FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem / ( Const - FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( MUR - CS ) * ( DS / DS ) ) ,Min( MUM ,( ( Min( Max( Max( MUM,RCSe ),RRSe ) ,( RMSe - RCSe ) ) * RMSe ) - DS ) ) ) * ( Max( ( MUC * ( MUM - ( RCSe / ( MUR * ( MUM + RCSe ) ) ) ) ),RRSe ) / ( MUC / Max( MUR,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19701405727226928}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.5130111524163569, "obj2": 0.3438228143618053}, {"determining": "( ( DDR / FirstVNF_CPU ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Max( MDR,FirstVNF_CPU ) * Max( MDR,ACS ) ) - MDR ),PN ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( RCSe * MUC ),Max( CS,Min( MLU ,DS ) ) ) ) ) - Max( RMSe,( CS + ( RMSe / ( MLU * CS ) ) ) ) ) ,( ( MUR - CS ) * ( DS / MUM ) ) ) )", "obj1": 0.8345724907063197, "obj2": 0.08700838681083871}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7600080279757643}, {"determining": "( ( AMS / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUR ,RRSe ) * ( ( ( ( Max( ( ( RRSe / MUR ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) / MUC ) ) )", "obj1": 0.4163568773234201, "obj2": 0.4483470789177171}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6586664980303089}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + MRS ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( Min( Min( CS ,RMSe ) ,CS ) * Min( Min( Min( MLU ,RMSe ) ,( ( ( Max( CS,MUC ) + MUC ) - MUM ) - RMSe ) ) ,( ( MUM * Max( Max( Max( ( MUC * RRSe ),CS ),RMSe ),RRSe ) ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6133828996282528, "obj2": 0.26497287049686574}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( Const * ( BR * AMS ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( MDR * MRS ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ( FirstVNF_CPU + Max( Const,MDR ) ) ) ) * Max( Max( RRS,FirstVNF_CPU ),( ACS * FirstVNF_Mem ) ) ) ) ) - ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( ( ( CS - DS ) + ( DS * ( ( RMSe / MLU ) * MLU ) ) ) ,Max( ( RCSe / MUC ),Min( RCSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) - CS ) * ( MUM / DS ) ) ,( ( RMSe - RMSe ) - ( MUM * MUM ) ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4629364930377124}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,Max( ( AMS + MRS ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) ) ) + ( FirstVNF_Mem + MDR ) ) - Max( Max( MDR,Min( ACS ,FirstVNF_CPU ) ),FirstVNF_RAM ) )", "choosing": "( RRSe * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7379182156133829, "obj2": 0.1707293803058073}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + FirstVNF_RAM ) * FirstVNF_Mem_Server ) / BR ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUM ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( CS,MUR ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.3141263940520446, "obj2": 0.5248712395780369}, {"determining": "( ( ( ( FirstVNF_RAM_Server / PN ) / Max( Const,ARS ) ) / Max( FirstVNF_RAM,Min( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( ( RMSe + RMSe ) + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.09851301115241635, "obj2": 0.7778725514870714}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.8029739776951673, "obj2": 0.10209858360545383}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( Max( FirstVNF_CPU,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4591078066914498, "obj2": 0.40403771587051085}, {"determining": "( ( Const / Min( Const ,FirstVNF_Mem ) ) - Max( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),FirstVNF_RAM_Server ) )", "choosing": "( Min( CS ,RMSe ) * Min( ( ( ( MUC + Min( MLU ,CS ) ) / MUM ) * ( RCSe - CS ) ) ,( ( RCSe + MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.1721592836339867}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( MLU,RCSe ) * Min( ( ( MUR - CS ) * ( DS / MUM ) ) ,( ( Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4721189591078067, "obj2": 0.3920634042932568}, {"determining": "( Max( ARS,ACS ) * Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Max( MUM,( MUM - ( RCSe + ( CS + RCSe ) ) ) ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.05947955390334572, "obj2": 0.8615957329540203}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( MRS * ( CRS + ( DDR / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.32899628252788105, "obj2": 0.5184281554821352}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( DDR * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * MUR ) ,( ( RCSe / MUC ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.44423791821561337, "obj2": 0.41529335504571185}, {"determining": "( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / PN ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_Mem + MDR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / MLU ) + ( MUR - RRSe ) ) + Max( ( MUM * MUM ),Min( RRSe ,RMSe ) ) ) * Max( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ),Max( DS,( Max( MUM,( CS + Max( CS,( MUR - RCSe ) ) ) ) + DS ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5913643735259435}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_CPU / ARS ) ) ) - Max( ( AMS / FirstVNF_Mem_Server ),( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUC * RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Min( DS ,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.9479553903345725, "obj2": 0.024188496290585365}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - FirstVNF_RAM_Server ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUR,( ( RRSe - MUR ) - RCSe ) ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7490706319702602, "obj2": 0.14451152709665668}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6672862453531598, "obj2": 0.2104764355061568}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( ( CS - DS ) + Max( MUM,CS ) ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.8977695167286245, "obj2": 0.05401765641372343}, {"determining": "( ( Const / ( FirstVNF_RAM + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( RMSe - Max( DS,MLU ) ) ) * Min( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.23633415030762628}, {"determining": "Max( ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( CS / ( RCSe - Min( DS ,MUR ) ) ) - Max( Max( Min( ( ( RCSe * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6163575932257626}, {"determining": "( ( Const / ( Const + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / RMSe ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.7523399741006326}], "13": [{"determining": "( RRS - ( Const + ( MDR + ( Const / ( FirstVNF_Mem + MDR ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + ( RCSe / MUC ) ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN / ( Min( ( Const / ( FirstVNF_Mem + Min( RRS ,Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,Min( BR ,DDR ) ) - Max( ( MRS - DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - ( Max( ( RCSe / MUC ),( ( DS + MUR ) * MUC ) ) / CS ) ) * ( Max( ( MUC / MLU ),Min( RMSe ,RRSe ) ) / MUM ) ) * ( ( DS / Min( RCSe ,CS ) ) - Max( CS,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * ( PN * PN ) )", "choosing": "( ( ( Max( MUM,( ( RMSe + ( CS / ( MUM * RCSe ) ) ) / Min( RMSe ,MUC ) ) ) / RCSe ) + DS ) / Min( DS ,Max( RMSe,MLU ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8687218964814788}, {"determining": "( ( DDR / FirstVNF_CPU ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Max( MDR,FirstVNF_CPU ) * Max( MDR,ACS ) ) - MDR ),PN ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( RCSe * MUC ),Max( CS,Min( MLU ,DS ) ) ) ) ) - Max( RMSe,( CS + ( RMSe / ( MLU * CS ) ) ) ) ) ,( ( MUR - CS ) * ( DS / MUM ) ) ) )", "obj1": 0.8345724907063197, "obj2": 0.08700838681083871}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( ( CS - DS ) + Max( MUM,CS ) ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.8977695167286245, "obj2": 0.053949289557420725}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( Const / ( ( Const / MDR ) + MDR ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( Min( ( RRSe - CS ) ,MUR ) - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUR ,MUR ) ),( Max( MUR,CS ) / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) )", "obj1": 0.5297397769516728, "obj2": 0.29659392975404275}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - MDR ),PN ) ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6586664980303089}, {"determining": "Max( Max( ( ( DDR * Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - ( ( AMS / FirstVNF_CPU ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) * CRS ),( ( BR + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) ),Max( ( BR * Max( MDR,DDR ) ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) )", "choosing": "( ( Min( ( ( ( ( RRSe - RCSe ) + Max( CS,( RCSe + RCSe ) ) ) - MUM ) - MUC ) ,( ( Min( Min( MLU ,( RRSe + MUM ) ) ,DS ) - MUC ) * CS ) ) + Min( DS ,( Min( ( CS + ( ( DS / RCSe ) / MUR ) ) ,RRSe ) / DS ) ) ) - ( Min( Max( MUR,CS ) ,Min( MUC ,MLU ) ) * Min( MUR ,MUC ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6258431798774245}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) )", "choosing": "( ( ( Min( MUR ,RRSe ) + ( CS * DS ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * ( MUR * Min( MLU ,CS ) ) )", "obj1": 0.5594795539033457, "obj2": 0.28550984027341}, {"determining": "( PN - ( Const / ( FirstVNF_Mem + ( Min( BR ,BR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) + ( CS - DS ) ) + ( RMSe / MUC ) ) * ( RMSe / RCSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7349552382604613}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "( ( Max( FirstVNF_RAM_Server,( FirstVNF_Mem_Server / PN ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ( FirstVNF_Mem + MDR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / MLU ) + ( MUR - RRSe ) ) + Max( ( MUM * MUM ),Min( RRSe ,RMSe ) ) ) * Max( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ),Max( DS,( Max( MUM,( CS + Max( CS,( MUR - RCSe ) ) ) ) + DS ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5913643735259435}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6672862453531598, "obj2": 0.2104764355061568}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_CPU / ARS ) ) ) - Max( ( AMS / FirstVNF_Mem_Server ),( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUC * RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Min( DS ,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.9479553903345725, "obj2": 0.024188496290585365}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - FirstVNF_RAM_Server ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUR,( ( RRSe - MUR ) - RCSe ) ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7490706319702602, "obj2": 0.14451152709665668}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + ( PN + PN ) ) ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( Min( ( ( MUR - MUR ) * ( Min( DS ,RMSe ) / ( ( CS / MLU ) / RCSe ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( ( ( RMSe * ( MUR * RRSe ) ) + MLU ) / MLU ) ) ,( ( RRSe / CS ) - ( CS + ( DS / Min( Max( Min( DS ,MUR ),CS ) ,RCSe ) ) ) ) ) )", "obj1": 0.7881040892193308, "obj2": 0.11895438278007324}, {"determining": "( ( Const * ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_Mem + MDR ),RRS ) - ( RRS * ( ACS * FirstVNF_CPU ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( RMSe + MUC ) ,( RCSe / Min( CS ,( ( ( RRSe * MUR ) + MUC ) * RCSe ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.3313097246983379}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + MRS ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( Min( Min( CS ,RMSe ) ,CS ) * Min( Min( Min( MLU ,RMSe ) ,( ( ( Max( CS,MUC ) + MUC ) - MUM ) - RMSe ) ) ,( ( MUM * Max( Max( Max( ( MUC * RRSe ),CS ),RMSe ),RRSe ) ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6133828996282528, "obj2": 0.26497287049686574}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,RRS ) - ( FirstVNF_RAM - RRS ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( MUR * MUC ) ) / CS ) - CS ) * Max( DS,Max( RCSe,CS ) ) ) ,( ( MUM * MUM ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.7713754646840149, "obj2": 0.13970792337443452}, {"determining": "( ( Max( ( Const / ( FirstVNF_Mem + MDR ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( Max( DDR,Max( ACS,FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem / ( Const - FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( MUR - CS ) * ( DS / DS ) ) ,Min( MUM ,( ( Min( Max( Max( MUM,RCSe ),RRSe ) ,( RMSe - RCSe ) ) * RMSe ) - DS ) ) ) * ( Max( ( MUC * ( MUM - ( RCSe / ( MUR * ( MUM + RCSe ) ) ) ) ),RRSe ) / ( MUC / Max( MUR,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19701405727226928}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Const ) - Min( ( ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM,FirstVNF_Mem ) + ( ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / AMS ) ) ) * Min( ( FirstVNF_Mem_Server - ACS ) ,MRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - MLU ) * ( ( ( CS - RCSe ) - ( DS / MUM ) ) + ( ( RCSe / ( Max( MUM,MUC ) + Min( Max( RCSe,( RRSe / MUR ) ) ,DS ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.18640706789903108}, {"determining": "( ( ( DDR * CRS ) / ( Max( ( ( CRS * ( DDR - MDR ) ) - RRS ),FirstVNF_CPU ) + MDR ) ) - Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + CS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR + MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.23207431924860214}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5358276430356271}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6025787786841479}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.5130111524163569, "obj2": 0.3438228143618053}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( CS,MUR ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.48595127697264917}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( ( RCSe - CS ) * ( MUC / MUM ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7304832713754646, "obj2": 0.16656260115317228}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + FirstVNF_RAM ) * FirstVNF_Mem_Server ) / BR ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUM ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( CS,MUR ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.3141263940520446, "obj2": 0.5248712395780369}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( Const * ( BR * AMS ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( MDR * MRS ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ( FirstVNF_CPU + Max( Const,MDR ) ) ) ) * Max( Max( RRS,FirstVNF_CPU ),( ACS * FirstVNF_Mem ) ) ) ) ) - ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( ( ( CS - DS ) + ( DS * ( ( RMSe / MLU ) * MLU ) ) ) ,Max( ( RCSe / MUC ),Min( RCSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) - CS ) * ( MUM / DS ) ) ,( ( RMSe - RMSe ) - ( MUM * MUM ) ) ) ) )", "obj1": 0.4684014869888476, "obj2": 0.38998932928100344}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9888475836431226, "obj2": 0.011797146009949688}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.8029739776951673, "obj2": 0.10209858360545383}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM ) * Max( DDR,( Max( ( Min( BR ,ARS ) / PN ),( ( RRS + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.44609665427509293, "obj2": 0.4022276543419007}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,( ( DDR * FirstVNF_RAM_Server ) - Max( ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ),FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * MUR ) ,( ( RCSe / MUC ) - ( RCSe / MUC ) ) ) )", "obj1": 0.38104089219330856, "obj2": 0.48026830256751885}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7600080279757643}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.34014869888475835, "obj2": 0.4950324917988901}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "Max( Max( ( Max( AMS,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( Min( ( Const / MRS ) ,FirstVNF_RAM_Server ) - ( Const * ( FirstVNF_CPU_Server + MDR ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( DS - Min( RCSe ,MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6827489360940202}, {"determining": "( ( ( ACS - PN ) * ( DDR * ( RRS + FirstVNF_Mem_Server ) ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( Max( FirstVNF_CPU,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe * MUR ),Min( RRSe ,RMSe ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.4107806691449814, "obj2": 0.4546758829884855}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( MRS * ( CRS + ( DDR / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.32899628252788105, "obj2": 0.5184281554821352}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( ( Const * ( FirstVNF_CPU_Server + MDR ) ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) * ( CRS + MRS ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,Max( DS,( Max( MUM,MUC ) + DS ) ) ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.16356877323420074, "obj2": 0.6674312827707647}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUM ,RMSe ) - ( MUR * CS ) ) * ( ( CS - DS ) + Max( MUM,CS ) ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9368029739776952, "obj2": 0.029871423104538334}, {"determining": "( ACS / Max( DDR,( Max( ( Min( FirstVNF_CPU_Server ,ARS ) / PN ),( Min( Const ,FirstVNF_CPU ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( RCSe + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6125476352630775}], "14": [{"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( ( CS * DS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - ( Const + ( MDR + ( Const / ( FirstVNF_Mem + MDR ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + ( RCSe / MUC ) ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,ACS ) * ( PN * PN ) )", "choosing": "( ( ( Max( MUM,( ( RMSe + ( CS / ( MUM * RCSe ) ) ) / Min( RMSe ,MUC ) ) ) / RCSe ) + DS ) / Min( DS ,Max( RMSe,MLU ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8687218964814788}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( RCSe * MUR ) ) + DS ) ) )", "obj1": 0.42193308550185876, "obj2": 0.4005676098665701}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5074349442379182, "obj2": 0.3248294727550586}, {"determining": "( ( Max( ( Const / ( FirstVNF_Mem + MDR ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( Max( DDR,Max( ACS,FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem / ( Const - FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.13382899628252787, "obj2": 0.7309531977157507}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( ( RCSe - CS ) * ( MUC / MUM ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7304832713754646, "obj2": 0.16656260115317228}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / MDR ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8414014718072428}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.8029739776951673, "obj2": 0.10209858360545383}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) )", "choosing": "( ( ( Min( MUR ,RRSe ) + ( CS * DS ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * ( MUR * Min( MLU ,CS ) ) )", "obj1": 0.5594795539033457, "obj2": 0.28550984027341}, {"determining": "( ( Const / ( FirstVNF_Mem + ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) - PN )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.120817843866171, "obj2": 0.7600080279757643}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( ( ARS * CRS ) + ( CRS / ARS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + MDR ) ) - Max( RRS,FirstVNF_RAM ) )", "choosing": "( ( ( MLU - ( RRSe / ( MUC / ( Min( RRSe ,MLU ) * DS ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.08533064351197463}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( Const * ( BR * AMS ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( MDR * MRS ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ( FirstVNF_CPU + Max( Const,MDR ) ) ) ) * Max( Max( RRS,FirstVNF_CPU ),( ACS * FirstVNF_Mem ) ) ) ) ) - ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( ( ( CS - DS ) + ( DS * ( ( RMSe / MLU ) * MLU ) ) ) ,Max( ( RCSe / MUC ),Min( RCSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) - CS ) * ( MUM / DS ) ) ,( ( RMSe - RMSe ) - ( MUM * MUM ) ) ) ) )", "obj1": 0.4684014869888476, "obj2": 0.38998932928100344}, {"determining": "( ( CRS + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_CPU / ARS ) ) ) - Max( ( AMS / FirstVNF_Mem_Server ),( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUC * RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Min( DS ,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.9479553903345725, "obj2": 0.024188496290585365}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - FirstVNF_RAM_Server ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUR,( ( RRSe - MUR ) - RCSe ) ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7490706319702602, "obj2": 0.14451152709665668}, {"determining": "( ACS / ( ( ( FirstVNF_CPU / Const ) + Min( MRS ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / MLU ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.41821561338289964, "obj2": 0.44717161041861425}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + ( Max( AMS,FirstVNF_Mem_Server ) - ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * ( ( ( Min( MUM ,RMSe ) - ( MUR * CS ) ) * ( ( CS - DS ) + Max( MUM,CS ) ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.8847583643122676, "obj2": 0.06278583067651973}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + MRS ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( Min( Min( CS ,RMSe ) ,CS ) * Min( Min( Min( MLU ,RMSe ) ,( ( ( Max( CS,MUC ) + MUC ) - MUM ) - RMSe ) ) ,( ( MUM * Max( Max( Max( ( MUC * RRSe ),CS ),RMSe ),RRSe ) ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6133828996282528, "obj2": 0.26497287049686574}, {"determining": "( ( DDR / FirstVNF_CPU ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Max( MDR,FirstVNF_CPU ) * Max( MDR,ACS ) ) - MDR ),PN ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( RCSe * MUC ),Max( CS,Min( MLU ,DS ) ) ) ) ) - Max( RMSe,( CS + ( RMSe / ( MLU * CS ) ) ) ) ) ,( ( MUR - CS ) * ( DS / MUM ) ) ) )", "obj1": 0.8345724907063197, "obj2": 0.08700838681083871}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + ( PN + PN ) ) ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( Min( ( ( MUR - MUR ) * ( Min( DS ,RMSe ) / ( ( CS / MLU ) / RCSe ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ),Min( RRSe ,RMSe ) ) ) * Min( ( ( MUR - CS ) * ( ( ( RMSe * ( MUR * RRSe ) ) + MLU ) / MLU ) ) ,( ( RRSe / CS ) - ( CS + ( DS / Min( Max( Min( DS ,MUR ),CS ) ,RCSe ) ) ) ) ) )", "obj1": 0.7881040892193308, "obj2": 0.11895438278007324}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( MRS * ( CRS + ( DDR / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.32899628252788105, "obj2": 0.5184281554821352}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.34014869888475835, "obj2": 0.4950324917988901}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUR ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.5278810408921933, "obj2": 0.2988148260867753}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Min( BR ,ARS ) / PN ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6451243902819088}, {"determining": "( ( Max( ( Const / ( FirstVNF_Mem + MDR ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( Max( DDR,Max( ACS,FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem / ( Const - FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( MUR - CS ) * ( DS / DS ) ) ,Min( MUM ,( ( Min( Max( Max( MUM,RCSe ),RRSe ) ,( RMSe - RCSe ) ) * RMSe ) - DS ) ) ) * ( Max( ( MUC * ( MUM - ( RCSe / ( MUR * ( MUM + RCSe ) ) ) ) ),RRSe ) / ( MUC / Max( MUR,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19701405727226928}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Const ) - Min( ( ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM,FirstVNF_Mem ) + ( ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / AMS ) ) ) * Min( ( FirstVNF_Mem_Server - ACS ) ,MRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - MLU ) * ( ( ( CS - RCSe ) - ( DS / MUM ) ) + ( ( RCSe / ( Max( MUM,MUC ) + Min( Max( RCSe,( RRSe / MUR ) ) ,DS ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.18640706789903108}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( ( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( RCSe + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.6617100371747212, "obj2": 0.22030639755443165}, {"determining": "Max( Max( ( Max( AMS,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( Min( ( Const / MRS ) ,FirstVNF_RAM_Server ) - ( Const * ( FirstVNF_CPU_Server + MDR ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( DS - Min( RCSe ,MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6827489360940202}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( MRS * ( CRS + ( DDR / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Max( Max( CS,MUR ),( RRSe * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.35687732342007433, "obj2": 0.4907845476752959}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Max( MDR,ARS ) * Max( MDR,ACS ) ) - ( MDR + ( Const / ( FirstVNF_Mem + MDR ) ) ) ),PN ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,DS ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ,( ( MUR - CS ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9368029739776952, "obj2": 0.02954859602577276}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.0724907063197026, "obj2": 0.8089422348398255}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( Const / ( ( Const / MDR ) + MDR ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( Min( ( RRSe - CS ) ,MUR ) - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUR ,MUR ) ),( Max( MUR,CS ) / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) )", "obj1": 0.5297397769516728, "obj2": 0.29659392975404275}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5358276430356271}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6025787786841479}, {"determining": "( ( ( ACS - PN ) * ( DDR * ARS ) ) * Max( ( ACS - FirstVNF_Mem ),Max( FirstVNF_CPU,( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Min( BR ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) ) ) ) )", "choosing": "( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - ( RCSe - CS ) ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.591335102303805}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9888475836431226, "obj2": 0.011797146009949688}, {"determining": "( ( ( DDR * CRS ) / ( Max( ( ( CRS * ( DDR - MDR ) ) - RRS ),FirstVNF_CPU ) + MDR ) ) - Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + CS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR + MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.23207431924860214}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / FirstVNF_CPU ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Max( PN,RRS ) - BR ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,CS ) ) ) * ( ( ( Max( MLU,RCSe ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - DS ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4741418327598169}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6672862453531598, "obj2": 0.2104764355061568}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( ( Max( ( Min( BR ,ARS ) / PN ),( ( RRS + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ),FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( ( Const * ( FirstVNF_CPU_Server + MDR ) ) - ( MRS * ( CRS + MRS ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( MUC ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5931239368916256}, {"determining": "( ( ( ( FirstVNF_CPU / Const ) + Min( MRS ,MDR ) ) / Const ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1970260223048327, "obj2": 0.6288714684851128}], "15": [{"determining": "( ( ( PN * CRS ) / ( Max( FirstVNF_CPU,FirstVNF_RAM ) + MDR ) ) - Max( ( ( ( PN * CRS ) / Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,MDR ) ) - ( ( FirstVNF_Mem_Server / Const ) / MDR ) ),MDR ) )", "choosing": "( ( ( ( RCSe + MUR ) + ( MUR - RRSe ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( Max( MUM,MUC ) + DS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( Const / ( FirstVNF_Mem + FirstVNF_RAM ) ) ) - Min( FirstVNF_CPU_Server ,( ( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) * RRS ) - MRS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( ( CS * DS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8554310398717645}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.11524163568773234, "obj2": 0.7292119978468831}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - FirstVNF_RAM_Server ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUR,( ( RRSe - MUR ) - RCSe ) ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7490706319702602, "obj2": 0.14451152709665668}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6025787786841479}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( Const * ( BR * AMS ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( MDR * MRS ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ( FirstVNF_CPU + Max( Const,MDR ) ) ) ) * Max( Max( RRS,FirstVNF_CPU ),( ACS * FirstVNF_Mem ) ) ) ) ) - ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( ( ( CS - DS ) + ( DS * ( ( RMSe / MLU ) * MLU ) ) ) ,Max( ( RCSe / MUC ),Min( RCSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) - CS ) * ( MUM / DS ) ) ,( ( RMSe - RMSe ) - ( MUM * MUM ) ) ) ) )", "obj1": 0.4684014869888476, "obj2": 0.38998932928100344}, {"determining": "( ACS / ( ( DDR - AMS ) - ( ( Const / ( Min( BR ,FirstVNF_RAM ) + PN ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 0.38847583643122674, "obj2": 0.4249707429740821}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.0724907063197026, "obj2": 0.8089422348398255}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( RCSe * MUR ) ) + DS ) ) )", "obj1": 0.42193308550185876, "obj2": 0.4005676098665701}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( ( MRS + CRS ) - Max( FirstVNF_CPU,MRS ) ) - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * Max( CS,MUC ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.055762081784386616, "obj2": 0.8294469479691957}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ( ( FirstVNF_CPU / Const ) + Min( MRS ,MDR ) ) / Const ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1970260223048327, "obj2": 0.6288714684851128}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5074349442379182, "obj2": 0.3248294727550586}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / FirstVNF_CPU ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Max( PN,RRS ) - BR ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,CS ) ) ) * ( ( ( Max( MLU,RCSe ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - DS ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4741418327598169}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + MRS ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( Min( Min( CS ,RMSe ) ,CS ) * Min( Min( Min( MLU ,RMSe ) ,( ( ( Max( CS,MUC ) + MUC ) - MUM ) - RMSe ) ) ,( ( MUM * Max( Max( Max( ( MUC * RRSe ),CS ),RMSe ),RRSe ) ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6133828996282528, "obj2": 0.26497287049686574}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( ( RCSe - CS ) * ( MUC / MUM ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7304832713754646, "obj2": 0.16656260115317228}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( ( Const - ( ( Min( BR ,Min( RRS ,FirstVNF_Mem ) ) * Max( ARS,BR ) ) + PN ) ) + MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RCSe - MUC ) * ( Min( MUR ,MUC ) + DS ) ),( MUR * RCSe ) ) / CS ) / RCSe ) + CS ) / ( ( ( ( Max( Max( MUC,( MUC + MUC ) ),( MUR / RMSe ) ) + ( CS / MLU ) ) / RRSe ) / RCSe ) / Max( CS,MUR ) ) )", "obj1": 0.4107806691449814, "obj2": 0.4038628549736734}, {"determining": "( Max( RRS,MDR ) - ( ( Const * FirstVNF_RAM ) / CRS ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( ( RCSe + ( MUM + MLU ) ) - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - ( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) * ( MUC / MUR ) ) ) ) ) ) * ( Max( DS,MLU ) / RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.37797037944580986}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUM + RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.06662469873059496}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( ( ARS * CRS ) + ( CRS / ARS ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + MDR ) ) - Max( RRS,FirstVNF_RAM ) )", "choosing": "( ( ( MLU - ( RRSe / ( MUC / ( Min( RRSe ,MLU ) * DS ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.8513011152416357, "obj2": 0.08533064351197463}, {"determining": "( ( Max( ( Const / ( FirstVNF_Mem + MDR ) ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) / ( Max( ( MDR - Max( RRS,RRS ) ),PN ) + MDR ) ) - ( Max( DDR,Max( ACS,FirstVNF_RAM ) ) * ( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem / ( Const - FirstVNF_Mem_Server ) ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( MUR - CS ) * ( DS / DS ) ) ,Min( MUM ,( ( Min( Max( Max( MUM,RCSe ),RRSe ) ,( RMSe - RCSe ) ) * RMSe ) - DS ) ) ) * ( Max( ( MUC * ( MUM - ( RCSe / ( MUR * ( MUM + RCSe ) ) ) ) ),RRSe ) / ( MUC / Max( MUR,Min( MUR ,MUC ) ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.19701405727226928}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Const ) - Min( ( ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM,FirstVNF_Mem ) + ( ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / AMS ) ) ) * Min( ( FirstVNF_Mem_Server - ACS ) ,MRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - MLU ) * ( ( ( CS - RCSe ) - ( DS / MUM ) ) + ( ( RCSe / ( Max( MUM,MUC ) + Min( Max( RCSe,( RRSe / MUR ) ) ,DS ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.18640706789903108}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.11433548191296818}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Max( MDR,ARS ) * Max( MDR,ACS ) ) - ( MDR + ( Const / ( FirstVNF_Mem + MDR ) ) ) ),PN ) ) + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,DS ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ,( ( MUR - CS ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9368029739776952, "obj2": 0.02954859602577276}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.11433548191296818}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( ( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.22014958954492303}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5185873605947955, "obj2": 0.3188010454267227}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Min( BR ,ARS ) / PN ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6451243902819088}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( ( Const * ( FirstVNF_CPU_Server + Max( MDR,ARS ) ) ) - ( MRS * ( CRS + MRS ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RCSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.17286245353159851, "obj2": 0.6685956958840528}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( ( ( FirstVNF_RAM / AMS ) - DDR ) * DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,MLU ) ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( CS + ( CS - DS ) ) ),( MUC * MUR ) ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019035471382344727}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( MRS * ( CRS + ( DDR / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( Max( Max( CS,MUR ),( RRSe * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.35687732342007433, "obj2": 0.4907845476752959}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( FirstVNF_RAM - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6672862453531598, "obj2": 0.2104764355061568}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.8029739776951673, "obj2": 0.10209858360545383}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( Const * ( BR * AMS ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( MDR * MRS ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ( FirstVNF_CPU + Max( Const,MDR ) ) ) ) * Max( Max( RRS,FirstVNF_CPU ),( ACS * FirstVNF_Mem ) ) ) ) ) - ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( ( ( CS - DS ) + ( DS * ( ( RMSe / MLU ) * MLU ) ) ) ,Max( ( RCSe / MUC ),Min( RCSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) ) * Min( ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) - CS ) * ( MUM / DS ) ) ,( ( RMSe - RMSe ) - ( MUM * MUM ) ) ) ) )", "obj1": 0.9237918215613383, "obj2": 0.04998450910670809}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( ( Max( ( Min( BR ,ARS ) / PN ),( ( RRS + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ),FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( ( Const * ( FirstVNF_CPU_Server + MDR ) ) - ( MRS * ( CRS + MRS ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( MUC ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5903283737251974}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,DS ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - Max( RMSe,( CS + ( RMSe / ( MLU * MUC ) ) ) ) ) ,( ( MUR - CS ) * ( DS / MUM ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.055985395824602636}, {"determining": "( ( ( DDR * CRS ) / ( Max( ( ( CRS * ( DDR - MDR ) ) - RRS ),FirstVNF_CPU ) + MDR ) ) - Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + CS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR + MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.23207431924860214}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( MRS + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,DS ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( CS + ( ( MLU + DS ) / MLU ) ) ) ,( ( MUR - CS ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.7342007434944238, "obj2": 0.1580463104406152}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5358276430356271}, {"determining": "( RRS - ( Const + ( MDR + ( Max( DDR,Max( MRS,BR ) ) - Max( ( ( DDR / FirstVNF_Mem ) - MDR ),PN ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.9163568773234201, "obj2": 0.052062969344307576}], "16": [{"determining": "( ( ( Const / ( FirstVNF_Mem + AMS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( MRS + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * CRS ) / ( Max( FirstVNF_CPU,FirstVNF_RAM ) + MDR ) ) - Max( ( ( ( PN * CRS ) / Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,MDR ) ) - ( ( FirstVNF_Mem_Server / Const ) / MDR ) ),MDR ) )", "choosing": "( ( ( ( RCSe + MUR ) + ( MUR - RRSe ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( Max( MUM,MUC ) + DS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8554310398717645}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - FirstVNF_RAM_Server ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUR,( ( RRSe - MUR ) - RCSe ) ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7490706319702602, "obj2": 0.14451152709665668}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.11524163568773234, "obj2": 0.7292119978468831}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( Max( FirstVNF_Mem,( ACS / CRS ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( ( CS + ( ( RCSe + DS ) / ( RCSe * MUC ) ) ) * RMSe ),( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * ( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869643}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUM + RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.06662469873059496}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ( AMS - FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( Min( RRS ,CRS ),( ACS / BR ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( CS * MUR ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( Max( CS,( ( MLU + DS ) / ( RMSe * MUM ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.6672862453531598, "obj2": 0.1920922486809074}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "( ( Const - ( ( Const - Max( PN,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( ( DS / Max( Min( MUM ,( MUR + RCSe ) ),( RRSe / ( RMSe * RRSe ) ) ) ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.317688688439241}, {"determining": "( ACS / ( ( DDR - AMS ) - ( ( Const / ( Min( BR ,FirstVNF_RAM ) + PN ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 0.38847583643122674, "obj2": 0.4249707429740821}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( Const * ( BR * AMS ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( MDR * MRS ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ( FirstVNF_CPU + Max( Const,MDR ) ) ) ) * Max( Max( RRS,FirstVNF_CPU ),( ACS * FirstVNF_Mem ) ) ) ) ) - ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( ( ( CS - DS ) + ( DS * ( ( RMSe / MLU ) * MLU ) ) ) ,Max( ( RCSe / MUC ),Min( RCSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) - CS ) * ( MUM / DS ) ) ,( ( RMSe - RMSe ) - ( MUM * MUM ) ) ) ) )", "obj1": 0.4684014869888476, "obj2": 0.38998932928100344}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6025787786841479}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_RAM_Server,( ( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,FirstVNF_CPU ) - MDR ),PN ) ),FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.22014958954492303}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Min( BR ,ARS ) / PN ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6451243902819088}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + MRS ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( Min( Min( CS ,RMSe ) ,CS ) * Min( Min( Min( MLU ,RMSe ) ,( ( ( Max( CS,MUC ) + MUC ) - MUM ) - RMSe ) ) ,( ( MUM * Max( Max( Max( ( MUC * RRSe ),CS ),RMSe ),RRSe ) ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6133828996282528, "obj2": 0.26497287049686574}, {"determining": "( ( ( ( FirstVNF_CPU / Const ) + Min( MRS ,MDR ) ) / Const ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6652166118799966}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / Min( BR ,ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( ( Max( ( RCSe * MUR ),( MUR * ( ( CS / RRSe ) + ( MUC + MUR ) ) ) ) * CS ) ,RMSe ) )", "obj1": 0.10594795539033457, "obj2": 0.7488026877877105}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( ( Const - ( ( Min( BR ,Min( RRS ,FirstVNF_Mem ) ) * Max( ARS,BR ) ) + PN ) ) + MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RCSe - MUC ) * ( Min( MUR ,MUC ) + DS ) ),( MUR * RCSe ) ) / CS ) / RCSe ) + CS ) / ( ( ( ( Max( Max( MUC,( MUC + MUC ) ),( MUR / RMSe ) ) + ( CS / MLU ) ) / RRSe ) / RCSe ) / Max( CS,MUR ) ) )", "obj1": 0.4107806691449814, "obj2": 0.4038628549736734}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MLU / ( MUC / ( ( Min( MUM ,DS ) + CS ) * MUM ) ) ) ) + ( MLU * RMSe ) ) * ( MUC + ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) + DS ) / Min( DS ,RMSe ) ) ) )", "obj1": 0.3215613382899628, "obj2": 0.5251140290732872}, {"determining": "( Max( RRS,MDR ) - ( ( Const * FirstVNF_RAM ) / CRS ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( ( RCSe + ( MUM + MLU ) ) - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - ( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) * ( MUC / MUR ) ) ) ) ) ) * ( Max( DS,MLU ) / RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.37797037944580986}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / FirstVNF_CPU ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Max( PN,RRS ) - BR ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,CS ) ) ) * ( ( ( Max( MLU,RCSe ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - DS ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4741418327598169}, {"determining": "( ( CRS / ( Min( ( FirstVNF_CPU - ARS ) ,FirstVNF_RAM_Server ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( Max( DS,RMSe ) * ( RCSe - MUC ) ) ) / CS ) / MUM ) + DS ) / Max( Min( MUC ,( Max( RRSe,MLU ) + Max( RMSe,MUM ) ) ),( RMSe * RMSe ) ) )", "obj1": 0.4256505576208178, "obj2": 0.39968743461922907}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( Const / MRS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUR * Max( CS,MUC ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.1654275092936803, "obj2": 0.6882588171952841}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5074349442379182, "obj2": 0.3248294727550586}, {"determining": "( ACS / ( ( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6270718108538208}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.11433548191296818}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.11433548191296818}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Const ) - Min( ( ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM,FirstVNF_Mem ) + ( ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / AMS ) ) ) * Min( ( FirstVNF_Mem_Server - ACS ) ,MRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - MLU ) * ( ( ( CS - RCSe ) - ( DS / MUM ) ) + ( ( RCSe / ( Max( MUM,MUC ) + Min( Max( RCSe,( RRSe / MUR ) ) ,DS ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.18640706789903108}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) + ( FirstVNF_Mem + MDR ) ) / ( MDR + FirstVNF_Mem ) ) - ( MRS * ( CRS + ( ( ( ( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,( ( MUM - MUR ) / DS ) ) - MUM ) + ( MUM / RRSe ) ) + MUR ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( Min( RRSe ,MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.33643122676579923, "obj2": 0.5141900120428035}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( Max( MDR,ARS ),FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( Min( CS ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RCSe + MUR ) ) ) / CS ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9907063197026023, "obj2": 0.011427263104877426}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.7193308550185874, "obj2": 0.1750090208597195}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( ( Max( ( Min( BR ,ARS ) / PN ),( ( RRS + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ),FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( ( Const * ( FirstVNF_CPU_Server + MDR ) ) - ( MRS * ( CRS + MRS ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( MUC ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5903283737251974}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.0724907063197026, "obj2": 0.8089422348398255}, {"determining": "( ( ( ( ( ( Const * FirstVNF_RAM ) / Const ) / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.3550185873605948, "obj2": 0.5105446619358918}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * ( DS / MUM ) ) ,( ( RCSe / ( Max( MUM,MUC ) + DS ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9052044609665427, "obj2": 0.05085298143456848}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) )", "obj1": 0.8029739776951673, "obj2": 0.10209858360545383}, {"determining": "( ( ( DDR * CRS ) / ( Max( ( ( CRS * ( DDR - MDR ) ) - RRS ),FirstVNF_CPU ) + MDR ) ) - Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + CS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR + MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.23207431924860214}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( MRS + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,DS ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( CS + ( ( MLU + DS ) / MLU ) ) ) ,( ( MUR - CS ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.7342007434944238, "obj2": 0.1580463104406152}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( ( ( FirstVNF_RAM / AMS ) - DDR ) * DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,MLU ) ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( CS + ( CS - DS ) ) ),( MUC * MUR ) ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019035471382344727}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( ( MUR * MUC ) / MUC ),( ( RCSe - CS ) * ( MUC / MUM ) ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8122676579925651, "obj2": 0.09880870830312972}], "17": [{"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) * Max( DDR,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( Min( RRSe ,RMSe ) / Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / ( FirstVNF_Mem + AMS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( MRS + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8554310398717645}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - FirstVNF_RAM_Server ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUR,( ( RRSe - MUR ) - RCSe ) ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7490706319702602, "obj2": 0.14451152709665668}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.11524163568773234, "obj2": 0.7292119978468831}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ( Const - ( ( Const - Max( PN,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( ( DS / Max( Min( MUM ,( MUR + RCSe ) ),( RRSe / ( RMSe * RRSe ) ) ) ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.317688688439241}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "( ACS / ( ( DDR - AMS ) - ( ( Const / ( Min( BR ,FirstVNF_RAM ) + PN ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 0.38847583643122674, "obj2": 0.4249707429740821}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5325950135241195}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ( ( ( MRS - CRS ) * CRS ) + Max( ( Const * ( BR * AMS ) ),FirstVNF_CPU_Server ) ) ) ) + ( ( MDR * MRS ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( PN - ( FirstVNF_CPU + Max( Const,MDR ) ) ) ) * Max( Max( RRS,FirstVNF_CPU ),( ACS * FirstVNF_Mem ) ) ) ) ) - ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( ( ( CS - DS ) + ( DS * ( ( RMSe / MLU ) * MLU ) ) ) ,Max( ( RCSe / MUC ),Min( RCSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( ( CS - MUR ),( RRSe * MUM ) ) / Max( RMSe,Max( RCSe,MUR ) ) ) - CS ) * ( MUM / DS ) ) ,( ( RMSe - RMSe ) - ( MUM * MUM ) ) ) ) )", "obj1": 0.4684014869888476, "obj2": 0.38998932928100344}, {"determining": "( Max( FirstVNF_Mem,( ACS / CRS ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( ( CS + ( ( RCSe + DS ) / ( RCSe * MUC ) ) ) * RMSe ),( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * ( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869643}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( ( CRS / ( Min( ( FirstVNF_CPU - ARS ) ,FirstVNF_RAM_Server ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( Max( DS,RMSe ) * ( RCSe - MUC ) ) ) / CS ) / MUM ) + DS ) / Max( Min( MUC ,( Max( RRSe,MLU ) + Max( RMSe,MUM ) ) ),( RMSe * RMSe ) ) )", "obj1": 0.4256505576208178, "obj2": 0.39968743461922907}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / BR ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUM ) ) + ( MUR - RRSe ) ) + ( CS / RRSe ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( CS,MUR ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.4872199391288432}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( ( ( FirstVNF_RAM / AMS ) - DDR ) * DDR ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,MLU ) ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( CS + ( CS - DS ) ) ),( MUC * MUR ) ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019035471382344727}, {"determining": "( ACS / ( Min( ( Const / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.20165524007713925}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( ( FirstVNF_Mem + MDR ) + Const ) - Min( ( ( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM,FirstVNF_Mem ) + ( ( RRS - ( FirstVNF_CPU - FirstVNF_RAM ) ) / AMS ) ) ) * Min( ( FirstVNF_Mem_Server - ACS ) ,MRS ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - MLU ) * ( ( ( CS - RCSe ) - ( DS / MUM ) ) + ( ( RCSe / ( Max( MUM,MUC ) + Min( Max( RCSe,( RRSe / MUR ) ) ,DS ) ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.18640706789903108}, {"determining": "( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + MRS ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( Min( Min( CS ,RMSe ) ,CS ) * Min( Min( Min( MLU ,RMSe ) ,( ( ( Max( CS,MUC ) + MUC ) - MUM ) - RMSe ) ) ,( ( MUM * Max( Max( Max( ( MUC * RRSe ),CS ),RMSe ),RRSe ) ) - Max( MUM,MUM ) ) ) )", "obj1": 0.6133828996282528, "obj2": 0.26497287049686574}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5074349442379182, "obj2": 0.3248294727550586}, {"determining": "( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( MRS + ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + ( ( MLU + DS ) / Min( DS ,CS ) ) ) * Min( ( ( MUM * ( ( ( RMSe - MUM ) / ( RRSe / MUM ) ) + Max( ( Max( MUC,DS ) / DS ),Max( CS,Min( MLU ,DS ) ) ) ) ) - ( CS + ( ( MLU + DS ) / MLU ) ) ) ,( ( MUR - CS ) * ( MUC + ( ( MLU + DS ) / Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.7342007434944238, "obj2": 0.1580463104406152}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ( AMS - FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( Min( RRS ,CRS ),( ACS / BR ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( CS * MUR ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( Max( CS,( ( MLU + DS ) / ( RMSe * MUM ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.6672862453531598, "obj2": 0.1920922486809074}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( ( Const - ( ( Min( BR ,Min( RRS ,FirstVNF_Mem ) ) * Max( ARS,BR ) ) + PN ) ) + MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RCSe - MUC ) * ( Min( MUR ,MUC ) + DS ) ),( MUR * RCSe ) ) / CS ) / RCSe ) + CS ) / ( ( ( ( Max( Max( MUC,( MUC + MUC ) ),( MUR / RMSe ) ) + ( CS / MLU ) ) / RRSe ) / RCSe ) / Max( CS,MUR ) ) )", "obj1": 0.4107806691449814, "obj2": 0.4038628549736734}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.06820012625974053}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.0724907063197026, "obj2": 0.8089422348398255}, {"determining": "( ( ( DDR * CRS ) / ( Max( ( ( CRS * ( DDR - MDR ) ) - RRS ),FirstVNF_CPU ) + MDR ) ) - Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + CS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR + MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.23207431924860214}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ),FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3215613382899628, "obj2": 0.516840829598412}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.7137546468401487, "obj2": 0.17250122877603932}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * ( DS / MUM ) ) ,( ( RCSe / ( Max( MUM,MUC ) + DS ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9052044609665427, "obj2": 0.05085298143456848}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUM + RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.06662469873059496}, {"determining": "( Max( DDR,( Min( ( Max( MDR,Min( PN ,FirstVNF_CPU ) ) * Max( AMS,MRS ) ) ,( BR - FirstVNF_Mem_Server ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / ( Max( ( Max( MUC,RRSe ) / ( RCSe - ( MUR * RMSe ) ) ),MUC ) + ( RCSe / ( ( Min( CS ,MLU ) * MUC ) - MUC ) ) ) )", "obj1": 0.05762081784386617, "obj2": 0.81485501466083}, {"determining": "( Max( RRS,MDR ) - ( ( Const * FirstVNF_RAM ) / CRS ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( ( RCSe + ( MUM + MLU ) ) - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - ( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) * ( MUC / MUR ) ) ) ) ) ) * ( Max( DS,MLU ) / RRSe ) )", "obj1": 0.4795539033457249, "obj2": 0.37797037944580986}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) + ( FirstVNF_Mem + MDR ) ) / ( MDR + FirstVNF_Mem ) ) - ( MRS * ( CRS + ( ( ( ( DDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) / ( Const / RRS ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,( ( MUM - MUR ) / DS ) ) - MUM ) + ( MUM / RRSe ) ) + MUR ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( Min( RRSe ,MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) )", "obj1": 0.33643122676579923, "obj2": 0.5141900120428035}, {"determining": "( ( ( ( FirstVNF_CPU / Const ) + Min( MRS ,MDR ) ) / Const ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6652166118799966}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Min( BR ,ARS ) / PN ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6451243902819088}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ACS / ( ( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6270718108538208}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ACS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Max( MUM,RMSe ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.9386617100371747, "obj2": 0.03078625392426416}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / FirstVNF_CPU ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Max( PN,RRS ) - BR ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,CS ) ) ) * ( ( ( Max( MLU,RCSe ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - DS ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4741418327598169}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "Max( Max( ( Max( FirstVNF_RAM,RRS ) * Max( ( Max( ( Min( BR ,ARS ) / PN ),( ( RRS + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ),FirstVNF_RAM_Server ) ),( Max( DDR,FirstVNF_RAM_Server ) + ( ( Const * ( FirstVNF_CPU_Server + MDR ) ) - ( MRS * ( CRS + MRS ) ) ) ) ),( ( Const / ( FirstVNF_Mem + MDR ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - DS ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( ( ( Min( MUC ,RCSe ) - ( CS - DS ) ) - ( ( RRSe * DS ) * ( RRSe + MUR ) ) ) / CS ) - CS ) * ( DS / ( DS / MUM ) ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5903283737251974}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.11433548191296818}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.11433548191296818}, {"determining": "( ( ( Const / ( ACS + ( CRS * Min( ( ( DDR - RRS ) * RRS ) ,( ( ACS * ACS ) - ( FirstVNF_RAM / DDR ) ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) / DDR )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( Max( DS,MLU ) - MUC ) * Max( RRSe,RMSe ) ) ) / CS ) - CS ) * ( MUM / DS ) ) * Max( ( RRSe + ( MUR + RCSe ) ),CS ) )", "obj1": 0.6245353159851301, "obj2": 0.24907160319729307}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6025787786841479}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_Mem + MDR ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( ( ( RRSe / MUR ) / MUC ) - RMSe ) ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9256505576208178, "obj2": 0.03895038715429315}], "18": [{"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - Min( ( Max( RRS,MDR ) / ACS ) ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( CS * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / ( RRSe * MLU ) ),RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( MDR * PN ),FirstVNF_CPU_Server ) ) ) ) + Min( ( MDR * MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( PN - ACS ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) * Max( DDR,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) )", "choosing": "( Min( RRSe ,RMSe ) / Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8554310398717645}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.11524163568773234, "obj2": 0.7292119978468831}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ( Const / ( FirstVNF_RAM * RRS ) ) ),PN ) ) + MDR ) ) - Max( Max( Min( BR ,ACS ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Min( MLU ,DS ) + ( RCSe * ( ( ( RCSe - ( MUR / ( MUC / MUR ) ) ) / ( ( RMSe - MUM ) * MLU ) ) / ( Max( RRSe,RMSe ) + MUC ) ) ) ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS * CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869643}, {"determining": "( ACS / ( ( DDR - AMS ) - ( ( Const / ( Min( BR ,FirstVNF_RAM ) + PN ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 0.38847583643122674, "obj2": 0.4249707429740821}, {"determining": "( ( Const - ( ( Const - Max( PN,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( ( DS / Max( Min( MUM ,( MUR + RCSe ) ),( RRSe / ( RMSe * RRSe ) ) ) ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.317688688439241}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6025787786841479}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.7137546468401487, "obj2": 0.17250122877603932}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( ( RCSe / MUC ),( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5325950135241195}, {"determining": "( ACS / ( Min( ( Const / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.20165524007713925}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( CRS * FirstVNF_RAM ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( RMSe / DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) - ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6840148698884758, "obj2": 0.18122930789934993}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Min( BR ,ARS ) / PN ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6451243902819088}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( ( Const - ( ( Min( BR ,Min( RRS ,FirstVNF_Mem ) ) * Max( ARS,BR ) ) + PN ) ) + MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RCSe - MUC ) * ( Min( MUR ,MUC ) + DS ) ),( MUR * RCSe ) ) / CS ) / RCSe ) + CS ) / ( ( ( ( Max( Max( MUC,( MUC + MUC ) ),( MUR / RMSe ) ) + ( CS / MLU ) ) / RRSe ) / RCSe ) / Max( CS,MUR ) ) )", "obj1": 0.4107806691449814, "obj2": 0.4038628549736734}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.06820012625974053}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.0724907063197026, "obj2": 0.8089422348398255}, {"determining": "( ( ( DDR * CRS ) / ( Max( ( ( CRS * ( DDR - MDR ) ) - RRS ),FirstVNF_CPU ) + MDR ) ) - Max( FirstVNF_CPU,MDR ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + CS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR + MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.23207431924860214}, {"determining": "( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( DS * ( CS - ( MUM + MUC ) ) ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.49070631970260226, "obj2": 0.36823303906517413}, {"determining": "( ( ( ( FirstVNF_CPU / Const ) + Min( MRS ,MDR ) ) / Const ) - Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6652166118799966}, {"determining": "( ( Const / ACS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( RRS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( Max( DS,RMSe ) * ( RCSe - MUC ) ) ) / CS ) / MUM ) + DS ) / Max( Min( MUC ,( Max( RRSe,MLU ) + ( Max( DS,MUR ) - MUM ) ) ),( RMSe * RMSe ) ) )", "obj1": 0.33643122676579923, "obj2": 0.5075477857366235}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ) / ( FirstVNF_RAM * MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.1579925650557621, "obj2": 0.6780462161135953}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5074349442379182, "obj2": 0.3248294727550586}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.7286245353159851, "obj2": 0.15437605651550051}, {"determining": "( ACS / ( ( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6270718108538208}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.4312267657992565, "obj2": 0.39854884908093285}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Const / ( FirstVNF_CPU_Server + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,RMSe ) * Min( ( ( RCSe - CS ) * ( DS / MUM ) ) ,( ( RCSe / ( Max( MUM,MUC ) + DS ) ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9052044609665427, "obj2": 0.05085298143456848}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),DDR ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( ( ( DS / RCSe ) / MUR ),MUM ) + DS ) ) ) )", "obj1": 0.7769516728624535, "obj2": 0.12030393650533436}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ( AMS - FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( Min( RRS ,CRS ),( ACS / BR ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( CS * MUR ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( Max( CS,( ( MLU + DS ) / ( RMSe * MUM ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.6672862453531598, "obj2": 0.1920922486809074}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / FirstVNF_CPU ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Max( PN,RRS ) - BR ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,CS ) ) ) * ( ( ( Max( MLU,RCSe ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - DS ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4741418327598169}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7546468401486989, "obj2": 0.1406442778847478}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.9795539033457249, "obj2": 0.014271232320570955}, {"determining": "( Max( FirstVNF_Mem,( ACS / CRS ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( ( CS + ( ( RCSe + DS ) / ( RCSe * MUC ) ) ) * RMSe ),( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * ( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) * ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869643}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7862453531598513, "obj2": 0.11433548191296818}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ),FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.31784386617100374, "obj2": 0.5197563180155058}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( CS + ( CS - DS ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019035471382344724}, {"determining": "( ACS / ( ( Const - ( ARS / ( CRS + FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_CPU ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( Min( MUM ,RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + Min( Min( MUC ,( MUM * RMSe ) ) ,( RMSe - RRSe ) ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5895164078451238}, {"determining": "( ( AMS / PN ) * Max( DDR,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Max( ( Max( MDR,ARS ) * Max( AMS,( ARS + DDR ) ) ),( BR - MRS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * RMSe ) ) * ( MUR * MUC ) ) - Max( Max( ( MUR * ( ( MUM + MUR ) / DS ) ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.19888475836431227, "obj2": 0.6315257935989548}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( DS,( Max( MUR,( ( RMSe - MUM ) / ( RRSe / MUM ) ) ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.6282527881040892, "obj2": 0.2339726775778524}], "19": [{"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - Min( ( Max( RRS,MDR ) / ACS ) ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - Min( ( Max( RRS,MDR ) / ACS ) ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( CS * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / ( RRSe * MLU ) ),RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8554310398717645}, {"determining": "( Max( PN,PN ) / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ),RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.06820012625974052}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Min( MUC ,RMSe ),( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Max( ( RCSe - MUC ),( RRSe - MUC ) ) / CS ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.6282527881040892, "obj2": 0.23191076112134532}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( ( PN / DDR ) / BR ) - ( ( FirstVNF_RAM * MDR ) / Const ) ),PN ) ) + MDR ) ) - Max( ( ( ACS + BR ) - Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( CS - ( Max( ( MUM + DS ),( MUR * MUM ) ) / CS ) ),( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( Max( ( ( MUR + RRSe ) / MUM ),( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( ACS / ( ( Max( Const,( Min( ( FirstVNF_CPU / ( ACS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( Const - MRS ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) - Max( Max( Min( ( ( ( Min( RRSe ,RRSe ) / MUC ) * MUR ) / ( ( Min( RCSe ,CS ) - RCSe ) * RRSe ) ) ,CS ),( CS - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.03591001063843771}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.21933085501858737, "obj2": 0.6025787786841479}, {"determining": "( ( Const / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - ( ( Max( RRS,FirstVNF_CPU ) - MDR ) / PN ) ) ) ) - Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( CS - DS ) + Max( MUM,CS ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( Max( Max( MUR,DS ),( MUR * MUC ) ) / CS ) - CS ) * ( DS / MUM ) ) * ( ( MUM * MUM ) - ( CS - RMSe ) ) ) ) * Min( ( ( ( ( MUM + RRSe ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.5892193308550185, "obj2": 0.2787051079824215}, {"determining": "( ACS / ( ( DDR - AMS ) - ( ( Const / ( Min( BR ,FirstVNF_RAM ) + PN ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 0.38847583643122674, "obj2": 0.4249707429740821}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.23605947955390336, "obj2": 0.581406035206978}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( Max( DS,RMSe ) * ( RCSe - MUC ) ) ) / CS ) / MUM ) + DS ) / Max( Min( MUC ,( Max( RRSe,MLU ) + Max( RMSe,MUM ) ) ),( RMSe * RMSe ) ) )", "obj1": 0.70817843866171, "obj2": 0.1670554990585055}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.7286245353159851, "obj2": 0.15437605651550051}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Const / RRS ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( Min( CS ,Min( ( DS - MUC ) ,RRSe ) ) * MUC ) ) - Max( Max( Min( ( ( CS * ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.5353159851301115, "obj2": 0.29970770630220894}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + AMS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) - ACS ) ) )", "choosing": "( ( Min( ( CS * DS ) ,( Max( ( DS + ( ( MLU + RCSe ) - Max( CS,MLU ) ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.531050239260048}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.12639405204460966, "obj2": 0.7224074912916362}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( ( ( MUR * RRSe ) / MUC ) / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.35687732342007433, "obj2": 0.5029711475543407}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Min( BR ,ARS ) / PN ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1821561338289963, "obj2": 0.6451243902819088}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ACS / ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) )", "choosing": "( ( ( Min( ( ( CS - DS ) + ( MUR - RRSe ) ) ,RMSe ) - ( ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.11152416356877323, "obj2": 0.751038735770955}, {"determining": "( ACS / ( Min( ( FirstVNF_CPU / ( FirstVNF_CPU_Server + MRS ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( ( ( Min( CS ,RRSe ) + MUC ) - MUM ) * ( ( Max( ( ( RCSe / MLU ) * ( CS * MLU ) ),( ( CS / RMSe ) / Max( MUC,RRSe ) ) ) - RCSe ) / DS ) ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.20320848269707925}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.0724907063197026, "obj2": 0.8089422348398255}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5074349442379182, "obj2": 0.3248294727550586}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.4312267657992565, "obj2": 0.38394827262100856}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4962825278810409, "obj2": 0.3617132687491613}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / FirstVNF_CPU ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + ACS ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Max( PN,RRS ) - BR ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,CS ) ) ) * ( ( ( Max( MLU,RCSe ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - DS ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.4741418327598169}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8011152416356877, "obj2": 0.10649058769790692}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( ( Const - ( ( Min( BR ,Min( RRS ,FirstVNF_Mem ) ) * Max( ARS,BR ) ) + PN ) ) + MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RCSe - MUC ) * ( Min( MUR ,MUC ) + DS ) ),( MUR * RCSe ) ) / CS ) / RCSe ) + CS ) / ( ( ( ( Max( Max( MUC,( MUC + MUC ) ),( MUR / RMSe ) ) + ( CS / MLU ) ) / RRSe ) / RCSe ) / Max( CS,MUR ) ) )", "obj1": 0.4107806691449814, "obj2": 0.4038628549736734}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ),FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.31784386617100374, "obj2": 0.5197563180155058}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( ( ( Const / ( FirstVNF_Mem + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) + FirstVNF_RAM_Server ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) + ( MUR - RRSe ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( MUM * MUM ) - ( RMSe - Max( ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ),( MUC / MUR ) ) ) ) ) ) * Min( ( ( MUR - CS ) * ( Min( DS ,RMSe ) / ( CS / RCSe ) ) ) ,( ( MUM * MUM ) + ( RMSe - RMSe ) ) ) )", "obj1": 0.4851301115241636, "obj2": 0.36979849896252753}, {"determining": "( ACS / ( ( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6270718108538208}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),DDR ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( ( ( DS / RCSe ) / MUR ),MUM ) + DS ) ) ) )", "obj1": 0.7769516728624535, "obj2": 0.12030393650533436}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - DS ) / Min( MUR ,DS ) )", "obj1": 0.9535315985130112, "obj2": 0.01824934716046641}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ) )", "obj1": 0.7546468401486989, "obj2": 0.1406442778847478}, {"determining": "( ( Const - ( ( Const - Max( PN,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( ( DS / Max( Min( MUM ,( MUR + RCSe ) ),( RRSe / ( RMSe * RRSe ) ) ) ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.317688688439241}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.11524163568773234, "obj2": 0.7292119978468831}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( CRS * FirstVNF_RAM ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( RMSe / DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) - ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6840148698884758, "obj2": 0.18122930789934993}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Max( RRS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / Max( DS,MUR ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.42193308550185876, "obj2": 0.4038454507454631}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ) / ( FirstVNF_RAM * MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.1579925650557621, "obj2": 0.6780462161135953}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * Max( ( ACS + BR ),Min( RRS ,PN ) ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + ( ( MUR / CS ) - MUM ) ) * ( ( ( ( CS - MLU ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( CS / Max( Max( RMSe,RRSe ),( MUR * MUM ) ) ) * CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.4675789248738303}], "20": [{"determining": "( ACS / ( ( ( Max( Const,RRS ) - FirstVNF_CPU ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - Max( FirstVNF_CPU,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * Max( ( MUR * RCSe ),( Max( DS,RMSe ) * ( RCSe - MUC ) ) ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - Min( ( Max( RRS,MDR ) / ACS ) ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( ( AMS / FirstVNF_Mem_Server ) - BR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - RMSe ) + DS ) * ( ( DS / RCSe ) + MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.7676579925650557, "obj2": 0.10249119177305026}, {"determining": "( ACS / ( Min( ( FirstVNF_CPU / ( FirstVNF_CPU_Server + MRS ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( ( ( Min( CS ,RRSe ) + MUC ) - MUM ) * ( ( Max( ( ( RCSe / MLU ) * ( CS * MLU ) ),( ( CS / RMSe ) / Max( MUC,RRSe ) ) ) - RCSe ) / DS ) ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.20320848269707925}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Min( MUC ,RMSe ),( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Max( ( RCSe - MUC ),( RRSe - MUC ) ) / CS ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.6282527881040892, "obj2": 0.23191076112134532}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( AMS - Max( PN,PN ) ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / Max( DS,MUR ) ) ) * RMSe ) ) ),( Max( ( MUR / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.4795539033457249, "obj2": 0.35958640013929166}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( CRS * FirstVNF_RAM ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( RMSe / DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) - ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6840148698884758, "obj2": 0.18122930789934993}, {"determining": "( FirstVNF_RAM / ( ( Max( AMS,RRS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_Mem ),Max( MRS,MRS ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( RCSe / MUR ) * RMSe ) * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RCSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe / MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3141263940520446, "obj2": 0.5179981440965647}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ACS / ( ( Max( Const,( Min( ( FirstVNF_CPU / ( ACS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( Const - MRS ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) - Max( Max( Min( ( ( ( Min( RRSe ,RRSe ) / MUC ) * MUR ) / ( ( Min( RCSe ,CS ) - RCSe ) * RRSe ) ) ,CS ),( CS - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.03591001063843771}, {"determining": "( ACS / ( Min( ( MRS / ( Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) ,( DDR / BR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25650557620817843, "obj2": 0.5671508232499861}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RMSe * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.33271375464684017, "obj2": 0.4925892843800868}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Const / RRS ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( Min( CS ,Min( ( DS - MUC ) ,RRSe ) ) * MUC ) ) - Max( Max( Min( ( ( CS * ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.5353159851301115, "obj2": 0.29970770630220894}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.7286245353159851, "obj2": 0.15437605651550051}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + AMS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem,FirstVNF_Mem ) - ACS ) ) )", "choosing": "( ( Min( ( CS * DS ) ,( Max( ( DS + ( ( MLU + RCSe ) - Max( CS,MLU ) ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.531050239260048}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( ( PN / DDR ) / BR ) - ( ( FirstVNF_RAM * MDR ) / Const ) ),PN ) ) + MDR ) ) - Max( ( ( ACS + BR ) - Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( CS - ( Max( ( MUM + DS ),( MUR * MUM ) ) / CS ) ),( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( Max( ( ( MUR + RRSe ) / MUM ),( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ACS / ( ( ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ,DS ) )", "obj1": 0.5, "obj2": 0.33558946360402087}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( FirstVNF_CPU_Server,Const ) - Min( Min( MDR ,MDR ) ,( CRS - PN ) ) ),PN ) ) + MDR ) ) - Max( Max( ( FirstVNF_Mem + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( ( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ),Min( Min( ( MUR * RRSe ) ,MUC ) ,CS ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8680297397769516, "obj2": 0.05168170097521285}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( ( AMS / PN ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * ( ( CS / RRSe ) + ( MUC + MUR ) ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.10966542750929369, "obj2": 0.7486021249805365}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6652166118799966}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( Max( ( MDR * AMS ),FirstVNF_CPU_Server ) + ( ( MRS - CRS ) * CRS ) ) ) ) + ( Max( FirstVNF_RAM,MRS ) - ( Max( FirstVNF_RAM,RRS ) * Max( MRS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RCSe - RCSe ) * ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) )", "obj1": 0.38661710037174724, "obj2": 0.4560927516523315}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( Const / ( ( Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),DDR ) ),PN ) - Max( ( RRS / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) + ARS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( RCSe * CS ) ) * ( MUR * MUC ) ) - ( CS + MUR ) ) )", "obj1": 0.7546468401486989, "obj2": 0.14042766412009702}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.23605947955390336, "obj2": 0.581406035206978}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ) / ( FirstVNF_RAM * MDR ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.1579925650557621, "obj2": 0.6780462161135953}, {"determining": "( ( ARS / ( ( Max( AMS,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ),( Max( MUM,MUC ) + MLU ) ),CS ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.5743494423791822, "obj2": 0.26952892372163584}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ACS / ( ( DDR - AMS ) - ( ( Const / ( Min( BR ,FirstVNF_RAM ) + PN ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 0.38847583643122674, "obj2": 0.4249707429740821}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.0724907063197026, "obj2": 0.8089422348398255}, {"determining": "( ACS / ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( ( RMSe * RCSe ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) * CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.34572490706319703, "obj2": 0.4772472880275015}, {"determining": "( ACS / ( ( ( ( ( ( FirstVNF_RAM / AMS ) / RRS ) / ( Max( Const,BR ) + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Min( RCSe ,MUC ) * ( MUM / RCSe ) ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( RRSe,RMSe ) + DS ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6266090142235418}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.12825278810408922, "obj2": 0.7043790779494203}, {"determining": "( Max( PN,PN ) / ( ( ( Const / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,( Const / ( FirstVNF_Mem + MDR ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( ( ( ( MUR - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ),RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.983271375464684, "obj2": 0.007050514652028629}, {"determining": "( ( Const - ( ( Const - Max( PN,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( ( DS / Max( Min( MUM ,( MUR + RCSe ) ),( RRSe / ( RMSe * RRSe ) ) ) ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.317688688439241}, {"determining": "( ACS / ( ( Max( ( Max( ( MRS / Max( DDR,RRS ) ),MRS ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) - ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( ( ( MLU - MLU ) / Max( RCSe,MUR ) ) * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6017383060421994}, {"determining": "( ( ARS / ( ( Max( AMS,Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( RMSe * RCSe ),( Max( DS,RMSe ) * ( RCSe - MUC ) ) ) / CS ) / MUM ) + DS ) / Max( Min( MUC ,( Max( RRSe,MLU ) + Max( RMSe,MUM ) ) ),( RMSe * RMSe ) ) )", "obj1": 0.70817843866171, "obj2": 0.164877556553872}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ( ( Min( FirstVNF_RAM ,AMS ) / RRS ) / ( FirstVNF_Mem + MDR ) ) / ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - ( ( ( ( AMS + FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / BR ) + Max( ( Const / DDR ),FirstVNF_CPU_Server ) ) ) ) + Min( Min( MDR ,MRS ) ,( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * Max( ( ACS + BR ),Min( RRS ,PN ) ) ) * Max( ( ACS * FirstVNF_Mem ),Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + ( ( MUR / CS ) - MUM ) ) * ( ( ( ( CS - MLU ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( CS / Max( Max( RMSe,RRSe ),( MUR * MUM ) ) ) * CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.4675789248738303}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( Min( RCSe ,MLU ) + RCSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( MUR ,CS ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.7044609665427509, "obj2": 0.17362774877903145}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.012231502530790292}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( ( Const - ( ( Min( BR ,Min( RRS ,FirstVNF_Mem ) ) * Max( ARS,BR ) ) + PN ) ) + MDR ) ) )", "choosing": "( ( ( ( Max( ( ( RCSe - MUC ) * ( Min( MUR ,MUC ) + DS ) ),( MUR * RCSe ) ) / CS ) / RCSe ) + CS ) / ( ( ( ( Max( Max( MUC,( MUC + MUC ) ),( MUR / RMSe ) ) + ( CS / MLU ) ) / RRSe ) / RCSe ) / Max( CS,MUR ) ) )", "obj1": 0.4107806691449814, "obj2": 0.4038628549736734}], "21": [{"determining": "( ACS / ( ( DDR - AMS ) - ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * Max( MUR,MUC ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUC * MUC ) ,( MLU / RMSe ) ) ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( ( Max( Const,RRS ) - FirstVNF_CPU ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - Max( FirstVNF_CPU,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * Max( ( MUR * RCSe ),( Max( DS,RMSe ) * ( RCSe - MUC ) ) ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( ( AMS / FirstVNF_Mem_Server ) - BR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - RMSe ) + DS ) * ( ( DS / RCSe ) + MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ACS / ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( ( RMSe * RCSe ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) * CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.34572490706319703, "obj2": 0.4772472880275015}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.7676579925650557, "obj2": 0.10249119177305026}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ACS / ( ( Max( Const,( Min( ( FirstVNF_CPU / ( ACS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( Const - MRS ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) - Max( Max( Min( ( ( ( Min( RRSe ,RRSe ) / MUC ) * MUR ) / ( ( Min( RCSe ,CS ) - RCSe ) * RRSe ) ) ,CS ),( CS - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.03591001063843771}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ( Const / ( RRS / ARS ) ) - ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RMSe * MUC ) ) ),RMSe ) ) ),Max( ( Min( ( ( RMSe / DS ) + ( RRSe + DS ) ) ,DS ) * MUR ),DS ) ) )", "obj1": 0.47026022304832715, "obj2": 0.345610145020741}, {"determining": "( ( Const / ( ( Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),DDR ) ),PN ) - Max( ( RRS / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) + ARS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( RCSe * CS ) ) * ( MUR * MUC ) ) - ( CS + MUR ) ) )", "obj1": 0.7546468401486989, "obj2": 0.14042766412009702}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( ACS / ( ( Max( ( Max( ( MRS / Max( DDR,RRS ) ),MRS ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) - ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( ( ( MLU - MLU ) / Max( RCSe,MUR ) ) * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6017383060421994}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RMSe * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.33271375464684017, "obj2": 0.4925892843800868}, {"determining": "( ( ARS / ( ( Max( AMS,Min( ( ( FirstVNF_CPU / RRS ) / ( MRS - FirstVNF_RAM ) ) ,AMS ) ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( RMSe * RCSe ),( Max( DS,RMSe ) * RRSe ) ) / CS ) / MUM ) + DS ) / Max( Min( MUC ,( Max( RRSe,MLU ) + Max( RMSe,MUM ) ) ),( RMSe * RMSe ) ) )", "obj1": 0.48698884758364314, "obj2": 0.3203557840158061}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Const / RRS ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( Min( CS ,Min( ( DS - MUC ) ,RRSe ) ) * MUC ) ) - Max( Max( Min( ( ( CS * ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.5353159851301115, "obj2": 0.29970770630220894}, {"determining": "( ( Const - ( ( Const - Max( PN,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / CRS ) ) ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / DS ) + ( MUR - RRSe ) ) + Min( ( Min( MUM ,MUC ) + Max( MLU,RMSe ) ) ,CS ) ) * ( ( ( ( DS / Max( Min( MUM ,( MUR + RCSe ) ),( RRSe / ( RMSe * RRSe ) ) ) ) - ( MUR * CS ) ) * ( MLU * MUC ) ) - Max( DS,( Min( ( RCSe / MUR ) ,Min( MUC ,DS ) ) + ( DS / Max( ( RCSe / RRSe ),( ( CS * CS ) / MUR ) ) ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.317688688439241}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( ( PN / DDR ) / BR ) - ( ( FirstVNF_RAM * MDR ) / Const ) ),PN ) ) + MDR ) ) - Max( ( ( ACS + BR ) - Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( CS - ( Max( ( MUM + DS ),( MUR * MUM ) ) / CS ) ),( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( Max( ( ( MUR + RRSe ) / MUM ),( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( ( AMS / PN ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * ( ( CS / RRSe ) + ( MUC + MUR ) ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.10966542750929369, "obj2": 0.7486021249805365}, {"determining": "( ( Const / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),Min( PN ,DDR ) ) ),PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / CS ) / RCSe ) + DS ) / Min( DS ,RMSe ) )", "obj1": 0.7286245353159851, "obj2": 0.15437605651550051}, {"determining": "( ACS / ( ( ( ( ( ( FirstVNF_RAM / AMS ) / RRS ) / ( Max( Const,BR ) + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Min( RCSe ,MUC ) * ( MUM / RCSe ) ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( RRSe,RMSe ) + DS ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6266090142235418}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * ( ( ( FirstVNF_Mem / ARS ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) / BR ) )", "choosing": "( Min( RRSe ,( DS / ( MUM - ( DS / ( RCSe + RMSe ) ) ) ) ) / Min( RCSe ,RMSe ) )", "obj1": 0.11895910780669144, "obj2": 0.7262941921145609}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.012231502530790292}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.5743494423791822, "obj2": 0.26952892372163584}, {"determining": "( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / MUR ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.18773234200743494, "obj2": 0.63606071507204}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.23605947955390336, "obj2": 0.581406035206978}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.12825278810408922, "obj2": 0.7043790779494203}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( CRS * FirstVNF_RAM ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( RMSe / DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) - ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6840148698884758, "obj2": 0.18122930789934993}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,( Max( Min( FirstVNF_Mem_Server ,Max( BR,Max( BR,ARS ) ) ),FirstVNF_Mem ) / Max( FirstVNF_RAM,( Max( ( Const / ( ( ACS - FirstVNF_Mem ) + MDR ) ),( CRS - FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( PN,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RMSe + ( MUC / ( DS - ( RCSe - ( MLU * ( Max( RMSe,MUC ) / MUC ) ) ) ) ) ) - ( Max( Min( ( MUC / ( DS * RRSe ) ) ,CS ),( Max( ( CS + ( RMSe / ( RMSe * MUC ) ) ),RMSe ) - MUR ) ) * ( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6914965221239876}, {"determining": "( ( ARS / ( ( Max( AMS,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ),( Max( MUM,MUC ) + MLU ) ),CS ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Min( MUC ,RMSe ),( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Max( ( RCSe - MUC ),( RRSe - MUC ) ) / CS ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.6282527881040892, "obj2": 0.23191076112134532}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6589554054116954}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) - Max( FirstVNF_CPU,( Max( ( Min( BR ,ARS ) / PN ),( ( Const + FirstVNF_Mem_Server ) + Min( MDR ,RRS ) ) ) - Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( FirstVNF_CPU * ( ARS + ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( RCSe - DS ) ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + DS ) ) )", "obj1": 0.6654275092936803, "obj2": 0.19766860174984552}, {"determining": "( ( ARS / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( ( MUM + RRSe ) + ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) )", "obj1": 0.1579925650557621, "obj2": 0.676987100686862}, {"determining": "( FirstVNF_RAM / ( ( Max( AMS,RRS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_Mem ),Max( MRS,MRS ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( RCSe / MUR ) * RMSe ) * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RCSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe / MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3141263940520446, "obj2": 0.5179981440965647}, {"determining": "( ACS / ( ( ( Const / Min( Min( BR ,FirstVNF_RAM ) ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU / ( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( ( RCSe / MLU ) * DS ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5305059751429826}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,AMS ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.07434944237918216, "obj2": 0.8071922778128134}, {"determining": "( ACS / ( Min( ( Const / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.20320848269707925}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM ,BR ) + MDR ) ) - Max( ACS,PN ) ) - Max( FirstVNF_CPU,( ( FirstVNF_RAM_Server - PN ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * ( RMSe - Min( ( MUR * MUR ) ,CS ) ) ) + ( Max( ( MUC / Min( MLU ,RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5651264894675747}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.5594795539033457, "obj2": 0.27395709247824657}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * Min( BR ,FirstVNF_RAM ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( MUR - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05762081784386617, "obj2": 0.8178436910229546}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * MUR ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( ( ( ( MUR - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUC,MUM ) + DS ) ) ),RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.6301115241635687, "obj2": 0.23154816128517164}], "22": [{"determining": "( ACS / ( ( Max( Const,( Min( ( FirstVNF_CPU / ( ACS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( Const - MRS ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) - Max( Max( Min( ( ( ( Min( RRSe ,RRSe ) / MUC ) * MUR ) / ( ( Min( RCSe ,CS ) - RCSe ) * RRSe ) ) ,CS ),( CS - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( DDR - AMS ) - ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * Max( MUR,MUC ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUC * MUC ) ,( MLU / RMSe ) ) ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + Min( ( RRSe + RMSe ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( ( AMS / FirstVNF_Mem_Server ) - BR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - RMSe ) + DS ) * ( ( DS / RCSe ) + MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.7676579925650557, "obj2": 0.10249119177305026}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.47769516728624534, "obj2": 0.30541897600616413}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( MUC + DS ) ) )", "obj1": 0.6171003717472119, "obj2": 0.21405489090121374}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( ACS / ( ( Max( Const,( Min( ( FirstVNF_CPU / ( ACS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( Const - MRS ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) - Max( Max( Min( ( ( ( Min( RRSe ,RRSe ) / MUC ) * MUR ) / ( ( Min( RCSe ,CS ) - RCSe ) * RRSe ) ) ,CS ),( CS - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.9405204460966543, "obj2": 0.03591001063843771}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.012231502530790292}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Const / RRS ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( Min( CS ,Min( ( DS - MUC ) ,RRSe ) ) * MUC ) ) - Max( Max( Min( ( ( CS * ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.5353159851301115, "obj2": 0.29970770630220894}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ( Const / ( ( Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),DDR ) ),PN ) - Max( ( RRS / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) + ARS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( RCSe * CS ) ) * ( MUR * MUC ) ) - ( CS + MUR ) ) )", "obj1": 0.7546468401486989, "obj2": 0.14042766412009702}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( ( PN / DDR ) / BR ) - ( ( FirstVNF_RAM * MDR ) / Const ) ),PN ) ) + MDR ) ) - Max( ( ( ACS + BR ) - Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Max( ( CS - ( Max( ( MUM + DS ),( MUR * MUM ) ) / CS ) ),( Max( MUM,MUC ) + MLU ) ),( MUR * MUC ) ) / CS ) * Min( Max( ( ( MUR + RRSe ) / MUM ),( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ACS / ( ( ( ( ( ( FirstVNF_RAM / AMS ) / RRS ) / ( Max( Const,BR ) + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Min( RCSe ,MUC ) * ( MUM / RCSe ) ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( RRSe,RMSe ) + DS ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6266090142235418}, {"determining": "( ACS / ( ( Max( ( Max( ( MRS / Max( DDR,RRS ) ),MRS ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) - ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( ( ( MLU - MLU ) / Max( RCSe,MUR ) ) * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6017383060421994}, {"determining": "( ACS / ( Min( ( Const / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.20273515232383696}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ACS / ( Min( ( Const / ( Min( ( Min( FirstVNF_Mem ,ACS ) + MDR ) ,AMS ) + MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * Max( MUC,( MUR * MUC ) ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.15286563713593984}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.5669144981412639, "obj2": 0.2652483996403589}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( Const / ( RRS / ARS ) ) - ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RMSe * MUC ) ) ),RMSe ) ) ),Max( ( Min( ( ( RMSe / DS ) + ( RRSe + DS ) ) ,DS ) * MUR ),DS ) ) )", "obj1": 0.47026022304832715, "obj2": 0.345610145020741}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( PN * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ) / CS ) * Min( ( ( ( MUR + RRSe ) / MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ( Const / ( ( Const - Max( BR,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.46654275092936803, "obj2": 0.3499792192900635}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,Max( DDR,Min( FirstVNF_CPU_Server ,Max( Max( BR,FirstVNF_CPU_Server ),MDR ) ) ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUM * MLU ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.6988847583643123, "obj2": 0.17482940827372062}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.12825278810408922, "obj2": 0.7043790779494203}, {"determining": "( ACS / ( ( ( Const / Min( Min( BR ,FirstVNF_RAM ) ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU / ( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( ( RCSe / MLU ) * DS ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5305059751429826}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + ( FirstVNF_RAM_Server / Const ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + DS ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3308550185873606, "obj2": 0.49152123449805624}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + RRS ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.7193308550185874, "obj2": 0.1664322894061974}, {"determining": "( ACS / ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( ( RMSe * RCSe ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) * CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.34572490706319703, "obj2": 0.4772472880275015}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( ( AMS / PN ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * ( ( CS / RRSe ) + ( MUC + MUR ) ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.10966542750929369, "obj2": 0.7486021249805365}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM ,BR ) + MDR ) ) - Max( ACS,PN ) ) - Max( FirstVNF_CPU,( ( FirstVNF_RAM_Server - PN ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * ( RMSe - Min( ( MUR * MUR ) ,CS ) ) ) + ( Max( ( MUC / Min( MLU ,RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2620817843866171, "obj2": 0.5651264894675747}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ( Const / ( ( Const - Min( RRS ,BR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,DS ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( MUM * MUC ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6589554054116954}, {"determining": "( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / MUR ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.18773234200743494, "obj2": 0.63606071507204}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.0762081784386617, "obj2": 0.7996788129404578}, {"determining": "( ( Const / ( ( Const - Max( PN,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( ( ( CS - DS ) + ( MUR / RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * Min( ( ( ( Max( Max( RMSe,RRSe ),( MUR * MUM ) ) / CS ) - CS ) * ( DS / MUM ) ) ,( ( MUM * MUM ) - ( DS - RMSe ) ) ) ) )", "obj1": 0.5594795539033457, "obj2": 0.27395709247824657}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,AMS ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.07063197026022305, "obj2": 0.8043450164395058}, {"determining": "( ACS / ( ( ( ( ( ( FirstVNF_RAM / AMS ) / RRS ) / ( Max( Const,BR ) + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / Const ),FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,( ( ( MUR - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Min( RCSe ,MUC ) * ( MUM / RCSe ) ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( RRSe,RMSe ) + DS ) ) )", "obj1": 0.2992565055762082, "obj2": 0.5232506246961208}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}], "23": [{"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( ( AMS / FirstVNF_Mem_Server ) - BR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - RMSe ) + DS ) * ( ( DS / RCSe ) + MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( Const * FirstVNF_RAM ) - Max( FirstVNF_CPU,( Max( ( Const / Max( ( BR + FirstVNF_RAM_Server ),FirstVNF_Mem ) ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * DS ) ) / CS ) - Max( MUM,RMSe ) ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - ( Max( MLU,RRSe ) / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( Max( Const,( Min( ( FirstVNF_CPU / ( ACS - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( Const - MRS ) ) ) ) - ( FirstVNF_RAM_Server / BR ) ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR + RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) - Max( Max( Min( ( ( ( Min( RRSe ,RRSe ) / MUC ) * MUR ) / ( ( Min( RCSe ,CS ) - RCSe ) * RRSe ) ) ,CS ),( CS - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ACS / ( Min( ( Const / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.20273515232383696}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + MUR ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.1552167506405432}, {"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 0.7657992565055762, "obj2": 0.08877398850499515}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.47769516728624534, "obj2": 0.30541897600616413}, {"determining": "( ( Const / ( ( Max( ( MDR - Max( ( BR + FirstVNF_RAM_Server ),DDR ) ),PN ) - Max( ( RRS / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) + ARS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS - DS ) + ( MUR - RRSe ) ) + Max( ( ( Max( ( Max( MUR,MUR ) + CS ),( CS * MUC ) ) / CS ) - CS ),Min( RRSe ,RMSe ) ) ) * ( ( ( Min( MUC ,RMSe ) - ( RCSe * CS ) ) * ( MUR * MUC ) ) - ( CS + MUR ) ) )", "obj1": 0.7546468401486989, "obj2": 0.14042766412009702}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ( Const * FirstVNF_RAM ) ),PN ) ) + FirstVNF_CPU ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.9386617100371747, "obj2": 0.034519255696860374}, {"determining": "( ( FirstVNF_RAM_Server / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) * Max( DDR,( Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server / Const ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.12825278810408922, "obj2": 0.7043790779494203}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( ( AMS / PN ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * ( ( CS / RRSe ) + ( MUC + MUR ) ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( RCSe ,RMSe ) )", "obj1": 0.10966542750929369, "obj2": 0.7486021249805365}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( Const / RRS ) - ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( Min( CS ,Min( ( DS - MUC ) ,RRSe ) ) * MUC ) ) - Max( Max( Min( ( ( CS * ( Max( RMSe,MLU ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.5353159851301115, "obj2": 0.29970770630220894}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ACS / ( Min( ( Const / ( Min( ( Min( FirstVNF_Mem ,ACS ) + MDR ) ,AMS ) + MDR ) ) ,Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * Max( MUC,( MUR * MUC ) ) ) / MUC ) ,CS ),( MUR - Max( ( MUM - ( Min( RMSe ,MUR ) + ( CS - DS ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.7230483271375465, "obj2": 0.15286563713593984}, {"determining": "( ACS / Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( RRSe * ( MUM + RRSe ) ) / MUC ) ,CS ),( MUR * RRSe ) ),( Max( MUM,RMSe ) + ( DS + MUM ) ) ) )", "obj1": 0.25092936802973975, "obj2": 0.5980745824942613}, {"determining": "( ( ARS / ( ( Max( Min( ( ACS * PN ) ,FirstVNF_CPU ),PN ) - Max( AMS,( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( BR,ACS ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) - Max( MUR,CS ) ) * ( MUC - MUR ) ) - ( MUM / ( ( CS / RRSe ) + MUM ) ) )", "obj1": 0.5557620817843866, "obj2": 0.2511837377001316}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.258364312267658, "obj2": 0.5575981615116526}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( ( ( AMS * ( RRS / PN ) ) / Const ) - Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - FirstVNF_Mem ),PN ) ) - ( Const / ( ( Const - ( PN / ( FirstVNF_Mem - ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_CPU ) ) ) ) + MDR ) ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + RCSe ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.5446096654275093, "obj2": 0.27916196922035724}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.012231502530790292}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8141263940520446, "obj2": 0.08722833095278043}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( ACS / ( ( ( ( ( ( FirstVNF_RAM / AMS ) / RRS ) / ( Max( Const,BR ) + MDR ) ) / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server / Const ),FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( MUC ,( ( ( MUR - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Min( RCSe ,MUC ) * ( MUM / RCSe ) ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( RRSe,RMSe ) + DS ) ) )", "obj1": 0.2992565055762082, "obj2": 0.5232506246961208}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( Const / ( RRS / ARS ) ) - ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RMSe * MUC ) ) ),RMSe ) ) ),Max( ( Min( ( ( RMSe / DS ) + ( RRSe + DS ) ) ,DS ) * MUR ),DS ) ) )", "obj1": 0.47026022304832715, "obj2": 0.345610145020741}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ACS / ( ( Max( ( Max( ( MRS / Max( DDR,RRS ) ),MRS ) / FirstVNF_CPU_Server ),FirstVNF_RAM ) - ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( ( ( MLU - MLU ) / Max( RCSe,MUR ) ) * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6017383060421994}, {"determining": "( ( Const / ( ( Const - Max( BR,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.46654275092936803, "obj2": 0.3499792192900635}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( MUC + DS ) ) )", "obj1": 0.6171003717472119, "obj2": 0.21405489090121374}, {"determining": "( ACS / ( ( ( Const / Min( Min( BR ,FirstVNF_RAM ) ,MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( FirstVNF_CPU_Server * ( FirstVNF_CPU / ( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( ( RCSe / MLU ) * DS ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5305059751429826}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3308550185873606, "obj2": 0.49152123449805624}, {"determining": "( ACS / ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( ( RMSe * RCSe ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) * CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.34572490706319703, "obj2": 0.4772472880275015}, {"determining": "( ( MDR / ( RRS / ARS ) ) - ( FirstVNF_CPU + Max( PN,RRS ) ) )", "choosing": "( RMSe - Max( Max( Min( ( CS / MUC ) ,CS ),Min( MUR ,Max( ( CS + ( RMSe / MUR ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.07063197026022305, "obj2": 0.8010487773558634}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR * RCSe ) ),( Max( MUM,( RCSe * MUR ) ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6589554054116954}, {"determining": "( ( Const / ( ( Const - Min( RRS ,BR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,DS ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( MUM * MUC ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( ( Const * FirstVNF_RAM ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( MUM + RRSe ) / MUR ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.18773234200743494, "obj2": 0.63606071507204}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( Max( ( ( ACS + BR ) + Min( RRS ,CRS ) ),FirstVNF_RAM ) - ( ARS / ( ( FirstVNF_Mem - PN ) + MDR ) ) )", "choosing": "( ( Max( ( RRSe / Max( Min( CS ,MLU ),( RCSe + Min( ( CS / RCSe ) ,Min( MUM ,RCSe ) ) ) ) ),( MUR - Max( ( MUC * Min( RMSe ,DS ) ),RMSe ) ) ) / ( MUM / Max( MLU,( CS - Min( ( MUR - MUR ) ,( MUR / Min( RCSe ,MLU ) ) ) ) ) ) ) * Min( ( Max( Min( MUR ,RRSe ),MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Min( BR ,Const ),RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Min( MUM ,Max( RCSe,RRSe ) ) )", "obj1": 0.5947955390334573, "obj2": 0.22889568934656132}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.21189591078066913, "obj2": 0.6109461336490916}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( MUC + DS ) ) )", "obj1": 0.604089219330855, "obj2": 0.22402621514563356}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( ( RRSe * ( MUM + RRSe ) ) / ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.0762081784386617, "obj2": 0.7996788129404578}], "24": [{"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( ( AMS / FirstVNF_Mem_Server ) - BR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - RMSe ) + DS ) * ( ( DS / RCSe ) + MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( Max( ( ( ACS + BR ) + Min( RRS ,CRS ) ),FirstVNF_RAM ) - ( ARS / ( ( FirstVNF_Mem - PN ) + MDR ) ) )", "choosing": "( ( Max( ( RRSe / Max( Min( CS ,MLU ),( RCSe + Min( ( CS / RCSe ) ,Min( MUM ,RCSe ) ) ) ) ),( MUR - Max( ( MUC * Min( RMSe ,DS ) ),RMSe ) ) ) / ( MUM / Max( MLU,( CS - Min( ( MUR - MUR ) ,( MUR / Min( RCSe ,MLU ) ) ) ) ) ) ) * Min( ( Max( Min( MUR ,RRSe ),MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( Const * FirstVNF_RAM ) - Max( FirstVNF_CPU,( Max( ( Const / Max( ( BR + FirstVNF_RAM_Server ),FirstVNF_Mem ) ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * DS ) ) / CS ) - Max( MUM,RMSe ) ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - ( Max( MLU,RRSe ) / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) )", "obj1": 0.7193308550185874, "obj2": 0.11288611247932033}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.47769516728624534, "obj2": 0.30541897600616413}, {"determining": "( ( ( DDR * RRS ) / ( Max( Max( AMS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,( Max( ARS,RRS ) - FirstVNF_CPU ) ) ) + Min( ( CRS * ACS ) ,FirstVNF_RAM_Server ) ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( CS,( CS / ( ( MUC - ( RCSe / CS ) ) - ( RCSe * Max( DS,MUC ) ) ) ) ) * ( ( ( ( CS + DS ) - Min( MUR ,( RRSe / MUC ) ) ) + DS ) / MUM ) ) + Max( MUR,CS ) ) - Max( ( ( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),MUC ) ) / Min( ( ( ( ( MLU - MLU ) / Max( RCSe,MUR ) ) * RRSe ) / MUC ) ,CS ) ),( Max( RMSe,MUM ) + DS ) ) )", "obj1": 0.5315985130111525, "obj2": 0.2749696808276298}, {"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 0.7657992565055762, "obj2": 0.08877398850499515}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ARS / ( ( Max( Min( ( ACS * PN ) ,FirstVNF_CPU ),PN ) - Max( AMS,( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( BR,ACS ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) - Max( MUR,CS ) ) * ( MUC - MUR ) ) - ( MUM / ( ( CS / RRSe ) + MUM ) ) )", "obj1": 0.5557620817843866, "obj2": 0.2511837377001316}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ( Const * FirstVNF_RAM ) ),PN ) ) + FirstVNF_CPU ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.9386617100371747, "obj2": 0.034519255696860374}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ( FirstVNF_RAM / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM * MDR ) / Const ) ),PN ) ) + MDR ) ) - ( ( ( FirstVNF_RAM_Server / BR ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Max( RCSe,( CS / MUC ) ) + ( CS - ( ( RMSe * CS ) + MUC ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( MUM * Max( CS,Max( ( RCSe * ( MUC / CS ) ),Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ) ) ) ) / MUM ) )", "obj1": 0.6895910780669146, "obj2": 0.15199946479611443}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( ( CS / Max( ( MUR / MUC ),( MUR * MUC ) ) ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( ( RMSe + RRSe ) / CS ) ) ) ) * ( ( ( CS * Max( ( RRSe * ( ( RMSe + MUM ) + RCSe ) ),MUR ) ) + ( RRSe - Min( ( RRSe - CS ) ,MUR ) ) ) + Min( Max( ( MUR - RCSe ),( DS / MUM ) ) ,( ( RRSe * MUM ) - ( RMSe - Max( ( ( CS + MUR ) / Max( MUR,MUR ) ),( MUC / MUR ) ) ) ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.1552167506405432}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.6617100371747212, "obj2": 0.19636924959455312}, {"determining": "( Min( ARS ,MRS ) / ( ( RRS - ( FirstVNF_Mem_Server - ARS ) ) + Const ) )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5860077283319638}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.20126558289003196}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8141263940520446, "obj2": 0.08722833095278043}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( Max( ( ( ACS + BR ) + Min( RRS ,CRS ) ),FirstVNF_RAM ) - ( ARS / ( ( FirstVNF_Mem - PN ) + MDR ) ) )", "choosing": "( ( Max( ( RRSe / Max( Min( CS ,MLU ),( RCSe + Min( ( CS / RCSe ) ,Min( MUM ,RCSe ) ) ) ) ),( MUR - Max( ( MUC * Min( RMSe ,DS ) ),RMSe ) ) ) / ( MUM / Max( MLU,( CS - Min( ( MUR - MUR ) ,( MUR / Min( RCSe ,MLU ) ) ) ) ) ) ) * Min( ( Max( Min( MUR ,RRSe ),MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ( AMS / FirstVNF_CPU ) * ( FirstVNF_RAM_Server / ARS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.14312267657992564, "obj2": 0.6867798939422707}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( Const / ( RRS / ARS ) ) - ( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RMSe * MUC ) ) ),RMSe ) ) ),Max( ( Min( ( ( RMSe / DS ) + ( RRSe + DS ) ) ,DS ) * MUR ),DS ) ) )", "obj1": 0.47026022304832715, "obj2": 0.345610145020741}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( RRSe + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9646840148698885, "obj2": 0.012231502530790292}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.10594795539033457, "obj2": 0.7448710749572363}, {"determining": "( ( Const / ( ( Const - Max( BR,PN ) ) + MDR ) ) - Const )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( MLU + DS ) / MLU ) ) ) + DS ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6351752816800388}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6217734281641034}, {"determining": "( ACS / ( ( ( Const / Min( Const ,MRS ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Min( Max( ( Max( ( BR + FirstVNF_RAM_Server ),DDR ) / Const ),FirstVNF_Mem_Server ) ,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( ( MUM / ( DS - RCSe ) ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.22676579925650558, "obj2": 0.5972056029147148}, {"determining": "( ( Const / ( ( Const - Max( BR,PN ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.46654275092936803, "obj2": 0.3499792192900635}, {"determining": "( ACS / ( ( ( Const / ( Min( ( FirstVNF_CPU / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,AMS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) )", "choosing": "( Min( MUC ,DS ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( MUM * MUC ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.9553903345724907, "obj2": 0.017323057295681253}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - ( ( Const * FirstVNF_RAM ) / Const ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3308550185873606, "obj2": 0.49152123449805624}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUR / ( RCSe * MUC ) ) ) * RMSe ) ) ),( MUC + DS ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0014519838463540706}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( Const / ( ( Const - Min( RRS ,BR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,DS ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( MUM * MUC ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,ACS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( ( MUM - ( MUR * CS ) ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.31226765799256506, "obj2": 0.5168203271269317}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( MUC + DS ) ) )", "obj1": 0.6171003717472119, "obj2": 0.21405489090121374}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ACS / ( FirstVNF_CPU_Server + Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( ( RMSe * RCSe ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) * CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.34572490706319703, "obj2": 0.4772472880275015}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.05026029875360671}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Min( BR ,Const ),RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Min( MUM ,Max( RCSe,RRSe ) ) )", "obj1": 0.5947955390334573, "obj2": 0.22889568934656132}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( RMSe - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RMSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.05762081784386617, "obj2": 0.805523744026184}], "25": [{"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( ( AMS / FirstVNF_Mem_Server ) - BR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - RMSe ) + DS ) * ( ( DS / RCSe ) + MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ACS + BR ) + Min( RRS ,CRS ) ),FirstVNF_RAM ) - ( ARS / ( ( FirstVNF_Mem - PN ) + MDR ) ) )", "choosing": "( ( Max( ( RRSe / Max( Min( CS ,MLU ),( RCSe + Min( ( CS / RCSe ) ,Min( MUM ,RCSe ) ) ) ) ),( MUR - Max( ( MUC * Min( RMSe ,DS ) ),RMSe ) ) ) / ( MUM / Max( MLU,( CS - Min( ( MUR - MUR ) ,( MUR / Min( RCSe ,MLU ) ) ) ) ) ) ) * Min( ( Max( Min( MUR ,RRSe ),MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( ( DDR + MDR ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.45724907063197023, "obj2": 0.32505858134278165}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6691449814126395, "obj2": 0.1450727459374377}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.47769516728624534, "obj2": 0.30541897600616413}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Min( Max( AMS,( AMS / BR ) ) ,CRS ) ) / FirstVNF_Mem_Server )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( ( MUC / RCSe ) - ( MUM * ( MLU / DS ) ) ) ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( MUM + RMSe ) + DS ) ) ) ) - RCSe )", "obj1": 0.5074349442379182, "obj2": 0.288309114692619}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.6617100371747212, "obj2": 0.19636924959455312}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server / ARS ),Max( FirstVNF_Mem,Max( PN,BR ) ) ) ) + RRS ) ) - Max( FirstVNF_RAM,Max( AMS,ACS ) ) )", "choosing": "( ( ( Min( ( ( MLU - ( ( MLU * RRSe ) * RMSe ) ) - MUR ) ,MUC ) - ( MLU * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.1171003717472119, "obj2": 0.731293433787682}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( AMS * MRS ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.13382899628252787, "obj2": 0.6994926287516073}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5272166448325822}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 0.7657992565055762, "obj2": 0.08877398850499515}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8141263940520446, "obj2": 0.08722833095278043}, {"determining": "( Max( ( ( ACS + BR ) + Min( RRS ,CRS ) ),FirstVNF_RAM ) - ( ARS / ( ( FirstVNF_Mem - PN ) + MDR ) ) )", "choosing": "( ( Max( ( RRSe / Max( Min( CS ,MLU ),( RCSe + Min( ( CS / RCSe ) ,Min( MUM ,RCSe ) ) ) ) ),( MUR - Max( ( MUC * Min( RMSe ,DS ) ),RMSe ) ) ) / ( MUM / Max( MLU,( CS - Min( ( MUR - MUR ) ,( MUR / Min( RCSe ,MLU ) ) ) ) ) ) ) * Min( ( Max( Min( MUR ,RRSe ),MUM ) * ( CS - CS ) ) ,( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869642}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,ACS ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( ( MUM - ( MUR * CS ) ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.31226765799256506, "obj2": 0.5168203271269317}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( FirstVNF_CPU * ( ARS + ACS ) ) ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - FirstVNF_Mem_Server ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Min( FirstVNF_CPU ,( MDR / ( MDR - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( RCSe - DS ) / Min( ( MUM / ( MLU * ( RRSe / MUR ) ) ) ,MUR ) )", "obj1": 0.09665427509293681, "obj2": 0.7679984258210112}, {"determining": "( ( ACS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( RMSe ,MUC ) - ( MUR * CS ) ) * ( MUR + MUC ) ) - ( MUC + RCSe ) )", "obj1": 0.5929368029739777, "obj2": 0.2237853314982725}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.10594795539033457, "obj2": 0.7448710749572363}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.6988847583643123, "obj2": 0.14466171963838445}, {"determining": "( ( ARS / ( ( Max( Min( ( ACS * PN ) ,FirstVNF_CPU ),PN ) - Max( AMS,( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( BR,ACS ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) - Max( MUR,CS ) ) * ( MUC - MUR ) ) - ( MUM / ( ( CS / RRSe ) + MUM ) ) )", "obj1": 0.5557620817843866, "obj2": 0.2511837377001316}, {"determining": "( ( ARS / ( ( Max( Const,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( Max( MUM,( RCSe * MUR ) ) + DS ) ) ) - Min( ( DS + DS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) )", "obj1": 0.7342007434944238, "obj2": 0.10496681753420904}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ( Const * FirstVNF_RAM ) ),PN ) ) + FirstVNF_CPU ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.9386617100371747, "obj2": 0.034519255696860374}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.7044609665427509, "obj2": 0.12230538121772157}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.20126558289003196}, {"determining": "( ( ( MDR / CRS ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - FirstVNF_CPU ),PN ) ) * MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( RRSe,( CS - RRSe ) ) * ( MUR * MUC ) ) - Min( ( DS / DS ) ,MUR ) )", "obj1": 0.5446096654275093, "obj2": 0.2585972849702978}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) )", "obj1": 0.7546468401486989, "obj2": 0.09182110525059002}, {"determining": "( ACS / ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR * RRSe ) / MUC ) ),( ( CS / Min( RMSe ,RMSe ) ) - Max( ( CS + ( RMSe / ( CS * MUC ) ) ),RMSe ) ) ),( Max( RMSe,Min( ( ( MLU - ( MLU / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.15055762081784388, "obj2": 0.6764489814309624}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,( ( ( ( PN + ARS ) * Min( PN ,PN ) ) / Min( MRS ,ARS ) ) * ARS ) ) ) - Max( FirstVNF_CPU,( ( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) - AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( CS * RCSe ) + ( ( CS * DS ) + ( Max( ( Min( RRSe ,MUM ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) * ( RRSe - Max( DS,( ( MUM * MUC ) + DS ) ) ) )", "obj1": 0.21189591078066913, "obj2": 0.6147488774007299}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( Min( ARS ,MRS ) / ( ( RRS - ( FirstVNF_Mem_Server - ARS ) ) + Const ) )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5860077283319638}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,Max( ( ( ACS + BR ) + Min( RRS ,CRS ) ),FirstVNF_RAM ) ) )", "choosing": "( RMSe - Max( Max( Min( ( CS / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MUR + RRSe ) / MUM ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.05762081784386617, "obj2": 0.805523744026184}, {"determining": "( ( ( DDR * RRS ) / ( Max( Max( AMS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem_Server,( Max( ARS,RRS ) - FirstVNF_CPU ) ) ) + Min( ( CRS * ACS ) ,FirstVNF_RAM_Server ) ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( CS,( CS / ( ( MUC - ( RCSe / CS ) ) - ( RCSe * Max( DS,MUC ) ) ) ) ) * ( ( ( ( CS + DS ) - Min( MUR ,( RRSe / MUC ) ) ) + DS ) / MUM ) ) + Max( MUR,CS ) ) - Max( ( ( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),MUC ) ) / Min( ( ( ( ( MLU - MLU ) / Max( RCSe,MUR ) ) * RRSe ) / MUC ) ,CS ) ),( Max( RMSe,MUM ) + DS ) ) )", "obj1": 0.5315985130111525, "obj2": 0.2749696808276298}, {"determining": "( ( Const / ( ( Const - Min( RRS ,BR ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,DS ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( MUM * MUC ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9907063197026023, "obj2": 0.0023745437472891206}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.05026029875360671}, {"determining": "( ACS / Min( Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ,MRS ) )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( ( MUR * RRSe ) / MUC ) ,CS ) )", "obj1": 0.24535315985130113, "obj2": 0.5919324605721553}], "26": [{"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( ( AMS / FirstVNF_Mem_Server ) - BR ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - RMSe ) + DS ) * ( ( DS / RCSe ) + MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( ARS / ( ( Min( Max( BR,PN ) ,MRS ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,( ( MUC - RMSe ) - ( MUR * CS ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / Const ) * Max( DDR,( Min( ( Max( MDR,ARS ) * ( Const / ( FirstVNF_CPU_Server + MDR ) ) ) ,( BR - MRS ) ) / ( FirstVNF_Mem - ARS ) ) ) )", "choosing": "( ( ( ( Max( ( MUR * RCSe ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( Min( MUM ,DS ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / RCSe ) / DS ) / Min( DS ,RMSe ) )", "obj1": 0.05204460966542751, "obj2": 0.8533451765873067}, {"determining": "( ( FirstVNF_CPU / FirstVNF_RAM ) - ( ( MRS - MDR ) / Const ) )", "choosing": "( Max( Max( Min( ( ( MUR * ( RMSe - RCSe ) ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,CS ) + DS ) ) - ( ( ( ( CS + MUM ) / CS ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3712770855467563}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( ( DDR + MDR ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.45724907063197023, "obj2": 0.32505858134278165}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + CS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.03223901622122917}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.6617100371747212, "obj2": 0.19636924959455312}, {"determining": "( ( ( ARS + CRS ) / FirstVNF_CPU ) * ( FirstVNF_RAM / ARS ) )", "choosing": "( ( ( Max( MLU,Max( MUM,( MUM / Max( MLU,MUR ) ) ) ) / ( MLU / MUC ) ) + DS ) / ( DS / RMSe ) )", "obj1": 0.08364312267657993, "obj2": 0.7805961704549751}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server / ARS ),Max( FirstVNF_Mem,Max( PN,BR ) ) ) ) + RRS ) ) - Max( FirstVNF_RAM,Max( AMS,ACS ) ) )", "choosing": "( ( ( Min( ( ( MLU - ( ( MLU * RRSe ) * RMSe ) ) - MUR ) ,MUC ) - ( MLU * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.1171003717472119, "obj2": 0.731293433787682}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( AMS * MRS ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.13382899628252787, "obj2": 0.6994926287516073}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.05026029875360671}, {"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 0.7657992565055762, "obj2": 0.08877398850499515}, {"determining": "( ( ( ( Min( MRS ,PN ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + PN ) / ARS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( ( Min( MUR ,RCSe ) * RCSe ) - RMSe ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RCSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15519049284837272}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8141263940520446, "obj2": 0.08722833095278043}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Min( Max( AMS,( AMS / BR ) ) ,CRS ) ) / FirstVNF_Mem_Server )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( ( MUC / RCSe ) - ( MUM * ( MLU / DS ) ) ) ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( MUM + RMSe ) + DS ) ) ) ) - RCSe )", "obj1": 0.5074349442379182, "obj2": 0.288309114692619}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.10594795539033457, "obj2": 0.7448710749572363}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( Min( MUC ,DS ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( MUM * MUC ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07954424588951074}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5162771632146976}, {"determining": "( ACS / Max( Max( ( ACS - Max( ( DDR - MRS ),Max( MRS,Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ),PN ),Min( ( FirstVNF_Mem_Server / ACS ) ,RRS ) ) )", "choosing": "( ( ( ( Min( Min( MUM ,Max( RMSe,MUM ) ) ,Min( Min( RMSe ,RCSe ) ,DS ) ) - CS ) / ( RRSe * Min( MUM ,Max( MUR,RMSe ) ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7617580852220956}, {"determining": "( ACS / ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR * RRSe ) / MUC ) ),( ( CS / Min( RMSe ,RMSe ) ) - Max( ( CS + ( RMSe / ( CS * MUC ) ) ),RMSe ) ) ),( Max( RMSe,Min( ( ( MLU - ( MLU / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.15055762081784388, "obj2": 0.6764489814309624}, {"determining": "( ( ARS / ( ( Max( Min( ( ACS * PN ) ,FirstVNF_CPU ),PN ) - Max( AMS,( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( BR,ACS ) ) )", "choosing": "( ( ( Min( MUC ,MUM ) - Max( MUR,CS ) ) * ( MUC - MUR ) ) - ( MUM / ( ( CS / RRSe ) + MUM ) ) )", "obj1": 0.5557620817843866, "obj2": 0.2511837377001316}, {"determining": "( ACS / ( ( ( MDR * FirstVNF_RAM ) + PN ) - Max( FirstVNF_CPU,( Max( ARS,PN ) - ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ) ) )", "choosing": "( ( ( CS * RCSe ) + CS ) * ( MUC - Max( DS,( Max( MUM,( MUM * CS ) ) + DS ) ) ) )", "obj1": 0.22304832713754646, "obj2": 0.5999598223354091}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05390334572490706, "obj2": 0.8226718712962325}, {"determining": "( ( Max( AMS,CRS ) - Max( PN,Min( Min( RRS ,CRS ) ,BR ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( RCSe * MUM ) / ( MLU + DS ) ) ),RMSe ) ) ),( Max( MUM,( RRSe + ( ( MLU + DS ) / MLU ) ) ) + DS ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6606085118953535}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + ( Const / FirstVNF_RAM ) ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) + MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Min( ( ( ( Max( MUR,CS ) - MLU ) - MUR ) * ( MUC + CS ) ) ,DS ) )", "obj1": 0.7007434944237918, "obj2": 0.140492892074463}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.47769516728624534, "obj2": 0.30541897600616413}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),Min( Max( BR,PN ) ,MRS ) ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( MUR - ( ( CS + ( RMSe / ( RCSe * MUC ) ) ) * RMSe ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.9163568773234201, "obj2": 0.03487368585309242}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9907063197026023, "obj2": 0.0023745437472891206}, {"determining": "( ( ACS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( RMSe ,MUC ) - ( MUR * CS ) ) * ( MUR + MUC ) ) - ( MUC + RCSe ) )", "obj1": 0.5929368029739777, "obj2": 0.2237853314982725}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6115241635687733, "obj2": 0.21603005711755222}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5272166448325822}, {"determining": "( ( ( MDR / CRS ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - FirstVNF_CPU ),PN ) ) * MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( RRSe,( CS - RRSe ) ) * ( MUR * MUC ) ) - Min( ( DS / DS ) ,MUR ) )", "obj1": 0.5446096654275093, "obj2": 0.2585972849702978}, {"determining": "( ( Max( AMS,Max( Max( Const,Min( Max( FirstVNF_RAM_Server,CRS ) ,ARS ) ),PN ) ) - ( BR + Max( ( ( ( CRS / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem ),BR ) ) ) / ACS )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * ( Max( ( Min( MUC ,RCSe ) * CS ),( Max( RMSe,MUC ) - RMSe ) ) - MUM ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / RCSe ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.4851301115241636, "obj2": 0.29962214974079177}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) )", "obj1": 0.7546468401486989, "obj2": 0.09182110525059002}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.20126558289003196}, {"determining": "( Min( ARS ,MRS ) / ( ( RRS - ( FirstVNF_Mem_Server - ARS ) ) + Const ) )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5860077283319638}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( MUC ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.34014869888475835, "obj2": 0.4881445165822973}], "27": [{"determining": "( ( ARS / ( ( Max( MRS,BR ) - Max( AMS,( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( BR,ACS ) ) )", "choosing": "( Max( MUC,RCSe ) - Min( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MLU ) ) ,( MUC + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( ( Min( Max( BR,PN ) ,MRS ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,( ( MUC - RMSe ) - ( MUR * CS ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + ( Const / FirstVNF_RAM ) ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) + MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Min( ( ( ( Max( MUR,CS ) - MLU ) - MUR ) * ( MUC + CS ) ) ,DS ) )", "obj1": 0.7007434944237918, "obj2": 0.140492892074463}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) )", "obj1": 0.7546468401486989, "obj2": 0.09182110525059002}, {"determining": "( ( Max( AMS,Max( PN,Max( ( ( DDR + MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ),Const ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Max( MUC,MUR ) * Max( MUR,CS ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MLU / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3411836507677639}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + ( Max( Const,RRS ) - Max( AMS,ACS ) ) ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( ( MLU * RMSe ) * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.929368029739777, "obj2": 0.03140594335831175}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Min( Max( AMS,( AMS / BR ) ) ,CRS ) ) / FirstVNF_Mem_Server )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( ( MUC / RCSe ) - ( MUM * ( MLU / DS ) ) ) ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( MUM + RMSe ) + DS ) ) ) ) - RCSe )", "obj1": 0.5074349442379182, "obj2": 0.288309114692619}, {"determining": "( ( ( ( Min( MRS ,PN ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + PN ) / ARS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( ( Min( MUR ,RCSe ) * RCSe ) - RMSe ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RCSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15519049284837272}, {"determining": "( ( ARS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ,MUR ) )", "obj1": 0.9907063197026023, "obj2": 0.0020807507887443135}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( ( ( MDR / CRS ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - FirstVNF_CPU ),PN ) ) * MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( RRSe,( CS - RRSe ) ) * ( MUR * MUC ) ) - Min( ( DS / DS ) ,MUR ) )", "obj1": 0.5446096654275093, "obj2": 0.2585972849702978}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.6617100371747212, "obj2": 0.19636924959455312}, {"determining": "( ( Max( AMS,CRS ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4036888825719459}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( AMS * MRS ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.13382899628252787, "obj2": 0.6994926287516073}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.20126558289003196}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ACS / ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( ( ( CS - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR * RRSe ) / MUC ) ),( ( CS / Min( RMSe ,RMSe ) ) - Max( ( CS + ( RMSe / ( CS * MUC ) ) ),RMSe ) ) ),( Max( RMSe,Min( ( ( MLU - ( MLU / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.15055762081784388, "obj2": 0.6764489814309624}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6115241635687733, "obj2": 0.21603005711755222}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ( FirstVNF_CPU * Max( Const,MRS ) ) - Max( AMS,FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,Max( DS,MUC ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.5910780669144982, "obj2": 0.24610495473183736}, {"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 0.7657992565055762, "obj2": 0.08877398850499515}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8141263940520446, "obj2": 0.08722833095278043}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( Min( MUC ,DS ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( MUM * MUC ) ) ),RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8197026022304833, "obj2": 0.07954424588951074}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2936802973977695, "obj2": 0.5162771632146976}, {"determining": "( ( ARS / ( ( Max( AMS,BR ) - Max( ( FirstVNF_RAM_Server - DDR ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,( BR * ACS ) ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( CS ,( ( MUR + RRSe ) / MUM ) ),( MUR - ( ( MUM + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),Max( Min( ( MUM - Max( Min( Min( DS ,RRSe ) ,MLU ),Min( Max( MUM,MLU ) ,( MUC / RRSe ) ) ) ) ,MUC ),RRSe ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06375510243397019}, {"determining": "( Max( Max( FirstVNF_CPU_Server,AMS ),( Max( AMS,FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( MUR / RCSe ) / MUR ) ) ) ) / ( Min( Min( MUM ,MLU ) ,RMSe ) + DS ) ) * DS ) / Min( DS ,MUC ) )", "obj1": 0.0762081784386617, "obj2": 0.7925886770983225}, {"determining": "( ( ARS / ( ( Max( AMS,( FirstVNF_Mem_Server - ARS ) ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) )", "obj1": 0.5557620817843866, "obj2": 0.24819328981009026}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05947955390334572, "obj2": 0.8160982725193371}, {"determining": "( Min( ARS ,MRS ) / ( ( RRS - ( FirstVNF_Mem_Server - ARS ) ) + Const ) )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.2527881040892193, "obj2": 0.5860077283319638}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.47769516728624534, "obj2": 0.30541897600616413}, {"determining": "( ( ACS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( RMSe ,MUC ) - ( MUR * CS ) ) * ( MUR + MUC ) ) - ( MUC + RCSe ) )", "obj1": 0.5929368029739777, "obj2": 0.2237853314982725}, {"determining": "( ACS / Max( Max( ( ACS - Max( ( DDR - MRS ),Max( MRS,Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ),PN ),Min( ( FirstVNF_Mem_Server / ACS ) ,RRS ) ) )", "choosing": "( ( ( ( Min( Min( MUM ,Max( RMSe,MUM ) ) ,Min( Min( RMSe ,RCSe ) ,DS ) ) - CS ) / ( RRSe * Min( MUM ,Max( MUR,RMSe ) ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7617580852220956}, {"determining": "( ( ARS / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( MUR - Max( Max( Min( ( RCSe / MUC ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( MLU + DS ) / MLU ) ) ) + DS ) ) )", "obj1": 0.12825278810408922, "obj2": 0.7208067164479741}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server / ARS ),Max( FirstVNF_Mem,Max( PN,BR ) ) ) ) + RRS ) ) - Max( FirstVNF_RAM,Max( AMS,ACS ) ) )", "choosing": "( ( ( Min( ( ( MLU - ( ( MLU * RRSe ) * RMSe ) ) - MUR ) ,MUC ) - ( MLU * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.1171003717472119, "obj2": 0.731293433787682}, {"determining": "( ( Max( AMS,( FirstVNF_CPU * Max( Const,MRS ) ) ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / ( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( MLU + DS ) / MLU ) ) ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6689485866330904}, {"determining": "( ( Max( AMS,Max( Max( Const,Min( Max( FirstVNF_RAM_Server,CRS ) ,ARS ) ),PN ) ) - ( BR + Max( ( ( ( CRS / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem ),BR ) ) ) / ACS )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * ( Max( ( Min( MUC ,RCSe ) * CS ),( Max( RMSe,MUC ) - RMSe ) ) - MUM ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / RCSe ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.4851301115241636, "obj2": 0.29962214974079177}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.23605947955390336, "obj2": 0.592815566192802}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( MUC ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.34014869888475835, "obj2": 0.4881445165822973}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),Min( Max( BR,PN ) ,MRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.611815930200468}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( ( DDR + MDR ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.45724907063197023, "obj2": 0.32505858134278165}, {"determining": "( ACS / ( ( ( MDR * FirstVNF_RAM ) + PN ) - Max( FirstVNF_CPU,( Max( ARS,PN ) - ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ) ) )", "choosing": "( ( ( CS * RCSe ) + CS ) * ( MUC - Max( DS,( Max( MUM,( MUM * CS ) ) + DS ) ) ) )", "obj1": 0.22304832713754646, "obj2": 0.5999598223354091}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.10594795539033457, "obj2": 0.7448710749572363}], "28": [{"determining": "( ( ARS / ( ( Max( PN,Min( ( ACS * PN ) ,FirstVNF_CPU ) ) - Max( ( Const + Max( MDR,PN ) ),( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( MUR - Max( Max( ( ( MUR / ( CS - MUR ) ) + MLU ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( DS + MLU ) / MLU ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( ( Max( MRS,BR ) - Max( AMS,( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( BR,ACS ) ) )", "choosing": "( Max( MUC,RCSe ) - Min( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MLU ) ) ,( MUC + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + ( Max( Const,RRS ) - Max( AMS,ACS ) ) ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( ( MLU * RMSe ) * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.929368029739777, "obj2": 0.03140594335831175}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + ( Const / FirstVNF_RAM ) ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) + MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Min( ( ( ( Max( MUR,CS ) - MLU ) - MUR ) * ( MUC + CS ) ) ,DS ) )", "obj1": 0.7007434944237918, "obj2": 0.140492892074463}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) )", "obj1": 0.7509293680297398, "obj2": 0.09370137962704692}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( Max( AMS,Max( PN,Max( ( ( DDR + MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ),Const ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Max( MUC,MUR ) * Max( MUR,CS ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MLU / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3411836507677639}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( ACS / ( ( Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - ( BR / ACS ) ) )", "choosing": "( ( CS + ( CS * RCSe ) ) * ( RRSe - Min( ( ( Min( ( DS / RMSe ) ,RRSe ) / RRSe ) / ( Min( ( RCSe * CS ) ,MLU ) - ( MUM * ( RCSe / DS ) ) ) ) ,CS ) ) )", "obj1": 0.9795539033457249, "obj2": 0.0061901992764575}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( FirstVNF_CPU / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( FirstVNF_CPU / ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( Min( MUM ,MLU ) - Max( DS,( ( MUM + MUC ) + DS ) ) ) )", "obj1": 0.2342007434944238, "obj2": 0.580582254917029}, {"determining": "( ( ( ( Min( MRS ,PN ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + PN ) / ARS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( ( Min( MUR ,RCSe ) * RCSe ) - RMSe ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RCSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15519049284837272}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.6617100371747212, "obj2": 0.19636924959455312}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,( ( MUC - RMSe ) - ( MUR * CS ) ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5260223048327137, "obj2": 0.28668239158534337}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6115241635687733, "obj2": 0.21603005711755222}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( MUC ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.34014869888475835, "obj2": 0.4881445165822973}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( Min( ACS ,BR ),Min( ( Min( Max( AMS,( AMS + ACS ) ) ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Min( DS ,MUM ) ) - Max( Max( ( MUR - Max( ( CS + ( ( DS + MLU ) / ( RCSe * MUC ) ) ),RMSe ) ),( Max( ( CS + ( ( MLU + DS ) / ( RMSe / MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8550185873605948, "obj2": 0.05970993480260186}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.5817843866171004, "obj2": 0.24408201076709146}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8141263940520446, "obj2": 0.08722833095278043}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ( ACS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( RMSe ,MUC ) - ( MUR * CS ) ) * ( MUR + MUC ) ) - ( MUC + RCSe ) )", "obj1": 0.5929368029739777, "obj2": 0.2237853314982725}, {"determining": "( ACS / Max( Max( ( ACS - Max( ( DDR - MRS ),Max( MRS,Min( ( RRS * FirstVNF_RAM ) ,MRS ) ) ) ),PN ),Min( ( FirstVNF_Mem_Server / ACS ) ,RRS ) ) )", "choosing": "( ( ( ( Min( Min( MUM ,Max( RMSe,MUM ) ) ,Min( Min( RMSe ,RCSe ) ,DS ) ) - CS ) / ( RRSe * Min( MUM ,Max( MUR,RMSe ) ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.08736059479553904, "obj2": 0.7617580852220956}, {"determining": "( ( Max( AMS,Max( BR,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( Max( AMS,AMS ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( ( Min( DS ,RMSe ) - RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,Max( MUC,MLU ) ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4013416201695138}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MRS ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( CS + ( CS * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) ) + DS ) ) ) )", "obj1": 0.19516728624535315, "obj2": 0.6356200468626341}, {"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 0.7657992565055762, "obj2": 0.08877398850499515}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.47769516728624534, "obj2": 0.30541897600616413}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Min( Max( AMS,( AMS / BR ) ) ,CRS ) ) / FirstVNF_Mem_Server )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( ( MUC / RCSe ) - ( MUM * ( MLU / DS ) ) ) ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( MUM + RMSe ) + DS ) ) ) ) - RCSe )", "obj1": 0.5074349442379182, "obj2": 0.288309114692619}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( ( MDR / CRS ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - FirstVNF_CPU ),PN ) ) * MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( RRSe,( CS - RRSe ) ) * ( MUR * MUC ) ) - Min( ( DS / DS ) ,MUR ) )", "obj1": 0.5446096654275093, "obj2": 0.2585972849702978}, {"determining": "( ACS / Min( Max( PN,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,MRS ) )", "choosing": "( ( CS + Min( CS ,RCSe ) ) * Max( RCSe,Min( RCSe ,( ( RRSe - ( RCSe + MLU ) ) / MUR ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7085019094812033}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.29182156133828996, "obj2": 0.5225018600749899}, {"determining": "( ACS / ( ( ( MDR * FirstVNF_RAM ) + PN ) - Max( FirstVNF_CPU,( Max( ARS,PN ) - ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ) ) )", "choosing": "( ( ( CS * RCSe ) + CS ) * ( MUC - Max( DS,( Max( MUM,( MUM * CS ) ) + DS ) ) ) )", "obj1": 0.22304832713754646, "obj2": 0.5999598223354091}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.6821561338289963, "obj2": 0.14592218182711822}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) )", "obj1": 0.6356877323420075, "obj2": 0.20126558289003196}, {"determining": "( Max( Max( FirstVNF_CPU_Server,AMS ),( Max( AMS,FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( MUR / RCSe ) / MUR ) ) ) ) / ( Min( Min( MUM ,MLU ) ,RMSe ) + DS ) ) * DS ) / Min( DS ,MUC ) )", "obj1": 0.0762081784386617, "obj2": 0.7925886770983225}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ( Max( AMS,Max( Max( Const,Min( Max( FirstVNF_RAM_Server,CRS ) ,ARS ) ),PN ) ) - ( BR + Max( ( ( ( CRS / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem ),BR ) ) ) / ACS )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * ( Max( ( Min( MUC ,RCSe ) * CS ),( Max( RMSe,MUC ) - RMSe ) ) - MUM ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / RCSe ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.4851301115241636, "obj2": 0.29962214974079177}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / Const ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( MUC ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( RMSe,MUC ) + DS ) ) ) )", "obj1": 0.30855018587360594, "obj2": 0.5153398822583936}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.8401486988847584, "obj2": 0.06477380029894872}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server / ARS ),Max( FirstVNF_Mem,Max( PN,BR ) ) ) ) + RRS ) ) - Max( FirstVNF_RAM,Max( AMS,ACS ) ) )", "choosing": "( ( ( Min( ( ( MLU - ( ( MLU * RRSe ) * RMSe ) ) - MUR ) ,MUC ) - ( MLU * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.1171003717472119, "obj2": 0.731293433787682}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * Max( ( ACS + BR ),Min( RRS ,CRS ) ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / ( DS + DS ) )", "obj1": 0.06691449814126393, "obj2": 0.8129346658140875}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),Min( Max( BR,PN ) ,MRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.611815930200468}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( AMS * MRS ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.14684014869888476, "obj2": 0.690226983258967}, {"determining": "( ( Max( AMS,( FirstVNF_CPU * Max( Const,MRS ) ) ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / ( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( MLU + DS ) / MLU ) ) ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6689485866330904}], "29": [{"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( ( Max( PN,Min( ( ACS * PN ) ,FirstVNF_CPU ) ) - Max( ( Const + Max( MDR,PN ) ),( PN - ACS ) ) ) + MDR ) ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( MUR - Max( Max( ( ( MUR / ( CS - MUR ) ) + MLU ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( DS + MLU ) / MLU ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + ( Const / FirstVNF_RAM ) ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) + MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Min( ( ( ( Max( MUR,CS ) - MLU ) - MUR ) * ( MUC + CS ) ) ,DS ) )", "obj1": 0.7007434944237918, "obj2": 0.140492892074463}, {"determining": "( ( ARS / ( ( FirstVNF_RAM + Max( Min( Const ,PN ),FirstVNF_Mem ) ) / PN ) ) - Max( ( ( ACS + BR ) * Min( ( CRS * ( FirstVNF_CPU - FirstVNF_RAM ) ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - ( Max( Max( RMSe,MUR ),CS ) + MUR ) ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( CS * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8903345724907064, "obj2": 0.04074904187091383}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( DDR + MDR ) - ( RRS * FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Max( RRSe,( RMSe - MUR ) ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU * DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.41821561338289964, "obj2": 0.39092682933638856}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.7397769516728625, "obj2": 0.10085206130916537}, {"determining": "( ( ( MDR / CRS ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - FirstVNF_CPU ),PN ) ) * MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( RRSe,( CS - RRSe ) ) * ( MUR * MUC ) ) - Min( ( DS / DS ) ,MUR ) )", "obj1": 0.5446096654275093, "obj2": 0.2585972849702978}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_RAM_Server / ARS ),Max( FirstVNF_Mem,Max( PN,BR ) ) ) ) + RRS ) ) - Max( FirstVNF_RAM,Max( AMS,ACS ) ) )", "choosing": "( ( ( Min( ( ( MLU - ( ( MLU * RRSe ) * RMSe ) ) - MUR ) ,MUC ) - ( MLU * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.1171003717472119, "obj2": 0.731293433787682}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) * Max( FirstVNF_CPU,( Max( ( Max( ( FirstVNF_Mem_Server + ARS ),CRS ) * MDR ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.35315985130111527, "obj2": 0.46841507171716845}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.5817843866171004, "obj2": 0.24408201076709146}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( FirstVNF_CPU / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( FirstVNF_CPU / ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( Min( MUM ,MLU ) - Max( DS,( ( MUM + MUC ) + DS ) ) ) )", "obj1": 0.2342007434944238, "obj2": 0.580582254917029}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( Min( ACS ,BR ),Min( ( Min( Max( AMS,( AMS + ACS ) ) ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Min( DS ,MUM ) ) - Max( Max( ( MUR - Max( ( CS + ( ( DS + MLU ) / ( RCSe * MUC ) ) ),RMSe ) ),( Max( ( CS + ( ( MLU + DS ) / ( RMSe / MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8550185873605948, "obj2": 0.05970993480260186}, {"determining": "( ACS / Min( Max( PN,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,MRS ) )", "choosing": "( ( CS + Min( CS ,RCSe ) ) * Max( RCSe,Min( RCSe ,( ( RRSe - ( RCSe + MLU ) ) / MUR ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7085019094812033}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.6617100371747212, "obj2": 0.19636924959455312}, {"determining": "( ( Max( AMS,Max( PN,Max( ( ( DDR + MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ),Const ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.4312267657992565, "obj2": 0.3461462723165949}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + ( Max( Const,RRS ) - Max( AMS,FirstVNF_RAM ) ) ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.929368029739777, "obj2": 0.031001796392513967}, {"determining": "( ( ( ( Min( MRS ,PN ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + PN ) / ARS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( ( Min( MUR ,RCSe ) * RCSe ) - RMSe ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RCSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15519049284837272}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5196646397992908}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR + AMS ),Const ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( CS,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.34014869888475835, "obj2": 0.4794338370234852}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Max( ( ARS * FirstVNF_RAM ),( RRS / ACS ) ) / ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * Min( CS ,RMSe ) ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( MUC / ( MUR * DS ) ) ,CS ),( ( ( CS - ( MUC / ( RCSe * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5185873605947955, "obj2": 0.2780187903122472}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.09107806691449814, "obj2": 0.759569180407779}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * Max( ( ACS + BR ),Min( RRS ,CRS ) ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / ( DS + DS ) )", "obj1": 0.06691449814126393, "obj2": 0.8129346658140875}, {"determining": "( ( ACS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( RMSe ,MUC ) - ( MUR * CS ) ) * ( MUR + MUC ) ) - ( MUC + RCSe ) )", "obj1": 0.5929368029739777, "obj2": 0.2237853314982725}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.8401486988847584, "obj2": 0.06477380029894872}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( AMS * MRS ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.14684014869888476, "obj2": 0.690226983258967}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ACS / ( ( ( MDR * FirstVNF_RAM ) + PN ) - Max( FirstVNF_CPU,( Max( ARS,PN ) - ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ) ) )", "choosing": "( ( ( CS * RCSe ) + CS ) * ( MUC - Max( DS,( Max( MUM,( MUM * CS ) ) + DS ) ) ) )", "obj1": 0.22304832713754646, "obj2": 0.5999598223354091}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( AMS,FirstVNF_Mem_Server ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.671003717472119, "obj2": 0.14435766660655763}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( MLU * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869643}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( MUR * ( MUR * MUC ) ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.7865724173515717}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39547354345914504}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_Mem_Server,AMS ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ACS ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( CS + ( CS + RCSe ) ) * ( Max( ( MUM / ( DS * MUR ) ),MUR ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.008096915992457276}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( FirstVNF_RAM * MDR ) ) ),Min( Max( BR,PN ) ,MRS ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2174721189591078, "obj2": 0.611815930200468}, {"determining": "( ACS / ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,Max( ( ACS + ( Max( Const,RRS ) - ( AMS / ACS ) ) ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( Min( Min( ( MUC - RCSe ) ,( DS - RRSe ) ) ,MLU ) * ( RRSe - Max( ( ( ( MLU * RMSe ) - RMSe ) / Min( ( DS + DS ) ,MUR ) ),CS ) ) )", "obj1": 0.9460966542750929, "obj2": 0.021441657651124615}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,ARS ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * ( Max( RMSe,MUR ) / Min( MUC ,MUR ) ) ) / MUC ) ,CS ),( MUR - ( ( CS + ( MUC / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MUC / RCSe ),RMSe ) + DS ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6826246535517823}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server / Const ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( MUC ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( RMSe,MUC ) + DS ) ) ) )", "obj1": 0.30855018587360594, "obj2": 0.5153398822583936}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.4739776951672863, "obj2": 0.3059895863652857}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Min( Max( AMS,( AMS / BR ) ) ,CRS ) ) / FirstVNF_Mem_Server )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( ( MUC / RCSe ) - ( MUM * ( MLU / DS ) ) ) ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( MUM + RMSe ) + DS ) ) ) ) - RCSe )", "obj1": 0.5074349442379182, "obj2": 0.288309114692619}, {"determining": "( ( Max( AMS,Max( Max( Const,Min( Max( FirstVNF_RAM_Server,CRS ) ,ARS ) ),PN ) ) - ( BR + Max( ( ( ( CRS / FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) - FirstVNF_Mem ),BR ) ) ) / ACS )", "choosing": "( ( ( ( MUC - RMSe ) - ( MUR * ( Max( ( Min( MUC ,RCSe ) * CS ),( Max( RMSe,MUC ) - RMSe ) ) - MUM ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / RCSe ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( ( MLU - DS ),Min( ( ( MLU - ( MUM / DS ) ) / RMSe ) ,RRSe ) ) + DS ) ) )", "obj1": 0.4851301115241636, "obj2": 0.29962214974079177}, {"determining": "( ( Max( AMS,( FirstVNF_CPU * Max( Const,MRS ) ) ) - Max( ( ( ( AMS * MRS ) * ( FirstVNF_RAM / PN ) ) + BR ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( RCSe / ( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( MLU + DS ) / MLU ) ) ) + DS ) ) )", "obj1": 0.1691449814126394, "obj2": 0.6689485866330904}], "30": [{"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + ( Const / FirstVNF_RAM ) ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) + MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Min( ( ( ( Max( MUR,CS ) - MLU ) - MUR ) * ( MUC + CS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MDR,MDR ) ,ACS ) - Max( ( FirstVNF_Mem_Server * AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR + CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( RMSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.7397769516728625, "obj2": 0.10085206130916537}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( Max( Max( ( Const + Min( Max( FirstVNF_RAM_Server,Min( MRS ,FirstVNF_Mem ) ) ,( Const * FirstVNF_CPU ) ) ),PN ),AMS ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) / ACS )", "choosing": "( ( ( Min( Max( ( MLU + RRSe ),CS ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Min( RCSe ,DS ),( CS - CS ) ) ) ) - Min( Min( MUR ,DS ) ,MUC ) )", "obj1": 0.6617100371747212, "obj2": 0.19636924959455312}, {"determining": "( ( Max( AMS,Max( PN,Max( ( ( DDR + MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ),Const ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.4312267657992565, "obj2": 0.3461462723165949}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( AMS,FirstVNF_Mem_Server ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( MUR / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.32342007434944237, "obj2": 0.5010258705182862}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6096654275092936, "obj2": 0.21720325359963913}, {"determining": "( ( Max( AMS,Max( PN,Max( ( ( DDR + MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ),Max( ARS,PN ) ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( Max( MUM,( MUM * CS ) ) * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.40148698884758366, "obj2": 0.3822749612746077}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7497478672220135}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( FirstVNF_CPU / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( FirstVNF_CPU / ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( Min( MUM ,MLU ) - Max( DS,( ( MUM + MUC ) + DS ) ) ) )", "obj1": 0.2342007434944238, "obj2": 0.580582254917029}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ( ( Min( MRS ,PN ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + PN ) / ARS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( ( Min( MUR ,RCSe ) * RCSe ) - RMSe ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RCSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15519049284837272}, {"determining": "( ACS / Min( Max( PN,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,MRS ) )", "choosing": "( ( CS + Min( CS ,RCSe ) ) * Max( RCSe,Min( RCSe ,( ( RRSe - ( RCSe + MLU ) ) / MUR ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7085019094812033}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * Max( ( ACS + BR ),Min( RRS ,CRS ) ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / ( DS + DS ) )", "obj1": 0.06691449814126393, "obj2": 0.8129346658140875}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.5817843866171004, "obj2": 0.24408201076709146}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Max( ( ARS * FirstVNF_RAM ),( RRS / ACS ) ) / ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * Min( CS ,RMSe ) ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( MUC / ( MUR * DS ) ) ,CS ),( ( ( CS - ( MUC / ( RCSe * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5185873605947955, "obj2": 0.2780187903122472}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.8401486988847584, "obj2": 0.06477380029894872}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( AMS * MRS ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.14684014869888476, "obj2": 0.690226983258967}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( MLU * Max( CS,Max( Max( MUM,Min( Max( MUR,MUM ) ,( RCSe / MLU ) ) ),( RCSe * ( MUC / RRSe ) ) ) ) ) / MUM ) )", "obj1": 0.8197026022304833, "obj2": 0.07960291401869643}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ACS / ( ( ( Const / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( Max( PN,PN ) + ( Max( Const,RRS ) - Max( AMS,FirstVNF_RAM ) ) ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,MLU ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( ( ( MLU - DS ) + MUR ),MUC ) + DS ) ) ) )", "obj1": 0.8847583643122676, "obj2": 0.05898121005077961}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.4739776951672863, "obj2": 0.3059895863652857}, {"determining": "( ( ( MDR / CRS ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - FirstVNF_CPU ),PN ) ) * MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( RRSe,( CS - RRSe ) ) * ( MUR * MUC ) ) - Min( ( DS / DS ) ,MUR ) )", "obj1": 0.5446096654275093, "obj2": 0.2585972849702978}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5135329834664367}, {"determining": "( ACS / ( ( ( MDR * FirstVNF_RAM ) + PN ) - Max( FirstVNF_CPU,( Max( ARS,PN ) - ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) ) ) ) )", "choosing": "( ( ( CS * RCSe ) + CS ) * ( MUC - Max( DS,( Max( MUM,( MUM * CS ) ) + DS ) ) ) )", "obj1": 0.22304832713754646, "obj2": 0.5999598223354091}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( Min( ACS ,BR ),Min( ( Min( Max( AMS,( AMS + ACS ) ) ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * Min( DS ,MUM ) ) - Max( Max( ( MUR - Max( ( CS + ( ( DS + MLU ) / ( RCSe * MUC ) ) ),RMSe ) ),( Max( ( CS + ( ( MLU + DS ) / ( RMSe / MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8550185873605948, "obj2": 0.05970993480260186}, {"determining": "( ( ACS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( PN,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + MDR ) ) - Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( RMSe ,MUC ) - ( MUR * CS ) ) * ( MUR + MUC ) ) - ( MUC + RCSe ) )", "obj1": 0.5929368029739777, "obj2": 0.2237853314982725}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( MUR * ( MUR * MUC ) ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.7865724173515717}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( PN ,PN ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,RCSe ) ) )", "obj1": 0.11524163568773234, "obj2": 0.7322030038768854}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5427509293680297, "obj2": 0.2594402660548079}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.9107806691449815, "obj2": 0.03796256537107007}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_Mem_Server,AMS ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ACS ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( CS + ( CS + RCSe ) ) * ( Max( ( MUM / ( DS * MUR ) ),MUR ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.008096915992457276}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),Min( ARS ,Max( ( PN - MRS ),ARS ) ) ) ) + RRS ) ) / ACS )", "choosing": "( ( ( ( MUR - CS ) - ( MUR * CS ) ) * Min( MUR ,MUC ) ) - ( ( RCSe - RRSe ) + MUC ) )", "obj1": 0.19330855018587362, "obj2": 0.6398023744277566}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( DS * MUC ) ) - Max( Max( Min( ( ( RCSe - ( RMSe / ( RCSe + RCSe ) ) ) - RCSe ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( DS + MLU ) / MLU ) ) ) + DS ) ) )", "obj1": 0.28810408921933084, "obj2": 0.5243419189328752}, {"determining": "( ACS / ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,Max( ( ACS + ( Max( Const,RRS ) - ( AMS / ACS ) ) ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( Min( Min( ( MUC - RCSe ) ,( DS - RRSe ) ) ,MLU ) * ( RRSe - Max( ( ( ( MLU * RMSe ) - RMSe ) / Min( ( DS + DS ) ,MUR ) ),CS ) ) )", "obj1": 0.9460966542750929, "obj2": 0.021441657651124615}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,MDR ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( CS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.2137546468401487, "obj2": 0.609367753622199}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ACS / ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( CS + RRSe ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.12453531598513011, "obj2": 0.72613697531128}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( RCSe + DS ) ),Min( MLU ,MUC ) ) )", "obj1": 0.587360594795539, "obj2": 0.24204431755304526}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( RMSe - Max( RMSe,Max( ( RMSe + RMSe ),RMSe ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( RMSe ,DS ) ,RRSe ) / RRSe ) / ( MUM - Max( MUM,( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3903345724907063, "obj2": 0.3932125399446591}, {"determining": "( ACS / ( ( Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.9758364312267658, "obj2": 0.007320590748521962}], "31": [{"determining": "( ACS / ( ( Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( Min( RRSe ,RMSe ) - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + ( Const / FirstVNF_RAM ) ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( Min( ( ( MUR * RRSe ) + MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Min( ( ( ( Max( MUR,CS ) - MLU ) - MUR ) * ( MUC + CS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( Min( FirstVNF_Mem ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * Min( RCSe ,MUC ) ) - Max( Max( Min( ( ( RCSe - ( RMSe / ( RCSe + RCSe ) ) ) - RCSe ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( DS + MLU ) / MLU ) ) ) + DS ) ) )", "obj1": 0.8475836431226765, "obj2": 0.05540959943849914}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.4739776951672863, "obj2": 0.3059895863652857}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( DS * MUC ) ) - Max( Max( Min( ( ( RCSe - ( RMSe / ( RCSe + RCSe ) ) ) - RCSe ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS + ( ( DS + MLU ) / MLU ) ) ) + DS ) ) )", "obj1": 0.7323420074349443, "obj2": 0.1233408443562355}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7497478672220135}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.9107806691449815, "obj2": 0.03796256537107007}, {"determining": "( ( ( ( Min( MRS ,PN ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + PN ) / ARS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( ( Min( MUR ,RCSe ) * RCSe ) - RMSe ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RCSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15519049284837272}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / ( Min( MUC ,RMSe ) - ( MUR * CS ) ) ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.18661743620864724}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( DDR - Max( FirstVNF_CPU,CRS ) ) ) ) ) - Min( ARS ,( CRS * BR ) ) ) / BR )", "choosing": "( ( RRSe * MUC ) - Min( Min( DS ,( ( Max( MUM,MUC ) + Min( MLU ,RRSe ) ) + CS ) ) ,RRSe ) )", "obj1": 0.42193308550185876, "obj2": 0.34601494082135975}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( ARS,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.6431226765799256, "obj2": 0.21243205377087498}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( RMSe - Max( RMSe,Max( ( RMSe + RMSe ),RMSe ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( RMSe ,DS ) ,RRSe ) / RRSe ) / ( MUM - Max( MUM,( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3903345724907063, "obj2": 0.3932125399446591}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.5817843866171004, "obj2": 0.24408201076709146}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,Max( ( ACS + BR ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + DS ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,( ( Min( DS ,MUC ) + ( CS * RCSe ) ) / MUC ) ) ) ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.3252788104089219, "obj2": 0.499370078232536}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.7397769516728625, "obj2": 0.10085206130916537}, {"determining": "( FirstVNF_CPU / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( FirstVNF_CPU / ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( Min( MUM ,MLU ) - Max( DS,( ( MUM + MUC ) + DS ) ) ) )", "obj1": 0.2342007434944238, "obj2": 0.580582254917029}, {"determining": "( ( Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( MUR * CS ) + DS ) ) )", "obj1": 0.5092936802973977, "obj2": 0.28726340918000426}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6096654275092936, "obj2": 0.21720325359963913}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( DDR,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05947955390334572, "obj2": 0.8098667876856379}, {"determining": "( ACS / ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,Max( ( ACS + ( Max( Const,RRS ) - ( AMS / ACS ) ) ),Min( RRS ,CRS ) ) ) ) )", "choosing": "( Min( Min( ( MUC - RCSe ) ,( DS - RRSe ) ) ,MLU ) * ( RRSe - Max( ( ( ( MLU * RMSe ) - RMSe ) / Min( ( DS + DS ) ,MUR ) ),CS ) ) )", "obj1": 0.9460966542750929, "obj2": 0.021441657651124615}, {"determining": "( ( Max( AMS,Max( PN,Max( ( ( DDR + MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ),Const ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.4107806691449814, "obj2": 0.35734377940607925}, {"determining": "( ( Max( AMS,Max( PN,Max( ( ( DDR + MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ),Max( ARS,PN ) ) ) ) - Max( ( AMS / ARS ),PN ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( Max( MUM,( MUM * CS ) ) * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.40148698884758366, "obj2": 0.3822749612746077}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( PN ,PN ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,RCSe ) ) )", "obj1": 0.11524163568773234, "obj2": 0.7322030038768854}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( MUC - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( Min( ( DS / RMSe ) ,MUR ),( ( MUR * ( Min( MUM ,RCSe ) + Max( CS,MUR ) ) ) / ( RMSe * RMSe ) ) ) + DS ) ) )", "obj1": 0.36617100371747213, "obj2": 0.41632495845052475}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Max( ( ARS * FirstVNF_RAM ),( RRS / ACS ) ) / ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * Min( CS ,RMSe ) ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( MUC / ( MUR * DS ) ) ,CS ),( ( ( CS - ( MUC / ( RCSe * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5185873605947955, "obj2": 0.2780187903122472}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),Min( ARS ,Max( ( PN - MRS ),ARS ) ) ) ) + RRS ) ) / ACS )", "choosing": "( ( ( ( MUR - CS ) - ( MUR * CS ) ) * Min( MUR ,MUC ) ) - ( ( RCSe - RRSe ) + MUC ) )", "obj1": 0.19330855018587362, "obj2": 0.6398023744277566}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( ( MDR / CRS ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( RRS,Const ) - FirstVNF_CPU ),PN ) ) * MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( RRSe,( CS - RRSe ) ) * ( MUR * MUC ) ) - Min( ( DS / DS ) ,MUR ) )", "obj1": 0.5446096654275093, "obj2": 0.2585972849702978}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( Const / ( MDR * MDR ) ) ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( RRS ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.8401486988847584, "obj2": 0.06477380029894872}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5135329834664367}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( MUR * ( MUR * MUC ) ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07434944237918216, "obj2": 0.7865724173515717}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ACS / Min( Max( PN,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,MRS ) )", "choosing": "( ( CS + Min( CS ,RCSe ) ) * Max( RCSe,Min( RCSe ,( ( RRSe - ( RCSe + MLU ) ) / MUR ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7085019094812033}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5427509293680297, "obj2": 0.2594402660548079}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( Min( RRS ,ACS ) / ACS )", "choosing": "( ( ( DS - MUM ) + ( MUR + RMSe ) ) * ( Min( ( RCSe - RRSe ) ,MLU ) - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.9312267657992565, "obj2": 0.0304224082918091}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6622120125252996}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2137546468401487, "obj2": 0.6072648924135868}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ARS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( Max( DS,RMSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / MUR ) ) ) )", "obj1": 0.7620817843866171, "obj2": 0.08967362697778067}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( MUR * ( MUR * MUC ) ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.14312267657992564, "obj2": 0.6976090119547823}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_Mem_Server,AMS ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ACS ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( CS + ( CS + RCSe ) ) * ( Max( ( MUM / ( DS * MUR ) ),MUR ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.008096915992457276}], "32": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + ( ( FirstVNF_RAM * Max( AMS,FirstVNF_Mem_Server ) ) / ACS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( FirstVNF_RAM_Server,MRS ) - Max( PN,DDR ) ) ) ) )", "choosing": "( ( ( ( RRSe - MLU ) / MUC ) * Min( RCSe ,MUC ) ) - Max( Max( Min( ( ( ( MUR * MUC ) - ( RMSe / ( RCSe + RCSe ) ) ) - RCSe ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS * ( ( DS + MLU ) / MLU ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( Max( Max( AMS,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( Max( AMS,FirstVNF_Mem_Server ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( ( MLU + Max( DS,CS ) ) * MUC ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( Min( RRSe ,RMSe ) - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( ( ACS + FirstVNF_Mem ) - FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server + Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( ( CS * MUC ) ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.30855018587360594, "obj2": 0.4986952062105733}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( FirstVNF_CPU / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( FirstVNF_CPU / ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( Min( MUM ,MLU ) - Max( DS,( ( MUM + MUC ) + DS ) ) ) )", "obj1": 0.2342007434944238, "obj2": 0.580582254917029}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7497478672220135}, {"determining": "( ( ( ( Min( MRS ,PN ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + PN ) / ARS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,( ( Min( MUR ,RCSe ) * RCSe ) - RMSe ) ) ,RRSe ) * Min( ( ( RCSe - RMSe ) - ( RCSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15519049284837272}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5135329834664367}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / ( Min( MUC ,RMSe ) - ( MUR * CS ) ) ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.18661743620864724}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.41821561338289964, "obj2": 0.3458091573078627}, {"determining": "( ( ARS / ( ( Max( ( Max( Const,DDR ) - FirstVNF_CPU ),PN ) - Max( AMS,FirstVNF_Mem_Server ) ) + MDR ) ) - ( ( MDR + PN ) * CRS ) )", "choosing": "( ( MUR * ( MUR + RRSe ) ) - ( Min( Min( MUC ,RMSe ) ,( MUR * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) )", "obj1": 0.6338289962825279, "obj2": 0.20139892433749831}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1212845783719694}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2137546468401487, "obj2": 0.6072648924135868}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6096654275092936, "obj2": 0.21720325359963913}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.5817843866171004, "obj2": 0.24408201076709146}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Max( ( ARS * FirstVNF_RAM ),( RRS / ACS ) ) / ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * Min( CS ,RMSe ) ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( MUC / ( MUR * DS ) ) ,CS ),( ( ( CS - ( MUC / ( RCSe * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5185873605947955, "obj2": 0.2780187903122472}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( PN ,PN ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,RCSe ) ) )", "obj1": 0.11524163568773234, "obj2": 0.7322030038768854}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_Mem_Server,AMS ),FirstVNF_RAM ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) + ACS ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( CS + ( CS + RCSe ) ) * ( Max( ( MUM / ( DS * MUR ) ),MUR ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.9684014869888475, "obj2": 0.008096915992457276}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3903345724907063, "obj2": 0.37215094021678674}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( Max( MUM,MUC ) + DS ) ,MUR ) )", "obj1": 0.6003717472118959, "obj2": 0.23136606678000973}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),Min( ARS ,Max( ( PN - MRS ),ARS ) ) ) ) + RRS ) ) / ACS )", "choosing": "( ( ( ( MUR - CS ) - ( MUR * CS ) ) * Min( MUR ,MUC ) ) - ( ( RCSe - RRSe ) + MUC ) )", "obj1": 0.19330855018587362, "obj2": 0.6398023744277566}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ARS ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RCSe / DS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.7360594795539034, "obj2": 0.10502418179085263}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( DDR,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05947955390334572, "obj2": 0.8098667876856379}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5557620817843866, "obj2": 0.25141813583025785}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,Max( ( Max( Const,RRS ) - Max( AMS,ARS ) ),PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( Max( DS,RMSe ) ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8364312267657993, "obj2": 0.07149964562184272}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.9107806691449815, "obj2": 0.03796256537107007}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5427509293680297, "obj2": 0.2594402660548079}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( Min( RRS ,ACS ) / ACS )", "choosing": "( ( ( DS - MUM ) + ( MUR + RMSe ) ) * ( Min( ( RCSe - RRSe ) ,MLU ) - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.9312267657992565, "obj2": 0.0304224082918091}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ( ARS / Max( ( RRS - CRS ),ARS ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - ( ( ( ( MUR + Max( DS,MUM ) ) / RMSe ) * ( MUM - ( MUC / ( MLU / CS ) ) ) ) * RRSe ) )", "obj1": 0.8122676579925651, "obj2": 0.08611045538712618}, {"determining": "( ( ( AMS * Max( ( Max( Const,ACS ) * PN ),Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( Min( DS ,CS ) / MUC ) ,RRSe ) + ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.15985130111524162, "obj2": 0.6761297629934762}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) - Max( Max( Min( ( ( Min( Min( RMSe ,DS ) ,RRSe ) / RRSe ) / ( MUM - Max( MUM,( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.4851301115241636, "obj2": 0.3022943679833187}, {"determining": "( Max( DDR,( Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( RRSe / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.0724907063197026, "obj2": 0.7921940792813641}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.3847583643122677, "obj2": 0.39851822517924346}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.14869888475836432, "obj2": 0.6930298220370273}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / RRSe ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5055762081784386, "obj2": 0.2941651214328174}, {"determining": "( ( ARS / Max( FirstVNF_CPU,( Max( ( Max( ( BR / FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,MDR ) ) ) ) - Max( Max( AMS,( ARS - Const ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MLU ,RMSe ) - ( ( ( RCSe - ( RMSe / ( RCSe + RCSe ) ) ) - RCSe ) * CS ) ) * ( ( RMSe - ( ( CS * MLU ) + DS ) ) * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.9888475836431226, "obj2": 0.004664570156316785}, {"determining": "( Max( DDR,Min( Const ,MDR ) ) * ( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( RCSe + ( ( RCSe - RCSe ) * Max( Min( MUC ,CS ),Max( DS,DS ) ) ) ),MUM ) * MUM ) - ( ( Min( ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.8605947955390335, "obj2": 0.05461582371455896}], "33": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Min( ( ARS - FirstVNF_CPU_Server ) ,ARS ) ) - Max( FirstVNF_CPU,( Min( CRS ,FirstVNF_CPU ) - Max( Const,PN ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Max( Max( Min( ( DS / ( RRSe * MUR ) ) ,CS ),( ( ( CS + ( ( RMSe + MUC ) / ( MUR - MUC ) ) ) + RMSe ) - MUR ) ),( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + ( ( FirstVNF_RAM * Max( AMS,FirstVNF_Mem_Server ) ) / ACS ) ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( FirstVNF_RAM_Server,MRS ) - Max( PN,DDR ) ) ) ) )", "choosing": "( ( ( ( RRSe - MLU ) / MUC ) * Min( RCSe ,MUC ) ) - Max( Max( Min( ( ( ( MUR * MUC ) - ( RMSe / ( RCSe + RCSe ) ) ) - RCSe ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,( CS * ( ( DS + MLU ) / MLU ) ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,( ( ACS + FirstVNF_Mem ) - FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server + Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( ( CS * MUC ) ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.41821561338289964, "obj2": 0.3458091573078627}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.30855018587360594, "obj2": 0.4986952062105733}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( FirstVNF_CPU / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( FirstVNF_CPU / ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( Min( MUM ,MLU ) - Max( DS,( ( MUM + MUC ) + DS ) ) ) )", "obj1": 0.2342007434944238, "obj2": 0.580582254917029}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3903345724907063, "obj2": 0.37215094021678674}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.30297397769516726, "obj2": 0.5135329834664367}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39625380626506}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2137546468401487, "obj2": 0.6072648924135868}, {"determining": "( Min( RRS ,ACS ) / ACS )", "choosing": "( ( ( DS - MUM ) + ( MUR + RMSe ) ) * ( Min( ( RCSe - RRSe ) ,MLU ) - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.9312267657992565, "obj2": 0.0304224082918091}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1212845783719694}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.9107806691449815, "obj2": 0.03796256537107007}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Min( ( FirstVNF_CPU + BR ) ,( MDR / ARS ) ) * ACS ) ) ) ) - Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_Mem / ( Const / ( ( FirstVNF_CPU_Server / BR ) * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( ( ( RCSe + RCSe ) * Max( Min( ( DS * RCSe ) ,CS ),Max( DS,DS ) ) ) * CS ) ) * Min( MUC ,RRSe ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.9609665427509294, "obj2": 0.015842528164686}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ARS ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( RCSe / DS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.7360594795539034, "obj2": 0.10502418179085263}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6096654275092936, "obj2": 0.21720325359963913}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( Max( MUM,MUC ) + DS ) ,MUR ) )", "obj1": 0.6003717472118959, "obj2": 0.23136606678000973}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Max( ( ARS * FirstVNF_RAM ),( RRS / ACS ) ) / ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * Min( CS ,RMSe ) ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( MUC / ( MUR * DS ) ) ,CS ),( ( ( CS - ( MUC / ( RCSe * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5185873605947955, "obj2": 0.2780187903122472}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),RRS ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUR ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.15985130111524162, "obj2": 0.6698050433205419}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const / ( PN * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( RCSe ,DS ) + RMSe ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.10966542750929369, "obj2": 0.730036871050913}, {"determining": "( ( ACS + FirstVNF_Mem_Server ) / ACS )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.47769516728624534, "obj2": 0.30544029555973967}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / ( Min( MUC ,RMSe ) - ( MUR * CS ) ) ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.18661743620864724}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7497478672220135}, {"determining": "( ( ARS / ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) * Min( ( ( RCSe - RMSe ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.6654275092936803, "obj2": 0.1542495052238711}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( Max( PN,( BR + ( ( FirstVNF_Mem / ACS ) + ACS ) ) ) / ( ( Max( AMS,Const ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) )", "choosing": "( Max( ( DS * ( ( MUC - RMSe ) * ( CS + ( Max( ( RCSe + DS ),( MLU * MUC ) ) - RCSe ) ) ) ),( ( MUM + MUC ) / Max( Min( CS ,( ( RCSe - MLU ) * MUC ) ),MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.7286245353159851, "obj2": 0.10822142238367227}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( DDR,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05947955390334572, "obj2": 0.8098667876856379}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.14869888475836432, "obj2": 0.6930298220370273}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / RRSe ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5055762081784386, "obj2": 0.2941651214328174}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,( ( FirstVNF_CPU - PN ) + Const ) ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( FirstVNF_CPU / AMS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( MUC ,( ( ( CS / MUM ) - DS ) * MUC ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.5371747211895911, "obj2": 0.2708729973540335}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,RCSe ) ) )", "obj1": 0.1171003717472119, "obj2": 0.7216841945270298}, {"determining": "( ( ARS / ( ( Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( Max( RMSe,RMSe ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.09107806691449814, "obj2": 0.7479261345094702}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( ( ( CS + ( Min( DS ,MUC ) / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.6319702602230484, "obj2": 0.20562009892254252}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.5817843866171004, "obj2": 0.24408201076709146}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5427509293680297, "obj2": 0.2594402660548079}, {"determining": "( ACS / ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( RRSe - Max( DS,( ( ( ( RCSe - MUC ) * Max( DS,RMSe ) ) + MUC ) + DS ) ) ) )", "obj1": 0.1579925650557621, "obj2": 0.6810439451174962}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,PN ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) - ( CS - ( DS * ( ( DS / RCSe ) / ( Min( MUC ,RMSe ) - ( MUR * CS ) ) ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.1964888766990807}], "34": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Min( ( ARS - FirstVNF_CPU_Server ) ,ARS ) ) - Max( FirstVNF_CPU,( Min( CRS ,FirstVNF_CPU ) - Max( Const,PN ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Max( Max( Min( ( DS / ( RRSe * MUR ) ) ,CS ),( ( ( CS + ( ( RMSe + MUC ) / ( MUR - MUC ) ) ) + RMSe ) - MUR ) ),( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Min( ( ARS - FirstVNF_CPU_Server ) ,ARS ) ) - Max( FirstVNF_CPU,( Min( CRS ,FirstVNF_CPU ) - Max( Const,PN ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Max( Max( Min( ( DS / ( RRSe * MUR ) ) ,CS ),( ( ( CS + ( ( RMSe + MUC ) / ( MUR - MUC ) ) ) + RMSe ) - MUR ) ),( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.30855018587360594, "obj2": 0.4986952062105733}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - ( BR + FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / Min( Const ,DDR ) ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / DS ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + ( ( Min( RRSe ,Min( RCSe ,DS ) ) - Max( ( RMSe / Min( RRSe ,MLU ) ),( DS / ( RRSe - RMSe ) ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.22676579925650558, "obj2": 0.575610931880675}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3903345724907063, "obj2": 0.37215094021678674}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2137546468401487, "obj2": 0.6072648924135868}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,FirstVNF_CPU_Server ) - ( FirstVNF_CPU / ( FirstVNF_RAM * MDR ) ) ),PN ) ) + MDR ) ) - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) ) ) + MDR ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * Max( Max( ( DS + DS ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUR * MUC ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),Min( MLU ,MUC ) ) )", "obj1": 0.5817843866171004, "obj2": 0.24408201076709146}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / ( Min( MUC ,RMSe ) - ( MUR * CS ) ) ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.18661743620864724}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ACS / ( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( Const / ( Min( Min( AMS ,ARS ) ,FirstVNF_RAM ) + MDR ) ) ) - ( FirstVNF_CPU / ( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RRSe ) * ( RRSe + ( Max( MUR,MUR ) / CS ) ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( RMSe - MUM ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6184449155602029}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.41821561338289964, "obj2": 0.3458091573078627}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.6654275092936803, "obj2": 0.1525578748921248}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( Max( MUM,MUC ) + DS ) ,MUR ) )", "obj1": 0.6003717472118959, "obj2": 0.23136606678000973}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.4144981412639405, "obj2": 0.3565759199462166}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39625380626506}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( DDR,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05947955390334572, "obj2": 0.8098667876856379}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1212845783719694}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ARS ),PN ) ) + Max( ( Max( Const,PN ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * Max( MUM,MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.4516728624535316, "obj2": 0.3353053502188656}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( AMS,ACS ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,MUC ) + DS ) ) - ( Min( ( ( MUR * MUC ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.47769516728624534, "obj2": 0.30544029555973967}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,( ( FirstVNF_CPU - PN ) + Const ) ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( FirstVNF_CPU / AMS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( MUC ,( ( ( CS / MUM ) - DS ) * MUC ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.5371747211895911, "obj2": 0.2708729973540335}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( Min( ( RCSe * MLU ) ,Min( RMSe ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6468401486988847, "obj2": 0.19500778717196574}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.9107806691449815, "obj2": 0.03796256537107007}, {"determining": "( ( ACS + FirstVNF_Mem_Server ) / ACS )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6446514756879373}, {"determining": "( ACS / Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( ( DS - MUM ) + ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) * ( RRSe - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7638745708811435}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / RRSe ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5055762081784386, "obj2": 0.2941651214328174}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( Max( PN,( BR + ( ( FirstVNF_Mem / ACS ) + ACS ) ) ) / ( ( Max( AMS,Const ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) )", "choosing": "( Max( ( DS * ( ( MUC - RMSe ) * ( CS + ( Max( ( RCSe + DS ),( MLU * MUC ) ) - RCSe ) ) ) ),( ( MUM + MUC ) / Max( Min( CS ,( ( RCSe - MLU ) * MUC ) ),MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.7286245353159851, "obj2": 0.10822142238367227}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( ( FirstVNF_CPU_Server / BR ) * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( ( ( RCSe + RCSe ) * Max( Min( MUC ,CS ),Max( DS,DS ) ) ) * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.9702602230483272, "obj2": 0.011027067508288158}, {"determining": "( ( ACS + ( ( FirstVNF_CPU - CRS ) + FirstVNF_CPU_Server ) ) / ACS )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + MUC ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - ( ( MUC - DS ) + CS ) )", "obj1": 0.17286245353159851, "obj2": 0.6696002543397486}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,( Max( MUM,MUC ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4053767348463305}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - ARS ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Min( DS ,MUC ) + ( CS * RCSe ) ) * ( Min( MUM ,MLU ) - Max( DS,( ( MUM + MUC ) + DS ) ) ) )", "obj1": 0.6691449814126395, "obj2": 0.14372600944564243}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) - Min( ( DS + DS ) ,Max( MUM,RCSe ) ) )", "obj1": 0.13568773234200743, "obj2": 0.6987900292657673}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5427509293680297, "obj2": 0.2594402660548079}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.09479553903345725, "obj2": 0.7386549362105802}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Max( ( ARS * FirstVNF_RAM ),( RRS / ACS ) ) / ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * Min( CS ,RMSe ) ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( MUC / ( MUR * DS ) ) ,CS ),( ( ( CS - ( MUC / ( RCSe * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5185873605947955, "obj2": 0.2780187903122472}, {"determining": "( ( ARS / ( ( Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( FirstVNF_RAM,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) * Min( ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( RRSe / MUM ) ) ,( ( ( RCSe - RRSe ) + MUC ) - MUC ) ) )", "obj1": 0.7453531598513011, "obj2": 0.09866150108142088}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Min( ( FirstVNF_CPU + BR ) ,( MDR / ARS ) ) * ACS ) ) ) ) - Max( ( AMS / FirstVNF_CPU_Server ),( FirstVNF_Mem / ( Const / ( ( FirstVNF_CPU_Server / BR ) * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( ( ( RCSe + RCSe ) * Max( Min( ( DS * RCSe ) ,CS ),Max( DS,DS ) ) ) * CS ) ) * Min( MUC ,RRSe ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.9609665427509294, "obj2": 0.015842528164686}], "35": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Min( ( ARS - FirstVNF_CPU_Server ) ,ARS ) ) - Max( FirstVNF_CPU,( Min( CRS ,FirstVNF_CPU ) - Max( Const,PN ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Max( Max( Min( ( DS / ( RRSe * MUR ) ) ,CS ),( ( ( CS + ( ( RMSe + MUC ) / ( MUR - MUC ) ) ) + RMSe ) - MUR ) ),( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Min( ( ARS - FirstVNF_CPU_Server ) ,ARS ) ) - Max( FirstVNF_CPU,( Min( CRS ,FirstVNF_CPU ) - Max( Const,PN ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Max( Max( Min( ( DS / ( RRSe * MUR ) ) ,CS ),( ( ( CS + ( ( RMSe + MUC ) / ( MUR - MUC ) ) ) + RMSe ) - MUR ) ),( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.30855018587360594, "obj2": 0.4986952062105733}, {"determining": "( ( ARS - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_Mem,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,MUC ) + DS ) ) - ( Min( ( ( ( CS * MUM ) * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RCSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.6115241635687733, "obj2": 0.2162731185431835}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( AMS,ACS ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,MUC ) + DS ) ) - ( Min( ( ( MUR * MUC ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.47769516728624534, "obj2": 0.30544029555973967}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( Min( ( RCSe * MLU ) ,Min( RMSe ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6468401486988847, "obj2": 0.19500778717196574}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2137546468401487, "obj2": 0.6072648924135868}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / RRSe ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5055762081784386, "obj2": 0.2941651214328174}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1212845783719694}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.5780669144981413, "obj2": 0.23543619457001433}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - ( BR + FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / Min( Const ,DDR ) ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / DS ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + ( ( Min( RRSe ,Min( RCSe ,DS ) ) - Max( ( RMSe / Min( RRSe ,MLU ) ),( DS / ( RRSe - RMSe ) ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.22676579925650558, "obj2": 0.575610931880675}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( AMS,( AMS / ARS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - ( CS - ( DS * ( ( DS / RCSe ) / ( Min( MUC ,RMSe ) - ( MUR * CS ) ) ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.18661743620864724}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3903345724907063, "obj2": 0.37215094021678674}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + Max( RRSe,MLU ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5399426640855522}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.9405204460966543, "obj2": 0.032250796226935684}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Min( MUC ,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),( ( MUM - RMSe ) * ( ( RMSe - MLU ) + Min( MUC ,DS ) ) ) ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6638810694220575}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ACS / Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( ( DS - MUM ) + ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) * ( RRSe - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7638745708811435}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,( Max( ( ARS * FirstVNF_RAM ),( RRS / ACS ) ) / ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * Min( CS ,RMSe ) ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( MUC / ( MUR * DS ) ) ,CS ),( ( ( CS - ( MUC / ( RCSe * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5185873605947955, "obj2": 0.2780187903122472}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6248895639307446}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( Max( PN,( BR + ( ( FirstVNF_Mem / ACS ) + ACS ) ) ) / ( ( Max( AMS,Const ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) )", "choosing": "( Max( ( DS * ( ( MUC - RMSe ) * ( CS + ( Max( ( RCSe + DS ),( MLU * MUC ) ) - RCSe ) ) ) ),( ( MUM + MUC ) / Max( Min( CS ,( ( RCSe - MLU ) * MUC ) ),MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.7286245353159851, "obj2": 0.10822142238367227}, {"determining": "( BR / ( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * MUC ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.8475836431226765, "obj2": 0.06537868425083182}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( Max( MUM,MUC ) + DS ) ,MUR ) )", "obj1": 0.6003717472118959, "obj2": 0.23136606678000973}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Max( PN,PN ) ) / Min( Max( BR,PN ) ,MRS ) ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) - Min( ( DS + DS ) ,Max( MUM,RCSe ) ) )", "obj1": 0.120817843866171, "obj2": 0.7141281760937743}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7295735370332798}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,Max( BR,( ( ACS + ( RRS - FirstVNF_RAM_Server ) ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( DS ,MUC ) / ( ( ( Max( ( RRSe / Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - RMSe ) + DS ) * ( ( RCSe / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) )", "obj1": 0.07434944237918216, "obj2": 0.794701492958133}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( DDR,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05947955390334572, "obj2": 0.8098667876856379}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + Max( ( RCSe / MUC ),Min( RRSe ,RMSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.9107806691449815, "obj2": 0.03796256537107007}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( CS ,RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.6654275092936803, "obj2": 0.1525578748921248}, {"determining": "( ( ACS + FirstVNF_Mem_Server ) / ACS )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.1524163568773234, "obj2": 0.679551781498538}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.2379182156133829, "obj2": 0.5689080466641038}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,( Const / ( FirstVNF_RAM * MDR ) ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / MUC ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8215613382899628, "obj2": 0.08070958197561212}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,( ( FirstVNF_CPU - PN ) + Const ) ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( FirstVNF_CPU / AMS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( MUC ,( ( ( CS / MUM ) - DS ) * MUC ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.5371747211895911, "obj2": 0.2708729973540335}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.845724907063197, "obj2": 0.0668645986319199}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39625380626506}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - RRSe ) ) + ( Min( MUC ,( Max( MUM,MUC ) + DS ) ) - ( Min( ( ( MUR * MUC ) / MUC ) ,CS ) * RCSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.8977695167286245, "obj2": 0.04130951468346197}], "36": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_Mem,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS / ( ( Max( Max( FirstVNF_RAM,FirstVNF_Mem_Server ),FirstVNF_RAM ) - Min( ( ARS - FirstVNF_CPU_Server ) ,ARS ) ) - Max( FirstVNF_CPU,( Min( CRS ,FirstVNF_CPU ) - Max( Const,PN ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Max( Max( Min( ( DS / ( RRSe * MUR ) ) ,CS ),( ( ( CS + ( ( RMSe + MUC ) / ( MUR - MUC ) ) ) + RMSe ) - MUR ) ),( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( AMS,ACS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.4144981412639405, "obj2": 0.3565759199462166}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.30855018587360594, "obj2": 0.4986952062105733}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.2137546468401487, "obj2": 0.6072648924135868}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6431226765799256, "obj2": 0.19401381004887963}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6248895639307446}, {"determining": "( ACS / Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( ( DS - MUM ) + ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) * ( RRSe - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7638745708811435}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3903345724907063, "obj2": 0.37215094021678674}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7295735370332798}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.7026022304832714, "obj2": 0.12055979619816778}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( Max( PN,( BR + ( ( FirstVNF_Mem / ACS ) + ACS ) ) ) / ( ( Max( AMS,Const ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) )", "choosing": "( Max( ( DS * ( ( MUC - RMSe ) * ( CS + ( Max( ( RCSe + DS ),( MLU * MUC ) ) - RCSe ) ) ) ),( ( MUM + MUC ) / Max( Min( CS ,( ( RCSe - MLU ) * MUC ) ),MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.7286245353159851, "obj2": 0.10822142238367227}, {"determining": "( Max( Max( AMS,( ( RRS * MRS ) / ARS ) ),FirstVNF_RAM ) - ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,AMS ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ),PN ) ) + MDR ) ) )", "choosing": "( ( Min( ( DS + RCSe ) ,MUR ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( Max( CS,( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + ( MUC / RCSe ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.16861274453638275}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - ( BR + FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / Min( Const ,DDR ) ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / DS ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + ( ( Min( RRSe ,Min( RCSe ,DS ) ) - Max( ( RMSe / Min( RRSe ,MLU ) ),( DS / ( RRSe - RMSe ) ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.22676579925650558, "obj2": 0.575610931880675}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + Max( RRSe,MLU ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5399426640855522}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( ( ( FirstVNF_CPU_Server / ( Const / ( FirstVNF_RAM * MDR ) ) ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Max( ( RCSe + ( ( RCSe + MUC ) * Max( Min( ( DS * RCSe ) ,CS ),Max( DS,DS ) ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.9814126394052045, "obj2": 0.020224194806903933}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( CS * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.7472118959107806, "obj2": 0.09733285773694758}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39625380626506}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.33643122676579923, "obj2": 0.4396412117644295}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( DDR / Min( RRS ,Min( RRS ,FirstVNF_RAM ) ) ),Max( ( Max( Const,RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * Min( MUR ,MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,MUC ),( CS - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),( ( RMSe - MUM ) * ( MUR * ( RMSe / RMSe ) ) ) ) ) ),( ( MUM - MUM ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6877535586335759}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / FirstVNF_CPU_Server ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( DS / DS ) ) ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( ( ( Min( ( DS * RCSe ) ,CS ) + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.6245353159851301, "obj2": 0.21350452456072339}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,( ( FirstVNF_CPU - PN ) + Const ) ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( FirstVNF_CPU / AMS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( MUC ,( ( ( CS / MUM ) - DS ) * MUC ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.5371747211895911, "obj2": 0.2708729973540335}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( DDR,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,CRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) - Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,CS ),( Max( ( CS + ( ( MLU + DS ) / ( MUR * MUC ) ) ),RMSe ) - MUR ) ),( MLU / RMSe ) ) )", "obj1": 0.8085501858736059, "obj2": 0.08738568350904692}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( FirstVNF_CPU,( ( Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.5780669144981413, "obj2": 0.23543619457001433}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,Max( MDR,ARS ) ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( AMS,ACS ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,MUC ) + DS ) ) - ( Min( ( ( RCSe * MUC ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( MUR - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.36988847583643125, "obj2": 0.40635901751137954}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5892193308550185, "obj2": 0.21930664159869107}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( Min( DS ,RMSe ) ,RRSe ) )", "obj1": 0.949814126394052, "obj2": 0.02467016619191343}, {"determining": "( ( Max( ( Max( ( BR + FirstVNF_RAM_Server ),DDR ) / Const ),FirstVNF_Mem_Server ) - Max( PN,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) / Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( Max( RMSe,RMSe ) + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.13197026022304834, "obj2": 0.7127244331979157}, {"determining": "( ( ARS / ( AMS / ACS ) ) - Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( Min( MUC ,MUR ) ,MLU ) / Max( MLU,Min( MUM ,Min( ( Max( CS,DS ) / Max( RMSe,MUR ) ) ,( ( DS * MUC ) * RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( DS - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.570631970260223, "obj2": 0.24578966902788615}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8587360594795539, "obj2": 0.05558723925770502}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),Min( ( Min( ARS ,FirstVNF_RAM ) + MDR ) ,AMS ) ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6691449814126395, "obj2": 0.1448089826939087}, {"determining": "( ( ACS + FirstVNF_Mem_Server ) / ACS )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.1524163568773234, "obj2": 0.679551781498538}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / RRSe ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5055762081784386, "obj2": 0.2941651214328174}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,Max( BR,( ( ACS + ( RRS - FirstVNF_RAM_Server ) ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( DS ,MUC ) / ( ( ( Max( ( RRSe / Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - RMSe ) + DS ) * ( ( RCSe / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) )", "obj1": 0.07434944237918216, "obj2": 0.794701492958133}, {"determining": "( ( ARS / ( ( ( FirstVNF_RAM_Server - Min( CRS ,ACS ) ) - Max( PN,PN ) ) + DDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RMSe ) - ( MUR * ( DS - Max( ( Max( DS,CS ) + MUR ),CS ) ) ) ) * Min( ( ( ( ( RRSe - RCSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.9888475836431226, "obj2": 0.0040941870451296734}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( ( ( Max( ( FirstVNF_Mem * ( CRS + FirstVNF_Mem ) ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),( RRS + FirstVNF_RAM_Server ) ) ) + MDR ),PN ) ) )", "choosing": "( ( ( CS - MUR ) - MLU ) * ( ( DS * ( ( DS / MUM ) / MUR ) ) / MUM ) )", "obj1": 0.9275092936802974, "obj2": 0.033102778226100506}], "37": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( Const - ( FirstVNF_Mem / Const ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( DS + Max( MUM,( Min( CS ,MUM ) + MUC ) ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * MUR ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( DS * Min( Min( MUC ,MUM ) ,RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_Mem,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,( ( FirstVNF_CPU - PN ) + Const ) ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( FirstVNF_CPU / AMS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( MUC ,( ( ( CS / MUM ) - DS ) * MUC ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.5371747211895911, "obj2": 0.2708729973540335}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.30855018587360594, "obj2": 0.4986952062105733}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( ARS ,FirstVNF_RAM ) + MDR ) ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.8011152416356877, "obj2": 0.07862513529924799}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.48141263940520446, "obj2": 0.29261028880802586}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6248895639307446}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( Max( AMS,FirstVNF_CPU ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.21189591078066913, "obj2": 0.598068200675221}, {"determining": "( ( Max( ( Max( ( BR + FirstVNF_RAM_Server ),DDR ) / Const ),FirstVNF_Mem_Server ) - Max( PN,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) / Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( Max( RMSe,RMSe ) + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.13197026022304834, "obj2": 0.7127244331979157}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( ARS / ( Max( ( Min( RRS ,ARS ) * Min( ARS ,FirstVNF_RAM ) ),( ( DDR - Const ) + FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC + RRSe ) / CS ) - Min( ( ( ( MUC / RMSe ) + ( ( MLU / DS ) / ( RCSe * MUC ) ) ) * ( RRSe - Min( Min( MUC ,Max( Max( MUR,RMSe ),MUR ) ) ,MUC ) ) ) ,( DS + DS ) ) )", "obj1": 0.45539033457249073, "obj2": 0.3232020898983236}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / Max( Min( Max( Const,RRS ) ,Min( FirstVNF_Mem ,DDR ) ),PN ) ) ) ) ) / ACS )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / Max( RCSe,( Min( RCSe ,MUC ) / MLU ) ) ) ,RRSe ) - ( Min( Max( MUM,MUC ) ,RRSe ) * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.3903345724907063, "obj2": 0.3719892500986039}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) / Max( AMS,ACS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) ) ,MUR ) )", "obj1": 0.44052044609665425, "obj2": 0.34075106978737807}, {"determining": "( Max( Max( AMS,ACS ),FirstVNF_RAM ) - ( Max( PN,( BR + ( ( FirstVNF_Mem / ACS ) + ACS ) ) ) / ( ( Max( AMS,Const ) - Max( ( Max( Const,RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) )", "choosing": "( Max( ( DS * ( ( MUC - RMSe ) * ( CS + ( Max( ( RCSe + DS ),( MLU * MUC ) ) - RCSe ) ) ) ),( ( MUM + MUC ) / Max( Min( CS ,( ( RCSe - MLU ) * MUC ) ),MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.7286245353159851, "obj2": 0.10822142238367227}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.7026022304832714, "obj2": 0.12055979619816778}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.845724907063197, "obj2": 0.0628740332793587}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7295735370332798}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - ( BR + FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / Min( Const ,DDR ) ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / DS ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + ( ( Min( RRSe ,Min( RCSe ,DS ) ) - Max( ( RMSe / Min( RRSe ,MLU ) ),( DS / ( RRSe - RMSe ) ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.22676579925650558, "obj2": 0.575610931880675}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( ( ( Max( ( FirstVNF_Mem * ( CRS + FirstVNF_Mem ) ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),( RRS + FirstVNF_RAM_Server ) ) ) + MDR ),PN ) ) )", "choosing": "( ( ( CS - MUR ) - MLU ) * ( ( DS * ( ( DS / MUM ) / MUR ) ) / MUM ) )", "obj1": 0.9275092936802974, "obj2": 0.033102778226100506}, {"determining": "( BR / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUC * RMSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( MUR - ( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ) * RMSe ) ) ),( Max( Min( ( ( DS + ( RRSe * MUR ) ) * ( ( RMSe - CS ) * ( RCSe + DS ) ) ) ,RRSe ),RMSe ) + DS ) ) )", "obj1": 0.275092936802974, "obj2": 0.5460880846252453}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( ( Min( ( MRS - FirstVNF_RAM ) ,FirstVNF_CPU_Server ) + ACS ) / ACS )", "choosing": "( ( ( Min( ( Max( MUM,( Min( MLU ,MUM ) + MUC ) ) + DS ) ,MUC ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,Max( ( RCSe + ( CS * ( RCSe * RCSe ) ) ),MUM ) ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.17472118959107807, "obj2": 0.6750947110263182}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.47769516728624534, "obj2": 0.3037128918946254}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.33643122676579923, "obj2": 0.4396412117644295}, {"determining": "( ( ( ( Const + ( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( FirstVNF_CPU,( Max( ( Max( ( BR / ARS ),Max( FirstVNF_CPU,DDR ) ) / Const ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) - Max( Max( Min( ( ( MUR * RRSe ) / MUC ) ,MUC ),( ( RCSe / RCSe ) - Max( ( CS + ( ( MLU + MUM ) / ( MUC * RCSe ) ) ),RMSe ) ) ),( DS + Max( MUM,RMSe ) ) ) )", "obj1": 0.25464684014869887, "obj2": 0.5589647724773421}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,( Max( MUM,( Min( CS ,MUM ) + MUC ) ) + DS ) ) - ( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) * RCSe ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.7472118959107806, "obj2": 0.0963361710320042}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / DS ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.06133828996282528, "obj2": 0.8093063393475116}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( Max( ( RCSe + ( ( RCSe + RCSe ) * Max( Min( ( DS * RCSe ) ,CS ),( ( RRSe - RCSe ) * ( CS * MUR ) ) ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.8903345724907064, "obj2": 0.041533104860858656}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39625380626506}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,Max( BR,( ( ACS + ( RRS - FirstVNF_RAM_Server ) ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( DS ,MUC ) / ( ( ( Max( ( RRSe / Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - RMSe ) + DS ) * ( ( RCSe / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) )", "obj1": 0.07434944237918216, "obj2": 0.794701492958133}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( AMS,ACS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.4144981412639405, "obj2": 0.3565759199462166}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / FirstVNF_CPU_Server ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( MUM - ( MUM * ( DS / DS ) ) ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Max( Min( ( ( MUR * RRSe ) / MUC ) ,CS ),( ( ( Min( ( DS * RCSe ) ,CS ) + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.6245353159851301, "obj2": 0.21350452456072339}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.2379182156133829, "obj2": 0.563861591562739}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( ( FirstVNF_CPU_Server / ( Const / ( FirstVNF_RAM * MDR ) ) ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server * CRS ) )", "choosing": "( ( Max( ( RCSe + ( ( RCSe + MUC ) * Max( Min( ( DS * RCSe ) ,CS ),Max( DS,DS ) ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.9814126394052045, "obj2": 0.020224194806903933}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( AMS + MDR ) ,AMS ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( AMS,ACS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3560909502389342}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6561338289962825, "obj2": 0.1843979252579168}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( DDR / Min( RRS ,Min( RRS ,FirstVNF_RAM ) ) ),Max( ( Max( Const,RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * Min( MUR ,MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,MUC ),( CS - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),( ( RMSe - MUM ) * ( MUR * ( RMSe / RMSe ) ) ) ) ) ),( ( MUM - MUM ) + DS ) ) )", "obj1": 0.1412639405204461, "obj2": 0.6877535586335759}, {"determining": "( ( ARS / ( AMS / ACS ) ) - Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( Min( MUC ,MUR ) ,MLU ) / Max( MLU,Min( MUM ,Min( ( Max( CS,DS ) / Max( RMSe,MUR ) ) ,( ( DS * MUC ) * RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( DS - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.570631970260223, "obj2": 0.24578966902788615}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5910780669144982, "obj2": 0.21567522469043712}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( ACS / Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( ( DS - MUM ) + ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) * ( RRSe - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7638745708811435}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( ( Const / ( Min( BR ,FirstVNF_RAM ) + MDR ) ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Max( FirstVNF_CPU,( ( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + Max( RRSe,MLU ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5399426640855522}], "38": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + MUC ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( Const - ( FirstVNF_Mem / Const ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( DS + Max( MUM,( Min( CS ,MUM ) + MUC ) ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * MUR ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( DS * Min( Min( MUC ,MUM ) ,RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.845724907063197, "obj2": 0.0628740332793587}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - PN ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( RCSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.6561338289962825, "obj2": 0.1843979252579168}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5910780669144982, "obj2": 0.21567522469043712}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) - MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( RRS,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU + ( RMSe / MUC ) ) * MLU ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6152416356877324, "obj2": 0.19527899371672075}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),( Const / ( Max( Max( AMS,ACS ),CRS ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( MUC / MUM ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( MUM / MUC ) ,MUR ) )", "obj1": 0.26579925650557623, "obj2": 0.5238688295906676}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( AMS / FirstVNF_CPU ) ),PN ) ) + MDR ) ) - ( ( RRS - ( ( FirstVNF_Mem_Server / CRS ) / Const ) ) + ACS ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUC * MUR ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / DS ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,( MLU - Min( CS ,( RMSe - MLU ) ) ) ) )", "obj1": 0.6691449814126395, "obj2": 0.14593633309312198}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) )", "obj1": 0.31226765799256506, "obj2": 0.48746480089327254}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( ARS / ( AMS / ACS ) ) - Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( Min( MUC ,MUR ) ,MLU ) / Max( MLU,Min( MUM ,Min( ( Max( CS,DS ) / Max( RMSe,MUR ) ) ,( ( DS * MUC ) * RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( DS - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.570631970260223, "obj2": 0.24578966902788615}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7295735370332798}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( AMS,( ( FirstVNF_CPU - PN ) + Const ) ),( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( FirstVNF_CPU / AMS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( MUC ,( ( ( CS / MUM ) - DS ) * MUC ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.5371747211895911, "obj2": 0.2708729973540335}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( Max( AMS,FirstVNF_CPU ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.21189591078066913, "obj2": 0.598068200675221}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,MUC ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.2527881040892193, "obj2": 0.5574046053477814}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ( Const - PN ) / ( AMS + ACS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( ( MLU - Max( MLU,DS ) ) / ( Min( MUC ,MUC ) - RRSe ) ) ) * MUC ) ) ) - Min( ( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) ) ,MUR ) )", "obj1": 0.5185873605947955, "obj2": 0.28694983784122635}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( ARS ,FirstVNF_RAM ) + MDR ) ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.8011152416356877, "obj2": 0.07862513529924799}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( Max( ( Max( ( BR + FirstVNF_RAM_Server ),DDR ) / Const ),FirstVNF_Mem_Server ) - Max( PN,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) / Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( Max( RMSe,RMSe ) + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.13197026022304834, "obj2": 0.7127244331979157}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.7026022304832714, "obj2": 0.12055979619816778}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( Max( Min( ( MUC / ( MUR * RRSe ) ) ,Max( RRSe,MLU ) ),( MUR - Max( RMSe,RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) ) ) - Max( Max( Min( ( ( Min( ( MUM + RMSe ) ,RRSe ) * RRSe ) / MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.9776951672862454, "obj2": 0.009953738134208074}, {"determining": "( ( ( ( ( Max( PN,MRS ) / AMS ) / MRS ) + BR ) - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - CRS ) )", "choosing": "( ( MUM - ( Max( RRSe,( Max( ( ( RCSe / RCSe ) / ( MUR * CS ) ),RCSe ) * ( RRSe + MUR ) ) ) - ( RCSe / MUR ) ) ) - ( ( Min( MUC ,RMSe ) - ( RRSe / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6488567102479748}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * CS ) + ( CS * RCSe ) ) * ( ( ( MUM - ( MUR * Min( DS ,Max( DS,Min( MUC ,RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( DS,( Max( MUM,MUC ) + DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.13366106467423813}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.33643122676579923, "obj2": 0.4396412117644295}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6248895639307446}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( ( ( Max( ( FirstVNF_Mem * ( CRS + FirstVNF_Mem ) ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),( RRS + FirstVNF_RAM_Server ) ) ) + MDR ),PN ) ) )", "choosing": "( ( ( CS - MUR ) - MLU ) * ( ( DS * ( ( DS / MUM ) / MUR ) ) / MUM ) )", "obj1": 0.9275092936802974, "obj2": 0.033102778226100506}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / DS ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.06133828996282528, "obj2": 0.8093063393475116}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,Max( BR,( ( ACS + ( RRS - FirstVNF_RAM_Server ) ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( DS ,MUC ) / ( ( ( Max( ( RRSe / Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - RMSe ) + DS ) * ( ( RCSe / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) )", "obj1": 0.07434944237918216, "obj2": 0.794701492958133}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( ( RRSe / Max( MUR,RMSe ) ) + DS ) ,RMSe ) )", "obj1": 0.9535315985130112, "obj2": 0.022490979159965844}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39625380626506}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + Min( PN ,FirstVNF_RAM ) ) ,AMS ) / Max( Min( Max( Const,RRS ) ,Min( FirstVNF_Mem ,DDR ) ),PN ) ) ) ) ) / ACS )", "choosing": "( Min( ( DS + DS ) ,MUR ) - ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * RRSe ) / Max( RCSe,( Min( RCSe ,MUC ) / MLU ) ) ) ,RRSe ) - ( Min( Max( MUM,MUC ) ,RRSe ) * CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.3903345724907063, "obj2": 0.3719892500986039}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.47769516728624534, "obj2": 0.3037128918946254}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.2379182156133829, "obj2": 0.563861591562739}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,Max( FirstVNF_Mem,RRS ) ) / ( Max( Const,FirstVNF_RAM ) - FirstVNF_RAM ) ) ) ) ) / Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR - ( ( ( Max( MUC,( MUC * MUR ) ) / ( CS * DS ) ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - ( DS + RCSe ) )", "obj1": 0.46654275092936803, "obj2": 0.32213005391871313}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.7973977695167286, "obj2": 0.08207708319500057}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.48698884758364314, "obj2": 0.2886019367520787}, {"determining": "( ACS / Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( ( DS - MUM ) + ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) * ( RRSe - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7638745708811435}, {"determining": "( ( AMS / Const ) - ( ( Const / ( FirstVNF_RAM * MDR ) ) / ( Max( Min( MRS ,FirstVNF_RAM ),DDR ) / PN ) ) )", "choosing": "( Min( MUC ,Min( ( MUC * ( MUC / RRSe ) ) ,RRSe ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.18773234200743494, "obj2": 0.62883738417059}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( ( ACS + FirstVNF_Mem_Server ) / Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + CS ) * RRSe ) / Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3996282527881041, "obj2": 0.36809758908939366}, {"determining": "( ( ARS / ( ( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),FirstVNF_Mem_Server ) - Max( PN,PN ) ) + MDR ) ) - ( FirstVNF_Mem / ( Const + ( ( CRS + FirstVNF_CPU_Server ) * MDR ) ) ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.30855018587360594, "obj2": 0.4986952062105733}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.2211895910780669, "obj2": 0.5837167592357807}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM ,ARS ) + MDR ) ),FirstVNF_Mem_Server ) + Max( CRS,Max( ARS,FirstVNF_CPU ) ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) + MUC ) ) ) - ( DS / Min( RMSe ,RCSe ) ) )", "obj1": 0.724907063197026, "obj2": 0.10907107518105921}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - ( BR + FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / Min( Const ,DDR ) ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / DS ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + ( ( Min( RRSe ,Min( RCSe ,DS ) ) - Max( ( RMSe / Min( RRSe ,MLU ) ),( DS / ( RRSe - RMSe ) ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.22676579925650558, "obj2": 0.575610931880675}], "39": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU / FirstVNF_CPU ),PN ) ),Max( ( Min( FirstVNF_Mem_Server ,ARS ) / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( ARS * FirstVNF_CPU ) ) ) ) ) ) - Max( Max( FirstVNF_Mem,RRS ),Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) )", "choosing": "( ( ( ( ( ( Max( CS,( DS - RMSe ) ) + ( MUC / RCSe ) ) - ( MLU - ( Max( MLU,RRSe ) * ( RRSe / RRSe ) ) ) ) / MUR ) - Max( ( Min( ( ( RRSe / CS ) - ( MLU - RRSe ) ) ,MUR ) / RCSe ),( MUR - RRSe ) ) ) * Min( MUC ,DS ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + MUC ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( ( ARS + ( FirstVNF_RAM_Server * ACS ) ) * MDR ) - BR ) ) / ( DDR * FirstVNF_RAM_Server ) ) ) * ACS )", "choosing": "( ( ( ( ( CS - ( ( ( RCSe + DS ) / ( MUC / MUC ) ) * ( ( DS / RCSe ) / MUR ) ) ) / Max( Min( RRSe ,Max( MUR,RMSe ) ),DS ) ) * ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - Min( Max( MUC,( MUR * MUC ) ) ,CS ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6338289962825279, "obj2": 0.17549753111082478}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.44981412639405205, "obj2": 0.3270382717070772}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / DS ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.14584844827930118}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),( Const / ( Max( Max( AMS,ACS ),CRS ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( MUC / MUM ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( MUM / MUC ) ,MUR ) )", "obj1": 0.26579925650557623, "obj2": 0.5238688295906676}, {"determining": "( ( Max( AMS,Max( PN,Min( Max( BR,PN ) ,MRS ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( ( ACS + FirstVNF_Mem_Server ) / PN ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( RMSe / Min( RRSe ,MLU ) ) * RRSe ) / Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.4033457249070632, "obj2": 0.36718526350111336}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) - MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( RRS,Max( FirstVNF_RAM,PN ) ) ) )", "choosing": "( ( Max( RMSe,( ( MLU + ( RMSe / MUC ) ) * MLU ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6152416356877324, "obj2": 0.19527899371672075}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,MUR ) ) * RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,RMSe ) )", "obj1": 0.17657992565055763, "obj2": 0.6648972073654367}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) )", "obj1": 0.31226765799256506, "obj2": 0.48746480089327254}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ACS / Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( ( DS - MUM ) + ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) ) * ( RRSe - Max( ( Max( MUM,MUC ) + DS ),DS ) ) )", "obj1": 0.08550185873605948, "obj2": 0.7638745708811435}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( ( ( ( RCSe - RRSe ) + MUC ) * RRSe ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3345724907063197, "obj2": 0.44842947932162935}, {"determining": "( ( ( Max( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ),DDR ) / PN ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,Max( FirstVNF_Mem,RRS ) ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / ( CS * DS ) ) - ( RRSe / Max( MUR,RMSe ) ) ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.1579925650557621, "obj2": 0.692477200592955}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7295735370332798}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ( Max( ( Max( ( BR + Max( Max( RRS,ACS ),FirstVNF_RAM ) ),DDR ) / ARS ),FirstVNF_Mem_Server ) - Max( PN,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( ( DS - MUC ) * RCSe ) + CS ) * MUC ) ) ) - Min( ( DS - DS ) ,MUR ) )", "obj1": 0.11895910780669144, "obj2": 0.7269908024975531}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( Max( AMS,FirstVNF_CPU ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.21189591078066913, "obj2": 0.598068200675221}, {"determining": "( ( Max( AMS,Max( PN,Max( PN,PN ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( DS + DS ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5371747211895911, "obj2": 0.25900289482414324}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) * Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( ( ( Max( ( FirstVNF_Mem * ( CRS + FirstVNF_Mem ) ),FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),( RRS + FirstVNF_RAM_Server ) ) ) + MDR ),PN ) ) )", "choosing": "( ( ( CS - MUR ) - MLU ) * ( ( DS * ( ( DS / MUM ) / MUR ) ) / MUM ) )", "obj1": 0.9275092936802974, "obj2": 0.033102778226100506}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - Max( ( Max( CRS,RRS ) - Max( AMS,FirstVNF_CPU ) ),( RRS + FirstVNF_RAM_Server ) ) ) + MDR ) ) ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - Min( Max( MUC,( MUR * MUC ) ) ,CS ) ) ) + ( Min( MUC ,( Max( MUM,MUC ) + DS ) ) - ( Min( ( ( ( RMSe + DS ) * MUC ) / MUC ) ,CS ) * RCSe ) ) ) * ( ( DS * ( ( DS / RCSe ) / MUR ) ) / MUM ) )", "obj1": 0.9014869888475836, "obj2": 0.03858890683883381}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( ARS ,FirstVNF_RAM ) + MDR ) ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.8011152416356877, "obj2": 0.07862513529924799}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.13197026022304834, "obj2": 0.6936290799948264}, {"determining": "( ( ARS / ( AMS / ACS ) ) - Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( Min( MUC ,MUR ) ,MLU ) / Max( MLU,Min( MUM ,Min( ( Max( CS,DS ) / Max( RMSe,MUR ) ) ,( ( DS * MUC ) * RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( DS - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.570631970260223, "obj2": 0.24578966902788615}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.48698884758364314, "obj2": 0.2886019367520787}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( ( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ),( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( DS + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.8420074349442379, "obj2": 0.0645741146582457}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.33643122676579923, "obj2": 0.4396412117644295}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6207753154856238}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.47769516728624534, "obj2": 0.3037128918946254}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.7026022304832714, "obj2": 0.12055979619816778}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5910780669144982, "obj2": 0.21567522469043712}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,MUC ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.2527881040892193, "obj2": 0.5574046053477814}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( Max( DDR,( Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),FirstVNF_RAM ) / ( DDR + FirstVNF_RAM_Server ) ) ) * Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + MDR ) ,AMS ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / DS ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.06133828996282528, "obj2": 0.8093063393475116}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6355226288754104}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM ,ARS ) + MDR ) ),FirstVNF_Mem_Server ) + Max( CRS,Max( ARS,FirstVNF_CPU ) ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) + MUC ) ) ) - ( DS / Min( RMSe ,RCSe ) ) )", "obj1": 0.724907063197026, "obj2": 0.10907107518105921}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,Max( BR,( ( ACS + ( RRS - FirstVNF_RAM_Server ) ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( DS ,MUC ) / ( ( ( Max( ( RRSe / Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - RMSe ) + DS ) * ( ( RCSe / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + ( ( Min( MUC ,CS ) - ( MUR * CS ) ) * ( DS + MUM ) ) ) ) / DS ) )", "obj1": 0.07434944237918216, "obj2": 0.794701492958133}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.8513011152416357, "obj2": 0.06023350509509677}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,ARS ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - MUM )", "obj1": 0.5223048327137546, "obj2": 0.2825374598010247}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.3828996282527881, "obj2": 0.39625380626506}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4063675896327731}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) - Max( AMS,FirstVNF_Mem_Server ) ) + MDR ) ) - Max( Min( Max( MRS,Const ) ,Min( AMS ,MDR ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,( MUR + Min( RMSe ,MUM ) ) ) ) * RRSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Min( ( ( RRSe / Max( MUR,RMSe ) ) + DS ) ,RMSe ) )", "obj1": 0.7546468401486989, "obj2": 0.09223240671383358}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( Min( Max( BR,PN ) ,MRS ) / ( ( Const - ( FirstVNF_Mem / Const ) ) - Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( DS + Max( MUM,( Min( CS ,MUM ) + MUC ) ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * MUR ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( DS * Min( Min( MUC ,MUM ) ,RCSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.9721189591078067, "obj2": 0.00979515754342758}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5836431226765799, "obj2": 0.22186318893591783}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) + MDR ) ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.7973977695167286, "obj2": 0.08207708319500057}], "40": [{"determining": "( ( ARS / Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU / FirstVNF_CPU ),PN ) ),Max( ( Min( FirstVNF_Mem_Server ,ARS ) / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( ARS * FirstVNF_CPU ) ) ) ) ) ) - Max( Max( FirstVNF_Mem,RRS ),Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) )", "choosing": "( ( ( ( ( ( Max( CS,( DS - RMSe ) ) + ( MUC / RCSe ) ) - ( MLU - ( Max( MLU,RRSe ) * ( RRSe / RRSe ) ) ) ) / MUR ) - Max( ( Min( ( ( RRSe / CS ) - ( MLU - RRSe ) ) ,MUR ) / RCSe ),( MUR - RRSe ) ) ) * Min( MUC ,DS ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU / FirstVNF_CPU ),PN ) ),Max( ( Min( FirstVNF_Mem_Server ,ARS ) / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( ARS * FirstVNF_CPU ) ) ) ) ) ) - Max( Max( FirstVNF_Mem,RRS ),Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) )", "choosing": "( ( ( ( ( ( Max( CS,( DS - RMSe ) ) + ( MUC / RCSe ) ) - ( MLU - ( Max( MLU,RRSe ) * ( RRSe / RRSe ) ) ) ) / MUR ) - Max( ( Min( ( ( RRSe / CS ) - ( MLU - RRSe ) ) ,MUR ) / RCSe ),( MUR - RRSe ) ) ) * Min( MUC ,DS ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( ( ARS + ( FirstVNF_RAM_Server * ACS ) ) * MDR ) - BR ) ) / ( DDR * FirstVNF_RAM_Server ) ) ) * ACS )", "choosing": "( ( ( ( ( CS - ( ( ( RCSe + DS ) / ( MUC / MUC ) ) * ( ( DS / RCSe ) / MUR ) ) ) / Max( Min( RRSe ,Max( MUR,RMSe ) ),DS ) ) * ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( ( ( ACS + FirstVNF_Mem_Server ) / PN ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( Min( RCSe ,MUC ) ,MUC ) ) )", "obj1": 0.895910780669145, "obj2": 0.03274727790603161}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) )", "obj1": 0.31226765799256506, "obj2": 0.48746480089327254}, {"determining": "( ( ARS / ( MDR + ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) ) ) - ( Const * MRS ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( Min( RCSe ,MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / DS ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( ( RRSe / MUC ) ,DS ) )", "obj1": 0.9684014869888475, "obj2": 0.015164661265703046}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ( DDR * ( Const + FirstVNF_RAM_Server ) ) / ( PN + ( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( ( CS * RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5945394401197245}, {"determining": "( ( Max( Max( PN,Max( Const,Max( Min( ( DDR / AMS ) ,FirstVNF_CPU_Server ),ARS ) ) ),AMS ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( FirstVNF_RAM / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( CS - RRSe ) - ( ( MLU * MUC ) * ( ( RCSe / RMSe ) - ( RRSe * CS ) ) ) )", "obj1": 0.1524163568773234, "obj2": 0.6822223647821254}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.16728624535315986, "obj2": 0.6479284180684164}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM ,ARS ) + MDR ) ),FirstVNF_Mem_Server ) + Max( CRS,Max( ARS,FirstVNF_CPU ) ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) + MUC ) ) ) - ( DS / Min( RMSe ,RCSe ) ) )", "obj1": 0.724907063197026, "obj2": 0.10907107518105921}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,MUC ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.2527881040892193, "obj2": 0.5574046053477814}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / DS ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.1455515960217033}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.7026022304832714, "obj2": 0.12055979619816778}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) - Max( AMS,FirstVNF_Mem_Server ) ) + MDR ) ) - Max( Min( Max( MRS,Const ) ,Min( AMS ,MDR ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,( MUR + Min( RMSe ,MUM ) ) ) ) * RRSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Min( ( ( RRSe / Max( MUR,RMSe ) ) + DS ) ,RMSe ) )", "obj1": 0.7546468401486989, "obj2": 0.09223240671383358}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.33271375464684017, "obj2": 0.45031027526235917}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),( Const / ( Max( Max( AMS,ACS ),CRS ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( MUC / MUM ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( MUM / MUC ) ,MUR ) )", "obj1": 0.26579925650557623, "obj2": 0.5238688295906676}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( Max( ( Max( ( BR + Max( Max( RRS,ACS ),FirstVNF_RAM ) ),DDR ) / ARS ),FirstVNF_Mem_Server ) - Max( PN,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) / Min( Max( BR,PN ) ,MRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( ( DS - MUC ) * RCSe ) + CS ) * MUC ) ) ) - Min( ( DS - DS ) ,MUR ) )", "obj1": 0.11895910780669144, "obj2": 0.7269908024975531}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - ( ( AMS / ARS ) * ( FirstVNF_Mem / ( ( FirstVNF_RAM * Min( Const ,ACS ) ) / Const ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( Min( ( ( MUR - RRSe ) + MUC ) ,RRSe ) / MUC ) ,RRSe ) - ( CS * MUR ) ) * ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.44052044609665425, "obj2": 0.33823295554388055}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( ARS / ( AMS / ACS ) ) - Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( Min( MUC ,MUR ) ,MLU ) / Max( MLU,Min( MUM ,Min( ( Max( CS,DS ) / Max( RMSe,MUR ) ) ,( ( DS * MUC ) * RRSe ) ) ) ) ) * ( MUR * MUC ) ) - Max( Max( Min( ( ( Min( Min( DS ,RMSe ) ,RRSe ) / RRSe ) / ( DS - ( MUM * ( RCSe / DS ) ) ) ) ,CS ),( RCSe - Max( RMSe,RMSe ) ) ),( ( RMSe + MUM ) + DS ) ) )", "obj1": 0.570631970260223, "obj2": 0.24578966902788615}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,ARS ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) ) ) ) ) ) / ACS )", "choosing": "( ( MUR * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - MUM )", "obj1": 0.5223048327137546, "obj2": 0.2739176581078455}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - Min( Max( MUC,( MUR * MUC ) ) ,CS ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6338289962825279, "obj2": 0.17549753111082478}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( CS - MUR ) - MLU ) * ( ( DS * ( ( DS / MUM ) / MUR ) ) / MUM ) )", "obj1": 0.6635687732342007, "obj2": 0.1562993380000743}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5910780669144982, "obj2": 0.21567522469043712}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( ARS ,FirstVNF_RAM ) + MDR ) ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.8011152416356877, "obj2": 0.07862513529924799}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) )", "obj1": 0.4144981412639405, "obj2": 0.35648562762189695}, {"determining": "( ( Max( AMS,Max( PN,Max( PN,PN ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( DS + DS ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5371747211895911, "obj2": 0.25900289482414324}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),ARS ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( FirstVNF_RAM_Server,PN ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( ( Min( ( CS / ( MUM - MLU ) ) ,( CS * MUC ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06486820280789814}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5836431226765799, "obj2": 0.22186318893591783}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,MUC ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5018587360594795, "obj2": 0.2820798226625448}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6957257335366174}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6355226288754104}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - Max( Max( AMS,ACS ),CRS ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * MUM ) ) * ( MUR * ( ( CS + Min( MLU ,( Max( MUC,DS ) + RRSe ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5539033457249071, "obj2": 0.2513671622562501}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3420074349442379, "obj2": 0.43535687789653976}, {"determining": "( ( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / ( ( Min( MUC ,RMSe ) + MUC ) * CS ) ) ,RRSe ) - ( MUR * ( MLU - Max( MLU,DS ) ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6133828996282528, "obj2": 0.19613136180577784}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( FirstVNF_RAM + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( DS + DS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3264749204025}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.19330855018587362, "obj2": 0.6207753154856238}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( Max( AMS,FirstVNF_CPU ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.20817843866171004, "obj2": 0.5985274234954215}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7295735370332798}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - MUM ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.47769516728624534, "obj2": 0.29297357415199565}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4038090386596784}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( ( FirstVNF_Mem_Server - ( RRS * PN ) ) * ( FirstVNF_RAM - Min( ( AMS + BR ) ,AMS ) ) ) / ( Const / ( ( AMS / FirstVNF_CPU ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe + Max( Max( RMSe,MUM ),CS ) ) / MUC ) ,RRSe ) - Min( MUR ,CS ) ) * ( MUR * MUC ) ) - Min( Min( RCSe ,MUC ) ,( DS + DS ) ) )", "obj1": 0.2100371747211896, "obj2": 0.5953181150816462}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05708804857337688}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( MDR,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) )", "obj1": 0.4721189591078067, "obj2": 0.3140424584036093}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( ( ACS + BR ),Min( Max( Const,Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - Min( Max( MUC,( Min( RCSe ,MUC ) * MUC ) ) ,CS ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6282527881040892, "obj2": 0.1780473115508614}], "41": [{"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS ) - Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),( Const / ( Max( Max( AMS,ACS ),CRS ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( MUC / MUM ) ,RRSe ) - ( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) * CS ) ) * ( MUR * MUC ) ) - Min( ( MUM / MUC ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Max( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU / FirstVNF_CPU ),PN ) ),Max( ( Min( FirstVNF_Mem_Server ,ARS ) / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( ARS * FirstVNF_CPU ) ) ) ) ) ) - Max( Max( FirstVNF_Mem,RRS ),Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) )", "choosing": "( ( ( ( ( ( Max( CS,( DS - RMSe ) ) + ( MUC / RCSe ) ) - ( MLU - ( Max( MLU,RRSe ) * ( RRSe / RRSe ) ) ) ) / MUR ) - Max( ( Min( ( ( RRSe / CS ) - ( MLU - RRSe ) ) ,MUR ) / RCSe ),( MUR - RRSe ) ) ) * Min( MUC ,DS ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( ( ( ARS + ( FirstVNF_RAM_Server * ACS ) ) * MDR ) - BR ) ) / ( DDR * FirstVNF_RAM_Server ) ) ) * ACS )", "choosing": "( ( ( ( ( CS - ( ( ( RCSe + DS ) / ( MUC / MUC ) ) * ( ( DS / RCSe ) / MUR ) ) ) / Max( Min( RRSe ,Max( MUR,RMSe ) ),DS ) ) * ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.05204460966542751, "obj2": 0.8220170044958527}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) )", "obj1": 0.31226765799256506, "obj2": 0.48746480089327254}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( ARS ,FirstVNF_RAM ) + MDR ) ),FirstVNF_Mem_Server ) - Max( CRS,PN ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( Max( ( RCSe + ( ( RMSe + MUM ) + DS ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( MUR / CS ) ) * ( MUR * MUC ) ) )", "obj1": 0.8011152416356877, "obj2": 0.07862513529924799}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( ( FirstVNF_RAM / ( FirstVNF_RAM * MDR ) ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( ( ( MLU * MUC ) * ( ( RCSe / RMSe ) - ( RRSe * CS ) ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.38847583643122674, "obj2": 0.385736158572359}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) )", "obj1": 0.4144981412639405, "obj2": 0.35648562762189695}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( ( ( ACS + FirstVNF_Mem_Server ) / PN ),DDR ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( Min( RCSe ,MUC ) ,MUC ) ) )", "obj1": 0.895910780669145, "obj2": 0.03271118962449934}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( FirstVNF_RAM + MDR ) ,AMS ) / ( ( Const / ( FirstVNF_RAM * MDR ) ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( DS + DS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.9553903345724907, "obj2": 0.03181126875055763}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.33271375464684017, "obj2": 0.45031027526235917}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( ( ( ACS + FirstVNF_Mem_Server ) / PN ),DDR ) / PN ) / ( Const / ( PN * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,MUC ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( Min( RCSe ,MUC ) ,MUC ) ) )", "obj1": 0.5539033457249071, "obj2": 0.24105140744447232}, {"determining": "( ACS / ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,( ( Min( ( Min( DDR ,FirstVNF_RAM ) * MDR ) ,AMS ) + MDR ) - Max( PN,PN ) ) ) ) )", "choosing": "( ( ( ( CS * DS ) + ( Max( ( Min( ( DS + RCSe ) ,MUR ) / ( MLU * RMSe ) ),CS ) * Min( RCSe ,MUC ) ) ) + ( Min( ( ( MUR * Min( RRSe ,( CS + MUM ) ) ) / MUC ) ,CS ) * RCSe ) ) * ( RRSe - ( ( Max( MUM,MUC ) + DS ) * DS ) ) )", "obj1": 0.30111524163568776, "obj2": 0.5134766315787587}, {"determining": "( ( DDR * ( Const + FirstVNF_RAM_Server ) ) / ( PN + ( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( ( CS * RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5945394401197245}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUR ) * Max( ( MUR * MUC ),RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / DS ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.6691449814126395, "obj2": 0.1455515960217033}, {"determining": "( Max( DDR,( Min( ( Max( MDR,ARS ) * ( FirstVNF_RAM_Server / Const ) ) ,( BR - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) ) ) / ( DDR + FirstVNF_RAM_Server ) ) ) * ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - MUC ) * Max( DS,RMSe ) ) ) / ( CS - ( ( ( RRSe - MUR ) + DS ) * ( ( DS / RCSe ) / MUR ) ) ) ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.0724907063197026, "obj2": 0.8102476125006859}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6957257335366174}, {"determining": "( ( Max( AMS,Max( PN,Max( PN,PN ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( DS + DS ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5371747211895911, "obj2": 0.25900289482414324}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ),( Const / ( Max( Max( AMS,ACS ),CRS ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( MUC / MUM ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( MUM / MUC ) ,MUR ) )", "obj1": 0.26579925650557623, "obj2": 0.5238688295906676}, {"determining": "( ( ARS / ( ( Min( FirstVNF_RAM_Server ,DDR ) - Max( ( Max( Const,RRS ) - Max( AMS,( MDR * FirstVNF_Mem ) ) ),PN ) ) + MDR ) ) - Max( Max( ( AMS / ARS ),AMS ),PN ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.7026022304832714, "obj2": 0.12055979619816778}, {"determining": "( ( FirstVNF_CPU_Server / ( ( Max( ( Max( Max( BR,PN ),RRS ) - Max( AMS,ACS ) ),PN ) - Max( AMS,FirstVNF_Mem_Server ) ) + MDR ) ) - Max( Min( Max( MRS,Const ) ,Min( AMS ,MDR ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( DS ,Min( MUR ,( MUR + Min( RMSe ,MUM ) ) ) ) * RRSe ) - ( MUR * CS ) ) * ( RRSe * MUC ) ) - Min( ( ( RRSe / Max( MUR,RMSe ) ) + DS ) ,RMSe ) )", "obj1": 0.7546468401486989, "obj2": 0.09223240671383358}, {"determining": "( ( ( MRS - ( Min( CRS ,( ACS + RRS ) ) * DDR ) ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - ( ( FirstVNF_CPU - FirstVNF_CPU ) - PN ) ) + MDR ) ) - ( ( FirstVNF_CPU - MRS ) * ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "( ( Max( ( ( Max( DS,MLU ) + MUR ) + ( Min( ( RCSe * MLU ) ,Min( MUM ,MLU ) ) * ( RCSe - RCSe ) ) ),MUM ) * MUM ) - ( ( Min( MUC ,RMSe ) - ( CS / MUR ) ) * ( MUR * MUC ) ) )", "obj1": 0.8773234200743495, "obj2": 0.045935685359120654}, {"determining": "( ( Max( AMS,Max( PN,( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / Max( FirstVNF_CPU,( ( DDR + MDR ) - Max( PN,PN ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / ( ( Min( MUC ,RMSe ) + MUC ) * CS ) ) ,RRSe ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - MUM ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7210502034443252}, {"determining": "( ( Max( AMS,( PN / Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,FirstVNF_RAM ) + Max( CRS,FirstVNF_RAM ) ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( CS + DS ) / ( MUC * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4038090386596784}, {"determining": "( ( AMS - DDR ) / Min( Max( PN,ARS ) ,MRS ) )", "choosing": "( ( ( ( MUR * CS ) - Min( MUC ,RRSe ) ) * ( Min( DS ,( ( ( ( DS + MLU ) * Max( DS,CS ) ) * MUM ) * RCSe ) ) * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,MUM ) ) ) ) * MUC ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.07806691449814127, "obj2": 0.77910023619074}, {"determining": "( ( Max( AMS,( PN / Max( Const,( ( DDR - ( RRS + FirstVNF_Mem ) ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) ) - Max( ( ARS / AMS ),PN ) ) / ( MRS * ( ( Max( ( ( ( FirstVNF_RAM_Server + BR ) - MDR ) - ARS ),( ( ( FirstVNF_Mem_Server + ACS ) / DDR ) * ( FirstVNF_RAM_Server + Max( DDR,PN ) ) ) ) - ( ACS * PN ) ) + MRS ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * ( MUC / ( MUR * RRSe ) ) ) ) + ( MUR * Max( MUR,Min( MUC ,CS ) ) ) ) - Max( Max( Min( ( ( RRSe * Min( ( MUM + RMSe ) ,RRSe ) ) - MUC ) ,CS ),( MUR - Max( ( MUM + MUR ),RMSe ) ) ),( ( RMSe + MUM ) + RMSe ) ) )", "obj1": 0.362453531598513, "obj2": 0.4208365044809429}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( RMSe ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.3420074349442379, "obj2": 0.43535687789653976}, {"determining": "( ( ARS / ( ( ( AMS - FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) ) + MDR ) ) - Max( Max( Const,ACS ),FirstVNF_RAM ) )", "choosing": "( ( CS - ( ( RMSe * MLU ) + ( RMSe + CS ) ) ) - ( ( Min( MUC ,( ( RRSe * ( RRSe - RRSe ) ) * MLU ) ) - ( MUR * CS ) ) * ( MUR + MUC ) ) )", "obj1": 0.7676579925650557, "obj2": 0.08765894213446768}, {"determining": "( ( ARS / PN ) - Min( Max( AMS,( FirstVNF_CPU - Min( Max( ( BR / RRS ),DDR ) ,FirstVNF_RAM ) ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( Min( ( MUC / ( MUR * RRSe ) ) ,CS ) * RCSe ) ) * ( RCSe * MUC ) ) - Min( ( DS + DS ) ,Max( MUM,( ( ( ( MUM / DS ) - ( ( MLU - DS ) + MUR ) ) + MUR ) * RCSe ) ) ) )", "obj1": 0.10223048327137546, "obj2": 0.7295735370332798}, {"determining": "( ( Max( Max( PN,Max( Const,Max( Min( ( DDR / AMS ) ,FirstVNF_CPU_Server ),ARS ) ) ),AMS ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( FirstVNF_RAM / ( FirstVNF_RAM * MDR ) ) ) ) ) / ACS )", "choosing": "( ( CS - RRSe ) - ( ( MLU * MUC ) * ( ( RCSe / RMSe ) - ( RRSe * CS ) ) ) )", "obj1": 0.1524163568773234, "obj2": 0.6822223647821254}, {"determining": "( ( ARS / ( ( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM ,ARS ) + MDR ) ),FirstVNF_Mem_Server ) + Max( CRS,Max( ARS,FirstVNF_CPU ) ) ) + MDR ) ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) )", "choosing": "( ( ( Min( MUC ,RRSe ) - ( MUR * CS ) ) * ( MUR * ( ( CS + ( Max( RCSe,DS ) / ( MLU - Max( MLU,DS ) ) ) ) + MUC ) ) ) - ( DS / Min( RMSe ,RCSe ) ) )", "obj1": 0.724907063197026, "obj2": 0.10907107518105921}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),PN ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( Const,RRS ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( MUR * CS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05708804857337688}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( ( FirstVNF_RAM * MDR ),ACS ) - Min( BR ,FirstVNF_RAM ) ),PN ) ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( PN * MDR ) ) ) )", "choosing": "( ( ( Min( ( MUM / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + Min( ( DS + DS ) ,MUR ) ) ,MUR ) )", "obj1": 0.09293680297397769, "obj2": 0.7635395399369063}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5836431226765799, "obj2": 0.22186318893591783}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( ( ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) / Min( ( DS + RCSe ) ,MUR ) ) / ( ( MUM * ( DS / DS ) ) - MUM ) ) * CS ) ) * ( ( RMSe + RRSe ) / CS ) ) - Min( Min( Min( ( ( MUR * RRSe ) / MUC ) ,CS ) ,( ( ( CS + ( MUC / ( MUR * MUC ) ) ) * RMSe ) - MUR ) ) ,( MUC + DS ) ) )", "obj1": 0.5910780669144982, "obj2": 0.21567522469043712}, {"determining": "( ( Max( AMS,Max( PN,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Const / ( Max( Const,RRS ) * MDR ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( MUM * MUM ) ,( MLU / MUC ) ) - ( ( DS / MUM ) + ( CS * MUM ) ) ) * Max( MUM,CS ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.26394052044609667, "obj2": 0.5406082868872323}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( Max( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( CRS / ARS ) ),PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.16728624535315986, "obj2": 0.6479284180684164}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( ( ACS + BR ),Min( Max( Const,Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) ,CRS ) ) ) )", "choosing": "( ( ( Max( Min( Max( MUC,( MUR * MUC ) ) ,CS ),( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - Min( Max( MUC,( Min( RCSe ,MUC ) * MUC ) ) ,CS ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ARS / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( PN - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) - Max( ( ACS / Max( FirstVNF_Mem,RRS ) ),FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( Min( RRSe ,Max( MUR,RMSe ) ),( ( RCSe - RRSe ) + MUC ) ) / DS ) / ( Max( MUM,MUC ) + DS ) ) / DS ) / Min( DS ,MUC ) )", "obj1": 0.9684014869888475, "obj2": 0.015164661265703046}, {"determining": "( ( ARS / ( Min( Max( Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ),PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / ( Const / ( Max( AMS,FirstVNF_CPU ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) / MUC ) ,( Max( MUC,( MUR * MUC ) ) / CS ) ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.24907063197026022, "obj2": 0.5578179626880541}, {"determining": "( ( ( PN * FirstVNF_RAM_Server ) / ( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( FirstVNF_CPU - FirstVNF_CPU ),ARS ) ) + MDR ) ) - Max( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ),Max( PN,( ( Max( AMS,FirstVNF_Mem_Server ) - Max( ( Max( FirstVNF_RAM_Server,PN ) - Max( AMS,FirstVNF_CPU ) ),PN ) ) + MDR ) ) ) )", "choosing": "( ( ( Min( ( Min( ( CS / ( MUM - MLU ) ) ,( CS * MUC ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06486820280789814}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( Min( Const ,ARS ) + MDR ) ,AMS ) / ( Max( Const,RRS ) - Max( Max( AMS,ACS ),FirstVNF_RAM ) ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( ( Min( ( MUC + MUC ) ,RRSe ) / MUC ) ,RRSe ) - ( CS * MUR ) ) * ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.43308550185873607, "obj2": 0.3419222520954743}, {"determining": "( ( Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / ( ( Min( MUC ,RMSe ) + MUC ) * CS ) ) ,RRSe ) - ( MUR * ( MLU - Max( MLU,DS ) ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6133828996282528, "obj2": 0.19613136180577784}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Max( FirstVNF_RAM_Server,PN ) ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Min( ( FirstVNF_RAM + MDR ) ,AMS ) / ( Max( Const,RRS ) - FirstVNF_RAM ) ) ) ) ) / ACS )", "choosing": "( ( ( Min( MUC ,RMSe ) - ( DS + DS ) ) * ( MUR * ( ( ( Max( MUC,( MUR * MUC ) ) / CS ) - CS ) - ( ( MUM - RMSe ) * ( MUR * MUC ) ) ) ) ) - Max( Max( Min( ( ( MUR * RRSe ) / ( ( MUM * MUM ) - ( RMSe - RMSe ) ) ) ,CS ),( MUR - Max( ( CS + ( ( MLU + DS ) / ( RCSe * MUC ) ) ),RMSe ) ) ),( Max( MUM,RMSe ) + DS ) ) )", "obj1": 0.44609665427509293, "obj2": 0.3264749204025}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( ( ACS + BR ),Min( Max( Const,Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) ,CRS ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + RRSe ) * ( Min( MUM ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( Min( Max( ( ( DS + CS ) / MUR ),( RCSe - Min( CS ,MLU ) ) ) ,RMSe ) * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.620817843866171, "obj2": 0.17609049811232813}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( ( FirstVNF_Mem_Server - ( RRS * PN ) ) * ( FirstVNF_RAM - Min( ( AMS + BR ) ,AMS ) ) ) / ( Const / ( ( AMS / FirstVNF_CPU ) * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( RMSe + Max( Max( RMSe,MUM ),CS ) ) / MUC ) ,RRSe ) - Min( MUR ,CS ) ) * ( MUR * MUC ) ) - Min( Min( RCSe ,MUC ) ,( DS + DS ) ) )", "obj1": 0.2100371747211896, "obj2": 0.5953181150816462}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( ( Const / ( FirstVNF_RAM * MDR ) ) * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( ( ( DS / MUM ) / MUC ) ,MUC ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.4646840148698885, "obj2": 0.3201915733872897}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),DDR ) / PN ) / Max( ( ACS + BR ),Min( Max( Const,RRS ) ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,( Min( RCSe ,MUC ) / MUC ) ) + ( MUR - Min( Max( MUC,( MUR * MUC ) ) ,CS ) ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6468401486988847, "obj2": 0.16774553299583356}, {"determining": "( ( ARS / ( Min( Max( BR,PN ) ,MRS ) + MDR ) ) - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + MDR ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) ) / PN ) / ( Const / ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RMSe ,DS ) + RMSe ) ) / MUC ) ,RRSe ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6346051774394383}, {"determining": "( ( Max( AMS,Max( PN,Max( Const,Min( Const ,ARS ) ) ) ) - Max( ( AMS / ARS ),( FirstVNF_Mem / ( Max( PN,PN ) / ( FirstVNF_RAM * MDR ) ) ) ) ) / ( DDR * ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( ( ( ( Min( MUC ,RMSe ) + MUC ) * ( Min( RCSe ,DS ) + RMSe ) ) / MUC ) ,MUC ) - ( MUR * CS ) ) * ( MUR * MUC ) ) - Min( ( DS + DS ) ,MUR ) )", "obj1": 0.5018587360594795, "obj2": 0.2820798226625448}]}